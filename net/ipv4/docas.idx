f | udp.c | s | 57K | 1994 | Tim Bird | tim.bird@am.sony.com | 1337833701 |  | mm: add a low limit to alloc_large_system_hash  UDP stack needs a minimum hash size value for proper operation and also uses alloc_large_system_hash() for proper NUMA distribution of its hash tables and automatic sizing depending on available system memory.  On some low memory situations, udp_table_init() must ignore the alloc_large_system_hash() result and reallocs a bigger memory area.  As we cannot easily free old hash table, we leak it and kmemleak can issue a warning.  This patch adds a low limit parameter to alloc_large_system_hash() to solve this problem.  We then specify UDP_HTABLE_SIZE_MIN for UDP/UDPLite hash table allocation.  Reported-by: Mark Asselstine <mark.asselstine@windriver.com> Reported-by: Tim Bird <tim.bird@am.sony.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ping.c | s | 21K | 788 | Linus Torvalds | torvalds@linux-foundation.org | 1337820159 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace  Pull user namespace enhancements from Eric Biederman:  "This is a course correction for the user namespace, so that we can   reach an inexpensive, maintainable, and reasonably complete   implementation.    Highlights:    - Config guards make it impossible to enable the user namespace and      code that has not been converted to be user namespace safe.     - Use of the new kuid_t type ensures the if you somehow get past the      config guards the kernel will encounter type errors if you enable      user namespaces and attempt to compile in code whose permission      checks have not been updated to be user namespace safe.     - All uids from child user namespaces are mapped into the initial      user namespace before they are processed.  Removing the need to add      an additional check to see if the user namespace of the compared      uids remains the same.     - With the user namespaces compiled out the performance is as good or      better than it is today.     - For most operations absolutely nothing changes performance or      operationally with the user namespace enabled.     - The worst case performance I could come up with was timing 1      billion cache cold stat operations with the user namespace code      enabled.  This went from 156s to 164s on my laptop (or 156ns to      164ns per stat operation).     - (uid_t)-1 and (gid_t)-1 are reserved as an internal error value.      Most uid/gid setting system calls treat these value specially      anyway so attempting to use -1 as a uid would likely cause      entertaining failures in userspace.     - If setuid is called with a uid that can not be mapped setuid fails.      I have looked at sendmail, login, ssh and every other program I      could think of that would call setuid and they all check for and      handle the case where setuid fails.     - If stat or a similar system call is called from a context in which      we can not map a uid we lie and return overflowuid.  The LFS      experience suggests not lying and returning an error code might be      better, but the historical precedent with uids is different and I      can not think of anything that would break by lying about a uid we      can't map.     - Capabilities are localized to the current user namespace making it      safe to give the initial user in a user namespace all capabilities.    My git tree covers all of the modifications needed to convert the core   kernel and enough changes to make a system bootable to runlevel 1."  Fix up trivial conflicts due to nearby independent changes in fs/stat.c  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace: (46 commits)   userns:  Silence silly gcc warning.   cred: use correct cred accessor with regards to rcu read lock   userns: Convert the move_pages, and migrate_pages permission checks to use uid_eq   userns: Convert cgroup permission checks to use uid_eq   userns: Convert tmpfs to use kuid and kgid where appropriate   userns: Convert sysfs to use kgid/kuid where appropriate   userns: Convert sysctl permission checks to use kuid and kgids.   userns: Convert proc to use kuid/kgid where appropriate   userns: Convert ext4 to user kuid/kgid where appropriate   userns: Convert ext3 to use kuid/kgid where appropriate   userns: Convert ext2 to use kuid/kgid where appropriate.   userns: Convert devpts to use kuid/kgid where appropriate   userns: Convert binary formats to use kuid/kgid where appropriate   userns: Add negative depends on entries to avoid building code that is userns unsafe   userns: signal remove unnecessary map_cred_ns   userns: Teach inode_capable to understand inodes whose uids map to other namespaces.   userns: Fail exec for suid and sgid binaries with ids outside our user namespace.   userns: Convert stat to return values mapped from kuids and kgids   userns: Convert user specfied uids and gids in chown into kuids and kgid   userns: Use uid_eq gid_eq helpers when comparing kuids and kgids in the vfs   ...
f | udp_impl.h | s | 1.3K | 29 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_highspeed.c | s | 4.9K | 166 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_options.c | s | 14K | 609 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 2.2K |  | Glauber Costa | glommer@parallels.com | 1323734650 |  | tcp memory pressure controls  This patch introduces memory pressure controls for the tcp protocol. It uses the generic socket memory pressure code introduced in earlier patches, and fills in the necessary data in cg_proto struct.  Signed-off-by: Glauber Costa <glommer@parallels.com> Reviewed-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujtisu.com> CC: Eric W. Biederman <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_lp.c | s | 8.8K | 301 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | tcp_veno.c | s | 5.7K | 198 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_diag.c | s | 25K | 912 | David S. Miller | davem@davemloft.net | 1336448140 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net  Conflicts: 	drivers/net/ethernet/intel/e1000e/param.c 	drivers/net/wireless/iwlwifi/iwl-agn-rx.c 	drivers/net/wireless/iwlwifi/iwl-trans-pcie-rx.c 	drivers/net/wireless/iwlwifi/iwl-trans.h  Resolved the iwlwifi conflict with mainline using 3-way diff posted by John Linville and Stephen Rothwell.  In 'net' we added a bug fix to make iwlwifi report a more accurate skb->truesize but this conflicted with RX path changes that happened meanwhile in net-next.  In e1000e a conflict arose in the validation code for settings of adapter->itr.  'net-next' had more sophisticated logic so that logic was used.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | arp.c | s | 34K | 1254 | David S. Miller | davem@davemloft.net | 1337144560 |  | Merge branch 'delete-tokenring' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux
f | tcp_output.c | s | 83K | 2461 | Eric Dumazet | edumazet@google.com | 1337281199 |  | tcp: bool conversions  bool conversions where possible.  __inline__ -> inline  space cleanups  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | icmp.c | s | 28K | 1052 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_gre.c | s | 43K | 1489 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_output.c | s | 2.3K | 82 | Steffen Klassert | steffen.klassert@secunet.com | 1309566799 |  | xfrm4: Don't call icmp_send on local error  Calling icmp_send() on a local message size error leads to an incorrect update of the path mtu. So use ip_local_error() instead to notify the socket about the error.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_mode_beet.c | s | 3.7K | 124 | Eric Dumazet | eric.dumazet@gmail.com | 1330033845 |  | ipsec: be careful of non existing mac headers  Niccolo Belli reported ipsec crashes in case we handle a frame without mac header (atm in his case)  Before copying mac header, better make sure it is present.  Bugzilla reference:  https://bugzilla.kernel.org/show_bug.cgi?id=42809  Reported-by: Niccolò Belli <darkbasic@linuxsystems.it> Tested-by: Niccolò Belli <darkbasic@linuxsystems.it> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_mode_transport.c | s | 2.1K | 70 | Herbert Xu | herbert@gondor.apana.org.au | 1192060554 |  | [IPSEC]: Use IPv6 calling convention as the convention for x->mode->output  The IPv6 calling convention for x->mode->output is more general and could help an eventual protocol-generic x->type->output implementation.  This patch adopts it for IPv4 as well and modifies the IPv4 type output functions accordingly.  It also rewrites the IPv6 mac/transport header calculation to be based off the network header where practical.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_memcontrol.c | s | 7.2K | 246 | Glauber Costa | glommer@parallels.com | 1338333748 |  | memcg: decrement static keys at real destroy time  We call the destroy function when a cgroup starts to be removed, such as by a rmdir event.  However, because of our reference counters, some objects are still inflight.  Right now, we are decrementing the static_keys at destroy() time, meaning that if we get rid of the last static_key reference, some objects will still have charges, but the code to properly uncharge them won't be run.  This becomes a problem specially if it is ever enabled again, because now new charges will be added to the staled charges making keeping it pretty much impossible.  We just need to be careful with the static branch activation: since there is no particular preferred order of their activation, we need to make sure that we only start using it after all call sites are active.  This is achieved by having a per-memcg flag that is only updated after static_key_slow_inc() returns.  At this time, we are sure all sites are active.  This is made per-memcg, not global, for a reason: it also has the effect of making socket accounting more consistent.  The first memcg to be limited will trigger static_key() activation, therefore, accounting.  But all the others will then be accounted no matter what.  After this patch, only limited memcgs will have its sockets accounted.  [akpm@linux-foundation.org: move enum sock_flag_bits into sock.h,                             document enum sock_flag_bits,                             convert memcg_proto_active() and memcg_proto_activated() to test_bit(),                             redo tcp_update_limit() comment to 80 cols] Signed-off-by: Glauber Costa <glommer@parallels.com> Cc: Tejun Heo <tj@kernel.org> Cc: Li Zefan <lizefan@huawei.com> Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Johannes Weiner <hannes@cmpxchg.org> Cc: Michal Hocko <mhocko@suse.cz> Acked-by: David Miller <davem@davemloft.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | esp4.c | s | 16K | 598 | Benjamin Poirier | bpoirier@suse.de | 1338095309 |  | xfrm: take net hdr len into account for esp payload size calculation  Corrects the function that determines the esp payload size. The calculations done in esp{4,6}_get_mtu() lead to overlength frames in transport mode for certain mtu values and suboptimal frames for others.  According to what is done, mainly in esp{,6}_output() and tcp_mtu_to_mss(), net_header_len must be taken into account before doing the alignment calculation.  Signed-off-by: Benjamin Poirier <bpoirier@suse.de> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_hashtables.c | s | 14K | 521 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_hybla.c | s | 4.9K | 162 | Eric Dumazet | edumazet@google.com | 1337281199 |  | tcp: bool conversions  bool conversions where possible.  __inline__ -> inline  space cleanups  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | proc.c | s | 17K | 446 | Eric Dumazet | eric.dumazet@gmail.com | 1332190388 |  | tcp: reduce out_of_order memory use  With increasing receive window sizes, but speed of light not improved that much, out of order queue can contain a huge number of skbs, waiting to be moved to receive_queue when missing packets can fill the holes.  Some devices happen to use fat skbs (truesize of 4096 + sizeof(struct sk_buff)) to store regular (MTU <= 1500) frames. This makes highly probable sk_rmem_alloc hits sk_rcvbuf limit, which can be 4Mbytes in many cases.  When limit is hit, tcp stack calls tcp_collapse_ofo_queue(), a true latency killer and cpu cache blower.  Doing the coalescing attempt each time we add a frame in ofo queue permits to keep memory use tight and in many cases avoid the tcp_collapse() thing later.  Tested on various wireless setups (b43, ath9k, ...) known to use big skb truesize, this patch removed the "packets collapsed in receive queue due to low socket buffer" I had before.  This also reduced average memory used by tcp sockets.  With help from Neal Cardwell.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Neal Cardwell <ncardwell@google.com> Cc: Yuchung Cheng <ycheng@google.com> Cc: H.K. Jerry Chu <hkchu@google.com> Cc: Tom Herbert <therbert@google.com> Cc: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi> Acked-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib_frontend.c | s | 26K | 981 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_fragment.c | s | 6.4K | 238 | Eric Dumazet | eric.dumazet@gmail.com | 1278964674 |  | net/ipv4: EXPORT_SYMBOL cleanups  CodingStyle cleanups  EXPORT_SYMBOL should immediately follow the symbol declaration.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_input.c | s | 4.2K | 143 | Eric Dumazet | eric.dumazet@gmail.com | 1278964674 |  | net/ipv4: EXPORT_SYMBOL cleanups  CodingStyle cleanups  EXPORT_SYMBOL should immediately follow the symbol declaration.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sysctl_net_ipv4.c | s | 19K | 822 | Yuchung Cheng | ycheng@google.com | 1336006570 |  | tcp: early retransmit  This patch implements RFC 5827 early retransmit (ER) for TCP. It reduces DUPACK threshold (dupthresh) if outstanding packets are less than 4 to recover losses by fast recovery instead of timeout.  While the algorithm is simple, small but frequent network reordering makes this feature dangerous: the connection repeatedly enter false recovery and degrade performance. Therefore we implement a mitigation suggested in the appendix of the RFC that delays entering fast recovery by a small interval, i.e., RTT/4. Currently ER is conservative and is disabled for the rest of the connection after the first reordering event. A large scale web server experiment on the performance impact of ER is summarized in section 6 of the paper "Proportional Rate Reduction for TCP”, IMC 2011. http://conferences.sigcomm.org/imc/2011/docs/p155.pdf  Note that Linux has a similar feature called THIN_DUPACK. The differences are THIN_DUPACK do not mitigate reorderings and is only used after slow start. Currently ER is disabled if THIN_DUPACK is enabled. I would be happy to merge THIN_DUPACK feature with ER if people think it's a good idea.  ER is enabled by sysctl_tcp_early_retrans:   0: Disables ER    1: Reduce dupthresh to packets_out - 1 when outstanding packets < 4.    2: (Default) reduce dupthresh like mode 1. In addition, delay      entering fast recovery by RTT/4.  Note: mode 2 is implemented in the third part of this patch series.  Signed-off-by: Yuchung Cheng <ycheng@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | gre.c | s | 3.0K | 117 | Joe Perches | joe@perches.com | 1331597121 |  | net: ipv4: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv4: ", "TCP: ", and "IPsec: " to appropriate files. Standardize on "UDPLite: " for appropriate uses. Some prefixes were previously "UDPLITE: " and "UDP-Lite: ".  Add KBUILD_MODNAME ": " to icmp and gre. Remove embedded prefixes as appropriate.  Add missing "\n" to pr_info in gre.c.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib_lookup.h | s | 1.5K | 48 | David S. Miller | davem@davemloft.net | 1301015207 |  | ipv4: Fix nexthop caching wrt. scoping.  Move the scope value out of the fib alias entries and into fib_info, so that we always use the correct scope when recomputing the nexthop cached source address.  Reported-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_htcp.c | s | 7.4K | 265 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_input.c | s | 12K | 399 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inetpeer.c | s | 17K | 532 | Eric Dumazet | edumazet@google.com | 1339004715 |  | inetpeer: fix a race in inetpeer_gc_worker()  commit 5faa5df1fa2024 (inetpeer: Invalidate the inetpeer tree along with the routing cache) added a race :  Before freeing an inetpeer, we must respect a RCU grace period, and make sure no user will attempt to increase refcnt.  inetpeer_invalidate_tree() waits for a RCU grace period before inserting inetpeer tree into gc_list and waking the worker. At that time, no concurrent lookup can find a inetpeer in this tree.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | udp_diag.c | s | 5.2K | 181 | Shan Wei | davidshan@tencent.com | 1335400981 |  | udp_diag: implement idiag_get_info for udp/udplite to get queue information  When we use netlink to monitor queue information for udp socket, idiag_rqueue and idiag_wqueue of inet_diag_msg are returned with 0.  Keep consistent with netstat, just return back allocated rmem/wmem size.  Signed-off-by: Shan Wei <davidshan@tencent.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_policy.c | s | 7.2K | 252 | Eric W. Biederman | ebiederm@xmission.com | 1334971350 |  | net: Convert all sysctl registrations to register_net_sysctl  This results in code with less boiler plate that is a bit easier to read.  Additionally stops us from using compatibility code in the sysctl core, hastening the day when the compatibility code can be removed.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_probe.c | s | 6.2K | 214 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ah4.c | s | 12K | 438 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv4 and ipv6: Convert printk(KERN_DEBUG to pr_debug  Use the current debugging style and enable dynamic_debug.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cipso_ipv4.c | s | 63K | 2122 | Paul E. McKenney | paul.mckenney@linaro.org | 1329843811 |  | ipv4: Convert call_rcu() to kfree_rcu(), drop opt_kfree_rcu()  Because opt_kfree_rcu() just calls kfree(), all call_rcu() uses of it may be converted to kfree_rcu().  This permits opt_kfree_rcu() to be eliminated.  Signed-off-by: Paul E. McKenney <paul.mckenney@linaro.org> Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Acked-by: David S. Miller <davem@davemloft.net> Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru> Cc: James Morris <jmorris@namei.org> Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org> Cc: Patrick McHardy <kaber@trash.net> Cc: netdev@vger.kernel.org
f | tcp_vegas.c | s | 9.6K | 290 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tunnel4.c | s | 4.1K | 155 | Joe Perches | joe@perches.com | 1331534571 |  | net: Convert printks to pr_<level>  Use a more current kernel messaging style.  Convert a printk block to print_hex_dump. Coalesce formats, align arguments. Use %s, __func__ instead of embedding function names.  Some messages that were prefixed with <foo>_close are now prefixed with <foo>_fini.  Some ah4 and esp messages are now not prefixed with "ip ".  The intent of this patch is to later add something like   #define pr_fmt(fmt) "IPv4: " fmt. to standardize the output messages.  Text size is trivially reduced. (x86-32 allyesconfig)  $ size net/ipv4/built-in.o*    text	   data	    bss	    dec	    hex	filename  887888	  31558	 249696	1169142	 11d6f6	net/ipv4/built-in.o.new  887934	  31558	 249800	1169292	 11d78c	net/ipv4/built-in.o.old  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_ipv4.c | s | 67K | 2290 | Eric Dumazet | edumazet@google.com | 1338574931 |  | tcp: reflect SYN queue_mapping into SYNACK packets  While testing how linux behaves on SYNFLOOD attack on multiqueue device (ixgbe), I found that SYNACK messages were dropped at Qdisc level because we send them all on a single queue.  Obvious choice is to reflect incoming SYN packet @queue_mapping to SYNACK packet.  Under stress, my machine could only send 25.000 SYNACK per second (for 200.000 incoming SYN per second). NIC : ixgbe with 16 rx/tx queues.  After patch, not a single SYNACK is dropped.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Hans Schillstrom <hans.schillstrom@ericsson.com> Cc: Jesper Dangaard Brouer <brouer@redhat.com> Cc: Neal Cardwell <ncardwell@google.com> Cc: Tom Herbert <therbert@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | netfilter |  | 44 items |  | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_state.c | s | 2.4K | 87 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | tcp.c | s | 91K | 3070 | Tim Bird | tim.bird@am.sony.com | 1337833701 |  | mm: add a low limit to alloc_large_system_hash  UDP stack needs a minimum hash size value for proper operation and also uses alloc_large_system_hash() for proper NUMA distribution of its hash tables and automatic sizing depending on available system memory.  On some low memory situations, udp_table_init() must ignore the alloc_large_system_hash() result and reallocs a bigger memory area.  As we cannot easily free old hash table, we leak it and kmemleak can issue a warning.  This patch adds a low limit parameter to alloc_large_system_hash() to solve this problem.  We then specify UDP_HTABLE_SIZE_MIN for UDP/UDPLite hash table allocation.  Reported-by: Mark Asselstine <mark.asselstine@windriver.com> Reported-by: Tim Bird <tim.bird@am.sony.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib_semantics.c | s | 29K | 1081 | Yanmin Zhang | yanmin_zhang@linux.intel.com | 1337833701 |  | ipv4: fix the rcu race between free_fib_info and ip_route_output_slow  We hit a kernel OOPS.  <3>[23898.789643] BUG: sleeping function called from invalid context at /data/buildbot/workdir/ics/hardware/intel/linux-2.6/arch/x86/mm/fault.c:1103 <3>[23898.862215] in_atomic(): 0, irqs_disabled(): 0, pid: 10526, name: Thread-6683 <4>[23898.967805] HSU serial 0000:00:05.1: 0000:00:05.2:HSU serial prevented me to suspend... <4>[23899.258526] Pid: 10526, comm: Thread-6683 Tainted: G        W 3.0.8-137685-ge7742f9 #1 <4>[23899.357404] HSU serial 0000:00:05.1: 0000:00:05.2:HSU serial prevented me to suspend... <4>[23899.904225] Call Trace: <4>[23899.989209]  [<c1227f50>] ? pgtable_bad+0x130/0x130 <4>[23900.000416]  [<c1238c2a>] __might_sleep+0x10a/0x110 <4>[23900.007357]  [<c1228021>] do_page_fault+0xd1/0x3c0 <4>[23900.013764]  [<c18e9ba9>] ? restore_all+0xf/0xf <4>[23900.024024]  [<c17c007b>] ? napi_complete+0x8b/0x690 <4>[23900.029297]  [<c1227f50>] ? pgtable_bad+0x130/0x130 <4>[23900.123739]  [<c1227f50>] ? pgtable_bad+0x130/0x130 <4>[23900.128955]  [<c18ea0c3>] error_code+0x5f/0x64 <4>[23900.133466]  [<c1227f50>] ? pgtable_bad+0x130/0x130 <4>[23900.138450]  [<c17f6298>] ? __ip_route_output_key+0x698/0x7c0 <4>[23900.144312]  [<c17f5f8d>] ? __ip_route_output_key+0x38d/0x7c0 <4>[23900.150730]  [<c17f63df>] ip_route_output_flow+0x1f/0x60 <4>[23900.156261]  [<c181de58>] ip4_datagram_connect+0x188/0x2b0 <4>[23900.161960]  [<c18e981f>] ? _raw_spin_unlock_bh+0x1f/0x30 <4>[23900.167834]  [<c18298d6>] inet_dgram_connect+0x36/0x80 <4>[23900.173224]  [<c14f9e88>] ? _copy_from_user+0x48/0x140 <4>[23900.178817]  [<c17ab9da>] sys_connect+0x9a/0xd0 <4>[23900.183538]  [<c132e93c>] ? alloc_file+0xdc/0x240 <4>[23900.189111]  [<c123925d>] ? sub_preempt_count+0x3d/0x50  Function free_fib_info resets nexthop_nh->nh_dev to NULL before releasing fi. Other cpu might be accessing fi. Fixing it by delaying the releasing.  With the patch, we ran MTBF testing on Android mobile for 12 hours and didn't trigger the issue.  Thank Eric for very detailed review/checking the issue.  Signed-off-by: Yanmin Zhang <yanmin_zhang@linux.intel.com> Signed-off-by: Kun Jiang <kunx.jiang@intel.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_timewait_sock.c | s | 14K | 465 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv4 and ipv6: Convert printk(KERN_DEBUG to pr_debug  Use the current debugging style and enable dynamic_debug.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | datagram.c | s | 2.0K | 77 | David S. Miller | davem@davemloft.net | 1304887737 |  | ipv4: Lock socket and use cork flow in ip4_datagram_connect().  This is to make sure that an l2tp socket's inet cork flow is fully filled in, when it's encapsulated in UDP.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_minisocks.c | s | 24K | 686 | Eric Dumazet | edumazet@google.com | 1337281199 |  | tcp: bool conversions  bool conversions where possible.  __inline__ -> inline  space cleanups  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_timer.c | s | 16K | 518 | Yuchung Cheng | ycheng@google.com | 1336006570 |  | tcp: early retransmit: delayed fast retransmit  Implementing the advanced early retransmit (sysctl_tcp_early_retrans==2). Delays the fast retransmit by an interval of RTT/4. We borrow the RTO timer to implement the delay. If we receive another ACK or send a new packet, the timer is cancelled and restored to original RTO value offset by time elapsed.  When the delayed-ER timer fires, we enter fast recovery and perform fast retransmit.  Signed-off-by: Yuchung Cheng <ycheng@google.com> Acked-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_diag.c | s | 1.8K | 57 | Pavel Emelyanov | xemul@parallels.com | 1326315366 |  | inet_diag: Rename inet_diag_req into inet_diag_req_v2  Signed-off-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_cubic.c | s | 13K | 418 | Neal Cardwell | ncardwell@google.com | 1327087046 |  | tcp: fix undo after RTO for CUBIC  This patch fixes CUBIC so that cwnd reductions made during RTOs can be undone (just as they already can be undone when using the default/Reno behavior).  When undoing cwnd reductions, BIC-derived congestion control modules were restoring the cwnd from last_max_cwnd. There were two problems with using last_max_cwnd to restore a cwnd during undo:  (a) last_max_cwnd was set to 0 on state transitions into TCP_CA_Loss (by calling the module's reset() functions), so cwnd reductions from RTOs could not be undone.  (b) when fast_covergence is enabled (which it is by default) last_max_cwnd does not actually hold the value of snd_cwnd before the loss; instead, it holds a scaled-down version of snd_cwnd.  This patch makes the following changes:  (1) upon undo, revert snd_cwnd to ca->loss_cwnd, which is already, as the existing comment notes, the "congestion window at last loss"  (2) stop forgetting ca->loss_cwnd on TCP_CA_Loss events  (3) use ca->last_max_cwnd to check if we're in slow start  Signed-off-by: Neal Cardwell <ncardwell@google.com> Acked-by: Stephen Hemminger <shemminger@vyatta.com> Acked-by: Sangtae Ha <sangtae.ha@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_input.c | s | 176K | 5373 | Eric Dumazet | edumazet@google.com | 1337833701 |  | tcp: take care of overlaps in tcp_try_coalesce()  Sergio Correia reported following warning :  WARNING: at net/ipv4/tcp.c:1301 tcp_cleanup_rbuf+0x4f/0x110()  WARN(skb && !before(tp->copied_seq, TCP_SKB_CB(skb)->end_seq),      "cleanup rbuf bug: copied %X seq %X rcvnxt %X\n",      tp->copied_seq, TCP_SKB_CB(skb)->end_seq, tp->rcv_nxt);  It appears TCP coalescing, and more specifically commit b081f85c297 (net: implement tcp coalescing in tcp_queue_rcv()) should take care of possible segment overlaps in receive queue. This was properly done in the case of out_or_order_queue by the caller.  For example, segment at tail of queue have sequence 1000-2000, and we add a segment with sequence 1500-2500. This can happen in case of retransmits.  In this case, just don't do the coalescing.  Reported-by: Sergio Correia <lists@uece.net> Signed-off-by: Eric Dumazet <edumazet@google.com> Tested-by: Sergio Correia <lists@uece.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_connection_sock.c | s | 22K | 693 | Eric Dumazet | edumazet@google.com | 1338574931 |  | tcp: do not create inetpeer on SYNACK message  Another problem on SYNFLOOD/DDOS attack is the inetpeer cache getting larger and larger, using lots of memory and cpu time.  tcp_v4_send_synack() ->inet_csk_route_req()  ->ip_route_output_flow()   ->rt_set_nexthop()    ->rt_init_metrics()     ->inet_getpeer( create = true)  This is a side effect of commit a4daad6b09230 (net: Pre-COW metrics for TCP) added in 2.6.39  Possible solution :  Instruct inet_csk_route_req() to remove FLOWI_FLAG_PRECOW_METRICS  Before patch :  # grep peer /proc/slabinfo inet_peer_cache   4175430 4175430    192   42    2 : tunables    0    0    0 : slabdata  99415  99415      0  Samples: 41K of event 'cycles', Event count (approx.): 30716565122 +  20,24%      ksoftirqd/0  [kernel.kallsyms]           [k] inet_getpeer +   8,19%      ksoftirqd/0  [kernel.kallsyms]           [k] peer_avl_rebalance.isra.1 +   4,81%      ksoftirqd/0  [kernel.kallsyms]           [k] sha_transform +   3,64%      ksoftirqd/0  [kernel.kallsyms]           [k] fib_table_lookup +   2,36%      ksoftirqd/0  [ixgbe]                     [k] ixgbe_poll +   2,16%      ksoftirqd/0  [kernel.kallsyms]           [k] __ip_route_output_key +   2,11%      ksoftirqd/0  [kernel.kallsyms]           [k] kernel_map_pages +   2,11%      ksoftirqd/0  [kernel.kallsyms]           [k] ip_route_input_common +   2,01%      ksoftirqd/0  [kernel.kallsyms]           [k] __inet_lookup_established +   1,83%      ksoftirqd/0  [kernel.kallsyms]           [k] md5_transform +   1,75%      ksoftirqd/0  [kernel.kallsyms]           [k] check_leaf.isra.9 +   1,49%      ksoftirqd/0  [kernel.kallsyms]           [k] ipt_do_table +   1,46%      ksoftirqd/0  [kernel.kallsyms]           [k] hrtimer_interrupt +   1,45%      ksoftirqd/0  [kernel.kallsyms]           [k] kmem_cache_alloc +   1,29%      ksoftirqd/0  [kernel.kallsyms]           [k] inet_csk_search_req +   1,29%      ksoftirqd/0  [kernel.kallsyms]           [k] __netif_receive_skb +   1,16%      ksoftirqd/0  [kernel.kallsyms]           [k] copy_user_generic_string +   1,15%      ksoftirqd/0  [kernel.kallsyms]           [k] kmem_cache_free +   1,02%      ksoftirqd/0  [kernel.kallsyms]           [k] tcp_make_synack +   0,93%      ksoftirqd/0  [kernel.kallsyms]           [k] _raw_spin_lock_bh +   0,87%      ksoftirqd/0  [kernel.kallsyms]           [k] __call_rcu +   0,84%      ksoftirqd/0  [kernel.kallsyms]           [k] rt_garbage_collect +   0,84%      ksoftirqd/0  [kernel.kallsyms]           [k] fib_rules_lookup  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Hans Schillstrom <hans.schillstrom@ericsson.com> Cc: Jesper Dangaard Brouer <brouer@redhat.com> Cc: Neal Cardwell <ncardwell@google.com> Cc: Tom Herbert <therbert@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | devinet.c | s | 43K | 1539 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv4 and ipv6: Convert printk(KERN_DEBUG to pr_debug  Use the current debugging style and enable dynamic_debug.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_scalable.c | s | 1.4K | 49 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_cong.c | s | 10K | 360 | Eric Dumazet | edumazet@google.com | 1337281199 |  | tcp: bool conversions  bool conversions where possible.  __inline__ -> inline  space cleanups  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | igmp.c | s | 62K | 2350 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_yeah.c | s | 6.9K | 204 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | protocol.c | s | 1.8K | 52 | Eric Dumazet | eric.dumazet@gmail.com | 1288204651 |  | net: add __rcu annotations to protocol  Add __rcu annotations to :         struct net_protocol *inet_protos         struct net_protocol *inet6_protos  And use appropriate casts to reduce sparse warnings if CONFIG_SPARSE_RCU_POINTER=y  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib_rules.c | s | 6.8K | 256 | David S. Miller | davem@davemloft.net | 1333355623 |  | ipv4: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_lro.c | s | 13K | 441 | Eric Dumazet | eric.dumazet@gmail.com | 1319008246 |  | net: add skb frag size accessors  To ease skb->truesize sanitization, its better to be able to localize all references to skb frags size.  Define accessors : skb_frag_size() to fetch frag size, and skb_frag_size_{set||add||sub}() to manipulate it.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipcomp.c | s | 4.3K | 162 | Joe Perches | joe@perches.com | 1331534571 |  | net: Convert printks to pr_<level>  Use a more current kernel messaging style.  Convert a printk block to print_hex_dump. Coalesce formats, align arguments. Use %s, __func__ instead of embedding function names.  Some messages that were prefixed with <foo>_close are now prefixed with <foo>_fini.  Some ah4 and esp messages are now not prefixed with "ip ".  The intent of this patch is to later add something like   #define pr_fmt(fmt) "IPv4: " fmt. to standardize the output messages.  Text size is trivially reduced. (x86-32 allyesconfig)  $ size net/ipv4/built-in.o*    text	   data	    bss	    dec	    hex	filename  887888	  31558	 249696	1169142	 11d6f6	net/ipv4/built-in.o.new  887934	  31558	 249800	1169292	 11d78c	net/ipv4/built-in.o.old  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_mode_tunnel.c | s | 2.8K | 95 | Eric Dumazet | eric.dumazet@gmail.com | 1330033845 |  | ipsec: be careful of non existing mac headers  Niccolo Belli reported ipsec crashes in case we handle a frame without mac header (atm in his case)  Before copying mac header, better make sure it is present.  Bugzilla reference:  https://bugzilla.kernel.org/show_bug.cgi?id=42809  Reported-by: Niccolò Belli <darkbasic@linuxsystems.it> Tested-by: Niccolò Belli <darkbasic@linuxsystems.it> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 21K |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127275 |  | net: delete all instances of special processing for token ring  We are going to delete the Token ring support.  This removes any special processing in the core networking for token ring, (aside from net/tr.c itself), leaving the drivers and remaining tokenring support present but inert.  The mass removal of the drivers and net/tr.c will be in a separate commit, so that the history of these files that we still care about won't have the giant deletion tied into their history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | af_inet.c | s | 42K | 1535 | Pavel Emelyanov | xemul@parallels.com | 1335037945 |  | sock: Introduce named constants for sk_reuse  Name them in a "backward compatible" manner, i.e. reuse or not are still 1 and 0 respectively. The reuse value of 2 means that the socket with it will forcibly reuse everyone else's port.  Signed-off-by: Pavel Emelyanov <xemul@openvz.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm4_tunnel.c | s | 2.7K | 99 | Joe Perches | joe@perches.com | 1331597121 |  | net: ipv4: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv4: ", "TCP: ", and "IPsec: " to appropriate files. Standardize on "UDPLite: " for appropriate uses. Some prefixes were previously "UDPLITE: " and "UDP-Lite: ".  Add KBUILD_MODNAME ": " to icmp and gre. Remove embedded prefixes as appropriate.  Add missing "\n" to pr_info in gre.c.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_westwood.c | s | 8.0K | 261 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | route.c | s | 85K | 3008 | Tim Bird | tim.bird@am.sony.com | 1337833701 |  | mm: add a low limit to alloc_large_system_hash  UDP stack needs a minimum hash size value for proper operation and also uses alloc_large_system_hash() for proper NUMA distribution of its hash tables and automatic sizing depending on available system memory.  On some low memory situations, udp_table_init() must ignore the alloc_large_system_hash() result and reallocs a bigger memory area.  As we cannot easily free old hash table, we leak it and kmemleak can issue a warning.  This patch adds a low limit parameter to alloc_large_system_hash() to solve this problem.  We then specify UDP_HTABLE_SIZE_MIN for UDP/UDPLite hash table allocation.  Reported-by: Mark Asselstine <mark.asselstine@windriver.com> Reported-by: Tim Bird <tim.bird@am.sony.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_sockglue.c | s | 31K | 1235 | Jiri Pirko | jpirko@redhat.com | 1336446202 |  | net: IP_MULTICAST_IF setsockopt now recognizes struct mreq  Until now, struct mreq has not been recognized and it was worked with as with struct in_addr. That means imr_multiaddr was copied to imr_address. So do recognize struct mreq here and copy that correctly.  Signed-off-by: Jiri Pirko <jpirko@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_output.c | s | 37K | 1328 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_bic.c | s | 6.2K | 203 | Neal Cardwell | ncardwell@google.com | 1327087046 |  | tcp: fix undo after RTO for BIC  This patch fixes BIC so that cwnd reductions made during RTOs can be undone (just as they already can be undone when using the default/Reno behavior).  When undoing cwnd reductions, BIC-derived congestion control modules were restoring the cwnd from last_max_cwnd. There were two problems with using last_max_cwnd to restore a cwnd during undo:  (a) last_max_cwnd was set to 0 on state transitions into TCP_CA_Loss (by calling the module's reset() functions), so cwnd reductions from RTOs could not be undone.  (b) when fast_covergence is enabled (which it is by default) last_max_cwnd does not actually hold the value of snd_cwnd before the loss; instead, it holds a scaled-down version of snd_cwnd.  This patch makes the following changes:  (1) upon undo, revert snd_cwnd to ca->loss_cwnd, which is already, as the existing comment notes, the "congestion window at last loss"  (2) stop forgetting ca->loss_cwnd on TCP_CA_Loss events  (3) use ca->last_max_cwnd to check if we're in slow start  Signed-off-by: Neal Cardwell <ncardwell@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipmr.c | s | 57K | 2165 | Vincent Bernat | bernat@luffy.cx | 1339105856 |  | snmp: fix OutOctets counter to include forwarded datagrams  RFC 4293 defines ipIfStatsOutOctets (similar definition for ipSystemStatsOutOctets):     The total number of octets in IP datagrams delivered to the lower    layers for transmission.  Octets from datagrams counted in    ipIfStatsOutTransmits MUST be counted here.  And ipIfStatsOutTransmits:     The total number of IP datagrams that this entity supplied to the    lower layers for transmission.  This includes datagrams generated    locally and those forwarded by this entity.  Therefore, IPSTATS_MIB_OUTOCTETS must be incremented when incrementing IPSTATS_MIB_OUTFORWDATAGRAMS.  IP_UPD_PO_STATS is not used since ipIfStatsOutRequests must not include forwarded datagrams:     The total number of IP datagrams that local IP user-protocols    (including ICMP) supplied to IP in requests for transmission.  Note    that this counter does not include any datagrams counted in    ipIfStatsOutForwDatagrams.  Signed-off-by: Vincent Bernat <bernat@luffy.cx> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipconfig.c | s | 37K | 1401 | Eldad Zack | eldad@fogrefinery.com | 1337501176 |  | net/ipv4/ipconfig: neaten __setup placement  The __setup macro should follow the corresponding setup handler.  Signed-off-by: Eldad Zack <eldad@fogrefinery.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | syncookies.c | s | 10K | 321 | Eric Dumazet | eric.dumazet@gmail.com | 1331506332 |  | tcp: fix syncookie regression  commit ea4fc0d619 (ipv4: Don't use rt->rt_{src,dst} in ip_queue_xmit()) added a serious regression on synflood handling.  Simon Kirby discovered a successful connection was delayed by 20 seconds before being responsive.  In my tests, I discovered that xmit frames were lost, and needed ~4 retransmits and a socket dst rebuild before being really sent.  In case of syncookie initiated connection, we use a different path to initialize the socket dst, and inet->cork.fl.u.ip4 is left cleared.  As ip_queue_xmit() now depends on inet flow being setup, fix this by copying the temp flowi4 we use in cookie_v4_check().  Reported-by: Simon Kirby <sim@netnation.com> Bisected-by: Simon Kirby <sim@netnation.com> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Tested-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_vegas.h | s | 902B | 21 | Stephen Hemminger | shemminger@linux-foundation.org | 1185874077 |  | [TCP]: congestion control API pass RTT in microseconds  This patch changes the API for the callback that is done after an ACK is received. It solves a couple of issues:    * Some congestion controls want higher resolution value of RTT     (controlled by TCP_CONG_RTT_SAMPLE flag). These don't really want a ktime, but     all compute a RTT in microseconds.    * Other congestion control could use RTT at jiffies resolution.  To keep API consistent the units should be the same for both cases, just the resolution should change.  Signed-off-by: Stephen Hemminger <shemminger@linux-foundation.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | udplite.c | s | 3.4K | 122 | Joe Perches | joe@perches.com | 1331597121 |  | net: ipv4: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv4: ", "TCP: ", and "IPsec: " to appropriate files. Standardize on "UDPLite: " for appropriate uses. Some prefixes were previously "UDPLITE: " and "UDP-Lite: ".  Add KBUILD_MODNAME ": " to icmp and gre. Remove embedded prefixes as appropriate.  Add missing "\n" to pr_info in gre.c.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netfilter.c | s | 6.0K | 207 | Eric W. Biederman | ebiederm@xmission.com | 1334971350 |  | net: Delete all remaining instances of ctl_path  We don't use struct ctl_path anymore so delete the exported constants.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib_trie.c | s | 61K | 2176 | David S. Miller | davem@davemloft.net | 1336702592 |  | ipv4: Do not use dead fib_info entries.  Due to RCU lookups and RCU based release, fib_info objects can be found during lookup which have fi->fib_dead set.  We must ignore these entries, otherwise we risk dereferencing the parts of the entry which are being torn down.  Reported-by: Yevgen Pronenko <yevgen.pronenko@sonymobile.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_illinois.c | s | 8.1K | 296 | Stephen Hemminger | shemminger@vyatta.com | 1299746417 |  | tcp: mark tcp_congestion_ops read_mostly  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_forward.c | s | 3.4K | 110 | Vincent Bernat | bernat@luffy.cx | 1339105856 |  | snmp: fix OutOctets counter to include forwarded datagrams  RFC 4293 defines ipIfStatsOutOctets (similar definition for ipSystemStatsOutOctets):     The total number of octets in IP datagrams delivered to the lower    layers for transmission.  Octets from datagrams counted in    ipIfStatsOutTransmits MUST be counted here.  And ipIfStatsOutTransmits:     The total number of IP datagrams that this entity supplied to the    lower layers for transmission.  This includes datagrams generated    locally and those forwarded by this entity.  Therefore, IPSTATS_MIB_OUTOCTETS must be incremented when incrementing IPSTATS_MIB_OUTFORWDATAGRAMS.  IP_UPD_PO_STATS is not used since ipIfStatsOutRequests must not include forwarded datagrams:     The total number of IP datagrams that local IP user-protocols    (including ICMP) supplied to IP in requests for transmission.  Note    that this counter does not include any datagrams counted in    ipIfStatsOutForwDatagrams.  Signed-off-by: Vincent Bernat <bernat@luffy.cx> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_fragment.c | s | 20K | 745 | Eric Dumazet | edumazet@google.com | 1337466897 |  | ipv4: use skb coalescing in defragmentation  ip_frag_reasm() can use skb_try_coalesce() to build optimized skb, reducing memory used by them (truesize), and reducing number of cache line misses and overhead for the consumer.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Alexander Duyck <alexander.h.duyck@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipip.c | s | 22K | 774 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | raw.c | s | 24K | 925 | Daniel Baluta | dbaluta@ixiacom.com | 1334507839 |  | ipv4: fix checkpatch errors  Fix checkpatch errors of the following type: 	* ERROR: "foo * bar" should be "foo *bar" 	* ERROR: "(foo*)" should be "(foo *)"  Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
