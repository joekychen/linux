d | rfcomm |  | 5 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1338675703 |  | tty: Revert the tty locking series, it needs more work  This reverts the tty layer change to use per-tty locking, because it's not correct yet, and fixing it will require some more deep surgery.  The main revert is d29f3ef39be4 ("tty_lock: Localise the lock"), but there are several smaller commits that built upon it, they also get reverted here. The list of reverted commits is:    fde86d310886 - tty: add lockdep annotations   8f6576ad476b - tty: fix ldisc lock inversion trace   d3ca8b64b97e - pty: Fix lock inversion   b1d679afd766 - tty: drop the pty lock during hangup   abcefe5fc357 - tty/amiserial: Add missing argument for tty_unlock()   fd11b42e3598 - cris: fix missing tty arg in wait_event_interruptible_tty call   d29f3ef39be4 - tty_lock: Localise the lock  The revert had a trivial conflict in the 68360serial.c staging driver that got removed in the meantime.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hci_sock.c | s | 22K | 873 | Linus Torvalds | torvalds@linux-foundation.org | 1333069943 |  | Merge branch 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull x32 support for x86-64 from Ingo Molnar:  "This tree introduces the X32 binary format and execution mode for x86:   32-bit data space binaries using 64-bit instructions and 64-bit kernel   syscalls.    This allows applications whose working set fits into a 32 bits address   space to make use of 64-bit instructions while using a 32-bit address   space with shorter pointers, more compressed data structures, etc."  Fix up trivial context conflicts in arch/x86/{Kconfig,vdso/vma.c}  * 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (71 commits)   x32: Fix alignment fail in struct compat_siginfo   x32: Fix stupid ia32/x32 inversion in the siginfo format   x32: Add ptrace for x32   x32: Switch to a 64-bit clock_t   x32: Provide separate is_ia32_task() and is_x32_task() predicates   x86, mtrr: Use explicit sizing and padding for the 64-bit ioctls   x86/x32: Fix the binutils auto-detect   x32: Warn and disable rather than error if binutils too old   x32: Only clear TIF_X32 flag once   x32: Make sure TS_COMPAT is cleared for x32 tasks   fs: Remove missed ->fds_bits from cessation use of fd_set structs internally   fs: Fix close_on_exec pointer in alloc_fdtable   x32: Drop non-__vdso weak symbols from the x32 VDSO   x32: Fix coding style violations in the x32 VDSO code   x32: Add x32 VDSO support   x32: Allow x32 to be configured   x32: If configured, add x32 system calls to system call tables   x32: Handle process creation   x32: Signal-related system calls   x86: Add #ifdef CONFIG_COMPAT to <asm/sys_ia32.h>   ...
d | bnep |  | 6 items |  | John W. Linville | linville@tuxdriver.com | 1337714286 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
f | Makefile | g | 353B |  | Ulisses Furquim | ulisses@profusion.mobi | 1324441268 |  | Bluetooth: Always compile SCO and L2CAP in Bluetooth Core  The handling of SCO audio links and the L2CAP protocol are essential to any system with Bluetooth thus are always compiled in from now on.  Signed-off-by: Ulisses Furquim <ulisses@profusion.mobi> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>
d | hidp |  | 5 items |  | Henrik Rydberg | rydberg@euromail.se | 1340637900 |  | HID: Fix the generic Kconfig options  The generic HID driver is obviously not a special driver, so move it outside of the special drivers menu. Explain the usage and make the default follow the HID setting. This should simplify migration from older kernels. While at it, remove the redundant HID_SUPPORT option and modify the HID and USB_HID entries to better explain the bus structure.  Reported-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: Henrik Rydberg <rydberg@euromail.se> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | sco.c | s | 20K | 813 | Andre Guedes | andre.guedes@openbossa.org | 1336538445 |  | Bluetooth: Add dst_type parameter to hci_connect  This patch adds the dst_type parameter to hci_connect function. Instead of searching the address type in advertising cache, we use the dst_type parameter to establish LE connections.  The dst_type is ignored for BR/EDR connection establishment.  Signed-off-by: Andre Guedes <andre.guedes@openbossa.org> Acked-by: Johan Hedberg <johan.hedberg@intel.com> Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
d | cmtp |  | 6 items |  | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | lib.c | s | 3.2K | 141 | Joe Perches | joe@perches.com | 1329471197 |  | Bluetooth: Add logging functions bt_info and bt_err  Use specific logging functions instead of a generic bt_printk function can save some text.  Remove now unused bt_printk function. Add compatibility BT_INFO and BT_ERR macros.  (compiled x86 and defconfig with bluetooth and all bluetooth drivers)  $ size net/bluetooth/built-in.o*    text	   data	    bss	    dec	    hex	filename  381662	  20072	 100416	 502150	  7a986	net/bluetooth/built-in.o.allyesconfig.new  382463	  20072	 100400	 502935	  7ac97	net/bluetooth/built-in.o.allyesconfig.old  126635	   1388	    132	 128155	  1f49b	net/bluetooth/built-in.o.defconfig.new  127175	   1388	    132	 128695	  1f6b7	net/bluetooth/built-in.o.defconfig.old  $ size drivers/bluetooth/built-in.o*  127575	   8976	  29476	 166027	  2888b	drivers/bluetooth/built-in.o.allyesconfig.new  129512	   8976	  29516	 168004	  29044	drivers/bluetooth/built-in.o.allyesconfig.old   52998	   3292	    156	  56446	   dc7e	drivers/bluetooth/built-in.o.defconfig.new   54358	   3292	    156	  57806	   e1ce	drivers/bluetooth/built-in.o.defconfig.old  Signed-off-by: Joe Perches <joe@perches.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | af_bluetooth.c | s | 12K | 477 | Vinicius Costa Gomes | vinicius.gomes@openbossa.org | 1338866786 |  | Bluetooth: Fix checking the wrong flag when accepting a socket  Most probably a typo, the check should have been for BT_SK_DEFER_SETUP instead of BT_DEFER_SETUP (which right now only represents a socket option).  Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@openbossa.org> Acked-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | hci_event.c | s | 84K | 2737 | Johan Hedberg | johan.hedberg@intel.com | 1339200040 |  | Bluetooth: Add support for encryption key refresh  With LE/SMP the completion of a security level elavation from medium to high is indicated by a HCI Encryption Key Refresh Complete event. The necessary behavior upon receiving this event is a mix of what's done for auth_complete and encryption_change, which is also where most of the event handling code has been copied from.  Signed-off-by: Johan Hedberg <johan.hedberg@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | hci_sysfs.c | s | 13K | 460 | Andrei Emeltchenko | andrei.emeltchenko@intel.com | 1336534891 |  | Bluetooth: trivial: Correct types  Fix sparse warnigns below: ... net/bluetooth/hci_sysfs.c:458:33: warning: cast to restricted __be32 net/bluetooth/hci_sysfs.c:458:47: warning: cast to restricted __be16 ...  Signed-off-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | mgmt.c | s | 83K | 2830 | Vishal Agarwal | vishal.agarwal@stericsson.com | 1339687179 |  | Bluetooth: Fix sending HCI_Disconnect only when connected  HCI_Disconnect should only be sent after connection is established. If connection is not yet established and HCI_Disconnect is called then disconnection complete will be received with a handle which does not exist and hence this event will be ignored. But as mgmt.c will not receive this event, its variable for pending command is not cleared.This will result in future Disconnect commands for that BD Address to be blocked with error busy.  Signed-off-by: Vishal Agarwal <vishal.agarwal@stericsson.com> Acked-by: Johan Hedberg <johan.hedberg@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | smp.c | s | 23K | 763 | Johan Hedberg | johan.hedberg@intel.com | 1339138714 |  | Bluetooth: Fix SMP security elevation from medium to high  If we have an unauthenticated key it is not sufficient to acheive high security. Therefore, when deciding whether to encrypt the link or request pairing, it is essential to in addition to checking the existence of a key to also check whether it is authenticated or not.  Signed-off-by: Johan Hedberg <johan.hedberg@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | hci_conn.c | s | 21K | 726 | Syam Sidhardhan | s.syam@samsung.com | 1336538451 |  | Bluetooth: Remove unused hci_le_ltk_neg_reply()  No one is using hci_le_ltk_neg_reply() in bluetooth subsystem.  Signed-off-by: Syam Sidhardhan <s.syam@samsung.com> Signed-off-by: Gustavo Padovan <gustavo@padovan.org>
f | hci_core.c | s | 60K | 2192 | Gustavo Padovan | gustavo@padovan.org | 1337195569 |  | Bluetooth: Fix packet size provided to the controller  When building fragmented skb's skb->len keeps track of the size of head plus all fragments combined, however when queueing the skb for sending we need to report the head size instead of the total size, so we just set skb->len to skb_headlen().  This bug appeared when implementing MSG_MORE support for L2CAP sockets, it never showed up before because l2cap_skbuff_fromiovec() never accounted skb size correctly. A following patch will fix this.  Signed-off-by: Gustavo Padovan <gustavo@padovan.org> Reviewed-by: Mat Martineau <mathewm@codeaurora.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | Kconfig | g | 1.6K |  | Andre Guedes | andre.guedes@openbossa.org | 1330534225 |  | Bluetooth: Fix Kconfig help description  SMP is not a kernel module, it is part of Bluetooth Core (as already described in lines above).  Signed-off-by: Andre Guedes <andre.guedes@openbossa.org> Acked-by: Gustavo F. Padovan <padovan@profusion.mobi> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | l2cap_core.c | s | 116K | 3962 | Szymon Janc | szymon.janc@tieto.com | 1339469428 |  | Bluetooth: Fix using uninitialized option in RFCMode  If remote device sends bogus RFC option with invalid length, undefined options values are used. Fix this by using defaults when remote misbehaves.  This also fixes the following warning reported by gcc 4.7.0:  net/bluetooth/l2cap_core.c: In function 'l2cap_config_rsp': net/bluetooth/l2cap_core.c:3302:13: warning: 'rfc.max_pdu_size' may be used uninitialized in this function [-Wmaybe-uninitialized] net/bluetooth/l2cap_core.c:3266:24: note: 'rfc.max_pdu_size' was declared here net/bluetooth/l2cap_core.c:3298:25: warning: 'rfc.monitor_timeout' may be used uninitialized in this function [-Wmaybe-uninitialized] net/bluetooth/l2cap_core.c:3266:24: note: 'rfc.monitor_timeout' was declared here net/bluetooth/l2cap_core.c:3297:25: warning: 'rfc.retrans_timeout' may be used uninitialized in this function [-Wmaybe-uninitialized] net/bluetooth/l2cap_core.c:3266:24: note: 'rfc.retrans_timeout' was declared here net/bluetooth/l2cap_core.c:3295:2: warning: 'rfc.mode' may be used uninitialized in this function [-Wmaybe-uninitialized] net/bluetooth/l2cap_core.c:3266:24: note: 'rfc.mode' was declared here  Signed-off-by: Szymon Janc <szymon.janc@tieto.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | l2cap_sock.c | s | 24K | 903 | Gustavo Padovan | gustavo@padovan.org | 1337195657 |  | Bluetooth: Create flags for bt_sk()  defer_setup and suspended are now flags into bt_sk().  Signed-off-by: Gustavo Padovan <gustavo@padovan.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
