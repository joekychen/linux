f | tty.c | s | 26K | 905 | Linus Torvalds | torvalds@linux-foundation.org | 1338675703 |  | tty: Revert the tty locking series, it needs more work  This reverts the tty layer change to use per-tty locking, because it's not correct yet, and fixing it will require some more deep surgery.  The main revert is d29f3ef39be4 ("tty_lock: Localise the lock"), but there are several smaller commits that built upon it, they also get reverted here. The list of reverted commits is:    fde86d310886 - tty: add lockdep annotations   8f6576ad476b - tty: fix ldisc lock inversion trace   d3ca8b64b97e - pty: Fix lock inversion   b1d679afd766 - tty: drop the pty lock during hangup   abcefe5fc357 - tty/amiserial: Add missing argument for tty_unlock()   fd11b42e3598 - cris: fix missing tty arg in wait_event_interruptible_tty call   d29f3ef39be4 - tty_lock: Localise the lock  The revert had a trivial conflict in the 68360serial.c staging driver that got removed in the meantime.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sock.c | s | 22K | 831 | Gustavo Padovan | gustavo@padovan.org | 1337195657 |  | Bluetooth: Create flags for bt_sk()  defer_setup and suspended are now flags into bt_sk().  Signed-off-by: Gustavo Padovan <gustavo@padovan.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | Makefile | g | 159B |  | Marcel Holtmann | marcel@holtmann.org | 1130520036 |  | [Bluetooth] Move CRC table into RFCOMM core  This patch moves rfcomm_crc_table[] into the RFCOMM core, because there is no need to keep it in a separate file.  Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
f | Kconfig | g | 474B |  | Ulisses Furquim | ulisses@profusion.mobi | 1324441268 |  | Bluetooth: Always compile SCO and L2CAP in Bluetooth Core  The handling of SCO audio links and the L2CAP protocol are essential to any system with Bluetooth thus are always compiled in from now on.  Signed-off-by: Ulisses Furquim <ulisses@profusion.mobi> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>
f | core.c | s | 49K | 1748 | Octavian Purdila | octavian.purdila@intel.com | 1329304166 |  | Bluetooth: Fix RFCOMM session reference counting issue  There is an imbalance in the rfcomm_session_hold / rfcomm_session_put operations which causes the following crash:  [  685.010159] BUG: unable to handle kernel paging request at 6b6b6b6b [  685.010169] IP: [<c149d76d>] rfcomm_process_dlcs+0x1b/0x15e [  685.010181] *pdpt = 000000002d665001 *pde = 0000000000000000 [  685.010191] Oops: 0000 [#1] PREEMPT SMP [  685.010247] [  685.010255] Pid: 947, comm: krfcommd Tainted: G         C  3.0.16-mid8-dirty #44 [  685.010266] EIP: 0060:[<c149d76d>] EFLAGS: 00010246 CPU: 1 [  685.010274] EIP is at rfcomm_process_dlcs+0x1b/0x15e [  685.010281] EAX: e79f551c EBX: 6b6b6b6b ECX: 00000007 EDX: e79f40b4 [  685.010288] ESI: e79f4060 EDI: ed4e1f70 EBP: ed4e1f68 ESP: ed4e1f50 [  685.010295]  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 [  685.010303] Process krfcommd (pid: 947, ti=ed4e0000 task=ed43e5e0 task.ti=ed4e0000) [  685.010308] Stack: [  685.010312]  ed4e1f68 c149eb53 e5925150 e79f4060 ed500000 ed4e1f70 ed4e1f80 c149ec10 [  685.010331]  00000000 ed43e5e0 00000000 ed4e1f90 ed4e1f9c c149ec87 0000bf54 00000000 [  685.010348]  00000000 ee03bf54 c149ec37 ed4e1fe4 c104fe01 00000000 00000000 00000000 [  685.010367] Call Trace: [  685.010376]  [<c149eb53>] ? rfcomm_process_rx+0x6e/0x74 [  685.010387]  [<c149ec10>] rfcomm_process_sessions+0xb7/0xde [  685.010398]  [<c149ec87>] rfcomm_run+0x50/0x6d [  685.010409]  [<c149ec37>] ? rfcomm_process_sessions+0xde/0xde [  685.010419]  [<c104fe01>] kthread+0x63/0x68 [  685.010431]  [<c104fd9e>] ? __init_kthread_worker+0x42/0x42 [  685.010442]  [<c14dae82>] kernel_thread_helper+0x6/0xd  This issue has been brought up earlier here:  https://lkml.org/lkml/2011/5/21/127  The issue appears to be the rfcomm_session_put in rfcomm_recv_ua. This operation doesn't seem be to required as for the non-initiator case we have the rfcomm_process_rx doing an explicit put and in the initiator case the last dlc_unlink will drive the reference counter to 0.  There have been several attempts to fix these issue:  6c2718d Bluetooth: Do not call rfcomm_session_put() for RFCOMM UA on closed socket 683d949 Bluetooth: Never deallocate a session when some DLC points to it  but AFAICS they do not fix the issue just make it harder to reproduce.  Signed-off-by: Octavian Purdila <octavian.purdila@intel.com> Signed-off-by: Gopala Krishna Murala <gopala.krishna.murala@intel.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
