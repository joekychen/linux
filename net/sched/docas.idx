f | Makefile | g | 2.1K |  | Eric Dumazet | edumazet@google.com | 1336852422 |  | fq_codel: Fair Queue Codel AQM  Fair Queue Codel packet scheduler  Principles :  - Packets are classified (internal classifier or external) on flows. - This is a Stochastic model (as we use a hash, several flows might                               be hashed on same slot) - Each flow has a CoDel managed queue. - Flows are linked onto two (Round Robin) lists,   so that new flows have priority on old ones.  - For a given flow, packets are not reordered (CoDel uses a FIFO) - head drops only. - ECN capability is on by default. - Very low memory footprint (64 bytes per flow)  tc qdisc ... fq_codel [ limit PACKETS ] [ flows number ]                       [ target TIME ] [ interval TIME ] [ noecn ]                       [ quantum BYTES ]  defaults : 1024 flows, 10240 packets limit, quantum : device MTU            target : 5ms (CoDel default)            interval : 100ms (CoDel default)  Impressive results on load :  class htb 1:1 root leaf 10: prio 0 quantum 1514 rate 200000Kbit ceil 200000Kbit burst 1475b/8 mpu 0b overhead 0b cburst 1475b/8 mpu 0b overhead 0b level 0  Sent 43304920109 bytes 33063109 pkt (dropped 0, overlimits 0 requeues 0)  rate 201691Kbit 28595pps backlog 0b 312p requeues 0  lended: 33063109 borrowed: 0 giants: 0  tokens: -912 ctokens: -912  class fq_codel 10:1735 parent 10:  (dropped 1292, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:4524 parent 10:  (dropped 1291, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:4e74 parent 10:  (dropped 1290, overlimits 0 requeues 0)  backlog 6056b 4p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 6.4ms dropping drop_next 92.0ms class fq_codel 10:628a parent 10:  (dropped 1289, overlimits 0 requeues 0)  backlog 7570b 5p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.4ms dropping drop_next 90.9ms class fq_codel 10:a4b3 parent 10:  (dropped 302, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:c3c2 parent 10:  (dropped 1284, overlimits 0 requeues 0)  backlog 13626b 9p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.9ms class fq_codel 10:d331 parent 10:  (dropped 299, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.0ms class fq_codel 10:d526 parent 10:  (dropped 12160, overlimits 0 requeues 0)  backlog 35870b 211p requeues 0   deficit 1508 count 12160 lastcount 1 ldelay 15.3ms dropping drop_next 247us class fq_codel 10:e2c6 parent 10:  (dropped 1288, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:eab5 parent 10:  (dropped 1285, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.9ms class fq_codel 10:f220 parent 10:  (dropped 1289, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms  qdisc htb 1: root refcnt 6 r2q 10 default 1 direct_packets_stat 0 ver 3.17  Sent 43331086547 bytes 33092812 pkt (dropped 0, overlimits 66063544 requeues 71)  rate 201697Kbit 28602pps backlog 0b 260p requeues 71 qdisc fq_codel 10: parent 1:1 limit 10240p flows 65536 target 5.0ms interval 100.0ms ecn  Sent 43331086547 bytes 33092812 pkt (dropped 949359, overlimits 0 requeues 0)  rate 201697Kbit 28602pps backlog 189352b 260p requeues 0   maxpacket 1514 drop_overlimit 0 new_flow_count 5582 ecn_mark 125593   new_flows_len 0 old_flows_len 11  PING 172.30.42.18 (172.30.42.18) 56(84) bytes of data. 64 bytes from 172.30.42.18: icmp_req=1 ttl=64 time=0.227 ms 64 bytes from 172.30.42.18: icmp_req=2 ttl=64 time=0.165 ms 64 bytes from 172.30.42.18: icmp_req=3 ttl=64 time=0.166 ms 64 bytes from 172.30.42.18: icmp_req=4 ttl=64 time=0.151 ms 64 bytes from 172.30.42.18: icmp_req=5 ttl=64 time=0.164 ms 64 bytes from 172.30.42.18: icmp_req=6 ttl=64 time=0.172 ms 64 bytes from 172.30.42.18: icmp_req=7 ttl=64 time=0.175 ms 64 bytes from 172.30.42.18: icmp_req=8 ttl=64 time=0.183 ms 64 bytes from 172.30.42.18: icmp_req=9 ttl=64 time=0.158 ms 64 bytes from 172.30.42.18: icmp_req=10 ttl=64 time=0.200 ms  10 packets transmitted, 10 received, 0% packet loss, time 8999ms rtt min/avg/max/mdev = 0.151/0.176/0.227/0.022 ms  Much better than SFQ because of priority given to new flows, and fast path dirtying less cache lines.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_csum.c | s | 13K | 489 | Eldad Zack | eldad@fogrefinery.com | 1337284191 |  | ipv6: correct the ipv6 option name - Pad0 to Pad1  The padding destination or hop-by-hop option is called Pad1 and not Pad0.  See RFC2460 (4.2) or the IANA ipv6-parameters registry: http://www.iana.org/assignments/ipv6-parameters/ipv6-parameters.xml  Signed-off-by: Eldad Zack <eldad@fogrefinery.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_netem.c | s | 23K | 844 | David S. Miller | davem@davemloft.net | 1336448140 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net  Conflicts: 	drivers/net/ethernet/intel/e1000e/param.c 	drivers/net/wireless/iwlwifi/iwl-agn-rx.c 	drivers/net/wireless/iwlwifi/iwl-trans-pcie-rx.c 	drivers/net/wireless/iwlwifi/iwl-trans.h  Resolved the iwlwifi conflict with mainline using 3-way diff posted by John Linville and Stephen Rothwell.  In 'net' we added a bug fix to make iwlwifi report a more accurate skb->truesize but this conflicted with RX path changes that happened meanwhile in net-next.  In e1000e a conflict arose in the validation code for settings of adapter->itr.  'net-next' had more sophisticated logic so that logic was used.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_blackhole.c | s | 1.2K | 45 | Jarek Poplawski | jarkao2@gmail.com | 1225439155 |  | pkt_sched: Add qdisc->ops->peek() implementation.  Add qdisc->ops->peek() implementation for work-conserving qdiscs. With feedback from Patrick McHardy.  Signed-off-by: Jarek Poplawski <jarkao2@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_mqprio.c | s | 10K | 353 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_rsvp.h | s | 14K | 556 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_tcindex.c | s | 11K | 420 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | em_u32.c | s | 1.4K | 52 | Eric Dumazet | eric.dumazet@gmail.com | 1295508672 |  | net_sched: cleanups  Cleanup net/sched code to current CodingStyle and practices.  Reduce inline abuse  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ematch.c | s | 14K | 470 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | em_meta.c | s | 21K | 731 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | em_nbyte.c | s | 1.9K | 64 | Eric Dumazet | eric.dumazet@gmail.com | 1295508672 |  | net_sched: cleanups  Cleanup net/sched code to current CodingStyle and practices.  Reduce inline abuse  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_rsvp.c | s | 761B | 25 | Patrick McHardy | kaber@trash.net | 1184131001 |  | [NET_SCHED]: Remove unnecessary includes  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_qfq.c | s | 27K | 939 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_multiq.c | s | 9.3K | 368 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_red.c | s | 8.7K | 324 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_ingress.c | s | 3.2K | 116 | Eric Dumazet | eric.dumazet@gmail.com | 1294704474 |  | net_sched: factorize qdisc stats handling  HTB takes into account skb is segmented in stats updates. Generalize this to all schedulers.  They should use qdisc_bstats_update() helper instead of manipulating bstats.bytes and bstats.packets  Add bstats_update() helper too for classes that use gnet_stats_basic_packed fields.  Note : Right now, TCQ_F_CAN_BYPASS shortcurt can be taken only if no stab is setup on qdisc.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_codel.c | s | 7.4K | 227 | Eric Dumazet | edumazet@google.com | 1337196626 |  | fq_codel: should use qdisc backlog as threshold  codel_should_drop() logic allows a packet being not dropped if queue size is under max packet size.  In fq_codel, we have two possible backlogs : The qdisc global one, and the flow local one.  The meaningful one for codel_should_drop() should be the global backlog, not the per flow one, so that thin flows can have a non zero drop/mark probability.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Dave Taht <dave.taht@bufferbloat.net> Cc: Kathleen Nichols <nichols@pollere.com> Cc: Van Jacobson <van@pollere.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_tbf.c | s | 10K | 375 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_route.c | s | 12K | 523 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | em_cmp.c | s | 2.1K | 80 | Eric Dumazet | eric.dumazet@gmail.com | 1295508672 |  | net_sched: cleanups  Cleanup net/sched code to current CodingStyle and practices.  Reduce inline abuse  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_fq_codel.c | s | 15K | 539 | Eric Dumazet | edumazet@google.com | 1337196626 |  | fq_codel: should use qdisc backlog as threshold  codel_should_drop() logic allows a packet being not dropped if queue size is under max packet size.  In fq_codel, we have two possible backlogs : The qdisc global one, and the flow local one.  The meaningful one for codel_should_drop() should be the global backlog, not the per flow one, so that thin flows can have a non zero drop/mark probability.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Dave Taht <dave.taht@bufferbloat.net> Cc: Kathleen Nichols <nichols@pollere.com> Cc: Van Jacobson <van@pollere.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_hfsc.c | s | 40K | 1510 | Eric Dumazet | edumazet@google.com | 1336707181 |  | net_sched: update bstats in dequeue()  Class bytes/packets stats can be misleading because they are updated in enqueue() while packet might be dropped later.  We already fixed all qdiscs but sch_atm.  This patch makes the final cleanup.  class rate estimators can now match qdisc ones.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_api.c | s | 41K | 1508 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_sfq.c | s | 22K | 817 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_flow.c | s | 15K | 564 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_nat.c | s | 7.3K | 272 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_skbedit.c | s | 5.9K | 188 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_fifo.c | s | 4.1K | 150 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_cgroup.c | s | 6.8K | 254 | Tejun Heo | tj@kernel.org | 1333307395 |  | cgroup: convert all non-memcg controllers to the new cftype interface  Convert debug, freezer, cpuset, cpu_cgroup, cpuacct, net_prio, blkio, net_cls and device controllers to use the new cftype based interface. Termination entry is added to cftype arrays and populate callbacks are replaced with cgroup_subsys->base_cftypes initializations.  This is functionally identical transformation.  There shouldn't be any visible behavior change.  memcg is rather special and will be converted separately.  Signed-off-by: Tejun Heo <tj@kernel.org> Acked-by: Li Zefan <lizf@cn.fujitsu.com> Cc: Paul Menage <paul@paulmenage.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Vivek Goyal <vgoyal@redhat.com>
f | act_pedit.c | s | 6.2K | 227 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_teql.c | s | 12K | 448 | Eric Dumazet | edumazet@google.com | 1336146605 |  | net: sched: factorize code (qdisc_drop())  Use qdisc_drop() helper where possible.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_api.c | s | 13K | 539 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_generic.c | s | 21K | 761 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_dsmark.c | s | 11K | 404 | Eric Dumazet | edumazet@google.com | 1336146605 |  | net: sched: factorize code (qdisc_drop())  Use qdisc_drop() helper where possible.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_sfb.c | s | 16K | 611 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_basic.c | s | 6.5K | 251 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 19K |  | Eric Dumazet | edumazet@google.com | 1336852422 |  | fq_codel: Fair Queue Codel AQM  Fair Queue Codel packet scheduler  Principles :  - Packets are classified (internal classifier or external) on flows. - This is a Stochastic model (as we use a hash, several flows might                               be hashed on same slot) - Each flow has a CoDel managed queue. - Flows are linked onto two (Round Robin) lists,   so that new flows have priority on old ones.  - For a given flow, packets are not reordered (CoDel uses a FIFO) - head drops only. - ECN capability is on by default. - Very low memory footprint (64 bytes per flow)  tc qdisc ... fq_codel [ limit PACKETS ] [ flows number ]                       [ target TIME ] [ interval TIME ] [ noecn ]                       [ quantum BYTES ]  defaults : 1024 flows, 10240 packets limit, quantum : device MTU            target : 5ms (CoDel default)            interval : 100ms (CoDel default)  Impressive results on load :  class htb 1:1 root leaf 10: prio 0 quantum 1514 rate 200000Kbit ceil 200000Kbit burst 1475b/8 mpu 0b overhead 0b cburst 1475b/8 mpu 0b overhead 0b level 0  Sent 43304920109 bytes 33063109 pkt (dropped 0, overlimits 0 requeues 0)  rate 201691Kbit 28595pps backlog 0b 312p requeues 0  lended: 33063109 borrowed: 0 giants: 0  tokens: -912 ctokens: -912  class fq_codel 10:1735 parent 10:  (dropped 1292, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:4524 parent 10:  (dropped 1291, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:4e74 parent 10:  (dropped 1290, overlimits 0 requeues 0)  backlog 6056b 4p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 6.4ms dropping drop_next 92.0ms class fq_codel 10:628a parent 10:  (dropped 1289, overlimits 0 requeues 0)  backlog 7570b 5p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.4ms dropping drop_next 90.9ms class fq_codel 10:a4b3 parent 10:  (dropped 302, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:c3c2 parent 10:  (dropped 1284, overlimits 0 requeues 0)  backlog 13626b 9p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.9ms class fq_codel 10:d331 parent 10:  (dropped 299, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.0ms class fq_codel 10:d526 parent 10:  (dropped 12160, overlimits 0 requeues 0)  backlog 35870b 211p requeues 0   deficit 1508 count 12160 lastcount 1 ldelay 15.3ms dropping drop_next 247us class fq_codel 10:e2c6 parent 10:  (dropped 1288, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms class fq_codel 10:eab5 parent 10:  (dropped 1285, overlimits 0 requeues 0)  backlog 16654b 11p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 5.9ms class fq_codel 10:f220 parent 10:  (dropped 1289, overlimits 0 requeues 0)  backlog 15140b 10p requeues 0   deficit 1514 count 1 lastcount 1 ldelay 7.1ms  qdisc htb 1: root refcnt 6 r2q 10 default 1 direct_packets_stat 0 ver 3.17  Sent 43331086547 bytes 33092812 pkt (dropped 0, overlimits 66063544 requeues 71)  rate 201697Kbit 28602pps backlog 0b 260p requeues 71 qdisc fq_codel 10: parent 1:1 limit 10240p flows 65536 target 5.0ms interval 100.0ms ecn  Sent 43331086547 bytes 33092812 pkt (dropped 949359, overlimits 0 requeues 0)  rate 201697Kbit 28602pps backlog 189352b 260p requeues 0   maxpacket 1514 drop_overlimit 0 new_flow_count 5582 ecn_mark 125593   new_flows_len 0 old_flows_len 11  PING 172.30.42.18 (172.30.42.18) 56(84) bytes of data. 64 bytes from 172.30.42.18: icmp_req=1 ttl=64 time=0.227 ms 64 bytes from 172.30.42.18: icmp_req=2 ttl=64 time=0.165 ms 64 bytes from 172.30.42.18: icmp_req=3 ttl=64 time=0.166 ms 64 bytes from 172.30.42.18: icmp_req=4 ttl=64 time=0.151 ms 64 bytes from 172.30.42.18: icmp_req=5 ttl=64 time=0.164 ms 64 bytes from 172.30.42.18: icmp_req=6 ttl=64 time=0.172 ms 64 bytes from 172.30.42.18: icmp_req=7 ttl=64 time=0.175 ms 64 bytes from 172.30.42.18: icmp_req=8 ttl=64 time=0.183 ms 64 bytes from 172.30.42.18: icmp_req=9 ttl=64 time=0.158 ms 64 bytes from 172.30.42.18: icmp_req=10 ttl=64 time=0.200 ms  10 packets transmitted, 10 received, 0% packet loss, time 8999ms rtt min/avg/max/mdev = 0.151/0.176/0.227/0.022 ms  Much better than SFQ because of priority given to new flows, and fast path dirtying less cache lines.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_plug.c | s | 6.7K | 205 | Eric Dumazet | eric.dumazet@gmail.com | 1329167080 |  | net_sched: sch_plug: plug_qdisc_ops is static  net/sched/sch_plug.c:211:18: warning: symbol 'plug_qdisc_ops' was not declared. Should it be static?  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_fw.c | s | 8.4K | 338 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_cbq.c | s | 47K | 1741 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_ipt.c | s | 7.5K | 274 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_gred.c | s | 13K | 499 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_u32.c | s | 16K | 693 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_rsvp6.c | s | 768B | 25 | Patrick McHardy | kaber@trash.net | 1184131001 |  | [NET_SCHED]: Remove unnecessary includes  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_mirred.c | s | 6.8K | 263 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_htb.c | s | 41K | 1372 | Eric Dumazet | edumazet@google.com | 1336707181 |  | net_sched: update bstats in dequeue()  Class bytes/packets stats can be misleading because they are updated in enqueue() while packet might be dropped later.  We already fixed all qdiscs but sch_atm.  This patch makes the final cleanup.  class rate estimators can now match qdisc ones.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_gact.c | s | 5.5K | 196 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | em_text.c | s | 3.7K | 129 | Eric Dumazet | eric.dumazet@gmail.com | 1295508672 |  | net_sched: cleanups  Cleanup net/sched code to current CodingStyle and practices.  Reduce inline abuse  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_drr.c | s | 11K | 438 | Eric Dumazet | edumazet@google.com | 1336707181 |  | net_sched: update bstats in dequeue()  Class bytes/packets stats can be misleading because they are updated in enqueue() while packet might be dropped later.  We already fixed all qdiscs but sch_atm.  This patch makes the final cleanup.  class rate estimators can now match qdisc ones.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_atm.c | s | 18K | 622 | Al Viro | viro@zeniv.linux.org.uk | 1338561438 |  | sch_atm.c: get rid of poinless extern  sockfd_lookup() is declared in linux/net.h, which is pulled by linux/skbuff.h (and needed for a lot of other stuff in sch_atm.c anyway).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | sch_choke.c | s | 14K | 532 | Eric Dumazet | edumazet@google.com | 1336146605 |  | net: sched: factorize code (qdisc_drop())  Use qdisc_drop() helper where possible.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_api.c | s | 23K | 965 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_simple.c | s | 5.2K | 190 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_police.c | s | 9.7K | 356 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_mq.c | s | 5.6K | 202 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | sch_prio.c | s | 8.4K | 338 | David S. Miller | davem@davemloft.net | 1333318297 |  | pkt_sched: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
