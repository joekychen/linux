f | translation-table.c | s | 58K | 1784 | Antonio Quartulli | ordex@autistici.org | 1340464895 |  | batman-adv: fix race condition in TT full-table replacement  bug introduced with cea194d90b11aff7fc289149e4c7f305fad3535a  In the current TT code, when a TT_Response containing a full table is received from an originator, first the node purges all the clients for that originator in the global translation-table and then merges the newly received table. During the purging phase each client deletion is done by means of a call_rcu() invocation and at the end of this phase the global entry counter for that originator is set to 0. However the invoked rcu function decreases the global entry counter for that originator by one too and since the rcu invocation is likely to be postponed, the node will end up in first setting the counter to 0 and then decreasing it one by one for each deleted client.  This bug leads to having a wrong global entry counter for the related node, say X. Then when the node with the broken counter will answer to a TT_REQUEST on behalf of node X, it will create faulty TT_RESPONSE that will generate an unrecoverable situation on the node that asked for the full table recover.  The non-recoverability is given by the fact that the node with the broken counter will keep answering on behalf of X because its knowledge about X's state (ttvn + tt_crc) is correct.  To solve this problem the counter is not explicitly set to 0 anymore and the counter decrement is performed right before the invocation of call_rcu().  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | hash.h | s | 4.4K | 136 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | send.h | s | 1.3K | 31 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | gateway_common.h | s | 1.2K | 33 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | Makefile | g | 1.3K |  | Simon Wunderlich | simon.wunderlich@s2003.tu-chemnitz.de | 1334147340 |  | batman-adv: add bridge loop avoidance compile option  The define CONFIG_BATMAN_ADV_BLA switches the bridge loop avoidance on - skip it, and the bridge loop avoidance is not compiled in.  This is useful if binary size should be saved or the feature is not needed.  Signed-off-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | vis.c | s | 24K | 811 | Antonio Quartulli | ordex@autistici.org | 1334735641 |  | batman-adv: use ETH_HLEN instead of sizeof(struct ethhdr)  Instead of using sizeof(struct ethhdr) it is strongly recommended to use the kernel macro ETH_HLEN. This patch substitute each occurrence of the former expressione with the latter one.  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | gateway_client.h | s | 1.5K | 35 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | hard-interface.h | s | 2.0K | 61 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | bat_sysfs.c | s | 19K | 610 | Linus Luessing | linus.luessing@web.de | 1336737363 |  | batman-adv: Adding hard_iface specific sysfs wrapper macros for UINT  This allows us to easily add a sysfs parameter for an unsigned int later, which is not for a batman mesh interface (e.g. bat0), but for a common interface instead. It allows reading and writing an atomic_t in hard_iface (instead of bat_priv compared to the mesh variant).  Developed by Linus during a 6 months trainee study period in Ascom (Switzerland) AG.  Signed-off-by: Linus Luessing <linus.luessing@web.de> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | bridge_loop_avoidance.h | s | 2.6K | 84 | Antonio Quartulli | ordex@autistici.org | 1336737367 |  | batman-adv: update copyright years  update copyright years in order to include 2012  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | bat_algo.h | s | 883B | 24 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | bitarray.c | s | 2.8K | 82 | Sven Eckelmann | sven@narfation.org | 1334147338 |  | batman-adv: Replace bitarray operations with bitmap  bitarray.c consists mostly of functionality that is already available as part of the standard kernel API. batman-adv could use architecture optimized code and reduce the binary size by switching to the standard functions.  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | hard-interface.c | s | 14K | 459 | Sven Eckelmann | sven@narfation.org | 1336928801 |  | batman-adv: use shorter pr_warn instead of pr_warning  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | packet.h | s | 5.6K | 197 | Marek Lindner | lindner_marek@yahoo.de | 1336737365 |  | batman-adv: avoid temporary routing loops by being strict on forwarded OGMs  batman-adv would forward OGMs from non-besthops while replacing the the TQ and TTL values with the values from the best hop. In certain corner cases this leads to a temporary routing loop. This patch changes this behavior: Only packets from best next hops are forwarded - TQ and TTL values won't be replaced anymore. However, the protocol needs to rebroadcast OGMs from single hop neighbors regardless of whether or not they are the best hop. To handle this case a new flag is introduced to alert neighboring nodes about the forwarded OGM that is not from my best next hop. It is to be discarded by all nodes except for the one originating the OGM.  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Acked-by: Daniele Furlan <daniele.furlan@gmail.com> Tested-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de>
f | unicast.h | s | 1.9K | 48 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | ring_buffer.c | s | 1.2K | 44 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | translation-table.h | s | 2.6K | 55 | Antonio Quartulli | ordex@autistici.org | 1336928798 |  | batman-adv: improve unicast packet (re)routing  In case of a client X roaming from a generic node A to another node B, it is possible that a third node C gets A's OGM but not B's. At this point in time, if C wants to send data to X it will send a unicast packet destined to A. The packet header will contain A's last ttvn (C got A's OGM and so it knows it).  The packet will travel towards A without being intercepted because the ttvn contained in its header is the newest for A.  Once A will receive the packet, A's state will not report to be in a "roaming phase" (because, after a roaming, once A sends out its OGM, all the changes are committed and the node is considered not to be in the roaming state anymore) and it will match the ttvn carried by the packet. Therefore there is no reason for A to try to alter the packet's route, thus dropping the packet because the destination client is not there anymore.  However, C is well aware that it's routing information towards the client X is outdated as it received an OGM from A saying that the client roamed away. Thanks to this detail, this patch introduces a small change in behaviour: as long as C is in the state of not knowing the new location of client X it will forward the traffic to its last known location using ttvn-1 of the destination. By using an older ttvn node A will be forced to re-route the packet. Intermediate nodes are also allowed to update the packet's destination as long as they have the information about the client's new location.  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | types.h | s | 11K | 365 | Marek Lindner | lindner_marek@yahoo.de | 1336928799 |  | batman-adv: prepare lq_update_lock to be shared among different protocols  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | originator.c | s | 16K | 519 | Marek Lindner | lindner_marek@yahoo.de | 1336928799 |  | batman-adv: prepare lq_update_lock to be shared among different protocols  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | bitarray.h | s | 1.7K | 47 | Sven Eckelmann | sven@narfation.org | 1334147338 |  | batman-adv: Replace bitarray operations with bitmap  bitarray.c consists mostly of functionality that is already available as part of the standard kernel API. batman-adv could use architecture optimized code and reduce the binary size by switching to the standard functions.  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | routing.c | s | 30K | 915 | Antonio Quartulli | ordex@autistici.org | 1340142548 |  | batman-adv: fix skb->data assignment  skb_linearize(skb) possibly rearranges the skb internal data and then changes the skb->data pointer value. For this reason any other pointer in the code that was assigned skb->data before invoking skb_linearise(skb) must be re-assigned.  In the current tt_query message handling code this is not done and therefore, in case of skb linearization, the pointer used to handle the packet header ends up in pointing to free'd memory.  This bug was introduced by a73105b8d4c765d9ebfb664d0a66802127d8e4c7 (batman-adv: improved client announcement mechanism)  Signed-off-by: Antonio Quartulli <ordex@autistici.org> Cc: <stable@vger.kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | send.c | s | 11K | 334 | Sven Eckelmann | sven@narfation.org | 1336928801 |  | batman-adv: use shorter pr_warn instead of pr_warning  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | vis.h | s | 1.3K | 34 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | icmp_socket.c | s | 8.4K | 268 | Antonio Quartulli | ordex@autistici.org | 1334735641 |  | batman-adv: use ETH_HLEN instead of sizeof(struct ethhdr)  Instead of using sizeof(struct ethhdr) it is strongly recommended to use the kernel macro ETH_HLEN. This patch substitute each occurrence of the former expressione with the latter one.  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | bat_debugfs.c | s | 9.0K | 310 | Marek Lindner | lindner_marek@yahoo.de | 1336723693 |  | batman-adv: replace HZ calculations with jiffies_to_msecs()  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Acked-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | gateway_client.c | s | 17K | 581 | Antonio Quartulli | ordex@autistici.org | 1336723688 |  | batman-adv: fix wrong dhcp option list browsing  In is_type_dhcprequest(), while parsing a DHCP message, if the entry we found in the option list is neither a padding nor the dhcp-type, we have to ignore it and jump as many bytes as its length + 1. The "+ 1" byte is given by the subtype field itself that has to be jumped too.  Reported-by: Marek Lindner <lindner_marek@yahoo.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | bridge_loop_avoidance.c | s | 40K | 1320 | Antonio Quartulli | ordex@autistici.org | 1336737367 |  | batman-adv: update copyright years  update copyright years in order to include 2012  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | ring_buffer.h | s | 994B | 25 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | originator.h | s | 2.7K | 78 | Marek Lindner | lindner_marek@yahoo.de | 1336737357 |  | batman-adv: split neigh_new function into generic and batman iv specific parts  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Acked-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | unicast.c | s | 9.1K | 300 | Antonio Quartulli | ordex@autistici.org | 1336928798 |  | batman-adv: improve unicast packet (re)routing  In case of a client X roaming from a generic node A to another node B, it is possible that a third node C gets A's OGM but not B's. At this point in time, if C wants to send data to X it will send a unicast packet destined to A. The packet header will contain A's last ttvn (C got A's OGM and so it knows it).  The packet will travel towards A without being intercepted because the ttvn contained in its header is the newest for A.  Once A will receive the packet, A's state will not report to be in a "roaming phase" (because, after a roaming, once A sends out its OGM, all the changes are committed and the node is considered not to be in the roaming state anymore) and it will match the ttvn carried by the packet. Therefore there is no reason for A to try to alter the packet's route, thus dropping the packet because the destination client is not there anymore.  However, C is well aware that it's routing information towards the client X is outdated as it received an OGM from A saying that the client roamed away. Thanks to this detail, this patch introduces a small change in behaviour: as long as C is in the state of not knowing the new location of client X it will forward the traffic to its last known location using ttvn-1 of the destination. By using an older ttvn node A will be forced to re-route the packet. Intermediate nodes are also allowed to update the packet's destination as long as they have the information about the client's new location.  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | bat_sysfs.h | s | 1.4K | 38 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | bat_debugfs.h | s | 1.0K | 28 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | soft-interface.c | s | 11K | 399 | Antonio Quartulli | ordex@autistici.org | 1334735641 |  | batman-adv: use ETH_HLEN instead of sizeof(struct ethhdr)  Instead of using sizeof(struct ethhdr) it is strongly recommended to use the kernel macro ETH_HLEN. This patch substitute each occurrence of the former expressione with the latter one.  Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | routing.h | s | 2.2K | 48 | Marek Lindner | lindner_marek@yahoo.de | 1336723691 |  | batman-adv: register batman ogm receive function during protocol init  The B.A.T.M.A.N. IV OGM receive function still was hard-coded although it is a routing protocol specific function. This patch takes advantage of the dynamic packet handler registration to remove the hard-coded function calls.  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Acked-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | Kconfig | g | 1.1K |  | Simon Wunderlich | simon.wunderlich@s2003.tu-chemnitz.de | 1334147340 |  | batman-adv: add bridge loop avoidance compile option  The define CONFIG_BATMAN_ADV_BLA switches the bridge loop avoidance on - skip it, and the bridge loop avoidance is not compiled in.  This is useful if binary size should be saved or the feature is not needed.  Signed-off-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | hash.c | s | 1.7K | 61 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | bat_iv_ogm.c | s | 37K | 1052 | Marek Lindner | lindner_marek@yahoo.de | 1336928799 |  | batman-adv: prepare lq_update_lock to be shared among different protocols  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | main.h | s | 7.8K | 204 | Sven Eckelmann | sven@narfation.org | 1336928802 |  | batman-adv: Start new development cycle  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | gateway_common.c | s | 4.1K | 144 | Sven Eckelmann | sven@narfation.org | 1331418584 |  | batman-adv: Ignore 80-chars per line limits for strings  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | icmp_socket.h | s | 1.0K | 28 | Sven Eckelmann | sven@narfation.org | 1329418221 |  | batman-adv: Update copyright years  Signed-off-by: Sven Eckelmann <sven@narfation.org> Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
f | main.c | s | 9.8K | 322 | Marek Lindner | lindner_marek@yahoo.de | 1336737361 |  | batman-adv: refactoring API: find generalized name for bat_ogm_update_mac callback  Signed-off-by: Marek Lindner <lindner_marek@yahoo.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
f | soft-interface.h | s | 1.2K | 30 | Simon Wunderlich | simon.wunderlich@s2003.tu-chemnitz.de | 1334147338 |  | batman-adv: remove old bridge loop avoidance code  The functionality is to be replaced by an improved implementation, so first clean up.  Signed-off-by: Simon Wunderlich <siwu@hrz.tu-chemnitz.de> Signed-off-by: Antonio Quartulli <ordex@autistici.org>
