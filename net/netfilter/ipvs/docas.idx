f | ip_vs_sh.c | s | 6.5K | 229 | Julian Anastasov | ja@ssi.bg | 1336498648 |  | ipvs: SH scheduler does not need GFP_ATOMIC allocation          Schedulers are initialized and bound to services only on commands.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_est.c | s | 5.8K | 174 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1308010052 |  | IPVS: remove unused init and cleanup functions.  After restructuring, there is some unused or empty functions left to be removed.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_sched.c | s | 5.7K | 215 | Patrick Schaaf | netdev@bof.de | 1297835613 |  | ipvs: make "no destination available" message more informative  When IP_VS schedulers do not find a destination, they output a terse "WLC: no destination available" message through kernel syslog, which I can not only make sense of because syslog puts them in a logfile together with keepalived checker results.  This patch makes the output a bit more informative, by telling you which virtual service failed to find a destination.  Example output:  kernel: [1539214.552233] IPVS: wlc: TCP 192.168.8.30:22 - no destination available kernel: [1539299.674418] IPVS: wlc: FWM 22 0x00000016 - no destination available  I have tested the code for IPv4 and FWM services, as you can see from the example; I do not have an IPv6 setup to test the third code path with.  To avoid code duplication, I put a new function ip_vs_scheduler_err() into ip_vs_sched.c, and use that from the schedulers instead of calling IP_VS_ERR_RL directly.  Signed-off-by: Patrick Schaaf <netdev@bof.de> Signed-off-by: Simon Horman <horms@verge.net.au>
f | Makefile | g | 1.2K |  | Simon Horman | horms@verge.net.au | 1286199924 |  | IPVS: sip persistence engine  Add the SIP callid as a key for persistence.  This allows multiple connections from the same IP address to be differentiated on the basis of the callid.  When used in conjunction with the persistence mask, it allows connections from different  IP addresses to be aggregated on the basis of the callid.  It is envisaged that a persistence mask of 0.0.0.0 will be a useful setting.  That is, ignore the source IP address when checking for persistence.  It is envisaged that this option will be used in conjunction with one-packet scheduling.  This only works with UDP and cannot be made to work with TCP within the current framework.  Signed-off-by: Simon Horman <horms@verge.net.au> Acked-by: Julian Anastasov <ja@ssi.bg>
f | ip_vs_sync.c | s | 51K | 1710 | Pablo Neira Ayuso | pablo@netfilter.org | 1336498833 |  | ipvs: add support for sync threads  	Allow master and backup servers to use many threads for sync traffic. Add sysctl var "sync_ports" to define the number of threads. Every thread will use single UDP port, thread 0 will use the default port 8848 while last thread will use port 8848+sync_ports-1.  	The sync traffic for connections is scheduled to many master threads based on the cp address but one connection is always assigned to same thread to avoid reordering of the sync messages.  	Remove ip_vs_sync_switch_mode because this check for sync mode change is still risky. Instead, check for mode change under sync_buff_lock.  	Make sure the backup socks do not block on reading.  Special thanks to Aleksey Chudov for helping in all tests.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Tested-by: Aleksey Chudov <aleksey.chudov@gmail.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_core.c | s | 51K | 1727 | Julian Anastasov | ja@ssi.bg | 1336498810 |  | ipvs: reduce sync rate with time thresholds  	Add two new sysctl vars to control the sync rate with the main idea to reduce the rate for connection templates because currently it depends on the packet rate for controlled connections. This mechanism should be useful also for normal connections with high traffic.  sync_refresh_period: in seconds, difference in reported connection 	timer that triggers new sync message. It can be used to 	avoid sync messages for the specified period (or half of 	the connection timeout if it is lower) if connection state 	is not changed from last sync.  sync_retries: integer, 0..3, defines sync retries with period of 	sync_refresh_period/8. Useful to protect against loss of 	sync messages.  	Allow sysctl_sync_threshold to be used with sysctl_sync_period=0, so that only single sync message is sent if sync_refresh_period is also 0.  	Add new field "sync_endtime" in connection structure to hold the reported time when connection expires. The 2 lowest bits will represent the retry count.  	As the sysctl_sync_period now can be 0 use ACCESS_ONCE to avoid division by zero.  	Special thanks to Aleksey Chudov for being patient with me, for his extensive reports and helping in all tests.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Tested-by: Aleksey Chudov <aleksey.chudov@gmail.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_lc.c | s | 2.4K | 76 | Changli Gao | xiaosuo@gmail.com | 1298601341 |  | ipvs: unify the formula to estimate the overhead of processing connections  lc and wlc use the same formula, but lblc and lblcr use another one. There is no reason for using two different formulas for the lc variants.  The formula used by lc is used by all the lc variants in this patch.  Signed-off-by: Changli Gao <xiaosuo@gmail.com> Acked-by: Wensong Zhang <wensong@linux-vs.org> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_rr.c | s | 2.9K | 94 | Patrick Schaaf | netdev@bof.de | 1297835613 |  | ipvs: make "no destination available" message more informative  When IP_VS schedulers do not find a destination, they output a terse "WLC: no destination available" message through kernel syslog, which I can not only make sense of because syslog puts them in a logfile together with keepalived checker results.  This patch makes the output a bit more informative, by telling you which virtual service failed to find a destination.  Example output:  kernel: [1539214.552233] IPVS: wlc: TCP 192.168.8.30:22 - no destination available kernel: [1539299.674418] IPVS: wlc: FWM 22 0x00000016 - no destination available  I have tested the code for IPv4 and FWM services, as you can see from the example; I do not have an IPv6 setup to test the third code path with.  To avoid code duplication, I put a new function ip_vs_scheduler_err() into ip_vs_sched.c, and use that from the schedulers instead of calling IP_VS_ERR_RL directly.  Signed-off-by: Patrick Schaaf <netdev@bof.de> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_lblc.c | s | 15K | 517 | Julian Anastasov | ja@ssi.bg | 1336498637 |  | ipvs: LBLC scheduler does not need GFP_ATOMIC allocation on init  	Schedulers are initialized and bound to services only on commands.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_proto_udp.c | s | 12K | 448 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1335775235 |  | ipvs: take care of return value from protocol init_netns  ip_vs_create_timeout_table() can return NULL All functions protocol init_netns is affected of this patch.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_nfct.c | s | 9.3K | 264 | Simon Horman | horms@verge.net.au | 1320135569 |  | ipvs: Remove unused parameter from ip_vs_confirm_conntrack()  Acked-by: Julian Anastasov <ja@ssi.bg> Acked-by Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip_vs_nq.c | s | 3.5K | 116 | Patrick Schaaf | netdev@bof.de | 1297835613 |  | ipvs: make "no destination available" message more informative  When IP_VS schedulers do not find a destination, they output a terse "WLC: no destination available" message through kernel syslog, which I can not only make sense of because syslog puts them in a logfile together with keepalived checker results.  This patch makes the output a bit more informative, by telling you which virtual service failed to find a destination.  Example output:  kernel: [1539214.552233] IPVS: wlc: TCP 192.168.8.30:22 - no destination available kernel: [1539299.674418] IPVS: wlc: FWM 22 0x00000016 - no destination available  I have tested the code for IPv4 and FWM services, as you can see from the example; I do not have an IPv6 setup to test the third code path with.  To avoid code duplication, I put a new function ip_vs_scheduler_err() into ip_vs_sched.c, and use that from the schedulers instead of calling IP_VS_ERR_RL directly.  Signed-off-by: Patrick Schaaf <netdev@bof.de> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_conn.c | s | 33K | 1142 | Pablo Neira Ayuso | pablo@netfilter.org | 1336498849 |  | ipvs: optimize the use of flags in ip_vs_bind_dest  	cp->flags is marked volatile but ip_vs_bind_dest can safely modify the flags, so save some CPU cycles by using temp variable.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_ctl.c | s | 93K | 3311 | Eric Dumazet | edumazet@google.com | 1340618829 |  | netfilter: ipvs: fix dst leak in __ip_vs_addr_is_local_v6  After call to ip6_route_output() we must release dst or we leak it.  Also should test dst->error, as ip6_route_output() never returns NULL.  Use boolean while we are at it.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip_vs_pe_sip.c | s | 4.3K | 141 | Rusty Russell | rusty@rustcorp.com.au | 1324351649 |  | net: fix assignment of 0/1 to bool variables.  DaveM said:    Please, this kind of stuff rots forever and not using bool properly    drives me crazy.  Joe Perches <joe@perches.com> gave me the spatch script:  	@@ 	bool b; 	@@ 	-b = 0 	+b = false 	@@ 	bool b; 	@@ 	-b = 1 	+b = true  I merely installed coccinelle, read the documentation and took credit.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_vs_pe.c | s | 3.0K | 113 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1290649379 |  | IPVS: Backup, Adding Version 1 receive capability  Functionality improvements  * flags  changed from 16 to 32 bits  * fwmark added (32 bits)  * timeout in sec. added (32 bits)  * pe data added (Variable length)  * IPv6 capabilities (3x16 bytes for addr.)  * Version and type in every conn msg.  ip_vs_process_message() now handles Version 1 messages and will call ip_vs_process_message_v0() for version 0 messages.  ip_vs_proc_conn() is common for both version, and handles the update of connection hash.  ip_vs_conn_fill_param_sync()    - Version 1 messages only ip_vs_conn_fill_param_sync_v0() - Version 0 messages only  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_proto.c | s | 8.8K | 345 | H Hartley Sweeten | hartleys@visionengravers.com | 1336498854 |  | ipvs: ip_vs_proto: local functions should not be exposed globally  Functions not referenced outside of a source file should be marked static to prevent it from being exposed globally.  This quiets the sparse warnings:  warning: symbol '__ipvs_proto_data_get' was not declared. Should it be static?  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_proto_tcp.c | s | 19K | 632 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1335775235 |  | ipvs: take care of return value from protocol init_netns  ip_vs_create_timeout_table() can return NULL All functions protocol init_netns is affected of this patch.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_xmit.c | s | 33K | 1181 | David S. Miller | davem@davemloft.net | 1325121560 |  | ipv6: Kill rt6i_dev and rt6i_expires defines.  It just obscures that the netdevice pointer and the expires value are implemented in the dst_entry sub-object of the ipv6 route.  And it makes grepping for dst_entry member uses much harder too.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_vs_wlc.c | s | 3.2K | 97 | Changli Gao | xiaosuo@gmail.com | 1298601341 |  | ipvs: unify the formula to estimate the overhead of processing connections  lc and wlc use the same formula, but lblc and lblcr use another one. There is no reason for using two different formulas for the lc variants.  The formula used by lc is used by all the lc variants in this patch.  Signed-off-by: Changli Gao <xiaosuo@gmail.com> Acked-by: Wensong Zhang <wensong@linux-vs.org> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_lblcr.c | s | 19K | 679 | Julian Anastasov | ja@ssi.bg | 1336498646 |  | ipvs: LBLCR scheduler does not need GFP_ATOMIC allocation on init  	Schedulers are initialized and bound to services only on commands.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_dh.c | s | 6.1K | 217 | Julian Anastasov | ja@ssi.bg | 1336498640 |  | ipvs: DH scheduler does not need GFP_ATOMIC allocation  	Schedulers are initialized and bound to services only on commands.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_app.c | s | 12K | 475 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_vs_proto_ah_esp.c | s | 4.0K | 146 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1294882228 |  | IPVS: netns, connection hash got net as param.  Connection hash table is now name space aware. i.e. net ptr >> 8 is xor:ed to the hash, and this is the first param to be compared. The net struct is 0xa40 in size ( a little bit smaller for 32 bit arch:s) and cache-line aligned, so a ptr >> 5 might be a more clever solution ?  All lookups where net is compared uses net_eq() which returns 1 when netns is disabled, and the compiler seems to do something clever in that case.  ip_vs_conn_fill_param() have *net as first param now.  Three new inlines added to keep conn struct smaller when names space is disabled. - ip_vs_conn_net() - ip_vs_conn_net_set() - ip_vs_conn_net_eq()  *v3   moved net compare to the end in "fast path"  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_ftp.c | s | 11K | 439 | H Hartley Sweeten | hartleys@visionengravers.com | 1336498852 |  | ipvs: ip_vs_ftp: local functions should not be exposed globally  Functions not referenced outside of a source file should be marked static to prevent it from being exposed globally.  This quiets the sparse warnings:  warning: symbol 'ip_vs_ftp_init' was not declared. Should it be static?  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | Kconfig | g | 10K |  | Linus Torvalds | torvalds@linux-foundation.org | 1326057682 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (53 commits)   Kconfig: acpi: Fix typo in comment.   misc latin1 to utf8 conversions   devres: Fix a typo in devm_kfree comment   btrfs: free-space-cache.c: remove extra semicolon.   fat: Spelling s/obsolate/obsolete/g   SCSI, pmcraid: Fix spelling error in a pmcraid_err() call   tools/power turbostat: update fields in manpage   mac80211: drop spelling fix   types.h: fix comment spelling for 'architectures'   typo fixes: aera -> area, exntension -> extension   devices.txt: Fix typo of 'VMware'.   sis900: Fix enum typo 'sis900_rx_bufer_status'   decompress_bunzip2: remove invalid vi modeline   treewide: Fix comment and string typo 'bufer'   hyper-v: Update MAINTAINERS   treewide: Fix typos in various parts of the kernel, and fix some comments.   clockevents: drop unknown Kconfig symbol GENERIC_CLOCKEVENTS_MIGR   gpio: Kconfig: drop unknown symbol 'CS5535_GPIO'   leds: Kconfig: Fix typo 'D2NET_V2'   sound: Kconfig: drop unknown symbol ARCH_CLPS7500   ...  Fix up trivial conflicts in arch/powerpc/platforms/40x/Kconfig (some new kconfig additions, close to removed commented-out old ones)
f | ip_vs_wrr.c | s | 5.5K | 194 | Julian Anastasov | ja@ssi.bg | 1336498642 |  | ipvs: WRR scheduler does not need GFP_ATOMIC allocation  	Schedulers are initialized and bound to services only on commands.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_sed.c | s | 3.9K | 121 | Patrick Schaaf | netdev@bof.de | 1297835613 |  | ipvs: make "no destination available" message more informative  When IP_VS schedulers do not find a destination, they output a terse "WLC: no destination available" message through kernel syslog, which I can not only make sense of because syslog puts them in a logfile together with keepalived checker results.  This patch makes the output a bit more informative, by telling you which virtual service failed to find a destination.  Example output:  kernel: [1539214.552233] IPVS: wlc: TCP 192.168.8.30:22 - no destination available kernel: [1539299.674418] IPVS: wlc: FWM 22 0x00000016 - no destination available  I have tested the code for IPv4 and FWM services, as you can see from the example; I do not have an IPv6 setup to test the third code path with.  To avoid code duplication, I put a new function ip_vs_scheduler_err() into ip_vs_sched.c, and use that from the schedulers instead of calling IP_VS_ERR_RL directly.  Signed-off-by: Patrick Schaaf <netdev@bof.de> Signed-off-by: Simon Horman <horms@verge.net.au>
f | ip_vs_proto_sctp.c | s | 38K | 1068 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1335775235 |  | ipvs: take care of return value from protocol init_netns  ip_vs_create_timeout_table() can return NULL All functions protocol init_netns is affected of this patch.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Acked-by: Julian Anastasov <ja@ssi.bg> Signed-off-by: Simon Horman <horms@verge.net.au>
