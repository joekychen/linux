f | fddi.c | s | 5.7K | 183 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fc.c | s | 3.3K | 118 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stp.c | s | 2.6K | 90 | Joe Perches | joe@perches.com | 1336610957 |  | 802: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 423B |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127796 |  | tokenring: delete all remaining driver support  This represents the mass deletion of the of the tokenring support.  It gets rid of:   - the net/tr.c which the drivers depended on   - the drivers/net component   - the Kbuild infrastructure around it   - any tokenring related CONFIG_ settings in any defconfigs   - the tokenring headers in the include/linux dir   - the firmware associated with the tokenring drivers.   - any associated token ring documentation.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | p8022.c | s | 1.9K | 60 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127275 |  | net: delete all instances of special processing for token ring  We are going to delete the Token ring support.  This removes any special processing in the core networking for token ring, (aside from net/tr.c itself), leaving the drivers and remaining tokenring support present but inert.  The mass removal of the drivers and net/tr.c will be in a separate commit, so that the history of these files that we still care about won't have the giant deletion tied into their history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | psnap.c | s | 3.5K | 139 | Eric Dumazet | eric.dumazet@gmail.com | 1306182564 |  | snap: remove one synchronize_net()  No need to wait for a rcu grace period after list insertion.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 68B |  | Patrick McHardy | kaber@trash.net | 1215318373 |  | net: Add GARP applicant-only participant  Add an implementation of the GARP (Generic Attribute Registration Protocol) applicant-only participant. This will be used by the following patch to add GVRP support to the VLAN code.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | p8023.c | s | 1.6K | 55 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | hippi.c | s | 5.9K | 199 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | garp.c | s | 17K | 560 | David Ward | david.ward@ll.mit.edu | 1334337033 |  | net/garp: fix GID rbtree ordering  The comparison operators were backwards in both garp_attr_lookup and garp_attr_create, so the entire GID rbtree was in reverse order. (There was no practical side effect to this though, except that PDUs were sent with attributes listed in reverse order, which is still valid by the protocol. This change is only for clarity.)  Signed-off-by: David Ward <david.ward@ll.mit.edu> Signed-off-by: David S. Miller <davem@davemloft.net>
