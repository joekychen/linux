f | driver-trace.h | s | 31K | 1313 | Ben Greear | greearb@candelatech.com | 1336528431 |  | mac80211: Framework to get wifi-driver stats via ethtool.  This adds hooks to call into the driver to get additional stats for the ethtool API.  Signed-off-by: Ben Greear <greearb@candelatech.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rate.c | s | 13K | 445 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | rc80211_minstrel_ht.h | s | 2.9K | 99 | John W. Linville | linville@tuxdriver.com | 1277408538 |  | minstrel_ht: move minstrel_mcs_groups declaration to header file  Signed-off-by: John W. Linville <linville@tuxdriver.com> Acked-by: Felix Fietkau <nbd@openwrt.org>
f | rc80211_minstrel.h | s | 2.3K | 87 | Zefir Kurtisi | zefir.kurtisi@neratec.com | 1306955549 |  | minstrel_ht: fixed rate mode through debugfs  Found several threads about fixed rate mode in minstrel_ht for test environments, but no patches for it.  This patch provides such a mode through debugfs.  Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wme.c | s | 4.4K | 165 | Johannes Berg | johannes.berg@intel.com | 1334084170 |  | mac80211: use IEEE80211_NUM_ACS  When comparing hw->queues to determine if the device is QoS capable, use IEEE80211_NUM_ACS instead of just 4.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | offchannel.c | s | 8.4K | 237 | Johannes Berg | johannes.berg@intel.com | 1338837926 |  | mac80211: clean up remain-on-channel on interface stop  When any interface goes down, it could be the one that we were doing a remain-on-channel with. We therefore need to cancel the remain-on-channel and flush the related work structs so they don't run after the interface has been removed or even destroyed.  It's also possible in this case that an off-channel SKB was never transmitted, so free it if this is the case. Note that this can also happen if the driver finishes the off-channel period without ever starting it.  Cc: stable@kernel.org Reported-by: Nirav Shah <nirav.j2.shah@intel.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs_netdev.h | s | 706B | 19 | Johannes Berg | johannes@sipsolutions.net | 1261438732 |  | mac80211: reduce reliance on netdev  For bluetooth 3, we will most likely not have a netdev for a virtual interface (sdata), so prepare for that by reducing the reliance on having a netdev. This patch moves the name and address fields into the sdata struct and uses them from there all over. Some work is needed to keep them sync'ed, but that's not a lot of work and in slow paths anyway.  In doing so, this also reduces the number of pointer dereferences in many places, because of things like sdata->dev->dev_addr becoming sdata->vif.addr.  Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | aes_ccm.h | s | 784B | 20 | Johannes Berg | johannes.berg@intel.com | 1310137884 |  | mac80211: use AES_BLOCK_SIZE  mac80211 has a defnition of AES_BLOCK_SIZE and multiple definitions of AES_BLOCK_LEN. Remove them all and use crypto/aes.h.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | sta_info.h | s | 18K | 502 | Ashok Nagarajan | ashok@cozybit.com | 1339502201 |  | mac80211: add missing kernel-doc  Add a few kernel-doc descriptions that were missed during mesh development.  Reported-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Ashok Nagarajan <ashok@cozybit.com> Acked-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Johannes Berg <johannes.berg@intel.com>
f | status.c | s | 19K | 574 | Joe Perches | joe@perches.com | 1336610958 |  | mac80211: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 1.3K |  | Javier Cardona | javier@cozybit.com | 1334085631 |  | mac80211: Implement mesh synchronization framework  This patch adds MBSS extensible synchronization framework (Sec. 13.13.2 of IEEE Std. 802.11-2012).  The framework is implemented via an ops table which defines the following functions:      rx_bcn_presp() - this is called every time a mesh beacon is received.     adjust_tbtt() - this is called immediately before a beacon is about to be transmitted.  The default neighbor offset synchronization defined in the standard is implemented.  We also provide template functions for vendor specific methods.  When neighbor offset synchronization is active (which is the default) mesh neighbors in the same MBSS will track timing offsets to each other and compensate clock drift.  In our tests we observed that this mesh synchronization implementation successfully corrected drifts between stations of ~2PPM while introducing a jitter of ~20us.  It is also possible to test this framework on mac80211_hwsim simulated phys to see how it behaves under different topologies, over poor links, etc.  Signed-off-by: Marco Porsch <marco.porsch@s2005.tu-chemnitz.de> Signed-off-by: Pavel Zubarev <pavel.zubarev@gmail.com> Signed-off-by: Javier Cardona <javier@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wep.h | s | 1.1K | 29 | Johannes Berg | johannes.berg@intel.com | 1331664856 |  | mac80211: move RX WEP weak IV counting  This is better done inside the WEP decrypt function where it doesn't have to check all the conditions any more since they've been tested already.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | iface.c | s | 40K | 1328 | Johannes Berg | johannes.berg@intel.com | 1338837926 |  | mac80211: clean up remain-on-channel on interface stop  When any interface goes down, it could be the one that we were doing a remain-on-channel with. We therefore need to cancel the remain-on-channel and flush the related work structs so they don't run after the interface has been removed or even destroyed.  It's also possible in this case that an off-channel SKB was never transmitted, so free it if this is the case. Note that this can also happen if the driver finishes the off-channel period without ever starting it.  Cc: stable@kernel.org Reported-by: Nirav Shah <nirav.j2.shah@intel.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | sta_info.c | s | 36K | 1197 | Arik Nemtsov | arik@wizery.com | 1338838014 |  | mac80211: fix non RCU-safe sta_list manipulation  sta_info_cleanup locks the sta_list using rcu_read_lock however the delete operation isn't rcu safe. A race between sta_info_cleanup timer being called and a STA being removed can occur which leads to a panic while traversing sta_list. Fix this by switching to the RCU-safe versions.  Cc: stable@vger.kernel.org Reported-by: Eyal Shapira <eyal@wizery.com> Signed-off-by: Arik Nemtsov <arik@wizery.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs_netdev.c | s | 18K | 587 | Ashok Nagarajan | ashok@cozybit.com | 1337189065 |  | mac80211: Add debugfs entry for mesh ht_opmode  Signed-off-by: Ashok Nagarajan <ashok@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | pm.c | s | 3.5K | 123 | Johannes Berg | johannes.berg@intel.com | 1334175829 |  | mac80211: add explicit monitor interface if needed  The queue mapping redesign that I'm planning to do will break pure injection unless we handle monitor interfaces explicitly. One possible option would be to have the driver tell mac80211 about monitor mode queues etc., but that would duplicate the API since we already need to have queue assignments handled per virtual interface.  So in order to solve this, have a virtual monitor interface that is added whenever all active vifs are monitors. We could also use the state of one of the monitor interfaces, but managing that would be complicated, so allocate separate state.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | mesh_pathtbl.c | s | 29K | 973 | Joe Perches | joe@perches.com | 1336610958 |  | mac80211: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | rc80211_pid.h | s | 7.7K | 223 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | tkip.h | s | 917B | 29 | Johannes Berg | johannes.berg@intel.com | 1310137879 |  | mac80211: fix TKIP races, make API easier to use  Our current TKIP code races against itself on TX since we can process multiple packets at the same time on different ACs, but they all share the TX context for TKIP. This can lead to bad IVs etc.  Also, the crypto offload helper code just obtains the P1K/P2K from the cache, and can update it as well, but there's no guarantee that packets are really processed in order.  To fix these issues, first introduce a spinlock that will protect the IV16/IV32 values in the TX context. This first step makes sure that we don't assign the same IV multiple times or get confused in other ways.  Secondly, change the way the P1K cache works. I add a field "p1k_iv32" that stores the value of the IV32 when the P1K was last recomputed, and if different from the last time, then a new P1K is recomputed. This can cause the P1K computation to flip back and forth if packets are processed out of order. All this also happens under the new spinlock.  Finally, because there are argument differences, split up the ieee80211_get_tkip_key() API into ieee80211_get_tkip_p1k() and ieee80211_get_tkip_p2k() and give them the correct arguments.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rc80211_pid_debugfs.c | s | 5.9K | 182 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | util.c | s | 44K | 1531 | Meenakshi Venkataraman | meenakshi.venkataraman@intel.com | 1338837896 |  | mac80211: fix error in station state transitions during reconfig  As part of hardware reconfig mac80211 tries to restore the station state to its values before the hardware reconfig, but it only goes to the last-state - 1. Fix this off-by-one error.  Cc: stable@kernel.org [3.4] Signed-off-by: Meenakshi Venkataraman <meenakshi.venkataraman@intel.com> Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | ibss.c | s | 33K | 1003 | John W. Linville | linville@tuxdriver.com | 1337714286 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
f | debugfs.h | s | 373B | 12 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | aes_ccm.c | s | 3.4K | 118 | Johannes Berg | johannes.berg@intel.com | 1310137884 |  | mac80211: use AES_BLOCK_SIZE  mac80211 has a defnition of AES_BLOCK_SIZE and multiple definitions of AES_BLOCK_LEN. Remove them all and use crypto/aes.h.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | tx.c | s | 75K | 2335 | Chun-Yeow Yeoh | yeohchunyeow@gmail.com | 1338837803 |  | mac80211: Fix Unreachable Mesh Station Problem when joining to another MBSS  Mesh station that joins an MBSS is reachable using mesh portal with 6 address frame by mesh stations from another MBSS if these two different MBSSes are bridged. However, if the mesh station later moves into the same MBSS of those mesh stations, it is unreachable by mesh stations in the MBSS due to the mpp_paths table is not deleted. A quick fix is to perform mesh_path_lookup, if it is available for the target destination, mpp_path_lookup is not performed. When the mesh station moves back to its original MBSS, the mesh_paths will be deleted once expired. So, it will be reachable using mpp_path_lookup again.  Signed-off-by: Chun-Yeow Yeoh <yeohchunyeow@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs_sta.c | s | 11K | 326 | John W. Linville | linville@tuxdriver.com | 1334252968 |  | Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless
f | driver-ops.h | s | 20K | 670 | Ben Greear | greearb@candelatech.com | 1336528431 |  | mac80211: Framework to get wifi-driver stats via ethtool.  This adds hooks to call into the driver to get additional stats for the ethtool API.  Signed-off-by: Ben Greear <greearb@candelatech.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | led.h | s | 2.1K | 69 | Johannes Berg | johannes.berg@intel.com | 1293046417 |  | mac80211: selective throughput LED trigger active  The throughput LED trigger was always active when the radio was enabled. In most cases that's likely the desired behaviour, but iwlwifi requires it to be only active when one of the virtual interfaces is actually "connected" in some way.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | scan.c | s | 26K | 845 | Joe Perches | joe@perches.com | 1336610958 |  | mac80211: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mesh_plink.c | s | 25K | 871 | Ashok Nagarajan | ashok@cozybit.com | 1337189065 |  | mac80211: Modify mesh_set_ht_prot_mode() to have less identation  Determining types of peers is modified to have less indentation. This change is suggested by Johannes. This patch also corrects the reference in comment to IEEE 802.11-2012 version.  Signed-off-by: Ashok Nagarajan <ashok@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | agg-tx.c | s | 26K | 764 | Johannes Berg | johannes.berg@intel.com | 1337186764 |  | mac80211: fix TX aggregation session timer  In commit 12d3952fc4a1cd96234bc7023bf7eefeb0bb6355 ("mac80211: optimize aggregation session timeout handling") two bugs were introduced:  1) RCU usage was completely broken since no locks are held  2) the timer must not rearm when agg session is stopping  Reported-and-tested-by: Larry Finger <Larry.Finger@lwfinger.net> Cc: Felix Fietkau <nbd@openwrt.org> Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs_key.c | s | 8.9K | 303 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | rc80211_minstrel_debugfs.c | s | 4.7K | 129 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | driver-trace.c | s | 230B | 8 | Johannes Berg | johannes@sipsolutions.net | 1249418605 |  | mac80211: fix sparse warnings/errors  sparse complains about a shadowed variable, which we can just rename, and lots of stuff if the API tracer is enabled, so kick out the tracer code in a sparse run -- the macros just confuse it.  Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | event.c | s | 913B | 26 | Johannes Berg | johannes@sipsolutions.net | 1247252509 |  | cfg80211: use proper allocation flags  Instead of hardcoding GFP_ATOMIC everywhere, add a new function parameter that gets the flags from the caller. Obviously then I need to update all callers (all of them in mac80211), and it turns out that now it's ok to use GFP_KERNEL in almost all places.  Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | michael.h | s | 573B | 18 | Harvey Harrison | harvey.harrison@gmail.com | 1215540961 |  | mac80211: remove ieee80211_get_hdr_info  Do the check for sufficient skb->len explicitly and pass a pointer to the struct ieee80211_hdr directly to the michael_mic calculation.  Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | cfg.c | s | 76K | 2472 | Eliad Peller | eliad@wizery.com | 1339575474 |  | mac80211: check sdata_running on ieee80211_set_bitrate_mask  Otherwise, we might call the driver callback before the interface was uploaded.  Solves the following warning: WARNING: at net/mac80211/driver-ops.h:12 ieee80211_set_bitrate_mask+0xbc/0x18c [mac80211]() wlan0:  Failed check-sdata-in-driver check, flags: 0x0 Modules linked in: wlcore_sdio wl12xx wl18xx wlcore mac80211 cfg80211 [last unloaded: cfg80211] [<c001b964>] (unwind_backtrace+0x0/0x12c) from [<c0495550>] (dump_stack+0x20/0x24) [<c0495550>] (dump_stack+0x20/0x24) from [<c003ee28>] (warn_slowpath_common+0x5c/0x74) [<c003ee28>] (warn_slowpath_common+0x5c/0x74) from [<c003eefc>] (warn_slowpath_fmt+0x40/0x48) [<c003eefc>] (warn_slowpath_fmt+0x40/0x48) from [<bf5c1ad0>] (ieee80211_set_bitrate_mask+0xbc/0x18c [mac80211]) [<bf5c1ad0>] (ieee80211_set_bitrate_mask+0xbc/0x18c [mac80211]) from [<bf575960>] (nl80211_set_tx_bitrate_mask+0x350/0x358 [cfg80211]) [<bf575960>] (nl80211_set_tx_bitrate_mask+0x350/0x358 [cfg80211]) from [<c03e9e94>] (genl_rcv_msg+0x1a8/0x1e8) [<c03e9e94>] (genl_rcv_msg+0x1a8/0x1e8) from [<c03e9164>] (netlink_rcv_skb+0x5c/0xc0) [<c03e9164>] (netlink_rcv_skb+0x5c/0xc0) from [<c03e9ce0>] (genl_rcv+0x28/0x34) [<c03e9ce0>] (genl_rcv+0x28/0x34) from [<c03e8e74>] (netlink_unicast+0x158/0x234) [<c03e8e74>] (netlink_unicast+0x158/0x234) from [<c03e93e0>] (netlink_sendmsg+0x218/0x298) [<c03e93e0>] (netlink_sendmsg+0x218/0x298) from [<c03b4e5c>] (sock_sendmsg+0xa4/0xc0) [<c03b4e5c>] (sock_sendmsg+0xa4/0xc0) from [<c03b5af4>] (__sys_sendmsg+0x1d8/0x254) [<c03b5af4>] (__sys_sendmsg+0x1d8/0x254) from [<c03b5ca8>] (sys_sendmsg+0x4c/0x70) [<c03b5ca8>] (sys_sendmsg+0x4c/0x70) from [<c0013980>] (ret_fast_syscall+0x0/0x3c)  Note that calling the driver can also result in undefined behaviour since it doesn't have to deal with calls while down.  Signed-off-by: Eliad Peller <eliad@wizery.com> [removed timestamps, added note - Johannes] Signed-off-by: Johannes Berg <johannes.berg@intel.com>
f | wep.c | s | 9.5K | 285 | Arik Nemtsov | arik@wizery.com | 1337186863 |  | mac80211: fix network header location when adding encryption headers  Update the location of the network header when adding encryption specific headers to a skb. This allows low-level drivers to use the (now correct) location of the network header.  Signed-off-by: Arik Nemtsov <arik@wizery.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | key.h | s | 3.9K | 129 | Johannes Berg | johannes.berg@intel.com | 1310582983 |  | mac80211: allow driver to disconnect after resume  In WoWLAN, devices may use crypto keys for TX/RX and could also implement GTK rekeying. If the driver isn't able to retrieve replay counters and similar information from the device upon resume, or if the device isn't responsive due to platform issues, it isn't safe to keep the connection up as GTK rekey messages from during the sleep time could be replayed against it.  The only protection against that is disconnecting from the AP. Modifying mac80211 to do that while it is resuming would be very complex and invasive in the case that the driver requires a reconfig, so do it after it has resumed completely. In that case, however, packets might be replayed since it can then only happen after TX/RX are up again, so mark keys for interfaces that need to disconnect as "tainted" and drop all packets that are sent or received with those keys.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | aes_cmac.c | s | 2.6K | 106 | Johannes Berg | johannes.berg@intel.com | 1310137884 |  | mac80211: use AES_BLOCK_SIZE  mac80211 has a defnition of AES_BLOCK_SIZE and multiple definitions of AES_BLOCK_LEN. Remove them all and use crypto/aes.h.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | mesh_hwmp.c | s | 32K | 1040 | John W. Linville | linville@tuxdriver.com | 1337714286 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
f | ieee80211_i.h | s | 45K | 1307 | David S. Miller | davem@davemloft.net | 1337032848 |  | Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
f | rc80211_minstrel_ht.c | s | 22K | 752 | Michal Kazior | michal.kazior@tieto.com | 1334341970 |  | mac80211: remove hw.conf.channel usage where possible  Removes hw.conf.channel usage from the following functions:  * ieee80211_mandatory_rates  * ieee80211_sta_get_rates  * ieee80211_frame_duration  * ieee80211_rts_duration  * ieee80211_ctstoself_duration  This is in preparation for multi-channel operation.  Signed-off-by: Michal Kazior <michal.kazior@tieto.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | cfg.h | s | 155B | 7 | Michael Wu | flamingice@sourmilk.net | 1192060354 |  | [MAC80211]: rename ieee80211_cfg.h to cfg.h  Might as well rename ieee80211_cfg.h to cfg.h to keep things consistent.  Signed-off-by: Michael Wu <flamingice@sourmilk.net> Signed-off-by: John W. Linville <linville@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | agg-rx.c | s | 11K | 305 | Felix Fietkau | nbd@openwrt.org | 1338837941 |  | mac80211: add missing rcu_read_lock/unlock in agg-rx session timer  Fixes a lockdep warning:  =================================================== [ INFO: suspicious rcu_dereference_check() usage. ] --------------------------------------------------- net/mac80211/agg-rx.c:148 invoked rcu_dereference_check() without protection!  other info that might help us debug this:  rcu_scheduler_active = 1, debug_locks = 1 1 lock held by arecord/11226:  #0:  (&tid_agg_rx->session_timer){+.-...}, at: [<ffffffff81066bb0>] call_timer_fn+0x0/0x360  stack backtrace: Pid: 11226, comm: arecord Not tainted 3.1.0-kml #16 Call Trace:  <IRQ>  [<ffffffff81093454>] lockdep_rcu_dereference+0xa4/0xc0  [<ffffffffa02778c9>] sta_rx_agg_session_timer_expired+0xc9/0x110 [mac80211]  [<ffffffffa0277800>] ? ieee80211_process_addba_resp+0x220/0x220 [mac80211]  [<ffffffff81066c3a>] call_timer_fn+0x8a/0x360  [<ffffffff81066bb0>] ? init_timer_deferrable_key+0x30/0x30  [<ffffffff81477bb0>] ? _raw_spin_unlock_irq+0x30/0x70  [<ffffffff81067049>] run_timer_softirq+0x139/0x310  [<ffffffff81091d5e>] ? put_lock_stats.isra.25+0xe/0x40  [<ffffffff810922ac>] ? lock_release_holdtime.part.26+0xdc/0x160  [<ffffffffa0277800>] ? ieee80211_process_addba_resp+0x220/0x220 [mac80211]  [<ffffffff8105cb78>] __do_softirq+0xc8/0x3c0  [<ffffffff8108f088>] ? tick_dev_program_event+0x48/0x110  [<ffffffff8108f16f>] ? tick_program_event+0x1f/0x30  [<ffffffff81153b15>] ? putname+0x35/0x50  [<ffffffff8147a43c>] call_softirq+0x1c/0x30  [<ffffffff81004c55>] do_softirq+0xa5/0xe0  [<ffffffff8105d1ee>] irq_exit+0xae/0xe0  [<ffffffff8147ac6b>] smp_apic_timer_interrupt+0x6b/0x98  [<ffffffff81479ab3>] apic_timer_interrupt+0x73/0x80  <EOI>  [<ffffffff8146aac6>] ? free_debug_processing+0x1a1/0x1d5  [<ffffffff81153b15>] ? putname+0x35/0x50  [<ffffffff8146ab2b>] __slab_free+0x31/0x2ca  [<ffffffff81477c3a>] ? _raw_spin_unlock_irqrestore+0x4a/0x90  [<ffffffff81253b8f>] ? __debug_check_no_obj_freed+0x15f/0x210  [<ffffffff81097054>] ? lock_release_nested+0x84/0xc0  [<ffffffff8113ec55>] ? kmem_cache_free+0x105/0x250  [<ffffffff81153b15>] ? putname+0x35/0x50  [<ffffffff81153b15>] ? putname+0x35/0x50  [<ffffffff8113ed8f>] kmem_cache_free+0x23f/0x250  [<ffffffff81153b15>] putname+0x35/0x50  [<ffffffff81146d8d>] do_sys_open+0x16d/0x1d0  [<ffffffff81146e10>] sys_open+0x20/0x30  [<ffffffff81478f42>] system_call_fastpath+0x16/0x1b  Reported-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: Felix Fietkau <nbd@openwrt.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | key.c | s | 18K | 581 | Johannes Berg | johannes.berg@intel.com | 1330369592 |  | mac80211: clean up asm/unaligned.h inclusion  Some files implicitly get this via mesh.h which itself doesn't need it, so move the inclusion into the right files. Some other files don't need it at all but include it, so remove it from there.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | chan.c | s | 2.9K | 115 | Johannes Berg | johannes.berg@intel.com | 1334084048 |  | mac80211: remove channel type argument from rate_update  The channel type argument to the rate_update() callback isn't really the correct way to give the rate control algorithm about the desired RX bandwidth of the peer.  Remove this argument, and instead update the STA capabilities with 20/40 appropriately. The SMPS update done by this callback works in the same way, so this makes the callback cleaner.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rc80211_minstrel.c | s | 15K | 496 | Michal Kazior | michal.kazior@tieto.com | 1334341970 |  | mac80211: remove hw.conf.channel usage where possible  Removes hw.conf.channel usage from the following functions:  * ieee80211_mandatory_rates  * ieee80211_sta_get_rates  * ieee80211_frame_duration  * ieee80211_rts_duration  * ieee80211_ctstoself_duration  This is in preparation for multi-channel operation.  Signed-off-by: Michal Kazior <michal.kazior@tieto.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rx.c | s | 85K | 2652 | Johannes Berg | johannes.berg@intel.com | 1340822893 |  | mac80211: correct behaviour on unrecognised action frames  When receiving an "individually addressed" action frame, the receiver is required to return it to the sender. mac80211 gets this wrong as it also returns group addressed (mcast) frames to the sender. Fix this and update the reference to the new 802.11 standards version since things were shuffled around significantly.  Cc: stable@kernel.org Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | work.c | s | 8.3K | 301 | Stanislaw Gruszka | sgruszka@redhat.com | 1334341910 |  | mac80211: protect ->scanning by mutex in ieee80211_work_work()  Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | ht.c | s | 12K | 337 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | debugfs_key.h | s | 1.1K | 31 | Johannes Berg | johannes.berg@intel.com | 1292271809 |  | mac80211: support separate default keys  Add support for split default keys (unicast and multicast) in mac80211.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | tkip.c | s | 11K | 321 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | rc80211_pid_algo.c | s | 14K | 411 | Rusty Russell | rusty@rustcorp.com.au | 1324351649 |  | net: fix assignment of 0/1 to bool variables.  DaveM said:    Please, this kind of stuff rots forever and not using bool properly    drives me crazy.  Joe Perches <joe@perches.com> gave me the spatch script:  	@@ 	bool b; 	@@ 	-b = 0 	+b = false 	@@ 	bool b; 	@@ 	-b = 1 	+b = true  I merely installed coccinelle, read the documentation and took credit.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | wpa.h | s | 1.1K | 31 | Yoni Divinsky | yoni.divinsky@ti.com | 1326744076 |  | mac80211: fix tx->skb NULL pointer dereference  In function ieee80211_tx_h_encrypt the var info was initialized from tx->skb, since the fucntion is called after the function ieee80211_tx_h_fragment tx->skb is not valid anymore.  Signed-off-by: Yoni Divinsky <yoni.divinsky@ti.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs_sta.h | s | 427B | 11 | Johannes Berg | johannes@sipsolutions.net | 1204835446 |  | mac80211: RCU-ify STA info structure access  This makes access to the STA hash table/list use RCU to protect against freeing of items. However, it's not a true RCU, the copy step is missing: whenever somebody changes a STA item it is simply updated. This is an existing race condition that is now somewhat understandable.  This patch also fixes the race key freeing vs. STA destruction by making sure that sta_info_destroy() is always called under RTNL and frees the key.  Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debugfs.c | s | 11K | 306 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 7.6K |  | Javier Cardona | javier@cozybit.com | 1334085631 |  | mac80211: Implement mesh synchronization framework  This patch adds MBSS extensible synchronization framework (Sec. 13.13.2 of IEEE Std. 802.11-2012).  The framework is implemented via an ops table which defines the following functions:      rx_bcn_presp() - this is called every time a mesh beacon is received.     adjust_tbtt() - this is called immediately before a beacon is about to be transmitted.  The default neighbor offset synchronization defined in the standard is implemented.  We also provide template functions for vendor specific methods.  When neighbor offset synchronization is active (which is the default) mesh neighbors in the same MBSS will track timing offsets to each other and compensate clock drift.  In our tests we observed that this mesh synchronization implementation successfully corrected drifts between stations of ~2PPM while introducing a jitter of ~20us.  It is also possible to test this framework on mac80211_hwsim simulated phys to see how it behaves under different topologies, over poor links, etc.  Signed-off-by: Marco Porsch <marco.porsch@s2005.tu-chemnitz.de> Signed-off-by: Pavel Zubarev <pavel.zubarev@gmail.com> Signed-off-by: Javier Cardona <javier@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rc80211_minstrel_ht_debugfs.c | s | 3.3K | 102 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | michael.c | s | 2.2K | 73 | Harvey Harrison | harvey.harrison@gmail.com | 1215540961 |  | mac80211: remove ieee80211_get_hdr_info  Do the check for sufficient skb->len explicitly and pass a pointer to the struct ieee80211_hdr directly to the michael_mic calculation.  Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | mlme.c | s | 98K | 2949 | Eliad Peller | eliad@wizery.com | 1340307865 |  | mac80211: clear ifmgd->bssid only after building DELBA  ieee80211_set_disassoc() clears ifmgd->bssid before building DELBA frames, resulting in frames with invalid bssid ("00:00:00:00:00:00").  Fix it by clearing ifmgd->bssid only after building all the needed frames.  After this change, we no longer need to save the bssid (before clearing it), so remove the local array.  Reported-by: Ido Yariv <ido@wizery.com> Cc: stable@vger.kernel.org Signed-off-by: Eliad Peller <eliad@wizery.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com>
f | mesh.c | s | 22K | 678 | John W. Linville | linville@tuxdriver.com | 1337714286 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next
f | mesh_sync.c | s | 9.2K | 272 | Javier Cardona | javier@cozybit.com | 1335209861 |  | mac80211: fixup for mesh TSF adjustment latency in Toffset setpoint  The original patch defined the correction margin but did not apply it.  Signed-off-by: Shinichi Hotori <hotorinn@gmail.com> Signed-off-by: Yu Niiro <yu.niiro@gmail.com> Signed-off-by: Javier Cardona <javier@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rate.h | s | 4.2K | 136 | Johannes Berg | johannes.berg@intel.com | 1334084048 |  | mac80211: notify driver of rate control updates  Devices that have internal rate control need to be notified when the bandwidth or SMPS state changes just like external rate control algorithms get a notification now.  Add this notification and clarify the change bits while at it, the HT_CHANGED bit really meant only bandwidth changed.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wpa.c | s | 17K | 550 | Arik Nemtsov | arik@wizery.com | 1337186863 |  | mac80211: fix network header location when adding encryption headers  Update the location of the network header when adding encryption specific headers to a skb. This allows low-level drivers to use the (now correct) location of the network header.  Signed-off-by: Arik Nemtsov <arik@wizery.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | mesh.h | s | 12K | 334 | Andrei Emeltchenko | andrei.emeltchenko@intel.com | 1335293770 |  | mac80211: Adds clean sdata helper  Adds hepler to clean sdata ieee80211_clean_sdata similar way as ieee80211_setup_sdata is implemented. The function will be used by other interfaces later.  Signed-off-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | main.c | s | 29K | 927 | Johannes Berg | johannes.berg@intel.com | 1337186798 |  | mac80211: (selectively) add HT details in radiotap  Add a flag for the HT format (mixed vs. greenfield) to allow drivers to report that on receive. Not all drivers will do that though, so allow drivers to set which radiotap MCS details they report.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | spectmgmt.c | s | 2.8K | 73 | Joe Perches | joe@perches.com | 1315943102 |  | mac80211: Remove unnecessary OOM logging messages  Removing unnecessary messages saves code and text.  Site specific OOM messages are duplications of a generic MM out of memory message and aren't really useful, so just delete them.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wme.h | s | 742B | 21 | Johannes Berg | johannes.berg@intel.com | 1334084046 |  | mac80211: make ieee80211_downgrade_queue static  There's no reason for it to not be static.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | led.c | s | 7.9K | 255 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103830 |  | net: Add export.h for EXPORT_SYMBOL/THIS_MODULE to non-modules  These files are non modular, but need to export symbols using the macros now living in export.h -- call out the include so that things won't break when we remove the implicit presence of module.h from everywhere.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | aes_cmac.h | s | 574B | 15 | Johannes Berg | johannes.berg@intel.com | 1310137880 |  | mac80211: fix CMAC races  Just like TKIP and CCMP, CMAC has the PN race. It might not actually be possible to hit it now since there aren't multiple ACs for management frames, but fix it anyway.  Also move scratch buffers onto the stack.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
