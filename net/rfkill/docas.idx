f | rfkill-regulator.c | s | 3.7K | 127 | Rusty Russell | rusty@rustcorp.com.au | 1324351649 |  | net: fix assignment of 0/1 to bool variables.  DaveM said:    Please, this kind of stuff rots forever and not using bool properly    drives me crazy.  Joe Perches <joe@perches.com> gave me the spatch script:  	@@ 	bool b; 	@@ 	-b = 0 	+b = false 	@@ 	bool b; 	@@ 	-b = 1 	+b = true  I merely installed coccinelle, read the documentation and took credit.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | input.c | s | 8.8K | 302 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103829 |  | net: add moduleparam.h for users of module_param/MODULE_PARM_DESC  These files were getting access to these two via the implicit presence of module.h everywhere.  They aren't modules, so they don't need the full module.h inclusion though.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | Makefile | g | 237B |  | Rhyland Klein | rklein@nvidia.com | 1305827634 |  | net: rfkill: add generic gpio rfkill driver  This adds a new generic gpio rfkill driver to support rfkill switches which are controlled by gpios. The driver also supports passing in data about the clock for the radio, so that when rfkill is blocking, it can disable the clock.  This driver assumes platform data is passed from the board files to configure it for specific devices.  Original-patch-by: Anantha Idapalapati <aidapalapati@nvidia.com> Signed-off-by: Rhyland Klein <rklein@nvidia.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rfkill.h | s | 740B | 22 | Johannes Berg | johannes@sipsolutions.net | 1244052373 |  | rfkill: rewrite  This patch completely rewrites the rfkill core to address the following deficiencies:   * all rfkill drivers need to implement polling where necessary    rather than having one central implementation   * updating the rfkill state cannot be done from arbitrary    contexts, forcing drivers to use schedule_work and requiring    lots of code   * rfkill drivers need to keep track of soft/hard blocked    internally -- the core should do this   * the rfkill API has many unexpected quirks, for example being    asymmetric wrt. alloc/free and register/unregister   * rfkill can call back into a driver from within a function the    driver called -- this is prone to deadlocks and generally    should be avoided   * rfkill-input pointlessly is a separate module   * drivers need to #ifdef rfkill functions (unless they want to    depend on or select RFKILL) -- rfkill should provide inlines    that do nothing if it isn't compiled in   * the rfkill structure is not opaque -- drivers need to initialise    it correctly (lots of sanity checking code required) -- instead    force drivers to pass the right variables to rfkill_alloc()   * the documentation is hard to read because it always assumes the    reader is completely clueless and contains way TOO MANY CAPS   * the rfkill code needlessly uses a lot of locks and atomic    operations in locked sections   * fix LED trigger to actually change the LED when the radio state    changes -- this wasn't done before  Tested-by: Alan Jenkins <alan-jenkins@tuffmail.co.uk> Signed-off-by: Henrique de Moraes Holschuh <hmh@hmh.eng.br> [thinkpad] Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | core.c | s | 29K | 1023 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | rfkill-gpio.c | s | 6.0K | 192 | Julia Lawall | julia@diku.dk | 1325705446 |  | net/rfkill/rfkill-gpio.c: introduce missing kfree  Error handling code following a kmalloc should free the allocated data. The label fail_alloc already does this for rfkill.  A simplified version of the semantic match that finds the problem is as follows: (http://coccinelle.lip6.fr)  // <smpl> @r exists@ local idexpression x; statement S; identifier f1; position p1,p2; expression *ptr != NULL; @@  x@p1 = \(kmalloc\||kzalloc\||kcalloc\)(...); ... if (x == NULL) S <... when != x      when != if (...) { <+...x...+> } x->f1 ...> (  return \(0\||<+...x...+>\||ptr\); ||  return@p2 ...; )  @script:python@ p1 << r.p1; p2 << r.p2; @@  print "* file: %s kmalloc %s return %s" % (p1[0].file,p1[0].line,p2[0].line) // </smpl>  Signed-off-by: Julia Lawall <julia@diku.dk> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Kconfig | g | 1.2K |  | Rhyland Klein | rklein@nvidia.com | 1305827634 |  | net: rfkill: add generic gpio rfkill driver  This adds a new generic gpio rfkill driver to support rfkill switches which are controlled by gpios. The driver also supports passing in data about the clock for the radio, so that when rfkill is blocking, it can disable the clock.  This driver assumes platform data is passed from the board files to configure it for specific devices.  Original-patch-by: Anantha Idapalapati <aidapalapati@nvidia.com> Signed-off-by: Rhyland Klein <rklein@nvidia.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
