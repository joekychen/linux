f | ip6_tables.c | s | 58K | 2065 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 1.1K |  | Pablo Neira Ayuso | pablo@netfilter.org | 1336501542 |  | netfilter: remove ip_queue support  This patch removes ip_queue support which was marked as obsolete years ago. The nfnetlink_queue modules provides more advanced user-space packet queueing mechanism.  This patch also removes capability code included in SELinux that refers to ip_queue. Otherwise, we break compilation.  Several warning has been sent regarding this to the mailing list in the past month without anyone rising the hand to stop this with some strong argument.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6t_ipv6header.c | s | 3.5K | 131 | Jan Engelhardt | jengelh@medozas.de | 1273595617 |  | netfilter: xtables: deconstify struct xt_action_param for matches  In future, layer-3 matches will be an xt module of their own, and need to set the fragoff and thoff fields. Adding more pointers would needlessy increase memory requirements (esp. so for 64-bit, where pointers are wider).  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | ip6table_raw.c | s | 2.1K | 72 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | nf_conntrack_l3proto_ipv6.c | s | 10K | 346 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6t_REJECT.c | s | 6.7K | 227 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_proto_icmpv6.c | s | 10K | 314 | David S. Miller | davem@davemloft.net | 1333355623 |  | netfilter: ipv6: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6t_mh.c | s | 2.3K | 80 | Jan Engelhardt | jengelh@medozas.de | 1273595727 |  | netfilter: xtables: change hotdrop pointer to direct modification  Since xt_action_param is writable, let's use it. The pointer to 'bool hotdrop' always worried (8 bytes (64-bit) to write 1 byte!). Surprisingly results in a reduction in size:     text    data     bss filename 5457066  692730  357892 vmlinux.o-prev 5456554  692730  357892 vmlinux.o  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nf_conntrack_reasm.c | s | 15K | 548 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6t_frag.c | s | 3.9K | 120 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1336560827 |  | netfilter: ip6_tables: add flags parameter to ipv6_find_hdr()  This patch adds the flags parameter to ipv6_find_hdr. This flags allows us to:  * know if this is a fragment. * stop at the AH header, so the information contained in that header   can be used for some specific packet handling.  This patch also adds the offset parameter for inspection of one inner IPv6 header that is contained in error messages.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6t_rt.c | s | 5.8K | 198 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1336560827 |  | netfilter: ip6_tables: add flags parameter to ipv6_find_hdr()  This patch adds the flags parameter to ipv6_find_hdr. This flags allows us to:  * know if this is a fragment. * stop at the AH header, so the information contained in that header   can be used for some specific packet handling.  This patch also adds the offset parameter for inspection of one inner IPv6 header that is contained in error messages.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6t_rpfilter.c | s | 3.4K | 111 | Florian Westphal | fw@strlen.de | 1323772483 |  | netfilter: add ipv6 reverse path filter match  This is not merged with the ipv4 match into xt_rpfilter.c to avoid ipv6 module dependency issues.  Signed-off-by: Florian Westphal <fw@strlen.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | Kconfig | g | 5.7K |  | Pablo Neira Ayuso | pablo@netfilter.org | 1336501542 |  | netfilter: remove ip_queue support  This patch removes ip_queue support which was marked as obsolete years ago. The nfnetlink_queue modules provides more advanced user-space packet queueing mechanism.  This patch also removes capability code included in SELinux that refers to ip_queue. Otherwise, we break compilation.  Several warning has been sent regarding this to the mailing list in the past month without anyone rising the hand to stop this with some strong argument.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6t_eui64.c | s | 1.8K | 60 | Jan Engelhardt | jengelh@medozas.de | 1273595727 |  | netfilter: xtables: change hotdrop pointer to direct modification  Since xt_action_param is writable, let's use it. The pointer to 'bool hotdrop' always worried (8 bytes (64-bit) to write 1 byte!). Surprisingly results in a reduction in size:     text    data     bss filename 5457066  692730  357892 vmlinux.o-prev 5456554  692730  357892 vmlinux.o  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nf_defrag_ipv6_hooks.c | s | 3.4K | 116 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | ip6t_ah.c | s | 3.1K | 103 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1336560827 |  | netfilter: ip6_tables: add flags parameter to ipv6_find_hdr()  This patch adds the flags parameter to ipv6_find_hdr. This flags allows us to:  * know if this is a fragment. * stop at the AH header, so the information contained in that header   can be used for some specific packet handling.  This patch also adds the offset parameter for inspection of one inner IPv6 header that is contained in error messages.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6table_filter.c | s | 2.9K | 88 | Rusty Russell | rusty@rustcorp.com.au | 1332470177 |  | netfilter: remove forward module param confusion.  It used to be an int, and it got changed to a bool parameter at least 7 years ago.  It happens that NF_ACCEPT and NF_DROP are 0 and 1, so this works, but it's unclear, and the check that it's in range is not required.  Reported-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6table_mangle.c | s | 4.0K | 122 | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6t_hbh.c | s | 5.0K | 187 | Hans Schillstrom | hans.schillstrom@ericsson.com | 1336560827 |  | netfilter: ip6_tables: add flags parameter to ipv6_find_hdr()  This patch adds the flags parameter to ipv6_find_hdr. This flags allows us to:  * know if this is a fragment. * stop at the AH header, so the information contained in that header   can be used for some specific packet handling.  This patch also adds the offset parameter for inspection of one inner IPv6 header that is contained in error messages.  Signed-off-by: Hans Schillstrom <hans.schillstrom@ericsson.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | ip6table_security.c | s | 2.8K | 87 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
