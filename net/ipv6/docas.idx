f | af_inet6.c | s | 29K | 1095 | Eric Dumazet | edumazet@google.com | 1337322253 |  | ipv6: bool conversions phase1  ipv6_opt_accepted() returns a bool, and can use const pointers  ipv6_addr_equal(), ipv6_addr_any(), ipv6_addr_loopback(), ipv6_addr_orchid() return a bool.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | udp.c | s | 38K | 1353 | Jeffrin Jose | ahiliation@yahoo.co.in | 1337466897 |  | net:ipv6:fixed space issues relating to operators.  Fixed space issues relating to operators found by checkpatch.pl tool in net/ipv6/udp.c  Signed-off-by: Jeffrin Jose <ahiliation@yahoo.co.in> Signed-off-by: David S. Miller <davem@davemloft.net>
f | udp_impl.h | s | 1.4K | 33 | David S. Miller | davem@davemloft.net | 1254352340 |  | net: Make setsockopt() optlen be unsigned.  This provides safety against negative optlen at the type level instead of depending upon (sometimes non-trivial) checks against this sprinkled all over the the place, in each and every implementation.  Based upon work done by Arjan van de Ven and feedback from Linus Torvalds.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 1.4K |  | YOSHIFUJI Hideaki | yoshfuji@linux-ipv6.org | 1207402418 |  | [IPV6] MROUTE: Support multicast forwarding.  Based on ancient patch by Mickael Hoerdt <hoerdt@clarinet.u-strasbg.fr>, which is available at <http://www-r2.u-strasbg.fr/~hoerdt/dev/linux_ipv6_mforwarding/patch-linux-ipv6-mforwarding-0.1a>.  Signed-off-by: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
f | sit.c | s | 29K | 1120 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv6: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv6: " to appropriate files.  Convert printk(KERN_<LEVEL> to pr_<level> (but not KERN_DEBUG). Standardize on "%s: " not "%s(): " when emitting __func__. Use "%s: ", __func__ instead of embedding function name. Coalesce formats, align arguments.  ADDRCONF output is now prefixed with "IPv6: "  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sysctl_net_ipv6.c | s | 3.3K | 120 | Eric W. Biederman | ebiederm@xmission.com | 1334971350 |  | net: Delete all remaining instances of ctl_path  We don't use struct ctl_path anymore so delete the exported constants.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_ipv6.c | s | 54K | 1815 | Neal Cardwell | ncardwell@google.com | 1340665519 |  | tcp: heed result of security_inet_conn_request() in tcp_v6_conn_request()  If security_inet_conn_request() returns non-zero then TCP/IPv6 should drop the request, just as in TCP/IPv4 and DCCP in both IPv4 and IPv6.  Signed-off-by: Neal Cardwell <ncardwell@google.com> Acked-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | icmp.c | s | 21K | 825 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | reassembly.c | s | 19K | 654 | Eric Dumazet | edumazet@google.com | 1337466897 |  | ipv6: use skb coalescing in reassembly  ip6_frag_reasm() can use skb_try_coalesce() to build optimized skb, reducing memory used by them (truesize), and reducing number of cache line misses and overhead for the consumer.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Alexander Duyck <alexander.h.duyck@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | proc.c | s | 10K | 296 | Eric Dumazet | eric.dumazet@gmail.com | 1326862578 |  | ipv6: fix per device IP snmp counters  In commit 4ce3c183fca (snmp: 64bit ipstats_mib for all arches), I forgot to change the /proc/net/dev_snmp6/xxx output for IP counters.  percpu array is 64bit per counter but the folding still used the 'long' variant, and output garbage on 32bit arches.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_state.c | s | 4.6K | 175 | Alexey Dobriyan | adobriyan@gmail.com | 1321998212 |  | net: remove ipv6_addr_copy()  C assignment can handle struct in6_addr copying.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_policy.c | s | 8.5K | 302 | Eric W. Biederman | ebiederm@xmission.com | 1334971350 |  | net: Convert all sysctl registrations to register_net_sysctl  This results in code with less boiler plate that is a bit easier to read.  Additionally stops us from using compatibility code in the sysctl core, hastening the day when the compatibility code can be removed.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Pavel Emelyanov <xemul@parallels.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | addrlabel.c | s | 13K | 522 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ndisc.c | s | 44K | 1582 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipv6_sockglue.c | s | 27K | 1140 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet6_connection_sock.c | s | 6.8K | 214 | Alex Copot | alex.mihai.c@gmail.com | 1334431735 |  | tcp: bind() use stronger condition for bind_conflict  We must try harder to get unique (addr, port) pairs when doing port autoselection for sockets with SO_REUSEADDR option set.  We achieve this by adding a relaxation parameter to inet_csk_bind_conflict. When 'relax' parameter is off we return a conflict whenever the current searched pair (addr, port) is not unique.  This tries to address the problems reported in patch: 	8d238b25b1ec22a73b1c2206f111df2faaff8285 	Revert "tcp: bind() fix when many ports are bound"  Tests where ran for creating and binding(0) many sockets on 100 IPs. The results are, on average:  	* 60000 sockets, 600 ports / IP: 		* 0.210 s, 620 (IP, port) duplicates without patch 		* 0.219 s, no duplicates with patch 	* 100000 sockets, 1000 ports / IP: 		* 0.371 s, 1720 duplicates without patch 		* 0.373 s, no duplicates with patch 	* 200000 sockets, 2000 ports / IP: 		* 0.766 s, 6900 duplicates without patch 		* 0.768 s, no duplicates with patch 	* 500000 sockets, 5000 ports / IP: 		* 2.227 s, 41500 duplicates without patch 		* 2.284 s, no duplicates with patch  Signed-off-by: Alex Copot <alex.mihai.c@gmail.com> Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | anycast.c | s | 10K | 444 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_mode_tunnel.c | s | 3.0K | 97 | Eric Dumazet | eric.dumazet@gmail.com | 1330033845 |  | ipsec: be careful of non existing mac headers  Niccolo Belli reported ipsec crashes in case we handle a frame without mac header (atm in his case)  Before copying mac header, better make sure it is present.  Bugzilla reference:  https://bugzilla.kernel.org/show_bug.cgi?id=42809  Reported-by: Niccolò Belli <darkbasic@linuxsystems.it> Tested-by: Niccolò Belli <darkbasic@linuxsystems.it> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet6_hashtables.c | s | 8.1K | 270 | David S. Miller | davem@davemloft.net | 1312680799 |  | net: Compute protocol sequence numbers and fragment IDs using MD5.  Computers have become a lot faster since we compromised on the partial MD4 hash which we use currently for performance reasons.  MD5 is a much safer choice, and is inline with both RFC1948 and other ISS generators (OpenBSD, Solaris, etc.)  Furthermore, only having 24-bits of the sequence number be truly unpredictable is a very serious limitation.  So the periodic regeneration and 8-bit counter have been removed.  We compute and use a full 32-bit sequence number.  For ipv6, DCCP was found to use a 32-bit truncated initial sequence number (it needs 43-bits) and that is fixed here as well.  Reported-by: Dan Kaminsky <dan@doxpara.com> Tested-by: Willy Tarreau <w@1wt.eu> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_mode_ro.c | s | 2.3K | 73 | Herbert Xu | herbert@gondor.apana.org.au | 1201560832 |  | [IPSEC]: Make x->lastused an unsigned long  Currently x->lastused is u64 which means that it cannot be read/written atomically on all architectures.  David Miller observed that the value stored in it is only an unsigned long which is always atomic.  So based on his suggestion this patch changes the internal representation from u64 to unsigned long while the user-interface still refers to it as u64.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | addrconf_core.c | s | 2.5K | 66 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ah6.c | s | 17K | 617 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | esp6.c | s | 15K | 554 | Benjamin Poirier | bpoirier@suse.de | 1338095309 |  | xfrm: take net hdr len into account for esp payload size calculation  Corrects the function that determines the esp payload size. The calculations done in esp{4,6}_get_mtu() lead to overlength frames in transport mode for certain mtu values and suboptimal frames for others.  According to what is done, mainly in esp{,6}_output() and tcp_mtu_to_mss(), net_header_len must be taken into account before doing the alignment calculation.  Signed-off-by: Benjamin Poirier <bpoirier@suse.de> Signed-off-by: David S. Miller <davem@davemloft.net>
d | netfilter |  | 20 items |  | Joe Perches | joe@perches.com | 1337103903 |  | net: Convert net_ratelimit uses to net_<level>_ratelimited  Standardize the net core ratelimited logging functions.  Coalesce formats, align arguments. Change a printk then vprintk sequence to use printf extension %pV.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_output.c | s | 42K | 1461 | Vincent Bernat | bernat@luffy.cx | 1339105856 |  | snmp: fix OutOctets counter to include forwarded datagrams  RFC 4293 defines ipIfStatsOutOctets (similar definition for ipSystemStatsOutOctets):     The total number of octets in IP datagrams delivered to the lower    layers for transmission.  Octets from datagrams counted in    ipIfStatsOutTransmits MUST be counted here.  And ipIfStatsOutTransmits:     The total number of IP datagrams that this entity supplied to the    lower layers for transmission.  This includes datagrams generated    locally and those forwarded by this entity.  Therefore, IPSTATS_MIB_OUTOCTETS must be incremented when incrementing IPSTATS_MIB_OUTFORWDATAGRAMS.  IP_UPD_PO_STATS is not used since ipIfStatsOutRequests must not include forwarded datagrams:     The total number of IP datagrams that local IP user-protocols    (including ICMP) supplied to IP in requests for transmission.  Note    that this counter does not include any datagrams counted in    ipIfStatsOutForwDatagrams.  Signed-off-by: Vincent Bernat <bernat@luffy.cx> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipcomp6.c | s | 5.4K | 193 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv4 and ipv6: Convert printk(KERN_DEBUG to pr_debug  Use the current debugging style and enable dynamic_debug.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_tunnel.c | s | 36K | 1345 | Eric Dumazet | edumazet@google.com | 1337322253 |  | ipv6: bool conversions phase1  ipv6_opt_accepted() returns a bool, and can use const pointers  ipv6_addr_equal(), ipv6_addr_any(), ipv6_addr_loopback(), ipv6_addr_orchid() return a bool.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | datagram.c | s | 20K | 730 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mcast.c | s | 62K | 2301 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fib6_rules.c | s | 6.9K | 252 | Eldad Zack | eldad@fogrefinery.com | 1333355626 |  | net/ipv6/fib6_rules.c: Checkpatch cleanup  fib6_rules.c:26: ERROR: open brace '{' following struct go on the same line  Signed-off-by: Eldad Zack <eldad@fogrefinery.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_mode_beet.c | s | 3.2K | 107 | Eric Dumazet | eric.dumazet@gmail.com | 1330033845 |  | ipsec: be careful of non existing mac headers  Niccolo Belli reported ipsec crashes in case we handle a frame without mac header (atm in his case)  Before copying mac header, better make sure it is present.  Bugzilla reference:  https://bugzilla.kernel.org/show_bug.cgi?id=42809  Reported-by: Niccolò Belli <darkbasic@linuxsystems.it> Tested-by: Niccolò Belli <darkbasic@linuxsystems.it> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_input.c | s | 7.9K | 289 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mip6.c | s | 13K | 443 | Eldad Zack | eldad@fogrefinery.com | 1337284191 |  | ipv6: correct the ipv6 option name - Pad0 to Pad1  The padding destination or hop-by-hop option is called Pad1 and not Pad0.  See RFC2460 (4.2) or the IANA ipv6-parameters registry: http://www.iana.org/assignments/ipv6-parameters/ipv6-parameters.xml  Signed-off-by: Eldad Zack <eldad@fogrefinery.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | exthdrs_core.c | s | 3.4K | 103 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | protocol.c | s | 1.6K | 45 | Eric Dumazet | eric.dumazet@gmail.com | 1288204651 |  | net: add __rcu annotations to protocol  Add __rcu annotations to :         struct net_protocol *inet_protos         struct net_protocol *inet6_protos  And use appropriate casts to reduce sparse warnings if CONFIG_SPARSE_RCU_POINTER=y  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_input.c | s | 3.0K | 119 | Jan Engelhardt | jengelh@medozas.de | 1269529249 |  | netfilter: ipv6: use NFPROTO values for NF_HOOK invocation  The semantic patch that was used: // <smpl> @@ @@ (NF_HOOK ||NF_HOOK_THRESH ||nf_hook )( -PF_INET6, +NFPROTO_IPV6,  ...) // </smpl>  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | route.c | s | 74K | 2626 | Thomas Graf | tgraf@suug.ch | 1340069930 |  | ipv6: Move ipv6 proc file registration to end of init order  /proc/net/ipv6_route reflects the contents of fib_table_hash. The proc handler is installed in ip6_route_net_init() whereas fib_table_hash is allocated in fib6_net_init() _after_ the proc handler has been installed.  This opens up a short time frame to access fib_table_hash with its pants down.  Move the registration of the proc files to a later point in the init order to avoid the race.  Tested :-)  Signed-off-by: Thomas Graf <tgraf@suug.ch> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tunnel6.c | s | 4.6K | 150 | Joe Perches | joe@perches.com | 1337144463 |  | net: ipv6: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv6: " to appropriate files.  Convert printk(KERN_<LEVEL> to pr_<level> (but not KERN_DEBUG). Standardize on "%s: " not "%s(): " when emitting __func__. Use "%s: ", __func__ instead of embedding function name. Coalesce formats, align arguments.  ADDRCONF output is now prefixed with "IPv6: "  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 6.9K |  | Jan Beulich | JBeulich@suse.com | 1337102014 |  | xfrm: make xfrm_algo.c a module  By making this a standalone config option (auto-selected as needed), selecting CRYPTO from here rather than from XFRM (which is boolean) allows the core crypto code to become a module again even when XFRM=y.  Signed-off-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_mode_transport.c | s | 2.3K | 74 | Herbert Xu | herbert@gondor.apana.org.au | 1192060554 |  | [IPSEC]: Use IPv6 calling convention as the convention for x->mode->output  The IPv6 calling convention for x->mode->output is more general and could help an eventual protocol-generic x->type->output implementation.  This patch adopts it for IPv4 as well and modifies the IPv4 type output functions accordingly.  It also rewrites the IPv6 mac/transport header calculation to be based off the network header where practical.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6mr.c | s | 50K | 1921 | Vincent Bernat | bernat@luffy.cx | 1339105856 |  | snmp: fix OutOctets counter to include forwarded datagrams  RFC 4293 defines ipIfStatsOutOctets (similar definition for ipSystemStatsOutOctets):     The total number of octets in IP datagrams delivered to the lower    layers for transmission.  Octets from datagrams counted in    ipIfStatsOutTransmits MUST be counted here.  And ipIfStatsOutTransmits:     The total number of IP datagrams that this entity supplied to the    lower layers for transmission.  This includes datagrams generated    locally and those forwarded by this entity.  Therefore, IPSTATS_MIB_OUTOCTETS must be incremented when incrementing IPSTATS_MIB_OUTFORWDATAGRAMS.  IP_UPD_PO_STATS is not used since ipIfStatsOutRequests must not include forwarded datagrams:     The total number of IP datagrams that local IP user-protocols    (including ICMP) supplied to IP in requests for transmission.  Note    that this counter does not include any datagrams counted in    ipIfStatsOutForwDatagrams.  Signed-off-by: Vincent Bernat <bernat@luffy.cx> Signed-off-by: David S. Miller <davem@davemloft.net>
f | exthdrs.c | s | 21K | 792 | Eldad Zack | eldad@fogrefinery.com | 1337547519 |  | ipv6/exthdrs: strict Pad1 and PadN check  The following tightens the padding check from commit c1412fce7eccae62b4de22494f6ab3ff8a90c0c6 :  * Take into account combinations of consecutive Pad1 and PadN.  * Catch the corner case of when only padding is present in the   header, when the extention header length is 0 (i.e., 8 bytes).   In this case, the header would have exactly 6 bytes of padding:  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ :  Next Header  : Hdr Ext Len=0 :                               : +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               + :                        Padding (Pad1 or PadN)                 : +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  Signed-off-by: Eldad Zack <eldad@fogrefinery.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | syncookies.c | s | 7.3K | 226 | Alexey Dobriyan | adobriyan@gmail.com | 1321998212 |  | net: remove ipv6_addr_copy()  C assignment can handle struct in6_addr copying.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | udplite.c | s | 3.4K | 122 | Linus Torvalds | torvalds@linux-foundation.org | 1320637487 |  | Merge branch 'modsplit-Oct31_2011' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux  * 'modsplit-Oct31_2011' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux: (230 commits)   Revert "tracing: Include module.h in define_trace.h"   irq: don't put module.h into irq.h for tracking irqgen modules.   bluetooth: macroize two small inlines to avoid module.h   ip_vs.h: fix implicit use of module_get/module_put from module.h   nf_conntrack.h: fix up fallout from implicit moduleparam.h presence   include: replace linux/module.h with "struct module" wherever possible   include: convert various register fcns to macros to avoid include chaining   crypto.h: remove unused crypto_tfm_alg_modname() inline   uwb.h: fix implicit use of asm/page.h for PAGE_SIZE   pm_runtime.h: explicitly requires notifier.h   linux/dmaengine.h: fix implicit use of bitmap.h and asm/page.h   miscdevice.h: fix up implicit use of lists and types   stop_machine.h: fix implicit use of smp.h for smp_processor_id   of: fix implicit use of errno.h in include/linux/of.h   of_platform.h: delete needless include <linux/module.h>   acpi: remove module.h include from platform/aclinux.h   miscdevice.h: delete unnecessary inclusion of module.h   device_cgroup.h: delete needless include <linux/module.h>   net: sch_generic remove redundant use of <linux/module.h>   net: inet_timewait_sock doesnt need <linux/module.h>   ...  Fix up trivial conflicts (other header files, and  removal of the ab3550 mfd driver) in  - drivers/media/dvb/frontends/dibx000_common.c  - drivers/media/video/{mt9m111.c,ov6650.c}  - drivers/mfd/ab3550-core.c  - include/linux/dmaengine.h
f | ip6_fib.c | s | 35K | 1451 | Eric Dumazet | edumazet@google.com | 1340663839 |  | ipv6: fib: fix fib dump restart  Commit 2bec5a369ee79576a3 (ipv6: fib: fix crash when changing large fib while dumping it) introduced ability to restart the dump at tree root, but failed to skip correctly a count of already dumped entries. Code didn't match Patrick intent.  We must skip exactly the number of already dumped entries.  Note that like other /proc/net files or netlink producers, we could still dump some duplicates entries.  Reported-by: Debabrata Banerjee <dbavatar@gmail.com> Reported-by: Josh Hunt <johunt@akamai.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_flowlabel.c | s | 17K | 674 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netfilter.c | s | 4.9K | 174 | Linus Torvalds | torvalds@linux-foundation.org | 1320637487 |  | Merge branch 'modsplit-Oct31_2011' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux  * 'modsplit-Oct31_2011' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux: (230 commits)   Revert "tracing: Include module.h in define_trace.h"   irq: don't put module.h into irq.h for tracking irqgen modules.   bluetooth: macroize two small inlines to avoid module.h   ip_vs.h: fix implicit use of module_get/module_put from module.h   nf_conntrack.h: fix up fallout from implicit moduleparam.h presence   include: replace linux/module.h with "struct module" wherever possible   include: convert various register fcns to macros to avoid include chaining   crypto.h: remove unused crypto_tfm_alg_modname() inline   uwb.h: fix implicit use of asm/page.h for PAGE_SIZE   pm_runtime.h: explicitly requires notifier.h   linux/dmaengine.h: fix implicit use of bitmap.h and asm/page.h   miscdevice.h: fix up implicit use of lists and types   stop_machine.h: fix implicit use of smp.h for smp_processor_id   of: fix implicit use of errno.h in include/linux/of.h   of_platform.h: delete needless include <linux/module.h>   acpi: remove module.h include from platform/aclinux.h   miscdevice.h: delete unnecessary inclusion of module.h   device_cgroup.h: delete needless include <linux/module.h>   net: sch_generic remove redundant use of <linux/module.h>   net: inet_timewait_sock doesnt need <linux/module.h>   ...  Fix up trivial conflicts (other header files, and  removal of the ab3550 mfd driver) in  - drivers/media/dvb/frontends/dibx000_common.c  - drivers/media/video/{mt9m111.c,ov6650.c}  - drivers/mfd/ab3550-core.c  - include/linux/dmaengine.h
f | xfrm6_output.c | s | 3.6K | 128 | Dan Carpenter | dan.carpenter@oracle.com | 1328082768 |  | xfrm6: remove unneeded NULL check in __xfrm6_output()  We don't check for NULL consistently in __xfrm6_output().  If "x" were NULL here it would lead to an OOPs later.  I asked Steffen Klassert about this and he suggested that we remove the NULL check.  On 10/29/11, Steffen Klassert <steffen.klassert@secunet.com> wrote: >> net/ipv6/xfrm6_output.c >>    148 >>    149		if ((x && x->props.mode == XFRM_MODE_TUNNEL) && >>                           ^ > > x can't be null here. It would be a bug if __xfrm6_output() is called > without a xfrm_state attached to the skb. I think we can just remove > this null check.  Cc: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | addrconf.c | s | 114K | 4153 | David S. Miller | davem@davemloft.net | 1337144560 |  | Merge branch 'delete-tokenring' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux
f | raw.c | s | 30K | 1173 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm6_tunnel.c | s | 9.9K | 344 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
