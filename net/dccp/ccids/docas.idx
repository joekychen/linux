f | ccid3.c | s | 25K | 743 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ccid2.c | s | 23K | 677 | Rusty Russell | rusty@rustcorp.com.au | 1324351649 |  | module_param: make bool parameters really bool (net & drivers/net)  module_param(bool) used to counter-intuitively take an int.  In fddd5201 (mid-2009) we allowed bool or int/unsigned int using a messy trick.  It's time to remove the int/unsigned int option.  For this version it'll simply give a warning, but it'll break next kernel version.  (Thanks to Joe Perches for suggesting coccinelle for 0/1 -> true/false).  Cc: "David S. Miller" <davem@davemloft.net> Cc: netdev@vger.kernel.org Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ccid2.h | s | 3.9K | 118 | Samuel Jero | sj323707@ohio.edu | 1312206755 |  | dccp ccid-2: prevent cwnd > Sequence Window  Add a check to prevent CCID-2 from increasing the cwnd greater than the Sequence Window.  When the congestion window becomes bigger than the Sequence Window, CCID-2 will attempt to keep more data in the network than the DCCP Sequence Window code considers possible. This results in the Sequence Window code issuing a Sync, thereby inducing needless overhead. Further, if this occurs at the sender, CCID-2 will never detect the problem because the Acks it receives will indicate no losses. I have seen this cause a drop of 1/3rd in throughput for a connection.  Also add code to adjust the Sequence Window to be about 5 times the number of packets in the network (RFC 4340, 7.5.2) and to adjust the Ack Ratio so that the remote Sequence Window will hold about 5 times the number of packets in the network. This allows the congestion window to increase correctly without being limited by the Sequence Window.  Signed-off-by: Samuel Jero <sj323707@ohio.edu> Acked-by: Gerrit Renker <gerrit@erg.abdn.ac.uk>
d | lib |  | 7 items |  | Rusty Russell | rusty@rustcorp.com.au | 1324351649 |  | module_param: make bool parameters really bool (net & drivers/net)  module_param(bool) used to counter-intuitively take an int.  In fddd5201 (mid-2009) we allowed bool or int/unsigned int using a messy trick.  It's time to remove the int/unsigned int option.  For this version it'll simply give a warning, but it'll break next kernel version.  (Thanks to Joe Perches for suggesting coccinelle for 0/1 -> true/false).  Cc: "David S. Miller" <davem@davemloft.net> Cc: netdev@vger.kernel.org Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ccid3.h | s | 5.4K | 148 | Gerrit Renker | gerrit@erg.abdn.ac.uk | 1285064066 |  | dccp ccid-3: Remove redundant 'options_received' struct  The `options_received' struct is redundant, since it re-duplicates the existing `p' and `x_recv' fields. This patch removes the sub-struct and migrates the format conversion operations to ccid3_hc_tx_parse_options().  Signed-off-by: Gerrit Renker <gerrit@erg.abdn.ac.uk>
f | Kconfig | g | 1.7K |  | Gerrit Renker | gerrit@erg.abdn.ac.uk | 1283201128 |  | dccp ccid-3: use per-route RTO or TCP RTO as fallback  This makes RTAX_RTO_MIN also available to CCID-3, replacing the compile-time RTO lower bound with a per-route tunable value.  The original Kconfig option solved the problem that a very low RTT (in the order of HZ) can trigger too frequent and unnecessary reductions of the sending rate.  This tunable does not affect the initial RTO value of 2 seconds specified in RFC 5348, section 4.2 and Appendix B. But like the hardcoded Kconfig value, it allows to adapt to network conditions.  The same effect as the original Kconfig option of 100ms is now achieved by  > ip route replace to unicast 192.168.0.0/24 rto_min 100j dev eth0  (assuming HZ=1000).  Signed-off-by: Gerrit Renker <gerrit@erg.abdn.ac.uk> Signed-off-by: David S. Miller <davem@davemloft.net>
