f | vlan_dev.c | s | 20K | 633 | David S. Miller | davem@davemloft.net | 1337221057 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | vlan.h | s | 5.7K | 164 | Benjamin LaHaise | bcrl@kvack.org | 1323392310 |  | vlan: add 802.1q netpoll support  Add netpoll support to 802.1q vlan devices.  Based on the netpoll support in the bridging code.  Tested on a forced_eth device with netconsole.  Signed-off-by: Benjamin LaHaise <bcrl@kvack.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlan_netlink.c | s | 6.0K | 209 | David S. Miller | davem@davemloft.net | 1333355624 |  | vlan: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 269B |  | Patrick McHardy | kaber@trash.net | 1215512616 |  | vlan: uninline __vlan_hwaccel_rx  The function is huge and included at least once in every VLAN acceleration capable driver. Uninline it; to avoid having drivers depend on the VLAN module, the function is always built in statically when VLAN is enabled.  With all VLAN acceleration capable drivers that build on x86_64 enabled, this results in:     text    data     bss     dec     hex filename 6515227  854044  343968 7713239  75b1d7 vmlinux.inlined 6505637  854044  343968 7703649  758c61 vmlinux.uninlined ----------------------------------------------------------   -9590  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlan.c | s | 15K | 558 | Joe Perches | joe@perches.com | 1336610957 |  | 8021q: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlanproc.c | s | 8.5K | 270 | Jiri Pirko | jpirko@redhat.com | 1323391890 |  | vlan: rename vlan_dev_info to vlan_dev_priv  As this structure is priv, name it approprietely. Also for pointer to it use name "vlan".  Signed-off-by: Jiri Pirko <jpirko@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlan_gvrp.c | s | 1.6K | 55 | Jiri Pirko | jpirko@redhat.com | 1323391890 |  | vlan: rename vlan_dev_info to vlan_dev_priv  As this structure is priv, name it approprietely. Also for pointer to it use name "vlan".  Signed-off-by: Jiri Pirko <jpirko@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlanproc.h | s | 537B | 15 | Pavel Emelyanov | xemul@openvz.org | 1208332272 |  | [VLAN]: Add a net argument to proc init and cleanup calls.  All proc files will be created in each net, so prepare them for this change now, not to mess it with real creation patch.  The net != &init_net checks in them are for git-bisect sanity, but I will drop them soon.  Signed-off-by: Pavel Emelyanov <xemul@openvz.org> Acked-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | vlan_core.c | s | 8.3K | 305 | Joe Perches | joe@perches.com | 1336610957 |  | 8021q: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 919B |  | Patrick McHardy | kaber@trash.net | 1215318417 |  | vlan: Add GVRP support  Add GVRP support for dynamically registering VLANs with switches.  By default GVRP is disabled because we only support the applicant-only participant model, which means it should not be enabled on vlans that are members of a bridge. Since there is currently no way to cleanly determine that, the user is responsible for enabling it.  The code is pretty small and low impact, its wrapped in a config option though because it depends on the GARP implementation and the STP core.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
