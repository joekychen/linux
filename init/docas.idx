f | Makefile | g | 1.1K |  | Thomas Gleixner | tglx@linutronix.de | 1336215646 |  | init_task: Replace CONFIG_HAVE_GENERIC_INIT_TASK  Now that all archs except ia64 are converted, replace the config and let the ia64 select CONFIG_ARCH_INIT_TASK  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Link: http://lkml.kernel.org/r/20120503085035.867948914@linutronix.de
f | do_mounts.c | s | 12K | 499 | H Hartley Sweeten | hartleys@visionengravers.com | 1338511767 |  | init: disable sparse checking of the mount.o source files  The init/mount.o source files produce a number of sparse warnings of the type:  warning: incorrect type in argument 1 (different address spaces)    expected char [noderef] <asn:1>*dev_name    got char *name  This is due to the syscalls expecting some of the arguments to be user pointers but they are being passed as kernel pointers.  This is harmless but adds a lot of noise to a sparse build.  To limit the noise just disable the sparse checking in the relevant source files, but still display a warning so that the user knows this has been done.  Since the sparse checking has been disabled we can also remove the __user __force casts that are scattered thru the source.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | calibrate.c | s | 8.3K | 269 | Diwakar Tundlam | dtundlam@nvidia.com | 1332547118 |  | init: check printed flag to skip printing message  Otherwise the 'Calibration skipped' message gets printed everytime a CPU is hotplugged in, cluttering console for systems that frequently hotplug CPUs.  Signed-off-by: Diwakar Tundlam <dtundlam@nvidia.com> Cc: Phil Carmody <ext-phil.2.carmody@nokia.com> Cc: Russell King <rmk+kernel@arm.linux.org.uk> Cc: Greg KH <greg@kroah.com> Cc: Sameer Nanda <snanda@chromium.org> Cc: Peter De Schrijver <pdeschrijver@nvidia.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | do_mounts.h | s | 1.4K | 58 | NeilBrown | neilb@suse.de | 1238470393 |  | md: move lots of #include lines out of .h files and into .c  This makes the includes more explicit, and is preparation for moving md_k.h to drivers/md/md.h  Remove include/raid/md.h as its only remaining use was to #include other files.  Signed-off-by: NeilBrown <neilb@suse.de>
f | do_mounts_initrd.c | s | 3.4K | 118 | H Hartley Sweeten | hartleys@visionengravers.com | 1338511767 |  | init: disable sparse checking of the mount.o source files  The init/mount.o source files produce a number of sparse warnings of the type:  warning: incorrect type in argument 1 (different address spaces)    expected char [noderef] <asn:1>*dev_name    got char *name  This is due to the syscalls expecting some of the arguments to be user pointers but they are being passed as kernel pointers.  This is harmless but adds a lot of noise to a sparse build.  To limit the noise just disable the sparse checking in the relevant source files, but still display a warning so that the user knows this has been done.  Since the sparse checking has been disabled we can also remove the __user __force casts that are scattered thru the source.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | initramfs.c | s | 12K | 560 | H Hartley Sweeten | hartleys@visionengravers.com | 1338511767 |  | init: disable sparse checking of the mount.o source files  The init/mount.o source files produce a number of sparse warnings of the type:  warning: incorrect type in argument 1 (different address spaces)    expected char [noderef] <asn:1>*dev_name    got char *name  This is due to the syscalls expecting some of the arguments to be user pointers but they are being passed as kernel pointers.  This is harmless but adds a lot of noise to a sparse build.  To limit the noise just disable the sparse checking in the relevant source files, but still display a warning so that the user knows this has been done.  Since the sparse checking has been disabled we can also remove the __user __force casts that are scattered thru the source.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | noinitramfs.c | s | 1.5K | 46 | Namhyung Kim | namhyung@gmail.com | 1288137135 |  | init: mark __user address space on string literals  When calling syscall service routines in kernel, some of arguments should be user pointers but were missing __user markup on string literals.  Add it.  Removes some sparse warnings.  Signed-off-by: Namhyung Kim <namhyung@gmail.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | init_task.c | s | 668B | 20 | Thomas Gleixner | tglx@linutronix.de | 1336215621 |  | init_task: Create generic init_task instance  All archs define init_task in the same way (except ia64, but there is no particular reason why ia64 cannot use the common version). Create a generic instance so all archs can be converted over.  The config switch is temporary and will be removed when all archs are converted over.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Chen Liqin <liqin.chen@sunplusct.com> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Chris Zankel <chris@zankel.net> Cc: David Howells <dhowells@redhat.com> Cc: David S. Miller <davem@davemloft.net> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: Haavard Skinnemoen <hskinnemoen@gmail.com> Cc: Hirokazu Takata <takata@linux-m32r.org> Cc: James E.J. Bottomley <jejb@parisc-linux.org> Cc: Jesper Nilsson <jesper.nilsson@axis.com> Cc: Jonas Bonn <jonas@southpole.se> Cc: Mark Salter <msalter@redhat.com> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Matt Turner <mattst88@gmail.com> Cc: Michal Simek <monstr@monstr.eu> Cc: Mike Frysinger <vapier@gentoo.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Richard Kuo <rkuo@codeaurora.org> Cc: Richard Weinberger <richard@nod.at> Cc: Russell King <linux@arm.linux.org.uk> Cc: Yoshinori Sato <ysato@users.sourceforge.jp> Link: http://lkml.kernel.org/r/20120503085034.092585287@linutronix.de
f | Kconfig | g | 50K |  | Linus Torvalds | torvalds@linux-foundation.org | 1338513018 |  | Merge branch 'akpm' (Andrew's patch-bomb)  Merge misc patches from Andrew Morton:   - the "misc" tree - stuff from all over the map   - checkpatch updates   - fatfs   - kmod changes   - procfs   - cpumask   - UML   - kexec   - mqueue   - rapidio   - pidns   - some checkpoint-restore feature work.  Reluctantly.  Most of it    delayed a release.  I'm still rather worried that we don't have a    clear roadmap to completion for this work.  * emailed from Andrew Morton <akpm@linux-foundation.org>: (78 patches)   kconfig: update compression algorithm info   c/r: prctl: add ability to set new mm_struct::exe_file   c/r: prctl: extend PR_SET_MM to set up more mm_struct entries   c/r: procfs: add arg_start/end, env_start/end and exit_code members to /proc/$pid/stat   syscalls, x86: add __NR_kcmp syscall   fs, proc: introduce /proc/<pid>/task/<tid>/children entry   sysctl: make kernel.ns_last_pid control dependent on CHECKPOINT_RESTORE   aio/vfs: cleanup of rw_copy_check_uvector() and compat_rw_copy_check_uvector()   eventfd: change int to __u64 in eventfd_signal()   fs/nls: add Apple NLS   pidns: make killed children autoreap   pidns: use task_active_pid_ns in do_notify_parent   rapidio/tsi721: add DMA engine support   rapidio: add DMA engine support for RIO data transfers   ipc/mqueue: add rbtree node caching support   tools/selftests: add mq_perf_tests   ipc/mqueue: strengthen checks on mqueue creation   ipc/mqueue: correct mq_attr_ok test   ipc/mqueue: improve performance of send/recv   selftests: add mq_open_tests   ...
f | do_mounts_rd.c | s | 8.4K | 306 | H Hartley Sweeten | hartleys@visionengravers.com | 1338511767 |  | init: disable sparse checking of the mount.o source files  The init/mount.o source files produce a number of sparse warnings of the type:  warning: incorrect type in argument 1 (different address spaces)    expected char [noderef] <asn:1>*dev_name    got char *name  This is due to the syscalls expecting some of the arguments to be user pointers but they are being passed as kernel pointers.  This is harmless but adds a lot of noise to a sparse build.  To limit the noise just disable the sparse checking in the relevant source files, but still display a warning so that the user knows this has been done.  Since the sparse checking has been disabled we can also remove the __user __force casts that are scattered thru the source.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | do_mounts_md.c | s | 8.2K | 278 | H Hartley Sweeten | hartleys@visionengravers.com | 1338511767 |  | init: disable sparse checking of the mount.o source files  The init/mount.o source files produce a number of sparse warnings of the type:  warning: incorrect type in argument 1 (different address spaces)    expected char [noderef] <asn:1>*dev_name    got char *name  This is due to the syscalls expecting some of the arguments to be user pointers but they are being passed as kernel pointers.  This is harmless but adds a lot of noise to a sparse build.  To limit the noise just disable the sparse checking in the relevant source files, but still display a warning so that the user knows this has been done.  Since the sparse checking has been disabled we can also remove the __user __force casts that are scattered thru the source.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | version.c | s | 1.1K | 42 | Serge E. Hallyn | serge@hallyn.com | 1300934819 |  | userns: add a user_namespace as creator/owner of uts_namespace  The expected course of development for user namespaces targeted capabilities is laid out at https://wiki.ubuntu.com/UserNamespace.  Goals:  - Make it safe for an unprivileged user to unshare namespaces.  They   will be privileged with respect to the new namespace, but this should   only include resources which the unprivileged user already owns.  - Provide separate limits and accounting for userids in different   namespaces.  Status:    Currently (as of 2.6.38) you can clone with the CLONE_NEWUSER flag to   get a new user namespace if you have the CAP_SYS_ADMIN, CAP_SETUID, and   CAP_SETGID capabilities.  What this gets you is a whole new set of   userids, meaning that user 500 will have a different 'struct user' in   your namespace than in other namespaces.  So any accounting information   stored in struct user will be unique to your namespace.    However, throughout the kernel there are checks which    - simply check for a capability.  Since root in a child namespace     has all capabilities, this means that a child namespace is not     constrained.    - simply compare uid1 == uid2.  Since these are the integer uids,     uid 500 in namespace 1 will be said to be equal to uid 500 in     namespace 2.    As a result, the lxc implementation at lxc.sf.net does not use user   namespaces.  This is actually helpful because it leaves us free to   develop user namespaces in such a way that, for some time, user   namespaces may be unuseful.  Bugs aside, this patchset is supposed to not at all affect systems which are not actively using user namespaces, and only restrict what tasks in child user namespace can do.  They begin to limit privilege to a user namespace, so that root in a container cannot kill or ptrace tasks in the parent user namespace, and can only get world access rights to files. Since all files currently belong to the initila user namespace, that means that child user namespaces can only get world access rights to *all* files.  While this temporarily makes user namespaces bad for system containers, it starts to get useful for some sandboxing.  I've run the 'runltplite.sh' with and without this patchset and found no difference.  This patch:  copy_process() handles CLONE_NEWUSER before the rest of the namespaces. So in the case of clone(CLONE_NEWUSER||CLONE_NEWUTS) the new uts namespace will have the new user namespace as its owner.  That is what we want, since we want root in that new userns to be able to have privilege over it.  Changelog: 	Feb 15: don't set uts_ns->user_ns if we didn't create 		a new uts_ns. 	Feb 23: Move extern init_user_ns declaration from 		init/version.c to utsname.h.  Signed-off-by: Serge E. Hallyn <serge.hallyn@canonical.com> Acked-by: "Eric W. Biederman" <ebiederm@xmission.com> Acked-by: Daniel Lezcano <daniel.lezcano@free.fr> Acked-by: David Howells <dhowells@redhat.com> Cc: James Morris <jmorris@namei.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | main.c | s | 21K | 770 | Borislav Petkov | borislav.petkov@amd.com | 1339133294 |  | init: Drop initcall level output  9fb48c744ba6a ("params: add 3rd arg to option handler callback signature") added similar lines to dmesg:  initlevel:0=early, 4 registered initcalls initlevel:1=core, 31 registered initcalls initlevel:2=postcore, 11 registered initcalls initlevel:3=arch, 7 registered initcalls initlevel:4=subsys, 40 registered initcalls initlevel:5=fs, 30 registered initcalls initlevel:6=device, 250 registered initcalls initlevel:7=late, 35 registered initcalls  but they don't contain any info for the general user staring at dmesg. I'm very doubtful the count of initcalls registered per level helps anyone so drop that output completely.  Cc: Jim Cromie <jim.cromie@gmail.com> Cc: Rusty Russell <rusty@rustcorp.com.au> Cc: Jason Baron <jbaron@redhat.com> Signed-off-by: Borislav Petkov <borislav.petkov@amd.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
