f | hash.h | s | 8.8K | 284 | Herbert Xu | herbert@gondor.apana.org.au | 1247663765 |  | crypto: shash - Fix digest size offset  When an shash algorithm is exported as ahash, ahash will access its digest size through hash_alg_common.  That's why the shash layout needs to match hash_alg_common.  This wasn't the case because the alignment weren't identical.  This patch fixes the problem.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ctr.h | s | 524B | 17 | Herbert Xu | herbert@gondor.apana.org.au | 1199999801 |  | [CRYPTO] ctr: Refactor into ctr and rfc3686  As discussed previously, this patch moves the basic CTR functionality into a chainable algorithm called ctr.  The IPsec-specific variant of it is now placed on top with the name rfc3686.  So ctr(aes) gives a chainable cipher with IV size 16 while the IPsec variant will be called rfc3686(ctr(aes)).  This patch also adjusts gcm accordingly.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | padlock.h | s | 649B | 23 | Herbert Xu | herbert@gondor.apana.org.au | 1294372320 |  | crypto: padlock - Move padlock.h into include/crypto  This patch moves padlock.h from drivers/crypto into include/crypto so that it may be used by the via-rng driver.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | lrw.h | s | 1.2K | 34 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810631 |  | crypto: lrw - add interface for parallelized cipher implementions  Export gf128mul table initialization routines and add lrw_crypt() function that can be used by cipher implementations that can benefit from parallelized cipher operations.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | algapi.h | s | 10K | 319 | Steffen Klassert | steffen.klassert@secunet.com | 1320811446 |  | crypto: Unlink and free instances when deleted  We leak the crypto instance when we unregister an instance with crypto_del_alg(). Therefore we introduce crypto_unregister_instance() to unlink the crypto instance from the template's instances list and to free the recources of the instance properly.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
d | internal |  | 5 items |  | Steffen Klassert | steffen.klassert@secunet.com | 1333021967 |  | crypto: user - Fix lookup of algorithms with IV generator  We lookup algorithms with crypto_alg_mod_lookup() when instantiating via crypto_add_alg(). However, algorithms that are wrapped by an IV genearator (e.g. aead or genicv type algorithms) need special care. The userspace process hangs until it gets a timeout when we use crypto_alg_mod_lookup() to lookup these algorithms. So export the lookup functions for these algorithms and use them in crypto_add_alg().  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | skcipher.h | s | 2.7K | 91 | Herbert Xu | herbert@gondor.apana.org.au | 1199999809 |  | [CRYPTO] skcipher: Add top-level givencrypt/givdecrypt calls  This patch finally makes the givencrypt/givdecrypt operations available to users by adding crypto_skcipher_givencrypt and crypto_skcipher_givdecrypt. A suite of helpers to allocate and fill in the request is also available.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | pcrypt.h | s | 1.4K | 44 | Steffen Klassert | steffen.klassert@secunet.com | 1262840239 |  | crypto: pcrypt - Add pcrypt crypto parallelization wrapper  This patch adds a parallel crypto template that takes a crypto algorithm and converts it to process the crypto transforms in parallel. For the moment only aead algorithms are supported.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | scatterwalk.h | s | 3.2K | 98 | Cong Wang | amwang@redhat.com | 1332251296 |  | crypto: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | authenc.h | s | 609B | 22 | Herbert Xu | herbert@gondor.apana.org.au | 1199999790 |  | [CRYPTO] authenc: Move enckeylen into key itself  Having enckeylen as a template parameter makes it a pain for hardware devices that implement ciphers with many key sizes since each one would have to be registered separately.  Since the authenc algorithm is mainly used for legacy purposes where its key is going to be constructed out of two separate keys, we can in fact embed this value into the key itself.  This patch does this by prepending an rtnetlink header to the key that contains the encryption key length.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | b128ops.h | s | 2.4K | 63 | Rik Snel | rsnel@cube.dyndns.org | 1165459135 |  | [CRYPTO] lib: some common 128-bit block operations, nicely centralized  128bit is a common blocksize in linux kernel cryptography, so it helps to centralize some common operations.  The code, while mostly trivial, is based on a header file mode_hdr.h in http://fp.gladman.plus.com/AES/modes.vc8.19-06-06.zip  The original copyright (and GPL statement) of the original author, Dr Brian Gladman, is preserved.  Signed-off-by: Rik Snel <rsnel@cube.dyndns.org> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | crypto_wq.h | s | 122B | 5 | Huang Ying | ying.huang@intel.com | 1235025220 |  | crypto: api - Use dedicated workqueue for crypto subsystem  Use dedicated workqueue for crypto subsystem  A dedicated workqueue named kcrypto_wq is created to be used by crypto subsystem. The system shared keventd_wq is not suitable for encryption/decryption, because of potential starvation problem.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | if_alg.h | s | 2.2K | 72 | Alexey Dobriyan | adobriyan@gmail.com | 1308709040 |  | net: remove mm.h inclusion from netdevice.h  Remove linux/mm.h inclusion from netdevice.h -- it's unused (I've checked manually).  To prevent mm.h inclusion via other channels also extract "enum dma_data_direction" definition into separate header. This tiny piece is what gluing netdevice.h with mm.h via "netdevice.h => dmaengine.h => dma-mapping.h => scatterlist.h => mm.h". Removal of mm.h from scatterlist.h was tried and was found not feasible on most archs, so the link was cutoff earlier.  Hope people are OK with tiny include file.  Note, that mm_types.h is still dragged in, but it is a separate story.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | aead.h | s | 2.6K | 87 | Herbert Xu | herbert@gondor.apana.org.au | 1199999810 |  | [CRYPTO] aead: Add top-level givencrypt/givdecrypt calls  This patch finally makes the givencrypt/givdecrypt operations available to users by adding crypto_aead_givencrypt and crypto_aead_givdecrypt. A suite of helpers to allocate and fill in the request is also available.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | rng.h | s | 1.8K | 60 | Neil Horman | nhorman@tuxdriver.com | 1219989004 |  | crypto: rng - RNG interface and implementation  This patch adds a random number generator interface as well as a cryptographic pseudo-random number generator based on AES.  It is meant to be used in cases where a deterministic CPRNG is required.  One of the first applications will be as an input in the IPsec IV generation process.  Signed-off-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | md5.h | s | 288B | 13 | Max Vozeler | max@hinterhof.net | 1263725731 |  | crypto: md5 - Add export support  This patch adds export/import support to md5. The exported type is defined by struct md5_state.  This is modeled after the equivalent change to sha1_generic.  Signed-off-by: Max Vozeler <max@hinterhof.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | sha.h | s | 2.1K | 72 | Herbert Xu | herbert@gondor.apana.org.au | 1313474585 |  | crypto: sha - Fix build error due to crypto_sha1_update  On Tue, Aug 16, 2011 at 03:22:34PM +1000, Stephen Rothwell wrote: > > After merging the final tree, today's linux-next build (powerpc > allyesconfig) produced this warning: > > In file included from security/integrity/ima/../integrity.h:16:0, >                  from security/integrity/ima/ima.h:27, >                  from security/integrity/ima/ima_policy.c:20: > include/crypto/sha.h:86:10: warning: 'struct shash_desc' declared inside parameter list > include/crypto/sha.h:86:10: warning: its scope is only this definition or declaration, which is probably not what you want > > Introduced by commit 7c390170b493 ("crypto: sha1 - export sha1_update for > reuse").  I guess you need to include crypto/hash.h in crypto/sha.h.  This patch fixes this by providing a declaration for struct shash_desc.  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | aes.h | s | 1019B | 33 | Huang Ying | ying.huang@intel.com | 1234946884 |  | crypto: aes - Move key_length in struct crypto_aes_ctx to be the last field  The Intel AES-NI AES acceleration instructions need key_enc, key_dec in struct crypto_aes_ctx to be 16 byte aligned, it make this easier to move key_length to be the last one.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | compress.h | s | 4.0K | 118 | Geert Uytterhoeven | Geert.Uytterhoeven@sonycom.com | 1236150979 |  | crypto: zlib - New zlib crypto module, using pcomp  Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com> Cc: James Morris <jmorris@namei.org> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | gf128mul.h | s | 8.0K | 170 | Justin P. Mattock | justinmattock@gmail.com | 1287392594 |  | Update broken web addresses in the kernel.  The patch below updates broken web addresses in the kernel  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Cc: Maciej W. Rozycki <macro@linux-mips.org> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Finn Thain <fthain@telegraphics.com.au> Cc: Randy Dunlap <rdunlap@xenotime.net> Cc: Matt Turner <mattst88@gmail.com> Cc: Dimitry Torokhov <dmitry.torokhov@gmail.com> Cc: Mike Frysinger <vapier.adi@gmail.com> Acked-by: Ben Pfaff <blp@cs.stanford.edu> Acked-by: Hans J. Koch <hjk@linutronix.de> Reviewed-by: Finn Thain <fthain@telegraphics.com.au> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | serpent.h | s | 673B | 20 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1321863204 |  | crypto: serpent-sse2 - add lrw support  Patch adds LRW support for serpent-sse2 by using lrw_crypt(). Patch has been tested with tcrypt and automated filesystem tests.  Tcrypt benchmarks results (serpent-sse2/serpent_generic speed ratios):  Benchmark results with tcrypt:  Intel Celeron T1600 (x86_64) (fam:6, model:15, step:13): size    lrw-enc lrw-dec 16B     1.00x   0.96x 64B     1.01x   1.01x 256B    3.01x   2.97x 1024B   3.39x   3.33x 8192B   3.35x   3.33x  AMD Phenom II 1055T (x86_64) (fam:16, model:10): size    lrw-enc lrw-dec 16B     0.98x   1.03x 64B     1.01x   1.04x 256B    2.10x   2.14x 1024B   2.28x   2.33x 8192B   2.30x   2.33x  Intel Atom N270 (i586): size    lrw-enc lrw-dec 16B     0.97x   0.97x 64B     1.47x   1.50x 256B    1.72x   1.69x 1024B   1.88x   1.81x 8192B   1.84x   1.79x  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | des.h | s | 403B | 13 | Evgeniy Polyakov | johnpol@2ka.mipt.ru | 1199999762 |  | [CRYPTO] des: Create header file for common macros  This patch creates include/crypto/des.h for common macros shared between DES implementations.  Signed-off-by: Evgeniy Polyakov <johnpol@2ka.mipt.ru> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | blowfish.h | s | 376B | 17 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1316690725 |  | crypto: blowfish - split generic and common c code  Patch splits up the blowfish crypto routine into a common part (key setup) which will be used by blowfish crypto modules (x86_64 assembly and generic-c).  Also fixes errors/warnings reported by checkpatch.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | vmac.h | s | 2.0K | 54 | Shane Wang | shane.wang@intel.com | 1251885922 |  | crypto: vmac - New hash algorithm for intel_txt support  This patch adds VMAC (a fast MAC) support into crypto framework.  Signed-off-by: Shane Wang <shane.wang@intel.com> Signed-off-by: Joseph Cihula <joseph.cihula@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cryptd.h | s | 1.8K | 55 | Adrian Hoban | adrian.hoban@intel.com | 1284969912 |  | crypto: cryptd - Adding the AEAD interface type support to cryptd  This patch adds AEAD support into the cryptd framework. Having AEAD support in cryptd enables crypto drivers that use the AEAD interface type (such as the patch for AEAD based RFC4106 AES-GCM implementation using Intel New Instructions) to leverage cryptd for asynchronous processing.  Signed-off-by: Adrian Hoban <adrian.hoban@intel.com> Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com> Signed-off-by: Gabriele Paoloni <gabriele.paoloni@intel.com> Signed-off-by: Aidan O'Mahony <aidan.o.mahony@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | twofish.h | s | 716B | 18 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810812 |  | crypto: twofish-x86_64-3way - add lrw support  Patch adds LRW support for twofish-x86_64-3way by using lrw_crypt(). Patch has been tested with tcrypt and automated filesystem tests.  Tcrypt benchmarks results (twofish-3way/twofish-asm speed ratios):  Intel Celeron T1600 (fam:6, model:15, step:13):  size	lrw-enc	lrw-dec 16B	0.99x	1.00x 64B	1.17x	1.17x 256B	1.26x	1.27x 1024B	1.30x	1.31x 8192B	1.31x	1.32x  AMD Phenom II 1055T (fam:16, model:10):  size	lrw-enc	lrw-dec 16B	1.06x	1.01x 64B	1.08x	1.14x 256B	1.19x	1.20x 1024B	1.21x	1.22x 8192B	1.23x	1.24x  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | xts.h | s | 613B | 19 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810966 |  | crypto: xts: add interface for parallelized cipher implementations  Add xts_crypt() function that can be used by cipher implementations that can benefit from parallelized cipher operations.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
