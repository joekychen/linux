f | udp.h | s | 8.3K | 243 | Benjamin LaHaise | bcrl@kvack.org | 1335666111 |  | net/ipv6/udp: UDP encapsulation: introduce encap_rcv hook into IPv6  Now that the sematics of udpv6_queue_rcv_skb() match IPv4's udp_queue_rcv_skb(), introduce the UDP encap_rcv() hook for IPv6.  Signed-off-by: Benjamin LaHaise <bcrl@kvack.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_common.h | s | 1.5K | 38 | Changli Gao | xiaosuo@gmail.com | 1278991306 |  | inet, inet6: make tcp_sendmsg() and tcp_sendpage() through inet_sendmsg() and inet_sendpage()  a new boolean flag no_autobind is added to structure proto to avoid the autobind calls when the protocol is TCP. Then sock_rps_record_flow() is called int the TCP's sendmsg() and sendpage() pathes.  Signed-off-by: Changli Gao <xiaosuo@gmail.com> ----  include/net/inet_common.h ||    4 ++++  include/net/sock.h        ||    1 +  include/net/tcp.h         ||    8 ++++----  net/ipv4/af_inet.c        ||   15 +++++++++------  net/ipv4/tcp.c            ||   11 +++++------  net/ipv4/tcp_ipv4.c       ||    3 +++  net/ipv6/af_inet6.c       ||    8 ++++----  net/ipv6/tcp_ipv6.c       ||    3 +++  8 files changed, 33 insertions(+), 20 deletions(-) Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc.h | s | 4.5K | 133 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ieee802154.h | s | 5.6K | 149 | alex.bluesman.smirnov@gmail.com | alex.bluesman.smirnov@gmail.com | 1321247982 |  | 6LoWPAN: add fragmentation support  This patch adds support for frame fragmentation.  Signed-off-by: Alexander Smirnov <alex.bluesman.smirnov@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | wpan-phy.h | s | 2.6K | 76 | alex.bluesman.smirnov@gmail.com | alex.bluesman.smirnov@gmail.com | 1337195828 |  | mac802154: monitor device support  Support for monitor device intended to capture all the network activity. This interface could be used by networks sniffers and is already supported by WireShark. That's a good test point to check that basic MAC support works.  Signed-off-by: Alexander Smirnov <alex.bluesman.smirnov@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | protocol.h | s | 3.7K | 91 | Eric Dumazet | eric.dumazet@gmail.com | 1323645916 |  | net: use IS_ENABLED(CONFIG_IPV6)  Instead of testing defined(CONFIG_IPV6) |||| defined(CONFIG_IPV6_MODULE)  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ah.h | s | 435B | 17 | Nicolas Dichtel | nicolas.dichtel@6wind.com | 1294984105 |  | ipsec: update MAX_AH_AUTH_LEN to support sha512  icv_truncbits is set to 256 for sha512, so update MAX_AH_AUTH_LEN to 64.  Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cls_cgroup.h | s | 1.4K | 59 | Ingo Molnar | mingo@elte.hu | 1286437425 |  | Merge commit 'v2.6.36-rc7' into core/rcu  Merge reason: Update from -rc3 to -rc7.  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | compat.h | s | 2.1K | 50 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dn_fib.h | s | 4.6K | 155 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | rose.h | s | 7.9K | 209 | Ben Hutchings | ben@decadent.org.uk | 1301273944 |  | rose: Add length checks to CALL_REQUEST parsing  Define some constant offsets for CALL_REQUEST based on the description at <http://www.techfest.com/networking/wan/x25plp.htm> and the definition of ROSE as using 10-digit (5-byte) addresses.  Use them consistently.  Validate all implicit and explicit facilities lengths. Validate the address length byte rather than either trusting or assuming its value.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>
f | wext.h | s | 1.5K | 52 | Johannes Berg | johannes@sipsolutions.net | 1254947983 |  | wext: refactor  Refactor wext to  * split out iwpriv handling  * split out iwspy handling  * split out procfs support  * allow cfg80211 to have wireless extensions compat code    w/o CONFIG_WIRELESS_EXT  After this, drivers need to  - select WIRELESS_EXT	- for wext support  - select WEXT_PRIV	- for iwpriv support  - select WEXT_SPY	- for iwspy support  except cfg80211 -- which gets new hooks in wext-core.c and can then get wext handlers without CONFIG_WIRELESS_EXT.  Wireless extensions procfs support is auto-selected based on PROC_FS and anything that requires the wext core (i.e. WIRELESS_EXT or CFG80211_WEXT).  Signed-off-by: Johannes Berg <johannes@sipsolutions.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | inet_connection_sock.h | s | 10K | 297 | Eric Dumazet | edumazet@google.com | 1335499414 |  | ipv6: RTAX_FEATURE_ALLFRAG causes inefficient TCP segment sizing  Quoting Tore Anderson from : https://bugzilla.kernel.org/show_bug.cgi?id=42572  When RTAX_FEATURE_ALLFRAG is set on a route, the effective TCP segment size does not take into account the size of the IPv6 Fragmentation header that needs to be included in outbound packets, causing every transmitted TCP segment to be fragmented across two IPv6 packets, the latter of which will only contain 8 bytes of actual payload.  RTAX_FEATURE_ALLFRAG is typically set on a route in response to receving a ICMPv6 Packet Too Big message indicating a Path MTU of less than 1280 bytes. 1280 bytes is the minimum IPv6 MTU, however ICMPv6 PTBs with MTU < 1280 are still valid, in particular when an IPv6 packet is sent to an IPv4 destination through a stateless translator. Any ICMPv4 Need To Fragment packets originated from the IPv4 part of the path will be translated to ICMPv6 PTB which may then indicate an MTU of less than 1280.  The Linux kernel refuses to reduce the effective MTU to anything below 1280 bytes, instead it sets it to exactly 1280 bytes, and RTAX_FEATURE_ALLFRAG is also set. However, the TCP segment size appears to be set to 1240 bytes (1280 Path MTU - 40 bytes of IPv6 header), instead of 1232 (additionally taking into account the 8 bytes required by the IPv6 Fragmentation extension header).  This in turn results in rather inefficient transmission, as every transmitted TCP segment now is split in two fragments containing 1232+8 bytes of payload.  After this patch, all the outgoing packets that includes a Fragmentation header all are "atomic" or "non-fragmented" fragments, i.e., they both have Offset=0 and More Fragments=0.  With help from David S. Miller  Reported-by: Tore Anderson <tore@fud.no> Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Maciej Żenczykowski <maze@google.com> Cc: Tom Herbert <therbert@google.com> Tested-by: Tore Anderson <tore@fud.no> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ax25.h | s | 15K | 386 | Eric W. Biederman | ebiederm@xmission.com | 1335233687 |  | net ax25: Fix the build when sysctl support is disabled.  Randy Dunlap <rdunlap@xenotime.net> reported:  > On 04/23/2012 12:07 AM, Stephen Rothwell wrote: > >> Hi all, >> >> Changes since 20120420: > > > include/net/ax25.h:447:75: error: expected ';' before '}' token > > static inline int ax25_register_dev_sysctl(ax25_dev *ax25_dev) { return 0 }; > static inline void ax25_unregister_dev_sysctl(ax25_dev *ax25_dev) {}; > > First function:  move ';' inside braces. > Second function:  drop the ';'.  Put the semicolons where it makes sense.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: David S. Miller <davem@davemloft.net>
d | tc_act |  | 8 items |  | Grégoire Baron | baronchon@n7mm.org | 1282293779 |  | net/sched: add ACT_CSUM action to update packets checksums  net/sched: add ACT_CSUM action to update packets checksums  ACT_CSUM can be called just after ACT_PEDIT in order to re-compute some altered checksums in IPv4 and IPv6 packets. The following checksums are supported by this patch:  - IPv4: IPv4 header, ICMP, IGMP, TCP, UDP & UDPLite  - IPv6: ICMPv6, TCP, UDP & UDPLite It's possible to request in the same action to update different kind of checksums, if the packets flow mix TCP, UDP and UDPLite, ...  An example of usage is done in the associated iproute2 patch.  Version 3 changes:  - remove useless goto instructions  - improve IPv6 hop options decoding  Version 2 changes:  - coding style correction  - remove useless arguments of some functions  - use stack in tcf_csum_dump()  - add tcf_csum_skb_nextlayer() to factor code  Signed-off-by: Gregoire Baron <baronchon@n7mm.org> Acked-by: jamal <hadi@cyberus.ca> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dsfield.h | s | 1.1K | 38 | Jan Engelhardt | jengelh@computergmbh.de | 1201560958 |  | [NET]: Constify include/net/dsfield.h  Constify include/net/dsfield.h  Signed-off-by: Jan Engelhardt <jengelh@computergmbh.de> Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dn_route.h | s | 4.3K | 96 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | act_api.h | s | 4.2K | 113 | Eric Dumazet | eric.dumazet@gmail.com | 1309945936 |  | net: sched: constify tcf_proto and tc_action  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ax88796.h | s | 998B | 27 | Daniel Mack | daniel@caiaq.de | 1237962723 |  | ax88796: Add method to take MAC from platform data  Implement a way to provide the MAC address for ax88796 devices from their platform data. Boards might decide to set the address programmatically, taken from boot tags or other sources.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_c_ac.h | s | 10K | 198 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | if_inet6.h | s | 5.7K | 208 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127275 |  | net: delete all instances of special processing for token ring  We are going to delete the Token ring support.  This removes any special processing in the core networking for token ring, (aside from net/tr.c itself), leaving the drivers and remaining tokenring support present but inert.  The mass removal of the drivers and net/tr.c will be in a separate commit, so that the history of these files that we still care about won't have the giant deletion tied into their history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | red.h | s | 10K | 332 | David Ward | david.ward@ll.mit.edu | 1334634791 |  | net_sched: red: Make minor corrections to comments  Signed-off-by: David Ward <david.ward@ll.mit.edu> Signed-off-by: David S. Miller <davem@davemloft.net>
d | iucv |  | 2 items |  | Ursula Braun | ursula.braun@de.ibm.com | 1331189544 |  | af_iucv: add shutdown for HS transport  AF_IUCV sockets offer a shutdown function. This patch makes sure shutdown works for HS transport as well.  Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_conn.h | s | 4.1K | 111 | Octavian Purdila | opurdila@ixiacom.com | 1261889037 |  | llc: use a device based hash table to speed up multicast delivery  This patch adds a per SAP device based hash table to solve the multicast delivery scalability issue when we have large number of interfaces and a large number of sockets bound to the same SAP.  Signed-off-by: Octavian Purdila <opurdila@ixiacom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | addrconf.h | s | 7.7K | 233 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dsa.h | s | 4.7K | 170 | Axel Lin | axel.lin@gmail.com | 1322757666 |  | dsa: Include linux/if_ether.h to fix build error  Include linux/if_ether.h to fix below build errors:    CC      arch/arm/mach-kirkwood/common.o In file included from arch/arm/mach-kirkwood/common.c:19: include/net/dsa.h: In function 'dsa_uses_dsa_tags': include/net/dsa.h:192: error: 'ETH_P_DSA' undeclared (first use in this function) include/net/dsa.h:192: error: (Each undeclared identifier is reported only once include/net/dsa.h:192: error: for each function it appears in.) include/net/dsa.h: In function 'dsa_uses_trailer_tags': include/net/dsa.h:197: error: 'ETH_P_TRAILER' undeclared (first use in this function) make[1]: *** [arch/arm/mach-kirkwood/common.o] Error 1 make: *** [arch/arm/mach-kirkwood] Error 2  Signed-off-by: Axel Lin <axel.lin@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | lib80211.h | s | 4.1K | 104 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103952 |  | include: replace linux/module.h with "struct module" wherever possible  The <linux/module.h> pretty much brings in the kitchen sink along with it, so it should be avoided wherever reasonably possible in terms of being included from other commonly used <linux/something.h> files, as it results in a measureable increase on compile times.  The worst culprit was probably device.h since it is used everywhere. This file also had an implicit dependency/usage of mutex.h which was masked by module.h, and is also fixed here at the same time.  There are over a dozen other headers that simply declare the struct instead of pulling in the whole file, so follow their lead and simply make it a few more.  Most of the implicit dependencies on module.h being present by these headers pulling it in have been now weeded out, so we can finally make this change with hopefully minimal breakage.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | mld.h | s | 1.9K | 64 | YOSHIFUJI Hideaki | yoshfuji@linux-ipv6.org | 1271997355 |  | ipv6 mcast: Introduce include/net/mld.h for MLD definitions.  Signed-off-by: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
f | cipso_ipv4.h | s | 7.9K | 275 | Paul Moore | pmoore@redhat.com | 1338574709 |  | cipso: handle CIPSO options correctly when NetLabel is disabled  When NetLabel is not enabled, e.g. CONFIG_NETLABEL=n, and the system receives a CIPSO tagged packet it is dropped (cipso_v4_validate() returns non-zero).  In most cases this is the correct and desired behavior, however, in the case where we are simply forwarding the traffic, e.g. acting as a network bridge, this becomes a problem.  This patch fixes the forwarding problem by providing the basic CIPSO validation code directly in ip_options_compile() without the need for the NetLabel or CIPSO code.  The new validation code can not perform any of the CIPSO option label/value verification that cipso_v4_validate() does, but it can verify the basic CIPSO option format.  The behavior when NetLabel is enabled is unchanged.  Signed-off-by: Paul Moore <pmoore@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ping.h | s | 1.4K | 42 | Vasiliy Kulikov | segoon@openwall.com | 1305656218 |  | net: ping: fix build failure  If CONFIG_PROC_SYSCTL=n the building process fails:      ping.c:(.text+0x52af3): undefined reference to `inet_get_ping_group_range_net'  Moved inet_get_ping_group_range_net() to ping.c.  Reported-by: Randy Dunlap <randy.dunlap@oracle.com> Signed-off-by: Vasiliy Kulikov <segoon@openwall.com> Acked-by: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Randy Dunlap <randy.dunlap@oracle.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netevent.h | s | 696B | 24 | David S. Miller | davem@davemloft.net | 1303667696 |  | net: Remove __KERNEL__ cpp checks from include/net  These header files are never installed to user consumption, so any __KERNEL__ cpp checks are superfluous.  Projects should also not copy these files into their userland utility sources and try to use them there.  If they insist on doing so, the onus is on them to sanitize the headers as needed.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | net_ratelimit.h | s | 181B | 5 | David S. Miller | davem@davemloft.net | 1306518093 |  | net: Kill ratelimit.h dependency in linux/net.h  Ingo Molnar noticed that we have this unnecessary ratelimit.h dependency in linux/net.h, which hid compilation problems from people doing builds only with CONFIG_NET enabled.  Move this stuff out to a seperate net/net_ratelimit.h file and include that in the only two places where this thing is needed.  Signed-off-by: David S. Miller <davem@davemloft.net> Acked-by: Ingo Molnar <mingo@elte.hu>
f | tcp.h | s | 48K | 1373 | Eric Dumazet | edumazet@google.com | 1337281199 |  | tcp: bool conversions  bool conversions where possible.  __inline__ -> inline  space cleanups  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dst.h | s | 10K | 401 | Gao feng | gaofeng@cn.fujitsu.com | 1338095482 |  | ipv6: fix incorrect ipsec fragment  Since commit ad0081e43a "ipv6: Fragment locally generated tunnel-mode IPSec6 packets as needed" the fragment of packets is incorrect. because tunnel mode needs IPsec headers and trailer for all fragments, while on transport mode it is sufficient to add the headers to the first fragment and the trailer to the last.  so modify mtu and maxfraglen base on ipsec mode and if fragment is first or last.  with my test,it work well(every fragment's size is the mtu) and does not trigger slow fragment path.  Changes from v1: 	though optimization, mtu_prev and maxfraglen_prev can be delete. 	replace xfrm mode codes with dst_entry's new frag DST_XFRM_TUNNEL. 	add fuction ip6_append_data_mtu to make codes clearer.  Signed-off-by: Gao feng <gaofeng@cn.fujitsu.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netlink.h | s | 31K | 1005 | David S. Miller | davem@davemloft.net | 1333355625 |  | netlink: Delete all NLA_PUT*() macros.  They were error prone due to an embedded goto, and the entire tree has been converted away from using them.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | dcbnl.h | s | 4.1K | 93 | Amir Vadai | amirv@mellanox.com | 1333616884 |  | net/dcb: Add an optional max rate attribute  Although not specified in 8021Qaz spec, it could be useful to enable drivers whose HW supports setting a rate limit for an ETS TC. This patch adds this optional attribute to DCB netlink. To use it, drivers should implement and register the callbacks ieee_setmaxrate and ieee_getmaxrate. The units are 64 bits long and specified in Kbps to enable usage over both slow and very fast networks.  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_route.h | s | 5.1K | 157 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | snmp.h | s | 5.9K | 184 | Linus Torvalds | torvalds@linux-foundation.org | 1326143308 |  | Merge branch 'for-3.3' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu  * 'for-3.3' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:   percpu: Remove irqsafe_cpu_xxx variants  Fix up conflict in arch/x86/include/asm/percpu.h due to clash with cebef5beed3d ("x86: Fix and improve percpu_cmpxchg{8,16}b_double()") which edited the (now removed) irqsafe_cpu_cmpxchg*_double code.
f | inet_timewait_sock.h | s | 6.7K | 194 | Eric Dumazet | eric.dumazet@gmail.com | 1323887695 |  | inet: remove rcu protection on tw_net  commit b099ce2602d806 (net: Batch inet_twsk_purge) added rcu protection on tw_net for no obvious reason.  struct net are refcounted anyway since timewait sockets escape from rcu protected sections. tw_net stay valid for the whole timwait lifetime.  This also removes a lot of sparse errors.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> CC: Eric W. Biederman <ebiederm@xmission.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cfg80211-wext.h | s | 2.0K | 52 | Johannes Berg | johannes.berg@intel.com | 1312827989 |  | cfg80211: remove unused wext handler exports  A lot of code is dedicated to giving drivers the ability to use cfg80211's wext handlers without completely converting. However, only orinoco is currently using this, and it is only partially using it.  We reduce the size of both the source and binary by removing those that nobody needs. If a driver shows up that needs it during conversion, we can add back those that are needed.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | netns |  | 12 items |  | Eric Leblond | eric@regit.org | 1336498518 |  | netfilter: nf_ct_helper: allow to disable automatic helper assignment  This patch allows you to disable automatic conntrack helper lookup based on TCP/UDP ports, eg.  echo 0 > /proc/sys/net/netfilter/nf_conntrack_helper  [ Note: flows that already got a helper will keep using it even   if automatic helper assignment has been disabled ]  Once this behaviour has been disabled, you have to explicitly use the iptables CT target to attach helper to flows.  There are good reasons to stop supporting automatic helper assignment, for further information, please read:  http://www.netfilter.org/news.html#2012-04-03  This patch also adds one message to inform that automatic helper assignment is deprecated and it will be removed soon (this is spotted only once, with the first flow that gets a helper attached to make it as less annoying as possible).  Signed-off-by: Eric Leblond <eric@regit.org> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | atmclip.h | s | 1.4K | 39 | David Miller | davem@davemloft.net | 1322697063 |  | atm: clip: Use device neigh support on top of "arp_tbl".  Instead of instantiating an entire new neigh_table instance just for ATM handling, use the neigh device private facility.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | netdma.h | s | 1.2K | 30 | Dan Williams | dan.j.williams@intel.com | 1231267095 |  | net_dma: convert to dma_find_channel  Use the general-purpose channel allocation provided by dmaengine.  Reviewed-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | p8022.h | s | 441B | 12 | Arnaldo Carvalho de Melo | acme@mandriva.com | 1125356492 |  | [NET]: Fix sparse warnings  Of this type, mostly:  CHECK   net/ipv6/netfilter.c net/ipv6/netfilter.c:96:12: warning: symbol 'ipv6_netfilter_init' was not declared. Should it be static? net/ipv6/netfilter.c:101:6: warning: symbol 'ipv6_netfilter_fini' was not declared. Should it be static?  Signed-off-by: Arnaldo Carvalho de Melo <acme@mandriva.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_memcontrol.h | s | 677B | 17 | Glauber Costa | glommer@parallels.com | 1334077447 |  | cgroup: pass struct mem_cgroup instead of struct cgroup to socket memcg  The only reason cgroup was used, was to be consistent with the populate() interface. Now that we're getting rid of it, not only we no longer need it, but we also *can't* call it this way.  Since we will no longer rely on populate(), this will be called from create(). During create, the association between struct mem_cgroup and struct cgroup does not yet exist, since cgroup internals hasn't yet initialized its bookkeeping. This means we would not be able to draw the memcg pointer from the cgroup pointer in these functions, which is highly undesirable.  Signed-off-by: Glauber Costa <glommer@parallels.com> Acked-by: Kamezawa Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Signed-off-by: Tejun Heo <tj@kernel.org> CC: Li Zefan <lizefan@huawei.com> CC: Johannes Weiner <hannes@cmpxchg.org> CC: Michal Hocko <mhocko@suse.cz>
d | 9p |  | 3 items |  | Joe Perches | joe@perches.com | 1325782304 |  | 9p: Reduce object size with CONFIG_NET_9P_DEBUG  Reduce object size by deduplicating formats.  Use vsprintf extension %pV. Rename P9_DPRINTK uses to p9_debug, align arguments. Add function for _p9_debug and macro to add __func__. Add missing "\n"s to p9_debug uses. Remove embedded function names as p9_debug adds it. Remove P9_EPRINTK macro and convert use to pr_<level>. Add and use pr_fmt and pr_<level>.  $ size fs/9p/built-in.o*    text	   data	    bss	    dec	    hex	filename   62133	    984	  16000	  79117	  1350d	fs/9p/built-in.o.new   67342	    984	  16928	  85254	  14d06	fs/9p/built-in.o.old $ size net/9p/built-in.o*    text	   data	    bss	    dec	    hex	filename   88792	   4148	  22024	 114964	  1c114	net/9p/built-in.o.new   94072	   4148	  23232	 121452	  1da6c	net/9p/built-in.o.old  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Eric Van Hensbergen <ericvh@gmail.com>
f | arp.h | s | 1.7K | 48 | David S. Miller | davem@davemloft.net | 1329346115 |  | ipv4: Eliminate spurious argument to __ipv4_neigh_lookup  'tbl' is always arp_tbl, so specifying it is pointless.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | ieee80211_radiotap.h | s | 10K | 263 | Johannes Berg | johannes.berg@intel.com | 1321032770 |  | wireless: move ieee80211chan2mhz macro  The macro is only used in ipw2200 and we certainly don't want to encourage its use, so move it out of the radiotap header file and into the driver.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | dcbevent.h | s | 1.3K | 43 | John Fastabend | john.r.fastabend@intel.com | 1317930591 |  | dcb: Add stub routines for !CONFIG_DCB  To avoid ifdefs in the other code that supports DCB notifiers add stub routines. This method seems popular in other net code for example 8021Q.  Signed-off-by: John Fastabend <john.r.fastabend@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | esp.h | s | 434B | 17 | Herbert Xu | herbert@gondor.apana.org.au | 1201836422 |  | [IPSEC]: Use crypto_aead and authenc in ESP  This patch converts ESP to use the crypto_aead interface and in particular the authenc algorithm.  This lays the foundations for future support of combined mode algorithms.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_checksum.h | s | 2.3K | 76 | Al Viro | viro@zeniv.linux.org.uk | 1166814727 |  | [IPV6]: Dumb typo in generic csum_ipv6_magic()  ... duh  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: David S. Miller <davem@davemloft.net>
f | slhc_vj.h | s | 6.6K | 162 | Alexey Dobriyan | adobriyan@gmail.com | 1120601524 |  | [NET]: Remove __ARGS from include/net/slhc_vj.h  I suspect "#define __ARGS(x) ()" was deprecated before I was born.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Domen Puncer <domen@coderock.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | rtnetlink.h | s | 4.6K | 112 | David S. Miller | davem@davemloft.net | 1334341264 |  | rtnetlink: ops->get_tx_queue() cannot take a const 'tb'.  net/core/rtnetlink.c: In function ‘rtnl_create_link’: net/core/rtnetlink.c:1645:3: warning: passing argument 2 of ‘ops->get_tx_queues’ from incompatible pointer type [enabled by default] net/core/rtnetlink.c:1645:3: note: expected ‘const struct nlattr **’ but argument is of type ‘struct nlattr **’  Signed-off-by: David S. Miller <davem@davemloft.net>
f | udplite.h | s | 3.7K | 111 | Joe Perches | joe@perches.com | 1331597121 |  | net: ipv4: Standardize prefixes for message logging  Add #define pr_fmt(fmt) as appropriate.  Add "IPv4: ", "TCP: ", and "IPsec: " to appropriate files. Standardize on "UDPLite: " for appropriate uses. Some prefixes were previously "UDPLITE: " and "UDP-Lite: ".  Add KBUILD_MODNAME ": " to icmp and gre. Remove embedded prefixes as appropriate.  Add missing "\n" to pr_info in gre.c.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | pkt_cls.h | s | 9.1K | 308 | David S. Miller | davem@davemloft.net | 1292964196 |  | net: Fix range checks in tcf_valid_offset().  This function has three bugs:  1) The offset should be valid most of the time, this is just    a sanity check, therefore we should use "likely" not "unlikely"  2) This is the only place where we can check for arithmetic overflow    of the pointer plus the length.  3) The existing range checks are off by one, the valid range is    skb->head to skb_tail_pointer(), inclusive.  Based almost entirely upon a patch by Ralph Loader.  Reported-by: Ralph Loader <suckfish@ihug.co.nz> Signed-off-by: David S. Miller <davem@davemloft.net>
f | tcp_states.h | s | 1.2K | 44 | Arnaldo Carvalho de Melo | acme@mandriva.com | 1136322657 |  | [TCP]: Move the TCPF_ enum to tcp_states.h  Upcoming patches will make, for instance, ip_sockglue.c need just this enum and not all of tcp.h.  Signed-off-by: Arnaldo Carvalho de Melo <acme@mandriva.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_fib.h | s | 6.4K | 234 | Jiri Bohac | jbohac@suse.cz | 1334716319 |  | ipv6: clean up rt6_clean_expires  Functionally, this change is a NOP.  Semantically, rt6_clean_expires() wants to do rt->dst.from = NULL instead of rt->dst.expires = 0. It is clearing the RTF_EXPIRES flag, so the union is going to be treated as a pointer (dst.from) not a long (dst.expires).  Signed-off-by: Jiri Bohac <jbohac@suse.cz> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xfrm.h | s | 46K | 1461 | David S. Miller | davem@davemloft.net | 1337108697 |  | xfrm: Convert several xfrm policy match functions to bool.  xfrm_selector_match xfrm_sec_ctx_match __xfrm4_selector_match __xfrm6_selector_match  Signed-off-by: David S. Miller <davem@davemloft.net>
f | mac80211.h | s | 149K | 3645 | Johannes Berg | johannes.berg@intel.com | 1339230669 |  | mac80211: add some missing kernel-doc  Add a few kernel-doc descriptions that were missed during development.  Reported-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Johannes Berg <johannes.berg@intel.com>
f | garp.h | s | 2.6K | 109 | Eric Dumazet | eric.dumazet@gmail.com | 1305236816 |  | garp: remove last synchronize_rcu() call  When removing last vlan from a device, garp_uninit_applicant() calls synchronize_rcu() to make sure no user can still manipulate struct garp_applicant before we free it.  Use call_rcu() instead, as a step to further net_device dismantle optimizations.  Add the temporary garp_cleanup_module() function to make sure no pending call_rcu() are left at module unload time [ this will be removed when kfree_rcu() is available ]  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | regulatory.h | s | 4.3K | 112 | Luis R. Rodriguez | mcgrof@qca.qualcomm.com | 1321910441 |  | cfg80211: pass DFS region to drivers through reg_notifier()  This grants drivers access to the DFS region that a regulatory domain belongs to.  Signed-off-by: Luis R. Rodriguez <mcgrof@qca.qualcomm.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | inet_ecn.h | s | 3.3K | 123 | Eric Dumazet | eric.dumazet@gmail.com | 1319261123 |  | inet: add rfc 3168 extract in front of INET_ECN_encapsulate()  INET_ECN_encapsulate() is better understood if we can read the official statement.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | checksum.h | s | 3.1K | 101 | Joe Perches | joe@perches.com | 1227138293 |  | include/net net/ - csum_partial - remove unnecessary casts  The first argument to csum_partial is const void * casts to char/u8 * are not necessary  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ethoc.h | s | 502B | 18 | Thierry Reding | thierry.reding@avionic-design.de | 1238138181 |  | net: Add support for the OpenCores 10/100 Mbps Ethernet MAC.  This patch adds a platform device driver that supports the OpenCores 10/100 Mbps Ethernet MAC.  The driver expects three resources: one IORESOURCE_MEM resource defines the memory region for the core's memory-mapped registers while a second IORESOURCE_MEM resource defines the network packet buffer space. The third resource, of type IORESOURCE_IRQ, associates an interrupt with the driver.  Signed-off-by: Thierry Reding <thierry.reding@avionic-design.de> Acked-by: Florian Fainelli <florian@openwrt.org> Signed-off-by: David S. Miller <davem@davemloft.net>
d | caif |  | 13 items |  | Dmitry Tarnyagin | dmitry.tarnyagin@stericsson.com | 1334331456 |  | caif-hsi: robust frame aggregation for HSI  Implement aggregation algorithm, combining more data into a single HSI transfer. 4 different traffic categories are supported:  1. TC_PRIO_CONTROL .. TC_PRIO_MAX (CTL)  2. TC_PRIO_INTERACTIVE            (VO)  3. TC_PRIO_INTERACTIVE_BULK       (VI)  4. TC_PRIO_BESTEFFORT, TC_PRIO_BULK, TC_PRIO_FILLER (BEBK)  Signed-off-by: Dmitry Tarnyagin <dmitry.tarnyagin@stericsson.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sch_generic.h | s | 16K | 561 | Eric Dumazet | edumazet@google.com | 1339540161 |  | bonding: Fix corrupted queue_mapping  In the transmit path of the bonding driver, skb->cb is used to stash the skb->queue_mapping so that the bonding device can set its own queue mapping.  This value becomes corrupted since the skb->cb is also used in __dev_xmit_skb.  When transmitting through bonding driver, bond_select_queue is called from dev_queue_xmit.  In bond_select_queue the original skb->queue_mapping is copied into skb->cb (via bond_queue_mapping) and skb->queue_mapping is overwritten with the bond driver queue.  Subsequently in dev_queue_xmit, __dev_xmit_skb is called which writes the packet length into skb->cb, thereby overwriting the stashed queue mappping.  In bond_dev_queue_xmit (called from hard_start_xmit), the queue mapping for the skb is set to the stashed value which is now the skb length and hence is an invalid queue for the slave device.  If we want to save skb->queue_mapping into skb->cb[], best place is to add a field in struct qdisc_skb_cb, to make sure it wont conflict with other layers (eg : Qdiscc, Infiniband...)  This patchs also makes sure (struct qdisc_skb_cb)->data is aligned on 8 bytes :  netem qdisc for example assumes it can store an u64 in it, without misalignment penalty.  Note : we only have 20 bytes left in (struct qdisc_skb_cb)->data[]. The largest user is CHOKe and it fills it.  Based on a previous patch from Tom Herbert.  Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Tom Herbert <therbert@google.com> Cc: John Fastabend <john.r.fastabend@intel.com> Cc: Roland Dreier <roland@kernel.org> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipip.h | s | 1.7K | 57 | stephen hemminger | shemminger@vyatta.com | 1334429225 |  | tunnel: implement 64 bits statistics  Convert the per-cpu statistics kept for GRE, IPIP, and SIT tunnels to use 64 bit statistics.  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dn_dev.h | s | 5.4K | 173 | Eric Dumazet | eric.dumazet@gmail.com | 1289253008 |  | decnet: RCU conversion and get rid of dev_base_lock  While tracking dev_base_lock users, I found decnet used it in dnet_select_source(), but for a wrong purpose:  Writers only hold RTNL, not dev_base_lock, so readers must use RCU if they cannot use RTNL.  Adds an rcu_head in struct dn_ifaddr and handle proper RCU management.  Adds __rcu annotation in dn_route as well.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Steven Whitehouse <swhiteho@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | netfilter |  | 26 items |  | Eric Dumazet | edumazet@google.com | 1336498593 |  | netfilter: nf_conntrack: use this_cpu_inc()  this_cpu_inc() is IRQ safe and faster than local_bh_disable()/__this_cpu_inc()/local_bh_enable(), at least on x86.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Patrick McHardy <kaber@trash.net> Cc: Christoph Lameter <cl@linux.com> Cc: Tejun Heo <tj@kernel.org> Reviewed-by: Christoph Lameter <cl@linux.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | dst_ops.h | s | 1.7K | 56 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | irda |  | 34 items |  | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | llc_s_ac.h | s | 1.6K | 37 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | ieee802154_netdev.h | s | 3.8K | 120 | alex.bluesman.smirnov@gmail.com | alex.bluesman.smirnov@gmail.com | 1337195816 |  | mac802154: declare reduced mlme operations  According IEEE 802.15.4 standard each node can be either full functionality device (FFD) or reduce functionality device (RFD). So 2 sets of operations are needed. This patch declare RFD operations structure.  Signed-off-by: Alexander Smirnov <alex.bluesman.smirnov@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip6_tunnel.h | s | 879B | 25 | Eric Dumazet | eric.dumazet@gmail.com | 1288037385 |  | tunnels: add _rcu annotations  (struct ip6_tnl)->next is rcu protected : (struct ip_tunnel)->next is rcu protected : (struct xfrm6_tunnel)->next is rcu protected :  add __rcu annotation and proper rcu primitives.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netrom.h | s | 8.0K | 227 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | dn_nsp.h | s | 6.0K | 166 | Eric Dumazet | eric.dumazet@gmail.com | 1275560512 |  | net: use __packed annotation  cleanup patch.  Use new __packed annotation in net/ and include/ (except netfilter)  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | scm.h | s | 3.1K | 106 | Eric Dumazet | eric.dumazet@gmail.com | 1317230990 |  | af_unix: dont send SCM_CREDENTIALS by default  Since commit 7361c36c5224 (af_unix: Allow credentials to work across user and pid namespaces) af_unix performance dropped a lot.  This is because we now take a reference on pid and cred in each write(), and release them in read(), usually done from another process, eventually from another cpu. This triggers false sharing.  # Events: 154K cycles # # Overhead  Command       Shared Object        Symbol # ........  .......  ..................  ......................... #     10.40%  hackbench  [kernel.kallsyms]   [k] put_pid      8.60%  hackbench  [kernel.kallsyms]   [k] unix_stream_recvmsg      7.87%  hackbench  [kernel.kallsyms]   [k] unix_stream_sendmsg      6.11%  hackbench  [kernel.kallsyms]   [k] do_raw_spin_lock      4.95%  hackbench  [kernel.kallsyms]   [k] unix_scm_to_skb      4.87%  hackbench  [kernel.kallsyms]   [k] pid_nr_ns      4.34%  hackbench  [kernel.kallsyms]   [k] cred_to_ucred      2.39%  hackbench  [kernel.kallsyms]   [k] unix_destruct_scm      2.24%  hackbench  [kernel.kallsyms]   [k] sub_preempt_count      1.75%  hackbench  [kernel.kallsyms]   [k] fget_light      1.51%  hackbench  [kernel.kallsyms]   [k] __mutex_lock_interruptible_slowpath      1.42%  hackbench  [kernel.kallsyms]   [k] sock_alloc_send_pskb  This patch includes SCM_CREDENTIALS information in a af_unix message/skb only if requested by the sender, [man 7 unix for details how to include ancillary data using sendmsg() system call]  Note: This might break buggy applications that expected SCM_CREDENTIAL from an unaware write() system call, and receiver not using SO_PASSCRED socket option.  If SOCK_PASSCRED is set on source or destination socket, we still include credentials for mere write() syscalls.  Performance boost in hackbench : more than 50% gain on a 16 thread machine (2 quad-core cpus, 2 threads per core)  hackbench 20 thread 2000  4.228 sec instead of 9.102 sec  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Tim Chen <tim.c.chen@linux.intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | transp_v6.h | s | 1.4K | 45 | Maciej Żenczykowski | maze@google.com | 1314740341 |  | net: relax PKTINFO non local ipv6 udp xmit check  Allow transparent sockets to be less restrictive about the source ip of ipv6 udp packets being sent.  Google-Bug-Id: 5018138 Signed-off-by: Maciej Żenczykowski <maze@google.com> CC: "Erik Kline" <ek@google.com> CC: "Lorenzo Colitti" <lorenzo@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | rawv6.h | s | 559B | 15 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | datalink.h | s | 482B | 13 | David S. Miller | davem@davemloft.net | 1125354745 |  | [NET]: Kill skb->real_dev  Bonding just wants the device before the skb_bond() decapsulation occurs, so simply pass that original device into packet_type->func() as an argument.  It remains to be seen whether we can use this same exact thing to get rid of skb->input_dev as well.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_pdu.h | s | 14K | 363 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127275 |  | net: delete all instances of special processing for token ring  We are going to delete the Token ring support.  This removes any special processing in the core networking for token ring, (aside from net/tr.c itself), leaving the drivers and remaining tokenring support present but inert.  The mass removal of the drivers and net/tr.c will be in a separate commit, so that the history of these files that we still care about won't have the giant deletion tied into their history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | inet_frag.h | s | 2.0K | 61 | Eric Dumazet | edumazet@google.com | 1337319627 |  | ip_frag: struct inet_frags match() method returns a bool  - match() method returns a boolean - return (A && B && C && D) -> return A && B && C && D - fix indentation  Signed-off-by: Eric Dumazet <edumazet@google.com>
f | fib_rules.h | s | 3.0K | 105 | Eric Dumazet | eric.dumazet@gmail.com | 1288204652 |  | fib_rules: __rcu annotates ctarget  Adds __rcu annotation to (struct fib_rule)->ctarget  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipcomp.h | s | 620B | 21 | Tejun Heo | tj@kernel.org | 1266390338 |  | percpu: add __percpu sparse annotations to net  Add __percpu sparse annotations to net.  These annotations are to make sparse consider percpu variables to be in a different address space and warn if accessed without going through percpu accessors.  This patch doesn't affect normal builds.  The macro and type tricks around snmp stats make things a bit interesting.  DEFINE/DECLARE_SNMP_STAT() macros mark the target field as __percpu and SNMP_UPD_PO_STATS() macro is updated accordingly.  All snmp_mib_*() users which used to cast the argument to (void **) are updated to cast it to (void __percpu **).  Signed-off-by: Tejun Heo <tj@kernel.org> Acked-by: David S. Miller <davem@davemloft.net> Cc: Patrick McHardy <kaber@trash.net> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Cc: Vlad Yasevich <vladislav.yasevich@hp.com> Cc: netdev@vger.kernel.org Signed-off-by: David S. Miller <davem@davemloft.net>
f | cfg80211.h | s | 118K | 3164 | Johannes Berg | johannes.berg@intel.com | 1337188095 |  | cfg80211: fix cfg80211_can_beacon_sec_chan prototype  It should return bool, not int. The function even does return true/false.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | timewait_sock.h | s | 1.4K | 45 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | ipconfig.h | s | 772B | 18 | Adrian Bunk | bunk@kernel.org | 1213243238 |  | net: remove CVS keywords  This patch removes CVS keywords that weren't updated for a long time from comments.  Signed-off-by: Adrian Bunk <bunk@kernel.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_c_st.h | s | 1.7K | 43 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
d | bluetooth |  | 9 items |  | Johan Hedberg | johan.hedberg@intel.com | 1339200040 |  | Bluetooth: Add support for encryption key refresh  With LE/SMP the completion of a security level elavation from medium to high is indicated by a HCI Encryption Key Refresh Complete event. The necessary behavior upon receiving this event is a mix of what's done for auth_complete and encryption_change, which is also where most of the event handling code has been copied from.  Signed-off-by: Johan Hedberg <johan.hedberg@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | neighbour.h | s | 10K | 340 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | flow.h | s | 5.7K | 196 | Julian Anastasov | ja@ssi.bg | 1328401788 |  | ipv4: reset flowi parameters on route connect  Eric Dumazet found that commit 813b3b5db83 (ipv4: Use caller's on-stack flowi as-is in output route lookups.) that comes in 3.0 added a regression. The problem appears to be that resulting flowi4_oif is used incorrectly as input parameter to some routing lookups. The result is that when connecting to local port without listener if the IP address that is used is not on a loopback interface we incorrectly assign RTN_UNICAST to the output route because no route is matched by oif=lo. The RST packet can not be sent immediately by tcp_v4_send_reset because it expects RTN_LOCAL.  	So, change ip_route_connect and ip_route_newports to update the flowi4 fields that are input parameters because we do not want unnecessary binding to oif.  	To make it clear what are the input parameters that can be modified during lookup and to show which fields of floiw4 are reused add a new function to update the flowi4 structure: flowi4_update_output.  Thanks to Yurij M. Plotnikov for providing a bug report including a program to reproduce the problem.  Thanks to Eric Dumazet for tracking the problem down to tcp_v4_send_reset and providing initial fix.  Reported-by: Yurij M. Plotnikov <Yurij.Plotnikov@oktetlabs.ru> Signed-off-by: Julian Anastasov <ja@ssi.bg> Acked-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_s_st.h | s | 941B | 28 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | ip_fib.h | s | 7.1K | 238 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | iw_handler.h | s | 21K | 537 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | mip6.h | s | 1.6K | 50 | Eric Dumazet | eric.dumazet@gmail.com | 1275560512 |  | net: use __packed annotation  cleanup patch.  Use new __packed annotation in net/ and include/ (except netfilter)  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_sap.h | s | 1.2K | 32 | Joonwoo Park | joonwpark81@gmail.com | 1207022567 |  | [LLC]: skb allocation size for responses  Allocate the skb for llc responses with the received packet size by using the size adjustable llc_frame_alloc. Don't allocate useless extra payload. Cleanup magic numbers.  So, this fixes oops. Reported by Jim Westfall: kernel: skb_over_panic: text:c0541fc7 len:1000 put:997 head:c166ac00 data:c166ac2f tail:0xc166b017 end:0xc166ac80 dev:eth0 kernel: ------------[ cut here ]------------ kernel: kernel BUG at net/core/skbuff.c:95!  Signed-off-by: Joonwoo Park <joonwpark81@gmail.com> Acked-by: Arnaldo Carvalho de Melo <acme@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | route.h | s | 9.4K | 279 | Roland Dreier | roland@purestorage.com | 1339398287 |  | net: Reorder initialization in ip_route_output to fix gcc warning  If I build with W=1, for every file that includes <net/route.h>, I get the warning      include/net/route.h: In function 'ip_route_output':     include/net/route.h:135:3: warning: initialized field overwritten [-Woverride-init]     include/net/route.h:135:3: warning: (near initialization for 'fl4') [-Woverride-init]  (This is with "gcc (Debian 4.6.3-1) 4.6.3")  A fix seems pretty trivial: move the initialization of .flowi4_tos earlier.  As far as I can tell, this has no effect on code generation.  Signed-off-by: Roland Dreier <roland@purestorage.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip_vs.h | s | 41K | 1289 | Pablo Neira Ayuso | pablo@netfilter.org | 1336498833 |  | ipvs: add support for sync threads  	Allow master and backup servers to use many threads for sync traffic. Add sysctl var "sync_ports" to define the number of threads. Every thread will use single UDP port, thread 0 will use the default port 8848 while last thread will use port 8848+sync_ports-1.  	The sync traffic for connections is scheduled to many master threads based on the cp address but one connection is always assigned to same thread to avoid reordering of the sync messages.  	Remove ip_vs_sync_switch_mode because this check for sync mode change is still risky. Instead, check for mode change under sync_buff_lock.  	Make sure the backup socks do not block on reading.  Special thanks to Aleksey Chudov for helping in all tests.  Signed-off-by: Julian Anastasov <ja@ssi.bg> Tested-by: Aleksey Chudov <aleksey.chudov@gmail.com> Signed-off-by: Simon Horman <horms@verge.net.au>
f | wimax.h | s | 20K | 499 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | af_ieee802154.h | s | 1.6K | 52 | Dmitry Baryshkov | dbaryshkov@gmail.com | 1250139290 |  | af_ieee802154: add support for WANT_ACK socket option  Signed-off-by: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_sock.h | s | 6.2K | 225 | Jiri Benc | jbenc@redhat.com | 1329112001 |  | net: implement IP_RECVTOS for IP_PKTOPTIONS  Currently, it is not easily possible to get TOS/DSCP value of packets from an incoming TCP stream. The mechanism is there, IP_PKTOPTIONS getsockopt with IP_RECVTOS set, the same way as incoming TTL can be queried. This is not actually implemented for TOS, though.  This patch adds this functionality, both for IPv4 (IP_PKTOPTIONS) and IPv6 (IPV6_2292PKTOPTIONS). For IPv4, like in the IP_RECVTTL case, the value of the TOS field is stored from the other party's ACK.  This is needed for proxies which require DSCP transparency. One such example is at http://zph.bratcheda.org/.  Signed-off-by: Jiri Benc <jbenc@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | secure_seq.h | s | 819B | 17 | Eric Dumazet | eric.dumazet@gmail.com | 1319188962 |  | tcp: add const qualifiers where possible  Adding const qualifiers to pointers can ease code review, and spot some bugs. It might allow compiler to optimize code further.  For example, is it legal to temporary write a null cksum into tcphdr in tcp_md5_hash_header() ? I am afraid a sniffer could catch the temporary null value...  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | lapb.h | s | 4.9K | 130 | Joe Perches | joe@perches.com | 1337294720 |  | lapb: Neaten debugging  Enable dynamic debugging and remove a bunch of #ifdef/#endifs.  Add a lapb_dbg(level, fmt, ...) macro and replace the printk(KERN_DEBUG uses. Add pr_fmt and remove embedded prefixes.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | raw.h | s | 1.9K | 60 | Joe Perches | joe@perches.com | 1283978542 |  | include/net/raw.h: Convert raw_seq_private macro to inline  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | sctp |  | 11 items |  | Neil Horman | nhorman@tuxdriver.com | 1341121475 |  | sctp: be more restrictive in transport selection on bundled sacks  It was noticed recently that when we send data on a transport, its possible that we might bundle a sack that arrived on a different transport.  While this isn't a major problem, it does go against the SHOULD requirement in section 6.4 of RFC 2960:   An endpoint SHOULD transmit reply chunks (e.g., SACK, HEARTBEAT ACK,    etc.) to the same destination transport address from which it    received the DATA or control chunk to which it is replying.  This    rule should also be followed if the endpoint is bundling DATA chunks    together with the reply chunk.  This patch seeks to correct that.  It restricts the bundling of sack operations to only those transports which have moved the ctsn of the association forward since the last sack.  By doing this we guarantee that we only bundle outbound saks on a transport that has received a chunk since the last sack.  This brings us into stricter compliance with the RFC.  Vlad had initially suggested that we strictly allow only sack bundling on the transport that last moved the ctsn forward.  While this makes sense, I was concerned that doing so prevented us from bundling in the case where we had received chunks that moved the ctsn on multiple transports.  In those cases, the RFC allows us to select any of the transports having received chunks to bundle the sack on.  so I've modified the approach to allow for that, by adding a state variable to each transport that tracks weather it has moved the ctsn since the last sack.  This I think keeps our behavior (and performance), close enough to our current profile that I think we can do this without a sysctl knob to enable/disable it.  Signed-off-by: Neil Horman <nhorman@tuxdriver.com> CC: Vlad Yaseivch <vyasevich@gmail.com> CC: David S. Miller <davem@davemloft.net> CC: linux-sctp@vger.kernel.org Reported-by: Michele Baldessari <michele@redhat.com> Reported-by: sorin serban <sserban@redhat.com> Acked-by: Vlad Yasevich <vyasevich@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dn.h | s | 7.0K | 206 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | gen_stats.h | s | 1.7K | 42 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | af_rxrpc.h | s | 1.9K | 48 | David S. Miller | davem@davemloft.net | 1303667696 |  | net: Remove __KERNEL__ cpp checks from include/net  These header files are never installed to user consumption, so any __KERNEL__ cpp checks are superfluous.  Projects should also not copy these files into their userland utility sources and try to use them there.  If they insist on doing so, the onus is on them to sanitize the headers as needed.  Signed-off-by: David S. Miller <davem@davemloft.net>
d | nfc |  | 5 items |  | Eric Lapuyade | eric.lapuyade@intel.com | 1337117482 |  | NFC: HCI drivers don't have to keep track of polling state  The NFC core code already does that for them.  Signed-off-by: Eric Lapuyade <eric.lapuyade@intel.com> Signed-off-by: Samuel Ortiz <sameo@linux.intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | sock.h | s | 60K | 1908 | Glauber Costa | glommer@parallels.com | 1338333748 |  | memcg: decrement static keys at real destroy time  We call the destroy function when a cgroup starts to be removed, such as by a rmdir event.  However, because of our reference counters, some objects are still inflight.  Right now, we are decrementing the static_keys at destroy() time, meaning that if we get rid of the last static_key reference, some objects will still have charges, but the code to properly uncharge them won't be run.  This becomes a problem specially if it is ever enabled again, because now new charges will be added to the staled charges making keeping it pretty much impossible.  We just need to be careful with the static branch activation: since there is no particular preferred order of their activation, we need to make sure that we only start using it after all call sites are active.  This is achieved by having a per-memcg flag that is only updated after static_key_slow_inc() returns.  At this time, we are sure all sites are active.  This is made per-memcg, not global, for a reason: it also has the effect of making socket accounting more consistent.  The first memcg to be limited will trigger static_key() activation, therefore, accounting.  But all the others will then be accounted no matter what.  After this patch, only limited memcgs will have its sockets accounted.  [akpm@linux-foundation.org: move enum sock_flag_bits into sock.h,                             document enum sock_flag_bits,                             convert memcg_proto_active() and memcg_proto_activated() to test_bit(),                             redo tcp_update_limit() comment to 80 cols] Signed-off-by: Glauber Costa <glommer@parallels.com> Cc: Tejun Heo <tj@kernel.org> Cc: Li Zefan <lizefan@huawei.com> Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Johannes Weiner <hannes@cmpxchg.org> Cc: Michal Hocko <mhocko@suse.cz> Acked-by: David Miller <davem@davemloft.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | inetpeer.h | s | 3.1K | 108 | Eric Dumazet | edumazet@google.com | 1339004715 |  | inetpeer: fix a race in inetpeer_gc_worker()  commit 5faa5df1fa2024 (inetpeer: Invalidate the inetpeer tree along with the routing cache) added a race :  Before freeing an inetpeer, we must respect a RCU grace period, and make sure no user will attempt to increase refcnt.  inetpeer_invalidate_tree() waits for a RCU grace period before inserting inetpeer tree into gc_list and waking the worker. At that time, no concurrent lookup can find a inetpeer in this tree.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Steffen Klassert <steffen.klassert@secunet.com> Acked-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet6_hashtables.h | s | 3.4K | 96 | Eric Dumazet | eric.dumazet@gmail.com | 1323645916 |  | net: use IS_ENABLED(CONFIG_IPV6)  Instead of testing defined(CONFIG_IPV6) |||| defined(CONFIG_IPV6_MODULE)  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ndisc.h | s | 4.4K | 145 | Alexey I. Froloff | raorn@raorn.name | 1334260617 |  | Treat ND option 31 as userland (DNSSL support)  As specified in RFC6106, DNSSL option contains one or more domain names of DNS suffixes.  8-bit identifier of the DNSSL option type as assigned by the IANA is 31.  This option should also be treated as userland.  Signed-off-by: Alexey I. Froloff <raorn@raorn.name> Signed-off-by: David S. Miller <davem@davemloft.net>
f | genetlink.h | s | 9.2K | 290 | Denys Vlasenko | vda.linux@googlemail.com | 1327954926 |  | net: Deinline __nlmsg_put and genlmsg_put. -7k code on i386 defconfig.     text	   data	    bss	    dec	    hex	filename 8455963	 532732	1810804	10799499 a4c98b	vmlinux.o.before 8448899	 532732	1810804	10792435 a4adf3	vmlinux.o  This change also removes commented-out copy of __nlmsg_put which was last touched in 2005 with "Enable once all users have been converted" comment on top.  Changes in v2: rediffed against net-next.  Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netlabel.h | s | 17K | 559 | Paul Moore | paul.moore@hp.com | 1312246713 |  | doc: Update the email address for Paul Moore in various source files  My @hp.com will no longer be valid starting August 5, 2011 so an update is necessary.  My new email address is employer independent so we don't have to worry about doing this again any time soon.  Signed-off-by: Paul Moore <paul.moore@hp.com> Signed-off-by: Paul Moore <paul@paul-moore.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_c_ev.h | s | 11K | 258 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | codel.h | s | 10K | 307 | Eric Dumazet | edumazet@google.com | 1337196626 |  | fq_codel: should use qdisc backlog as threshold  codel_should_drop() logic allows a packet being not dropped if queue size is under max packet size.  In fq_codel, we have two possible backlogs : The qdisc global one, and the flow local one.  The meaningful one for codel_should_drop() should be the global backlog, not the per flow one, so that thin flows can have a non zero drop/mark probability.  Signed-off-by: Eric Dumazet <edumazet@google.com> Cc: Dave Taht <dave.taht@bufferbloat.net> Cc: Kathleen Nichols <nichols@pollere.com> Cc: Van Jacobson <van@pollere.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet6_connection_sock.h | s | 1.4K | 37 | Alex Copot | alex.mihai.c@gmail.com | 1334431735 |  | tcp: bind() use stronger condition for bind_conflict  We must try harder to get unique (addr, port) pairs when doing port autoselection for sockets with SO_REUSEADDR option set.  We achieve this by adding a relaxation parameter to inet_csk_bind_conflict. When 'relax' parameter is off we return a conflict whenever the current searched pair (addr, port) is not unique.  This tries to address the problems reported in patch: 	8d238b25b1ec22a73b1c2206f111df2faaff8285 	Revert "tcp: bind() fix when many ports are bound"  Tests where ran for creating and binding(0) many sockets on 100 IPs. The results are, on average:  	* 60000 sockets, 600 ports / IP: 		* 0.210 s, 620 (IP, port) duplicates without patch 		* 0.219 s, no duplicates with patch 	* 100000 sockets, 1000 ports / IP: 		* 0.371 s, 1720 duplicates without patch 		* 0.373 s, no duplicates with patch 	* 200000 sockets, 2000 ports / IP: 		* 0.766 s, 6900 duplicates without patch 		* 0.768 s, no duplicates with patch 	* 500000 sockets, 5000 ports / IP: 		* 2.227 s, 41500 duplicates without patch 		* 2.284 s, no duplicates with patch  Signed-off-by: Alex Copot <alex.mihai.c@gmail.com> Signed-off-by: Daniel Baluta <dbaluta@ixiacom.com> Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | gre.h | s | 410B | 13 | Dmitry Kozlov | xeb@mail.ru | 1282457139 |  | PPTP: PPP over IPv4 (Point-to-Point Tunneling Protocol)  PPP: introduce "pptp" module which implements point-to-point tunneling protocol using pppox framework NET: introduce the "gre" module for demultiplexing GRE packets on version criteria      (required to pptp and ip_gre may coexists) NET: ip_gre: update to use the "gre" module  This patch introduces then pptp support to the linux kernel which dramatically speeds up pptp vpn connections and decreases cpu usage in comparison of existing user-space implementation (poptop/pptpclient). There is accel-pptp project (https://sourceforge.net/projects/accel-pptp/) to utilize this module, it contains plugin for pppd to use pptp in client-mode and modified pptpd (poptop) to build high-performance pptp NAS.  There was many changes from initial submitted patch, most important are: 1. using rcu instead of read-write locks 2. using static bitmap instead of dynamically allocated 3. using vmalloc for memory allocation instead of BITS_PER_LONG + __get_free_pages 4. fixed many coding style issues Thanks to Eric Dumazet.  Signed-off-by: Dmitry Kozlov <xeb@mail.ru> Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_s_ev.h | s | 2.3K | 59 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | af_unix.h | s | 2.0K | 66 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | request_sock.h | s | 6.6K | 216 | Eric Dumazet | eric.dumazet@gmail.com | 1316112583 |  | tcp: Change possible SYN flooding messages  "Possible SYN flooding on port xxxx " messages can fill logs on servers.  Change logic to log the message only once per listener, and add two new SNMP counters to track :  TCPReqQFullDoCookies : number of times a SYNCOOKIE was replied to client  TCPReqQFullDrop : number of times a SYN request was dropped because syncookies were not enabled.  Based on a prior patch from Tom Herbert, and suggestions from David.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> CC: Tom Herbert <therbert@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipx.h | s | 3.7K | 132 | David S. Miller | davem@davemloft.net | 1303667696 |  | net: Remove __KERNEL__ cpp checks from include/net  These header files are never installed to user consumption, so any __KERNEL__ cpp checks are superfluous.  Projects should also not copy these files into their userland utility sources and try to use them there.  If they insist on doing so, the onus is on them to sanitize the headers as needed.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | x25device.h | s | 348B | 14 | Andrew Hendry | andrew.hendry@gmail.com | 1271977956 |  | X25: Add if_x25.h and x25 to device identifiers  V2 Feedback from John Hughes. - Add header for userspace implementations such as xot/xoe to use - Use explicit values for interface stability - No changes to driver patches  V1 - Use identifiers instead of magic numbers for X25 layer 3 to device interface. - Also fixed checkpatch notes on updated code.  [ Add new user header to include/linux/Kbuild  -DaveM ]  Signed-off-by: Andrew Hendry <andrew.hendry@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | pkt_sched.h | s | 3.3K | 90 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | phonet |  | 4 items |  | Rémi Denis-Courmont | remi.denis-courmont@nokia.com | 1339975778 |  | net: remove my future former mail address  Signed-off-by: Rémi Denis-Courmont <remi@remlab.net> Cc: Sakari Ailus <sakari.ailus@nokia.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nl802154.h | s | 4.5K | 116 | Dmitry Eremin-Solenikov | dbaryshkov@gmail.com | 1250708902 |  | ieee802154: add support for channel pages from IEEE 802.15.4-2006  IEEE 802.15.4-2006 adds new concept: channel pages, which can contain several channels. Add support for channel pages in the API and in the fakehard driver.  Signed-off-by: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
f | dn_neigh.h | s | 824B | 24 | Steven Whitehouse | steve@chygwyn.com | 1142923359 |  | [DECnet]: Endian annotation and fixes for DECnet.  The typedef for dn_address has been removed in favour of using __le16 or __u16 directly as appropriate. All the DECnet header files are updated accordingly.  The byte ordering of dn_eth2dn() and dn_dn2eth() are both changed since just about all their callers wanted network order rather than host order, so the conversion is now done in the functions themselves.  Several missed endianess conversions have been picked up during the conversion process. The nh_gw field in struct dn_fib_info has been changed from a 32 bit field to 16 bits as it ought to be.  One or two cases of using htons rather than dn_htons in the routing code have been found and fixed.  There are still a few warnings to fix, but this patch deals with the important cases.  Signed-off-by: Steven Whitehouse <steve@chygwyn.com> Signed-off-by: Patrick Caulfield <patrick@tykepenguin.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mac802154.h | s | 4.9K | 124 | alex.bluesman.smirnov@gmail.com | alex.bluesman.smirnov@gmail.com | 1337195804 |  | mac802154: RX data path  Main RX data path implementation between physical and mac layers.  Signed-off-by: Alexander Smirnov <alex.bluesman.smirnov@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | icmp.h | s | 1.5K | 40 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | x25.h | s | 9.7K | 276 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stp.h | s | 358B | 11 | Patrick McHardy | kaber@trash.net | 1215318339 |  | net: Add STP demux layer  Add small STP demux layer for demuxing STP PDUs based on MAC address. This is needed to run both GARP and STP in parallel (or even load the modules) since both use LLC_SAP_BSPAN.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | net_namespace.h | s | 7.0K | 249 | Eric W. Biederman | ebiederm@xmission.com | 1335223468 |  | net sysctl: Add place holder functions for when sysctl support is compiled out of the kernel.  Randy Dunlap <rdunlap@xenotime.net> reported: > On 04/23/2012 12:07 AM, Stephen Rothwell wrote: > >> Hi all, >> >> Changes since 20120420: > > > > ERROR: "unregister_net_sysctl_table" [net/phonet/phonet.ko] undefined! > ERROR: "register_net_sysctl" [net/phonet/phonet.ko] undefined! > > when CONFIG_SYSCTL is not enabled.  Add static inline stub functions to gracefully handle the case when sysctl support is not present.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Acked-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netprio_cgroup.h | s | 1.8K | 70 | Neil Horman | nhorman@tuxdriver.com | 1328904537 |  | netprio_cgroup: fix wrong memory access when NETPRIO_CGROUP=m  When the netprio_cgroup module is not loaded, net_prio_subsys_id is -1, and so sock_update_prioidx() accesses cgroup_subsys array with negative index subsys[-1].  Make the code resembles cls_cgroup code, which is bug free.  Origionally-authored-by: Li Zefan <lizf@cn.fujitsu.com> Signed-off-by: Li Zefan <lizf@cn.fujitsu.com> Signed-off-by: Neil Horman <nhorman@tuxdriver.com> CC: "David S. Miller" <davem@davemloft.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inet_hashtables.h | s | 13K | 356 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | psnap.h | s | 326B | 9 | Stephen Hemminger | shemminger@linux-foundation.org | 1237687610 |  | snap: use const for descriptor  Protocols should be able to use constant value for the descriptor. Minor whitespace cleanup as well  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Acked-by: Arnaldo Carvalho de Melo <acme@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ip.h | s | 13K | 392 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337127275 |  | net: delete all instances of special processing for token ring  We are going to delete the Token ring support.  This removes any special processing in the core networking for token ring, (aside from net/tr.c itself), leaving the drivers and remaining tokenring support present but inert.  The mass removal of the drivers and net/tr.c will be in a separate commit, so that the history of these files that we still care about won't have the giant deletion tied into their history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | flow_keys.h | s | 319B | 14 | Eric Dumazet | eric.dumazet@gmail.com | 1322590623 |  | flow_dissector: use a 64bit load/store  Le lundi 28 novembre 2011 à 19:06 -0500, David Miller a écrit : > From: Dimitris Michailidis <dm@chelsio.com> > Date: Mon, 28 Nov 2011 08:25:39 -0800 > > >> +bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys > >> *flow) > >> +{ > >> +	int poff, nhoff = skb_network_offset(skb); > >> +	u8 ip_proto; > >> +	u16 proto = skb->protocol; > > > > __be16 instead of u16 for proto? > > I'll take care of this when I apply these patches.  ( CC trimmed )  Thanks David !  Here is a small patch to use one 64bit load/store on x86_64 instead of two 32bit load/stores.  [PATCH net-next] flow_dissector: use a 64bit load/store  gcc compiler is smart enough to use a single load/store if we memcpy(dptr, sptr, 8) on x86_64, regardless of CONFIG_CC_OPTIMIZE_FOR_SIZE  In IP header, daddr immediately follows saddr, this wont change in the future. We only need to make sure our flow_keys (src,dst) fields wont break the rule.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | llc_if.h | s | 3.0K | 89 | Ilpo Järvinen | ilpo.jarvinen@helsinki.fi | 1204314377 |  | [LLC]: Kill static inline llc_addrany  After the patch: $ git-grep llc_addrany || wc -l 0  Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi> Acked-by: Arnaldo Carvalho de Melo <acme@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nexthop.h | s | 821B | 26 | Thomas Graf | tgraf@suug.ch | 1158962104 |  | [IPv4]: FIB configuration using struct fib_config  Introduces struct fib_config replacing the ugly struct kern_rta prone to ordering issues. Avoids creating faked netlink messages for auto generated routes or requests via ioctl.  A new interface net/nexthop.h is added to help navigate through nexthop configuration arrays.  A new struct nl_info will be used to carry the necessary netlink information to be used for notifications later on.  Signed-off-by: Thomas Graf <tgraf@suug.ch> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipv6.h | s | 18K | 550 | Eric Dumazet | edumazet@google.com | 1337404096 |  | ipv6: bool/const conversions phase2  Mostly bool conversions, some inline removals and const additions.  Signed-off-by: Eric Dumazet <edumazet@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
