f | platform.h | s | 10K | 309 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1331742942 |  | xen/acpi-processor: C and P-state driver that uploads said data to hypervisor.  This driver solves three problems:  1). Parse and upload ACPI0007 (or PROCESSOR_TYPE) information to the      hypervisor - aka P-states (cpufreq data).  2). Upload the the Cx state information (cpuidle data).  3). Inhibit CPU frequency scaling drivers from loading.  The reason for wanting to solve 1) and 2) is such that the Xen hypervisor is the only one that knows the CPU usage of different guests and can make the proper decision of when to put CPUs and packages in proper states. Unfortunately the hypervisor has no support to parse ACPI DSDT tables, hence it needs help from the initial domain to provide this information. The reason for 3) is that we do not want the initial domain to change P-states while the hypervisor is doing it as well - it causes rather some funny cases of P-states transitions.  For this to work, the driver parses the Power Management data and uploads said information to the Xen hypervisor. It also calls acpi_processor_notify_smm() to inhibit the other CPU frequency scaling drivers from being loaded.  Everything revolves around the 'struct acpi_processor' structure which gets updated during the bootup cycle in different stages. At the startup, when the ACPI parser starts, the C-state information is processed (processor_idle) and saved in said structure as 'power' element. Later on, the CPU frequency scaling driver (powernow-k8 or acpi_cpufreq), would call the the acpi_processor_* (processor_perflib functions) to parse P-states information and populate in the said structure the 'performance' element.  Since we do not want the CPU frequency scaling drivers from loading we have to call the acpi_processor_* functions to parse the P-states and call "acpi_processor_notify_smm" to stop them from loading.  There is also one oddity in this driver which is that under Xen, the physical online CPU count can be different from the virtual online CPU count. Meaning that the macros 'for_[online||possible]_cpu' would process only up to virtual online CPU count. We on the other hand want to process the full amount of physical CPUs. For that, the driver checks if the ACPI IDs count is different from the APIC ID count - which can happen if the user choose to use dom0_max_vcpu argument. In such a case a backup of the PM structure is used and uploaded to the hypervisor.  [v1-v2: Initial RFC implementations that were posted] [v3: Changed the name to passthru suggested by Pasi Kärkkäinen <pasik@iki.fi>] [v4: Added vCPU != pCPU support - aka dom0_max_vcpus support] [v5: Cleaned up the driver, fix bug under Athlon XP] [v6: Changed the driver to a CPU frequency governor] [v7: Jan Beulich <jbeulich@suse.com> suggestion to make it a cpufreq scaling driver      made me rework it as driver that inhibits cpufreq scaling driver] [v8: Per Jan's review comments, fixed up the driver] [v9: Allow to continue even if acpi_processor_preregister_perf.. fails] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | features.h | s | 1.7K | 43 | Stefano Stabellini | stefano.stabellini@eu.citrix.com | 1287779142 |  | xen: support GSI -> pirq remapping in PV on HVM guests  Disable pcifront when running on HVM: it is meant to be used with pv guests that don't have PCI bus.  Use acpi_register_gsi_xen_hvm to remap GSIs into pirqs.  Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | grant_table.h | s | 19K | 500 | Annie Li | annie.li@oracle.com | 1321971824 |  | xen/granttable: Introducing grant table V2 stucture  This patch introduces new structures of grant table V2, grant table V2 is an extension from V1. Grant table is shared between guest and Xen, and Xen is responsible to do corresponding work for grant operations, such as: figure out guest's grant table version, perform different actions based on different grant table version, etc. Although full-page structure of V2 is different from V1, it play the same role as V1.  Acked-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: Annie Li <annie.li@oracle.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | version.h | s | 1.6K | 51 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1238430426 |  | xen: add /sys/hypervisor support  Adds support for Xen info under /sys/hypervisor.  Taken from Novell 2.6.27 backport tree.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
d | io |  | 10 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1326660521 |  | Merge branch 'for-3.3/drivers' of git://git.kernel.dk/linux-block  * 'for-3.3/drivers' of git://git.kernel.dk/linux-block:   mtip32xx: do rebuild monitoring asynchronously   xen-blkfront: Use kcalloc instead of kzalloc to allocate array   mtip32xx: uninitialized variable in mtip_quiesce_io()   mtip32xx: updates based on feedback   xen-blkback: convert hole punching to discard request on loop devices   xen/blkback: Move processing of BLKIF_OP_DISCARD from dispatch_rw_block_io   xen/blk[front||back]: Enhance discard support with secure erasing support.   xen/blk[front||back]: Squash blkif_request_rw and blkif_request_discard together   mtip32xx: update to new ->make_request() API   mtip32xx: add module.h include to avoid conflict with moduleh tree   mtip32xx: mark a few more items static   mtip32xx: ensure that all local functions are static   mtip32xx: cleanup compat ioctl handling   mtip32xx: fix warnings/errors on 32-bit compiles   block: Add driver for Micron RealSSD pcie flash cards
f | event_channel.h | s | 5.6K | 182 | Jeremy Fitzhardinge | jeremy@goop.org | 1229460631 |  | xen: clean up asm/xen/hypervisor.h  Impact: cleanup  hypervisor.h had accumulated a lot of crud, including lots of spurious #includes.  Clean it all up, and go around fixing up everything else accordingly.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | elfnote.h | s | 3.8K | 134 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | xencomm.h | s | 1.6K | 36 | Isaku Yamahata | yamahata@valinux.co.jp | 1209074252 |  | xen: import arch generic part of xencomm  On xen/ia64 and xen/powerpc hypercall arguments are passed by pseudo physical address (guest physical address) so that it's necessary to convert from virtual address into pseudo physical address. The frame work is called xencomm. Import arch generic part of xencomm.  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | memory.h | s | 7.6K | 207 | Ian Campbell | ian.campbell@citrix.com | 1289602806 |  | xen: implement XENMEM_machphys_mapping  This hypercall allows Xen to specify a non-default location for the machine to physical mapping. This capability is used when running a 32 bit domain 0 on a 64 bit hypervisor to shrink the hypervisor hole to exactly the size required.  [ Impact: add Xen hypercall definitions ]  Signed-off-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
d | hvm |  | 2 items |  | Stefano Stabellini | stefano.stabellini@eu.citrix.com | 1331681012 |  | hvc_xen: support PV on HVM consoles  Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | callback.h | s | 3.5K | 88 | Jeremy Fitzhardinge | jeremy@goop.org | 1216198578 |  | xen64: define asm/xen/interface for 64-bit  Copy 64-bit definitions of various interface structures into place.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Cc: Stephen Tweedie <sct@redhat.com> Cc: Eduardo Habkost <ehabkost@redhat.com> Cc: Mark McLoughlin <markmc@redhat.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | vcpu.h | s | 6.5K | 156 | Isaku Yamahata | yamahata@valinux.co.jp | 1209074252 |  | xen: add missing definitions in include/xen/interface/vcpu.h which ia64/xen needs  Add xen handles realted definitions for xen vcpu which ia64/xen needs. Pointer argumsnts for ia64/xen hypercall are passed in pseudo physical address (guest physical address) so that it is required to convert guest kernel virtual address into pseudo physical address. The xen guest handle represents such arguments.  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | physdev.h | s | 7.2K | 255 | Stefano Stabellini | stefano.stabellini@eu.citrix.com | 1332272047 |  | xen: support pirq_eoi_map  The pirq_eoi_map is a bitmap offered by Xen to check which pirqs need to be EOI'd without having to issue an hypercall every time. We use PHYSDEVOP_pirq_eoi_gmfn_v2 to map the bitmap, then if we succeed we use pirq_eoi_map to check whether pirqs need eoi.  Changes in v3:  - explicitly use PHYSDEVOP_pirq_eoi_gmfn_v2 rather than PHYSDEVOP_pirq_eoi_gmfn;  - introduce pirq_check_eoi_map, a function to check if a pirq needs an eoi using the map;  -rename pirq_needs_eoi into pirq_needs_eoi_flag;  - introduce a function pointer called pirq_needs_eoi that is going to be set to the right implementation depending on the availability of PHYSDEVOP_pirq_eoi_gmfn_v2.  Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | xen.h | s | 19K | 489 | Annie Li | annie.li@oracle.com | 1321971824 |  | xen/granttable: Introducing grant table V2 stucture  This patch introduces new structures of grant table V2, grant table V2 is an extension from V1. Grant table is shared between guest and Xen, and Xen is responsible to do corresponding work for grant operations, such as: figure out guest's grant table version, perform different actions based on different grant table version, etc. Although full-page structure of V2 is different from V1, it play the same role as V1.  Acked-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: Annie Li <annie.li@oracle.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | sched.h | s | 3.6K | 99 | Jan Beulich | JBeulich@novell.com | 1300204938 |  | watchdog: Xen watchdog driver  While the hypervisor change adding SCHEDOP_watchdog support included a daemon to make use of the new functionality, having a kernel driver for /dev/watchdog so that user space code doesn't need to distinguish non-Xen and Xen seems to be preferable.  Signed-off-by: Jan Beulich <jbeulich@novell.com> Cc: Jeremy Fitzhardinge <jeremy@goop.org> Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
