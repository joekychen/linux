f | target_core_backend.h | s | 2.2K | 50 | Christoph Hellwig | hch@infradead.org | 1336342286 |  | target: remove struct se_task  We can use struct se_cmd for everything it did.  Make sure to pass the S/G list and data direction to the execution function to ease adding back BIDI support later on.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | target_core_fabric.h | s | 7.9K | 170 | Joern Engel | joern@logfs.org | 1339554785 |  | target: Add TFO->put_session() caller for HW fabric session shutdown  This patch adds an optional target_core_fabric_ops->put_session() caller within the existing target_put_session() code path.  This is required by tcm_qla2xxx code in order to invoke it's own fabric specific session shutdown handler using se_session->sess_kref.  Signed-off-by: Joern Engel <joern@logfs.org> Cc: Roland Dreier <roland@purestorage.com> Cc: Arun Easi <arun.easi@qlogic.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | target_core_base.h | s | 26K | 870 | Nicholas Bellinger | nab@linux-iscsi.org | 1337240758 |  | target: Add MI_REPORT_TARGET_PGS ext. header + implict_trans_secs attribute  This patch adds support for ALUA MI_REPORT_TARGET_PGS extended header format defined within SPC-4.  It changes target core ALUA emulation logic within target_emulate_report_target_port_groups() to support both the extended and original length only header formats.  It includes adding a new 'implict_trans_secs' attribute for each ALUA target port group to control the value returned to the application client for an recommended implict translation timeout in seconds.  By default this value is currently set to zero, and limited up to 255 by virtue of using a single byte in the extended header format.  This value is used by target_emulate_report_target_port_groups() within the extended header logic to set IMPLICIT TRANSITION TIME as defined by spc4r30.  Cc: Hannes Reinecke <hare@suse.de> Cc: Rob Evers <revers@redhat.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Roland Dreier <roland@purestorage.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | target_core_configfs.h | s | 2.1K | 50 | Nicholas Bellinger | nab@linux-iscsi.org | 1300898210 |  | [SCSI] target: add initial statistics  This patch adds a target_core_mib.c statistics conversion for backend context struct se_subsystem_dev + struct se_device config_group based statistics in target_core_device.c using CONFIGFS_EATTR() based struct config_item_types from target_core_stat.c code.  The conversion from backend /proc/scsi_target/mib/ context output to configfs default groups+attributes include scsi_dev, scsi_lu, and scsi_tgt_dev output from within individual:  	/sys/kernel/config/target/core/$HBA/DEV/  The legacy procfs output now appear as individual configfs attributes under:  *) $HBA/$DEV/statistics/scsi_dev:  ||-- indx ||-- inst ||-- ports `-- role  *) $HBA/$DEV/statistics/scsi_lu:  ||-- creation_time ||-- dev ||-- dev_type ||-- full_stat ||-- hs_num_cmds ||-- indx ||-- inst ||-- lu_name ||-- lun ||-- num_cmds ||-- prod ||-- read_mbytes ||-- resets ||-- rev ||-- state_bit ||-- status ||-- vend `-- write_mbytes  *) $HBA/$DEV/statistics/scsi_tgt_dev:  ||-- indx ||-- inst ||-- non_access_lus ||-- num_lus ||-- resets `-- status  The conversion from backend /proc/scsi_target/mib/ context output to configfs default groups+attributes include scsi_port, scsi_tgt_port and scsi_transport output from within individual:  	/sys/kernel/config/target/fabric/$WWN/tpgt_$TPGT/lun/lun_$LUN_ID/statistics/  The legacy procfs output now appear as individual configfs attributes under:  *) fabric/$WWN/tpgt_$TPGT/lun/lun_$LUN_ID/statistics/scsi_port  ||-- busy_count ||-- dev ||-- indx ||-- inst `-- role  *) fabric/$WWN/tpgt_$TPGT/lun/lun_$LUN_ID/statistics/scsi_tgt_port  ||-- dev ||-- hs_in_cmds ||-- in_cmds ||-- indx ||-- inst ||-- name ||-- port_index ||-- read_mbytes `-- write_mbytes  *) fabric/$WWN/tpgt_$TPGT/lun/lun_$LUN_ID/statistics/scsi_transport  ||-- dev_name ||-- device ||-- indx `-- inst  The conversion from backend /proc/scsi_target/mib/ context output to configfs default groups+attributes include scsi_att_intr_port and scsi_auth_intr output from within individual:  	/sys/kernel/config/target/fabric/$WWN/tpgt_$TPGT/acls/$INITIATOR_WWN/lun_$LUN_ID/statistics/  The legacy procfs output now appear as individual configfs attributes under:  *) acls/$INITIATOR_WWN/lun_$LUN_ID/statistics/scsi_att_intr_port  ||-- dev ||-- indx ||-- inst ||-- port ||-- port_auth_indx `-- port_ident  *) acls/$INITIATOR_WWN/lun_$LUN_ID/statistics/scsi_auth_intr  ||-- att_count ||-- creation_time ||-- dev ||-- dev_or_port ||-- hs_num_cmds ||-- indx ||-- inst ||-- intr_name ||-- map_indx ||-- num_cmds ||-- port ||-- read_mbytes ||-- row_status `-- write_mbytes  Also, this includes adding struct target_fabric_configfs_template-> tfc_wwn_fabric_stats_cit and ->tfc_tpg_nacl_stat_cit respectively for use during target_core_fabric_configfs.c:target_fabric_setup_cits()  Signed-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | configfs_macros.h | s | 5.4K | 137 | Paul Bolle | pebolle@tiscali.nl | 1317139684 |  | doc: fix broken references  There are numerous broken references to Documentation files (in other Documentation files, in comments, etc.). These broken references are caused by typo's in the references, and by renames or removals of the Documentation files. Some broken references are simply odd.  Fix these broken references, sometimes by dropping the irrelevant text they were part of.  Signed-off-by: Paul Bolle <pebolle@tiscali.nl> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | target_core_fabric_configfs.h | s | 4.1K | 85 | Nicholas Bellinger | nab@linux-iscsi.org | 1295021549 |  | [SCSI] target: Add LIO target core v4.0.0-rc6  LIO target is a full featured in-kernel target framework with the following feature set:  High-performance, non-blocking, multithreaded architecture with SIMD support.  Advanced SCSI feature set:      * Persistent Reservations (PRs)     * Asymmetric Logical Unit Assignment (ALUA)     * Protocol and intra-nexus multiplexing, load-balancing and failover (MC/S)     * Full Error Recovery (ERL=0,1,2)     * Active/active task migration and session continuation (ERL=2)     * Thin LUN provisioning (UNMAP and WRITE_SAMExx)  Multiprotocol target plugins  Storage media independence:      * Virtualization of all storage media; transparent mapping of IO to LUNs     * No hard limits on number of LUNs per Target; maximum LUN size ~750 TB     * Backstores: SATA, SAS, SCSI, BluRay, DVD, FLASH, USB, ramdisk, etc.  Standards compliance:      * Full compliance with IETF (RFC 3720)     * Full implementation of SPC-4 PRs and ALUA  Significant code cleanups done by Christoph Hellwig.  [jejb: fix up for new block bdev exclusive interface. Minor fixes from  Randy Dunlap and Dan Carpenter.] Signed-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
