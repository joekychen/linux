f | xt_HMARK.h | s | 841B | 45 | Hans Schillstrom | hans@schillstrom.com | 1339073581 |  | netfilter: xt_HMARK: fix endianness and provide consistent hashing  This patch addresses two issues:  a) Fix usage of u32 and __be32 that causes endianess warnings via sparse. b) Ensure consistent hashing in a cluster that is composed of big and    little endian systems. Thus, we obtain the same hash mark in an    heterogeneous cluster.  Reported-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Hans Schillstrom <hans@schillstrom.com> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_ipvs.h | s | 588B | 24 | Sam Ravnborg | sam@ravnborg.org | 1282199666 |  | netfilter: fix userspace header warning  "make headers_check" issued the following warning:    CHECK   include/linux/netfilter (64 files) usr/include/linux/netfilter/xt_ipvs.h:19: found __[us]{8,16,32,64} type without #include <linux/types.h>  Fix this by as suggested including linux/types.h.  Signed-off-by: Sam Ravnborg <sam@ravnborg.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_policy.h | s | 1.1K | 59 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_mac.h | s | 135B | 7 | Harald Welte | laforge@netfilter.org | 1137103603 |  | [NETFILTER] x_tables: Abstraction layer for {ip,ip6,arp}_tables  This monster-patch tries to do the best job for unifying the data structures and backend interfaces for the three evil clones ip_tables, ip6_tables and arp_tables.  In an ideal world we would never have allowed this kind of copy+paste programming... but well, our world isn't (yet?) ideal.  o introduce a new x_tables module o {ip,arp,ip6}_tables depend on this x_tables module o registration functions for tables, matches and targets are only   wrappers around x_tables provided functions o all matches/targets that are used from ip_tables and ip6_tables   are now implemented as xt_FOOBAR.c files and provide module aliases   to ipt_FOOBAR and ip6t_FOOBAR o header files for xt_matches are in include/linux/netfilter/,   include/linux/netfilter_{ipv4,ipv6} contains compatibility wrappers   around the xt_FOOBAR.h headers  Based on this patchset we're going to further unify the code, gradually getting rid of all the layer 3 specific assumptions.  Signed-off-by: Harald Welte <laforge@netfilter.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_hashlimit.h | s | 2.0K | 63 | Florian Westphal | fw@strlen.de | 1337208991 |  | netfilter: xt_hashlimit: use _ALL macro to reject unknown flag bits  David Miller says:      The canonical way to validate if the set bits are in a valid      range is to have a "_ALL" macro, and test:      if (val & ~XT_HASHLIMIT_ALL)          goto err;"  make it so.  Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_quota.h | s | 337B | 16 | Mike Frysinger | vapier@gentoo.org | 1300486485 |  | headers: use __aligned_xx types for userspace  Now that we finally have __aligned_xx exported to userspace, convert the headers that get exported over to the proper type.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_amanda.h | s | 324B | 9 | Herbert Xu | herbert@gondor.apana.org.au | 1192476389 |  | [NETFILTER]: Replace sk_buff ** with sk_buff *  With all the users of the double pointers removed, this patch mops up by finally replacing all occurances of sk_buff ** in the netfilter API by sk_buff *.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_length.h | s | 158B | 8 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_cluster.h | s | 311B | 14 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_recent.h | s | 798B | 27 | Tim Gardner | tim.gardner@canonical.com | 1268839136 |  | netfilter: xt_recent: check for unsupported user space flags  Signed-off-by: Tim Gardner <tim.gardner@canonical.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_string.h | s | 601B | 27 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_sane.h | s | 357B | 15 | Michal Schmidt | mschmidt@redhat.com | 1170967149 |  | [NETFILTER]: Add SANE connection tracking helper  This is nf_conntrack_sane, a netfilter connection tracking helper module for the SANE protocol used by the 'saned' daemon to make scanners available via network. The SANE protocol uses separate control & data connections, similar to passive FTP. The helper module is needed to recognize the data connection as RELATED to the control one.  Signed-off-by: Michal Schmidt <mschmidt@redhat.com> Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nfnetlink.h | s | 3.0K | 80 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_addrtype.h | s | 1021B | 37 | Florian Westphal | fwestphal@astaro.com | 1300216664 |  | netfilter: xt_addrtype: ipv6 support  The kernel will refuse certain types that do not work in ipv6 mode. We can then add these features incrementally without risk of userspace breakage.  Signed-off-by: Florian Westphal <fwestphal@astaro.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_mark.h | s | 197B | 11 | Jan Engelhardt | jengelh@medozas.de | 1268837316 |  | netfilter: xtables: merge xt_MARK into xt_mark  Two arguments for combining the two: - xt_mark is pretty useless without xt_MARK - the actual code is so small anyway that the kmod metadata and the module   in its loaded state totally outweighs the combined actual code size.  i586-before: -rw-r--r-- 1 jengelh users 3821 Feb 10 01:01 xt_MARK.ko -rw-r--r-- 1 jengelh users 2592 Feb 10 00:04 xt_MARK.o -rw-r--r-- 1 jengelh users 3274 Feb 10 01:01 xt_mark.ko -rw-r--r-- 1 jengelh users 2108 Feb 10 00:05 xt_mark.o    text    data     bss     dec     hex filename     354     264       0     618     26a xt_MARK.o     223     176       0     399     18f xt_mark.o And the runtime size is like 14 KB.  i586-after: -rw-r--r-- 1 jengelh users 3264 Feb 18 17:28 xt_mark.o  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_RATEEST.h | s | 305B | 11 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | x_tables.h | s | 16K | 527 | Christoph Lameter | cl@linux.com | 1324579220 |  | percpu: Remove irqsafe_cpu_xxx variants  We simply say that regular this_cpu use must be safe regardless of preemption and interrupt state.  That has no material change for x86 and s390 implementations of this_cpu operations.  However, arches that do not provide their own implementation for this_cpu operations will now get code generated that disables interrupts instead of preemption.  -tj: This is part of on-going percpu API cleanup.  For detailed      discussion of the subject, please refer to the following thread.       http://thread.gmane.org/gmane.linux.kernel/1222078  Signed-off-by: Christoph Lameter <cl@linux.com> Signed-off-by: Tejun Heo <tj@kernel.org> LKML-Reference: <alpine.DEB.2.00.1112221154380.11787@router.home>
f | nf_conntrack_sip.h | s | 5.4K | 162 | Simon Horman | horms@verge.net.au | 1286199923 |  | netfilter: nf_conntrack_sip: Add callid parser  Signed-off-by: Simon Horman <horms@verge.net.au> Acked-by: Julian Anastasov <ja@ssi.bg>
f | xt_CONNSECMARK.h | s | 238B | 11 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_devgroup.h | s | 366B | 17 | Patrick McHardy | kaber@trash.net | 1296687943 |  | netfilter: xtables: add device group match  Add a new 'devgroup' match to match on the device group of the incoming and outgoing network device of a packet.  Signed-off-by: Patrick McHardy <kaber@trash.net>
f | nfnetlink_log.h | s | 2.5K | 81 | Mike Frysinger | vapier@gentoo.org | 1300486485 |  | headers: use __aligned_xx types for userspace  Now that we finally have __aligned_xx exported to userspace, convert the headers that get exported over to the proper type.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_LED.h | s | 407B | 11 | Patrick McHardy | kaber@trash.net | 1241526672 |  | netfilter: add missing linux/types.h include to xt_LED.h  Pointed out by Dave Miller:    CHECK   include/linux/netfilter (57 files) /home/davem/src/GIT/net-2.6/usr/include/linux/netfilter/xt_LED.h:6: found __[us]{8,16,32,64} type without #include <linux/types.h>  Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_owner.h | s | 306B | 14 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_nfacct.h | s | 238B | 9 | Pablo Neira Ayuso | pablo@netfilter.org | 1324777397 |  | netfilter: xtables: add nfacct match to support extended accounting  This patch adds the match that allows to perform extended accounting. It requires the new nfnetlink_acct infrastructure.   # iptables -I INPUT -p tcp --sport 80 -m nfacct --nfacct-name http-traffic  # iptables -I OUTPUT -p tcp --dport 80 -m nfacct --nfacct-name http-traffic  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nfnetlink_conntrack.h | s | 4.1K | 182 | Pablo Neira Ayuso | pablo@netfilter.org | 1331138446 |  | netfilter: ctnetlink: allow to set expectfn for expectations  This patch allows you to set expectfn which is specifically used by the NAT side of most of the existing conntrack helpers.  I have added a symbol map that uses a string as key to look up for the function that is attached to the expectation object. This is the best solution I came out with to solve this issue.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_conntrack.h | s | 2.4K | 68 | Ben Hutchings | ben@decadent.org.uk | 1314374570 |  | headers, xtables: Add missing #include <linux/netfilter.h>  Various headers use union nf_inet_addr, defined in <linux/netfilter.h>.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Acked-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_DSCP.h | s | 634B | 23 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_comment.h | s | 167B | 7 | Jan Engelhardt | jengelh@medozas.de | 1294916711 |  | netfilter: xt_comment: drop unneeded unsigned qualifier  Since a string is stored, and not something like a MAC address that would rely on (un)signedness, drop the qualifier.  Signed-off-by: Jan Engelhardt <jengelh@medozas.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nf_conntrack_common.h | s | 4.1K | 114 | Pablo Neira Ayuso | pablo@netfilter.org | 1336499082 |  | netfilter: nf_conntrack: fix explicit helper attachment and NAT  Explicit helper attachment via the CT target is broken with NAT if non-standard ports are used. This problem was hidden behind the automatic helper assignment routine. Thus, it becomes more noticeable now that we can disable the automatic helper assignment with Eric Leblond's:  9e8ac5a netfilter: nf_ct_helper: allow to disable automatic helper assignment  Basically, nf_conntrack_alter_reply asks for looking up the helper up if NAT is enabled. Unfortunately, we don't have the conntrack template at that point anymore.  Since we don't want to rely on the automatic helper assignment, we can skip the second look-up and stick to the helper that was attached by iptables. With the CT target, the user is in full control of helper attachment, thus, the policy is to trust what the user explicitly configures via iptables (no automatic magic anymore).  Interestingly, this bug was hidden by the automatic helper look-up code. But it can be easily trigger if you attach the helper in a non-standard port, eg.  iptables -I PREROUTING -t raw -p tcp --dport 8888 \ 	-j CT --helper ftp  And you disabled the automatic helper assignment.  I added the IPS_HELPER_BIT that allows us to differenciate between a helper that has been explicitly attached and those that have been automatically assigned. I didn't come up with a better solution (having backward compatibility in mind).  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nf_conntrack_proto_gre.h | s | 2.1K | 79 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | xt_sctp.h | s | 2.2K | 71 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_LOG.h | s | 579B | 16 | Richard Weinberger | richard@nod.at | 1331138449 |  | netfilter: merge ipt_LOG and ip6_LOG into xt_LOG  ipt_LOG and ip6_LOG have a lot of common code, merge them to reduce duplicate code.  Signed-off-by: Richard Weinberger <richard@nod.at> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_time.h | s | 501B | 22 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_connmark.h | s | 691B | 25 | Jan Engelhardt | jengelh@medozas.de | 1268837316 |  | netfilter: xtables: merge xt_CONNMARK into xt_connmark  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_NFLOG.h | s | 326B | 15 | Ingo Molnar | mingo@elte.hu | 1238088580 |  | Merge commit 'v2.6.29' into core/header-fixes
f | xt_rpfilter.h | s | 419B | 19 | Florian Westphal | fw@strlen.de | 1323035017 |  | netfilter: add ipv4 reverse path filter match  This tries to do the same thing as fib_validate_source(), but differs in several aspects.  The most important difference is that the reverse path filter built into fib_validate_source uses the oif as iif when performing the reverse lookup.  We do not do this, as the oif is not yet known by the time the PREROUTING hook is invoked.  We can't wait until FORWARD chain because by the time FORWARD is invoked ipv4 forward path may have already sent icmp messages is response to to-be-discarded-via-rpfilter packets.  To avoid the such an additional lookup in PREROUTING, Patrick McHardy suggested to attach the path information directly in the match (i.e., just do what the standard ipv4 path does a bit earlier in PREROUTING).  This works, but it also has a few caveats. Most importantly, when using marks in PREROUTING to re-route traffic based on the nfmark, -m rpfilter would have to be used after the nfmark has been set; otherwise the nfmark would have no effect (because the route is already attached).  Another problem would be interaction with -j TPROXY, as this target sets an nfmark and uses ACCEPT instead of continue, i.e. such a version of -m rpfilter cannot be used for the initial to-be-intercepted packets.  In case in turns out that the oif is required, we can add Patricks suggestion with a new match option (e.g. --rpf-use-oif) to keep ruleset compatibility.  Another difference to current builtin ipv4 rpfilter is that packets subject to ipsec transformation are not automatically excluded. If you want this, simply combine -m rpfilter with the policy match.  Packets arriving on loopback interfaces always match.  Signed-off-by: Florian Westphal <fw@strlen.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_statistic.h | s | 653B | 30 | Linus Torvalds | torvalds@linux-foundation.org | 1238109101 |  | Merge branch 'header-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip  * 'header-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (50 commits)   x86: headers cleanup - setup.h   emu101k1.h: fix duplicate include of <linux/types.h>   compiler-gcc4: conditionalize #error on __KERNEL__   remove __KERNEL_STRICT_NAMES   make netfilter use strict integer types   make drm headers use strict integer types   make MTD headers use strict integer types   make most exported headers use strict integer types   make exported headers use strict posix types   unconditionally include asm/types.h from linux/types.h   make linux/types.h as assembly safe   Neither asm/types.h nor linux/types.h is required for arch/ia64/include/asm/fpu.h   headers_check fix cleanup: linux/reiserfs_fs.h   headers_check fix cleanup: linux/nubus.h   headers_check fix cleanup: linux/coda_psdev.h   headers_check fix: x86, setup.h   headers_check fix: x86, prctl.h   headers_check fix: linux/reinserfs_fs.h   headers_check fix: linux/socket.h   headers_check fix: linux/nubus.h   ...  Manually fix trivial conflicts in: 	include/linux/netfilter/xt_limit.h 	include/linux/netfilter/xt_statistic.h
f | xt_esp.h | s | 355B | 11 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_sctp.h | s | 530B | 20 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_pptp.h | s | 7.3K | 276 | Jan Engelhardt | jengelh@computergmbh.de | 1201836489 |  | [NETFILTER]: nf_{conntrack,nat}_pptp: annotate PPtP helper with const  Signed-off-by: Jan Engelhardt <jengelh@computergmbh.de> Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_CHECKSUM.h | s | 500B | 16 | Michael S. Tsirkin | mst@redhat.com | 1279282100 |  | netfilter: correct CHECKSUM header and export it  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | nf_conntrack_tuple_common.h | s | 708B | 34 | Patrick McHardy | kaber@trash.net | 1324647403 |  | netfilter: nf_nat: export NAT definitions to userspace  Export the NAT definitions to userspace. So far userspace (specifically, iptables) has been copying the headers files from include/net. Also rename some structures and definitions in preparation for IPv6 NAT. Since these have never been officially exported, this doesn't affect existing userspace code.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nf_conntrack_tcp.h | s | 2.2K | 65 | Pablo Neira Ayuso | pablo@netfilter.org | 1331138475 |  | netfilter: nf_ct_tcp: move retransmission and unacknowledged timeout to array  This patch moves the retransmission and unacknowledged timeouts to the tcp_timeouts array. This change is required by follow-up patches.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nf_conntrack_tftp.h | s | 441B | 15 | Herbert Xu | herbert@gondor.apana.org.au | 1192476389 |  | [NETFILTER]: Replace sk_buff ** with sk_buff *  With all the users of the double pointers removed, this patch mops up by finally replacing all occurances of sk_buff ** in the netfilter API by sk_buff *.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_CT.h | s | 532B | 24 | Pablo Neira Ayuso | pablo@netfilter.org | 1331138488 |  | netfilter: xt_CT: allow to attach timeout policy + glue code  This patch allows you to attach the timeout policy via the CT target, it adds a new revision of the target to ensure backward compatibility. Moreover, it also contains the glue code to stick the timeout object defined via nfnetlink_cttimeout to the given flow.  Example usage (it requires installing the nfct tool and libnetfilter_cttimeout):  1) create the timeout policy:   nfct timeout add tcp-policy0 inet tcp \ 	established 1000 close 10 time_wait 10 last_ack 10  2) attach the timeout policy to the packet:   iptables -I PREROUTING -t raw -p tcp -j CT --timeout tcp-policy0  You have to install the following user-space software:  a) libnetfilter_cttimeout:    git://git.netfilter.org/libnetfilter_cttimeout  b) nfct:    git://git.netfilter.org/nfct  You also have to get iptables with -j CT --timeout support.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_ecn.h | s | 673B | 29 | Jan Engelhardt | jengelh@medozas.de | 1325014298 |  | netfilter: xtables: give xt_ecn its own name  Use the new macro and struct names in xt_ecn.h, and put the old definitions into a definition-forwarding ipt_ecn.h.  Signed-off-by: Jan Engelhardt <jengelh@medozas.de> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_NFQUEUE.h | s | 478B | 24 | Florian Westphal | fw@strlen.de | 1295363310 |  | netfilter: allow NFQUEUE bypass if no listener is available  If an skb is to be NF_QUEUE'd, but no program has opened the queue, the packet is dropped.  This adds a v2 target revision of xt_NFQUEUE that allows packets to continue through the ruleset instead.  Because the actual queueing happens outside of the target context, the 'bypass' flag has to be communicated back to the netfilter core.  Unfortunately the only choice to do this without adding a new function argument is to use the target function return value (i.e. the verdict).  In the NF_QUEUE case, the upper 16bit already contain the queue number to use.  The previous patch reduced NF_VERDICT_MASK to 0xff, i.e. we now have extra room for a new flag.  If a hook issued a NF_QUEUE verdict, then the netfilter core will continue packet processing if the queueing hook returns -ESRCH (== "this queue does not exist") and the new NF_VERDICT_FLAG_QUEUE_BYPASS flag is set in the verdict value.  Note: If the queue exists, but userspace does not consume packets fast enough, the skb will still be dropped.  Signed-off-by: Florian Westphal <fwestphal@astaro.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_SECMARK.h | s | 486B | 18 | Eric Paris | eparis@redhat.com | 1287616368 |  | secmark: make secmark object handling generic  Right now secmark has lots of direct selinux calls.  Use all LSM calls and remove all SELinux specific knowledge.  The only SELinux specific knowledge we leave is the mode.  The only point is to make sure that other LSMs at least test this generic code before they assume it works.  (They may also have to make changes if they do not represent labels as strings)  Signed-off-by: Eric Paris <eparis@redhat.com> Acked-by: Paul Moore <paul.moore@hp.com> Acked-by: Patrick McHardy <kaber@trash.net> Signed-off-by: James Morris <jmorris@namei.org>
f | Kbuild | g | 1.9K |  | Pablo Neira Ayuso | pablo@netfilter.org | 1331138482 |  | netfilter: add cttimeout infrastructure for fine timeout tuning  This patch adds the infrastructure to add fine timeout tuning over nfnetlink. Now you can use the NFNL_SUBSYS_CTNETLINK_TIMEOUT subsystem to create/delete/dump timeout objects that contain some specific timeout policy for one flow.  The follow up patches will allow you attach timeout policy object to conntrack via the CT target and the conntrack extension infrastructure.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_realm.h | s | 157B | 9 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_state.h | s | 268B | 9 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_snmp.h | s | 232B | 7 | Jiri Olsa | jolsa@redhat.com | 1295370744 |  | netfilter: nf_conntrack: nf_conntrack snmp helper  Adding support for SNMP broadcast connection tracking. The SNMP broadcast requests are now paired with the SNMP responses. Thus allowing using SNMP broadcasts with firewall enabled.  Please refer to the following conversation: http://marc.info/?l=netfilter-devel&m=125992205006600&w=2  Patrick McHardy wrote: > > The best solution would be to add generic broadcast tracking, the > > use of expectations for this is a bit of abuse. > > The second best choice I guess would be to move the help() function > > to a shared module and generalize it so it can be used for both. This patch implements the "second best choice".  Since the netbios-ns conntrack module uses the same helper functionality as the snmp, only one helper function is added for both snmp and netbios-ns modules into the new object - nf_conntrack_broadcast.  Signed-off-by: Jiri Olsa <jolsa@redhat.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
d | ipset |  | 9 items |  | David S. Miller | davem@davemloft.net | 1337221057 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | xt_MARK.h | s | 121B | 4 | Jan Engelhardt | jengelh@medozas.de | 1268837316 |  | netfilter: xtables: merge xt_MARK into xt_mark  Two arguments for combining the two: - xt_mark is pretty useless without xt_MARK - the actual code is so small anyway that the kmod metadata and the module   in its loaded state totally outweighs the combined actual code size.  i586-before: -rw-r--r-- 1 jengelh users 3821 Feb 10 01:01 xt_MARK.ko -rw-r--r-- 1 jengelh users 2592 Feb 10 00:04 xt_MARK.o -rw-r--r-- 1 jengelh users 3274 Feb 10 01:01 xt_mark.ko -rw-r--r-- 1 jengelh users 2108 Feb 10 00:05 xt_mark.o    text    data     bss     dec     hex filename     354     264       0     618     26a xt_MARK.o     223     176       0     399     18f xt_mark.o And the runtime size is like 14 KB.  i586-after: -rw-r--r-- 1 jengelh users 3264 Feb 18 17:28 xt_mark.o  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_connbytes.h | s | 514B | 22 | Mike Frysinger | vapier@gentoo.org | 1300486485 |  | headers: use __aligned_xx types for userspace  Now that we finally have __aligned_xx exported to userspace, convert the headers that get exported over to the proper type.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_h323.h | s | 3.0K | 80 | Jan Engelhardt | jengelh@computergmbh.de | 1201561147 |  | [NETFILTER]: Introduce nf_inet_address  A few netfilter modules provide their own union of IPv4 and IPv6 address storage. Will unify that in this patch series.  (1/4): Rename union nf_conntrack_address to union nf_inet_addr and move it to x_tables.h.  Signed-off-by: Jan Engelhardt <jengelh@computergmbh.de> Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_CLASSIFY.h | s | 154B | 7 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | nf_conntrack_h323_asn1.h | s | 3.3K | 89 | Patrick McHardy | kaber@trash.net | 1165126126 |  | [NETFILTER]: nf_conntrack/nf_nat: add H.323 helper port  Add IPv4 and IPv6 capable nf_conntrack port of the H.323 conntrack/NAT helper.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nfnetlink_acct.h | s | 679B | 28 | Pablo Neira Ayuso | pablo@netfilter.org | 1324777383 |  | netfilter: add extended accounting infrastructure over nfnetlink  We currently have two ways to account traffic in netfilter:  - iptables chain and rule counters:   # iptables -L -n -v Chain INPUT (policy DROP 3 packets, 867 bytes)  pkts bytes target     prot opt in     out     source               destination     8  1104 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0  - use flow-based accounting provided by ctnetlink:   # conntrack -L tcp      6 431999 ESTABLISHED src=192.168.1.130 dst=212.106.219.168 sport=58152 dport=80 packets=47 bytes=7654 src=212.106.219.168 dst=192.168.1.130 sport=80 dport=58152 packets=49 bytes=66340 [ASSURED] mark=0 use=1  While trying to display real-time accounting statistics, we require to pool the kernel periodically to obtain this information. This is OK if the number of flows is relatively low. However, in case that the number of flows is huge, we can spend a considerable amount of cycles to iterate over the list of flows that have been obtained.  Moreover, if we want to obtain the sum of the flow accounting results that match some criteria, we have to iterate over the whole list of existing flows, look for matchings and update the counters.  This patch adds the extended accounting infrastructure for nfnetlink which aims to allow displaying real-time traffic accounting without the need of complicated and resource-consuming implementation in user-space. Basically, this new infrastructure allows you to create accounting objects. One accounting object is composed of packet and byte counters.  In order to manipulate create accounting objects, you require the new libnetfilter_acct library. It contains several examples of use:  libnetfilter_acct/examples# ./nfacct-add http-traffic libnetfilter_acct/examples# ./nfacct-get http-traffic = { pkts = 000000000000,   bytes = 000000000000 };  Then, you can use one of this accounting objects in several iptables rules using the new nfacct match (which comes in a follow-up patch):   # iptables -I INPUT -p tcp --sport 80 -m nfacct --nfacct-name http-traffic  # iptables -I OUTPUT -p tcp --dport 80 -m nfacct --nfacct-name http-traffic  The idea is simple: if one packet matches the rule, the nfacct match updates the counters.  Thanks to Patrick McHardy, Eric Dumazet, Changli Gao for reviewing and providing feedback for this contribution.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | nf_conntrack_dccp.h | s | 760B | 34 | Patrick McHardy | kaber@trash.net | 1208164549 |  | [NETFILTER]: nf_conntrack: add DCCP protocol support  Add DCCP conntrack helper. Thanks to Gerrit Renker <gerrit@erg.abdn.ac.uk> for review and testing.  Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_connlimit.h | s | 597B | 30 | Ben Hutchings | ben@decadent.org.uk | 1314374570 |  | headers, xtables: Add missing #include <linux/netfilter.h>  Various headers use union nf_inet_addr, defined in <linux/netfilter.h>.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Acked-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_u32.h | s | 689B | 34 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nf_conntrack_h323_types.h | s | 33K | 874 | Eric Dumazet | eric.dumazet@gmail.com | 1334508280 |  | net: cleanup unsigned to unsigned int  Use of "unsigned int" is preferred to bare "unsigned" in net tree.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_dccp.h | s | 420B | 17 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_tcpudp.h | s | 1.2K | 29 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_iprange.h | s | 518B | 16 | Ben Hutchings | ben@decadent.org.uk | 1314374570 |  | headers, xtables: Add missing #include <linux/netfilter.h>  Various headers use union nf_inet_addr, defined in <linux/netfilter.h>.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Acked-by: Patrick McHardy <kaber@trash.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_TCPMSS.h | s | 172B | 8 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_cpu.h | s | 136B | 8 | Eric Dumazet | eric.dumazet@gmail.com | 1279882776 |  | netfilter: add xt_cpu match  In some situations a CPU match permits a better spreading of connections, or select targets only for a given cpu.  With Remote Packet Steering or multiqueue NIC and appropriate IRQ affinities, we can distribute trafic on available cpus, per session. (all RX packets for a given flow is handled by a given cpu)  Some legacy applications being not SMP friendly, one way to scale a server is to run multiple copies of them.  Instead of randomly choosing an instance, we can use the cpu number as a key so that softirq handler for a whole instance is running on a single cpu, maximizing cache effects in TCP/UDP stacks.  Using NAT for example, a four ways machine might run four copies of server application, using a separate listening port for each instance, but still presenting an unique external port :  iptables -t nat -A PREROUTING -p tcp --dport 80 -m cpu --cpu 0 \         -j REDIRECT --to-port 8080  iptables -t nat -A PREROUTING -p tcp --dport 80 -m cpu --cpu 1 \         -j REDIRECT --to-port 8081  iptables -t nat -A PREROUTING -p tcp --dport 80 -m cpu --cpu 2 \         -j REDIRECT --to-port 8082  iptables -t nat -A PREROUTING -p tcp --dport 80 -m cpu --cpu 3 \         -j REDIRECT --to-port 8083  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_osf.h | s | 3.3K | 114 | Jaswinder Singh Rajput | jaswinderrajput@gmail.com | 1246278507 |  | netfilter: headers_check fix: linux/netfilter/xt_osf.h  fix the following 'make headers_check' warnings:    usr/include/linux/netfilter/xt_osf.h:40: found __[us]{8,16,32,64} type without #include <linux/types.h>  Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_limit.h | s | 610B | 18 | Linus Torvalds | torvalds@linux-foundation.org | 1238109101 |  | Merge branch 'header-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip  * 'header-fixes-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip: (50 commits)   x86: headers cleanup - setup.h   emu101k1.h: fix duplicate include of <linux/types.h>   compiler-gcc4: conditionalize #error on __KERNEL__   remove __KERNEL_STRICT_NAMES   make netfilter use strict integer types   make drm headers use strict integer types   make MTD headers use strict integer types   make most exported headers use strict integer types   make exported headers use strict posix types   unconditionally include asm/types.h from linux/types.h   make linux/types.h as assembly safe   Neither asm/types.h nor linux/types.h is required for arch/ia64/include/asm/fpu.h   headers_check fix cleanup: linux/reiserfs_fs.h   headers_check fix cleanup: linux/nubus.h   headers_check fix cleanup: linux/coda_psdev.h   headers_check fix: x86, setup.h   headers_check fix: x86, prctl.h   headers_check fix: linux/reinserfs_fs.h   headers_check fix: linux/socket.h   headers_check fix: linux/nubus.h   ...  Manually fix trivial conflicts in: 	include/linux/netfilter/xt_limit.h 	include/linux/netfilter/xt_statistic.h
f | nf_conntrack_irc.h | s | 372B | 11 | Herbert Xu | herbert@gondor.apana.org.au | 1192476389 |  | [NETFILTER]: Replace sk_buff ** with sk_buff *  With all the users of the double pointers removed, this patch mops up by finally replacing all occurances of sk_buff ** in the netfilter API by sk_buff *.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_helper.h | s | 125B | 7 | Harald Welte | laforge@netfilter.org | 1137103603 |  | [NETFILTER] x_tables: Abstraction layer for {ip,ip6,arp}_tables  This monster-patch tries to do the best job for unifying the data structures and backend interfaces for the three evil clones ip_tables, ip6_tables and arp_tables.  In an ideal world we would never have allowed this kind of copy+paste programming... but well, our world isn't (yet?) ideal.  o introduce a new x_tables module o {ip,arp,ip6}_tables depend on this x_tables module o registration functions for tables, matches and targets are only   wrappers around x_tables provided functions o all matches/targets that are used from ip_tables and ip6_tables   are now implemented as xt_FOOBAR.c files and provide module aliases   to ipt_FOOBAR and ip6t_FOOBAR o header files for xt_matches are in include/linux/netfilter/,   include/linux/netfilter_{ipv4,ipv6} contains compatibility wrappers   around the xt_FOOBAR.h headers  Based on this patchset we're going to further unify the code, gradually getting rid of all the layer 3 specific assumptions.  Signed-off-by: Harald Welte <laforge@netfilter.org> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_TEE.h | s | 240B | 9 | Patrick McHardy | kaber@trash.net | 1271768852 |  | netfilter: xt_TEE: resolve oif using netdevice notifiers  Replace the runtime oif name resolving by netdevice notifier based resolving. When an oif is given, a netdevice notifier is registered to resolve the name on NETDEV_REGISTER or NETDEV_CHANGE and unresolve it again on NETDEV_UNREGISTER or NETDEV_CHANGE to a different name.  Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_multiport.h | s | 658B | 23 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_conntrack_ftp.h | s | 1.1K | 35 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_tcpmss.h | s | 190B | 8 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_TPROXY.h | s | 483B | 19 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nfnetlink_queue.h | s | 2.0K | 74 | Florian Westphal | fw@strlen.de | 1311068793 |  | netfilter: nfnetlink_queue: batch verdict support  Introduces a new nfnetlink type that applies a given verdict to all queued packets with an id <= the id in the verdict message.  If a mark is provided it is applied to all matched packets.  This reduces the number of verdicts that have to be sent. Applications that make use of this feature need to maintain a timeout to send a batchverdict periodically to avoid starvation.  Signed-off-by: Florian Westphal <fw@strlen.de> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_IDLETIMER.h | s | 1.3K | 38 | Changli Gao | xiaosuo@gmail.com | 1282536939 |  | header: fix broken headers for user space  __packed is only defined in kernel space, so we should use __attribute__((packed)) for the code shared between kernel and user space.  Two __attribute() annotations are replaced with __attribute__() too.  Signed-off-by: Changli Gao <xiaosuo@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | nf_nat.h | s | 587B | 20 | Patrick McHardy | kaber@trash.net | 1324647403 |  | netfilter: nf_nat: export NAT definitions to userspace  Export the NAT definitions to userspace. So far userspace (specifically, iptables) has been copying the headers files from include/net. Also rename some structures and definitions in preparation for IPv6 NAT. Since these have never been officially exported, this doesn't affect existing userspace code.  Signed-off-by: Patrick McHardy <kaber@trash.net> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_socket.h | s | 183B | 10 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nfnetlink_compat.h | s | 2.4K | 53 | Eric Dumazet | eric.dumazet@gmail.com | 1257357058 |  | net: cleanup include/linux  This cleanup patch puts struct/union/enum opening braces, in first line to ease grep games.  struct something {  becomes :  struct something {  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | xt_dscp.h | s | 638B | 26 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_AUDIT.h | s | 655B | 24 | Thomas Graf | tgraf@infradead.org | 1295197828 |  | netfilter: audit target to record accepted/dropped packets  This patch adds a new netfilter target which creates audit records for packets traversing a certain chain.  It can be used to record packets which are rejected administraively as follows:    -N AUDIT_DROP   -A AUDIT_DROP -j AUDIT --type DROP   -A AUDIT_DROP -j DROP  a rule which would typically drop or reject a packet would then invoke the new chain to record packets before dropping them.    -j AUDIT_DROP  The module is protocol independant and works for iptables, ip6tables and ebtables.  The following information is logged:  - netfilter hook  - packet length  - incomming/outgoing interface  - MAC src/dst/proto for ethernet packets  - src/dst/protocol address for IPv4/IPv6  - src/dst port for TCP/UDP/UDPLITE  - icmp type/code  Cc: Patrick McHardy <kaber@trash.net> Cc: Eric Paris <eparis@parisplace.org> Cc: Al Viro <viro@ZenIV.linux.org.uk> Signed-off-by: Thomas Graf <tgraf@redhat.com> Signed-off-by: Patrick McHardy <kaber@trash.net>
f | xt_set.h | s | 1.2K | 52 | Jan Engelhardt | jengelh@medozas.de | 1332788790 |  | netfilter: ipset: avoid use of kernel-only types  When using the xt_set.h header in userspace, one will get these gcc reports:  ipset/ip_set.h:184:1: error: unknown type name "u16" In file included from libxt_SET.c:21:0: netfilter/xt_set.h:61:2: error: unknown type name "u32" netfilter/xt_set.h:62:2: error: unknown type name "u32"  Signed-off-by: Jan Engelhardt <jengelh@medozas.de> Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu> Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_TCPOPTSTRIP.h | s | 344B | 11 | Jan Engelhardt | jengelh@medozas.de | 1295542217 |  | netfilter: xtables: add missing header inclusions for headers_check  Resolve these warnings on `make headers_check`:  usr/include/linux/netfilter/xt_CT.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h> ...  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | xt_rateest.h | s | 774B | 31 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_physdev.h | s | 514B | 21 | Arnd Bergmann | arnd@arndb.de | 1238087660 |  | make netfilter use strict integer types  Netfilter traditionally uses BSD integer types in its interface headers. This changes it to use the Linux strict integer types, like everyone else.  Cc: netfilter-devel@vger.kernel.org Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xt_CONNMARK.h | s | 136B | 4 | Jan Engelhardt | jengelh@medozas.de | 1268837316 |  | netfilter: xtables: merge xt_CONNMARK into xt_connmark  Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
f | nfnetlink_cttimeout.h | s | 2.7K | 100 | Pablo Neira Ayuso | pablo@netfilter.org | 1331138482 |  | netfilter: add cttimeout infrastructure for fine timeout tuning  This patch adds the infrastructure to add fine timeout tuning over nfnetlink. Now you can use the NFNL_SUBSYS_CTNETLINK_TIMEOUT subsystem to create/delete/dump timeout objects that contain some specific timeout policy for one flow.  The follow up patches will allow you attach timeout policy object to conntrack via the CT target and the conntrack extension infrastructure.  Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
f | xt_pkttype.h | s | 125B | 7 | Harald Welte | laforge@netfilter.org | 1137103603 |  | [NETFILTER] x_tables: Abstraction layer for {ip,ip6,arp}_tables  This monster-patch tries to do the best job for unifying the data structures and backend interfaces for the three evil clones ip_tables, ip6_tables and arp_tables.  In an ideal world we would never have allowed this kind of copy+paste programming... but well, our world isn't (yet?) ideal.  o introduce a new x_tables module o {ip,arp,ip6}_tables depend on this x_tables module o registration functions for tables, matches and targets are only   wrappers around x_tables provided functions o all matches/targets that are used from ip_tables and ip6_tables   are now implemented as xt_FOOBAR.c files and provide module aliases   to ipt_FOOBAR and ip6t_FOOBAR o header files for xt_matches are in include/linux/netfilter/,   include/linux/netfilter_{ipv4,ipv6} contains compatibility wrappers   around the xt_FOOBAR.h headers  Based on this patchset we're going to further unify the code, gradually getting rid of all the layer 3 specific assumptions.  Signed-off-by: Harald Welte <laforge@netfilter.org> Signed-off-by: David S. Miller <davem@davemloft.net>
