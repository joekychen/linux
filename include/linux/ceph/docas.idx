f | ceph_fs.h | s | 23K | 637 | Sage Weil | sage@inktank.com | 1336430016 |  | ceph: drop support for preferred_osd pgs  This was an ill-conceived feature that has been removed from Ceph.  Do this gracefully:   - reject attempts to specify a preferred_osd via the ioctl  - stop exposing this information via virtual xattrs  - always fill in -1 for requests, in case we talk to an older server  - don't calculate preferred_osd placements/pgids  Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Sage Weil <sage@inktank.com>
f | osdmap.h | s | 3.8K | 107 | Sage Weil | sage@inktank.com | 1336430016 |  | ceph: drop support for preferred_osd pgs  This was an ill-conceived feature that has been removed from Ceph.  Do this gracefully:   - reject attempts to specify a preferred_osd via the ioctl  - stop exposing this information via virtual xattrs  - always fill in -1 for requests, in case we talk to an older server  - don't calculate preferred_osd placements/pgids  Reviewed-by: Alex Elder <elder@inktank.com> Signed-off-by: Sage Weil <sage@inktank.com>
f | mdsmap.h | s | 1.4K | 54 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | ceph_frag.h | s | 3.0K | 104 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | osd_client.h | s | 8.6K | 258 | Alex Elder | elder@inktank.com | 1337260692 |  | ceph: define ceph_auth_handshake type  The definitions for the ceph_mds_session and ceph_osd both contain five fields related only to "authorizers."  Encapsulate those fields into their own struct type, allowing for better isolation in some upcoming patches.  Fix the #includes in "linux/ceph/osd_client.h" to lay out their more complete canonical path.  Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com>
f | ceph_debug.h | s | 929B | 30 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | debugfs.h | s | 847B | 28 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | types.h | s | 475B | 22 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | auth.h | s | 3.1K | 79 | Alex Elder | elder@inktank.com | 1337260692 |  | ceph: messenger: reduce args to create_authorizer  Make use of the new ceph_auth_handshake structure in order to reduce the number of arguments passed to the create_authorizor method in ceph_auth_client_ops.  Use a local variable of that type as a shorthand in the get_authorizer method definitions.  Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com>
f | mon_client.h | s | 3.1K | 96 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | ceph_hash.h | s | 433B | 9 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | msgpool.h | s | 692B | 21 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | messenger.h | s | 8.1K | 210 | Alex Elder | elder@inktank.com | 1337260693 |  | ceph: use info returned by get_authorizer  Rather than passing a bunch of arguments to be filled in with the content of the ceph_auth_handshake buffer now returned by the get_authorizer method, just use the returned information in the caller, and drop the unnecessary arguments.  Signed-off-by: Alex Elder <elder@inktank.com> Reviewed-by: Sage Weil <sage@inktank.com>
f | libceph.h | s | 6.7K | 213 | Linus Torvalds | torvalds@linux-foundation.org | 1332954089 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client  Pull Ceph updates for 3.4-rc1 from Sage Weil:  "Alex has been busy.  There are a range of rbd and libceph cleanups,   especially surrounding device setup and teardown, and a few critical   fixes in that code.  There are more cleanups in the messenger code,   virtual xattrs, a fix for CRC calculation/checks, and lots of other   miscellaneous stuff.    There's a patch from Amon Ott to make inos behave a bit better on   32-bit boxes, some decode check fixes from Xi Wang, and network   throttling fix from Jim Schutt, and a couple RBD fixes from Josh   Durgin.    No new functionality, just a lot of cleanup and bug fixing."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client: (65 commits)   rbd: move snap_rwsem to the device, rename to header_rwsem   ceph: fix three bugs, two in ceph_vxattrcb_file_layout()   libceph: isolate kmap() call in write_partial_msg_pages()   libceph: rename "page_shift" variable to something sensible   libceph: get rid of zero_page_address   libceph: only call kernel_sendpage() via helper   libceph: use kernel_sendpage() for sending zeroes   libceph: fix inverted crc option logic   libceph: some simple changes   libceph: small refactor in write_partial_kvec()   libceph: do crc calculations outside loop   libceph: separate CRC calculation from byte swapping   libceph: use "do" in CRC-related Boolean variables   ceph: ensure Boolean options support both senses   libceph: a few small changes   libceph: make ceph_tcp_connect() return int   libceph: encapsulate some messenger cleanup code   libceph: make ceph_msgr_wq private   libceph: encapsulate connection kvec operations   libceph: move prepare_write_banner()   ...
f | pagelist.h | s | 1.9K | 63 | Greg Farnum | gregf@hq.newdream.net | 1287614296 |  | ceph: add pagelist_reserve, pagelist_truncate, pagelist_set_cursor  These facilitate preallocation of pages so that we can encode into the pagelist in an atomic context.  Signed-off-by: Greg Farnum <gregf@hq.newdream.net> Signed-off-by: Sage Weil <sage@newdream.net>
f | rados.h | s | 12K | 364 | Yehuda Sadeh | yehuda@hq.newdream.net | 1300735461 |  | ceph: update common header files  This updates the common header files used by the different ceph related modules. Specifically it adds definitions required by the rbd watch/notify feature.  Signed-off-by: Yehuda Sadeh <yehuda@hq.newdream.net>
f | decode.h | s | 4.5K | 189 | Linus Torvalds | torvalds@linux-foundation.org | 1338401839 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client  Pull ceph updates from Sage Weil:  "There are some updates and cleanups to the CRUSH placement code, a bug   fix with incremental maps, several cleanups and fixes from Josh Durgin   in the RBD block device code, a series of cleanups and bug fixes from   Alex Elder in the messenger code, and some miscellaneous bounds   checking and gfp cleanups/fixes."  Fix up trivial conflicts in net/ceph/{messenger.c,osdmap.c} due to the networking people preferring "unsigned int" over just "unsigned".  * git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client: (45 commits)   libceph: fix pg_temp updates   libceph: avoid unregistering osd request when not registered   ceph: add auth buf in prepare_write_connect()   ceph: rename prepare_connect_authorizer()   ceph: return pointer from prepare_connect_authorizer()   ceph: use info returned by get_authorizer   ceph: have get_authorizer methods return pointers   ceph: ensure auth ops are defined before use   ceph: messenger: reduce args to create_authorizer   ceph: define ceph_auth_handshake type   ceph: messenger: check return from get_authorizer   ceph: messenger: rework prepare_connect_authorizer()   ceph: messenger: check prepare_write_connect() result   ceph: don't set WRITE_PENDING too early   ceph: drop msgr argument from prepare_write_connect()   ceph: messenger: send banner in process_connect()   ceph: messenger: reset connection kvec caller   libceph: don't reset kvec in prepare_write_banner()   ceph: ignore preferred_osd field   ceph: fully initialize new layout   ...
f | msgr.h | s | 5.0K | 143 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
f | buffer.h | s | 818B | 32 | Yehuda Sadeh | yehuda@hq.newdream.net | 1287614248 |  | ceph: factor out libceph from Ceph file system  This factors out protocol and low-level storage parts of ceph into a separate libceph module living in net/ceph and include/linux/ceph.  This is mostly a matter of moving files around.  However, a few key pieces of the interface change as well:   - ceph_client becomes ceph_fs_client and ceph_client, where the latter    captures the mon and osd clients, and the fs_client gets the mds client    and file system specific pieces.  - Mount option parsing and debugfs setup is correspondingly broken into    two pieces.  - The mon client gets a generic handler callback for otherwise unknown    messages (mds map, in this case).  - The basic supported/required feature bits can be expanded (and are by    ceph_fs_client).  No functional change, aside from some subtle error handling cases that got cleaned up in the refactoring process.  Signed-off-by: Sage Weil <sage@newdream.net>
