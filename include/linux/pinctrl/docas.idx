f | pinconf.h | s | 2.4K | 62 | Guennadi Liakhovetski | g.liakhovetski@gmx.de | 1336648921 |  | pinctrl: (cosmetic) fix two entries in DocBook comments  This removes a repeated word and a repeated and incomplete line from two pinctrl headers.  Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | pinctrl.h | s | 5.2K | 137 | Stephen Warren | swarren@nvidia.com | 1335474434 |  | pinctrl: add kerneldoc for pinctrl_ops device tree functions  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | machine.h | s | 5.0K | 146 | Dong Aisheng | dong.aisheng@linaro.org | 1335475864 |  | pinctrl: add pinctrl_provide_dummies interface for platforms to use  Add a interface pinctrl_provide_dummies for platform to indicate whether it needs use pinctrl dummy state.  ChangeLog v3->v4: * remove dummy gpio support in pinctrl subsystem.   Let gpio driver decide whether it wants to use pinctrl gpio mux   function. ChangeLog v2->v3: * Also changed the missed pinctrl gpio APIs in v1. ChangeLog v1->v2: * Based on sascha's suggestion, drop using kconfig since it will hide   pinctrl errors on all other boards.   See: https://lkml.org/lkml/2012/4/18/282   It seemed both Linus and Stephen agreed with this way, so i'm ok   with it too. * Add dummy gpio support.   pinctrl gpio in the same situation as state. * Patch name changed.   Original is pinctrl: handle dummy state in core. * Split removing old dt dummy interface into a separate patch  Cc: Linus Walleij <linus.walleij@linaro.org> Cc: Sascha Hauer <s.hauer@pengutronix.de> Acked-by: Stephen Warren <swarren@wwwdotorg.org> Signed-off-by: Dong Aisheng <dong.aisheng@linaro.org> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | pinmux.h | s | 3.8K | 83 | Guennadi Liakhovetski | g.liakhovetski@gmx.de | 1336648921 |  | pinctrl: (cosmetic) fix two entries in DocBook comments  This removes a repeated word and a repeated and incomplete line from two pinctrl headers.  Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | pinctrl-state.h | s | 741B | 18 | Linus Walleij | linus.walleij@linaro.org | 1336727657 |  | pinctrl: add sleep state definition  There is an IDLE definition in the pinctrl framework, but for ux500 SLEEP is more apropriate.  I've added some comments on the semantics of the common states so as to avoid misunderstandings.  ChangeLog v1->v2: - Fixed terminology "on"->"into".  Acked-by: Stephen Warren <swarren@wwwdotorg.org> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | consumer.h | s | 4.3K | 164 | Stephen Warren | swarren@nvidia.com | 1334749993 |  | pinctrl: implement devm_pinctrl_get()/put()  These functions allow the driver core to automatically clean up any allocations made by drivers, thus leading to simplified drivers.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | pinconf-generic.h | s | 4.7K | 105 | Linus Walleij | linus.walleij@linaro.org | 1331588942 |  | pinctrl: introduce generic pin config  This is a split-off from the earlier patch set which adds generic pin configuration for the pin controllers that want it. Since we may have a system with mixed generic and custom pin controllers, we pass a boolean in the pin controller ops vtable to indicate if it is generic.  ChangeLog v1->v5: - Follow parent patch versioning number system. - Document the semantic meaning of return values from pin config   get functions, so we can iterate over pins and check their   properties from debugfs as part of the generic config code. - Use proper cast functions in the generic debugfs pin config   file. - Expand generic config to optionally cover groups too. ChangeLog v5->v6: - Update to match underlying changes. ChangeLog v6->v7: - Drop DRIVE_OFF parameter, use bias high impedance for this - Delete argument for drive modes push-pull, od and os. These   are now just state transitions. - Delete slew rate rising/falling due to discussions on on   proper semantics - Drop config wakeup, struct irq_chip does this for now, add   back if need be. - Set PIN_CONFIG_END to 0x7fff making room for custom config   parameters from 0x8000 and up. - Prefix accessor functions with pinconf_
