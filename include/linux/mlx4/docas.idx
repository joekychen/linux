f | qp.h | s | 8.2K | 327 | Linus Torvalds | torvalds@linux-foundation.org | 1337648095 |  | 
f | cmd.h | s | 6.6K | 204 | Amir Vadai | amirv@mellanox.com | 1333616883 |  | net/mlx4_core: set port QoS attributes  Adding QoS firmware commands: - mlx4_en_SET_PORT_PRIO2TC - set UP <=> TC - mlx4_en_SET_PORT_SCHEDULER - set promised BW, max BW and PG number  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | doorbell.h | s | 2.8K | 73 | Roland Dreier | rolandd@cisco.com | 1192418259 |  | mlx4_core: Kill mlx4_write64_raw()  It's a leftover from development that's never used in the real driver.  Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | srq.h | s | 1.5K | 39 | Roland Dreier | rolandd@cisco.com | 1178672438 |  | IB/mlx4: Add a driver Mellanox ConnectX InfiniBand adapters  Add an InfiniBand driver for Mellanox ConnectX adapters.  Because these adapters can also be used as ethernet NICs and Fibre Channel HBAs, the driver is split into two modules:    mlx4_core: Handles low-level things like device initialization and     processing firmware commands.  Also controls resource allocation     so that the InfiniBand, ethernet and FC functions can share a     device without stepping on each other.    mlx4_ib: Handles InfiniBand-specific things; plugs into the     InfiniBand midlayer.  Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | device.h | s | 18K | 586 | Marcel Apfelbaum | marcela@dev.mellanox.co.il | 1338502696 |  | net/mlx4_core: Fix number of EQs used in ICM initialisation  In SRIOV mode, the number of EQs used when computing the total ICM size was incorrect.  To fix this, we do the following: 1. We add a new structure to mlx4_dev, mlx4_phys_caps, to contain physical HCA    capabilities.  The PPF uses the phys capabilities when it computes things    like ICM size.     The dev_caps structure will then contain the paravirtualized values, making    bookkeeping much easier in SRIOV mode. We add a structure rather than a    single parameter because there will be other fields in the phys_caps.     The first field we add to the mlx4_phys_caps structure is num_phys_eqs.  2. In INIT_HCA, when running in SRIOV mode, the "log_num_eqs" parameter    passed to the FW is the number of EQs per VF/PF; each function (PF or VF)    has this number of EQs available.     However, the total number of EQs which must be allowed for in the ICM is    (1 << log_num_eqs) * (#VFs + #PFs).  Rather than compute this quantity,    we allocate ICM space for 1024 EQs (which is the device maximum    number of EQs, and which is the value we place in the mlx4_phys_caps structure).     For INIT_HCA, however, we use the per-function number of EQs as described    above.  Signed-off-by: Marcel Apfelbaum <marcela@dev.mellanox.co.il> Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | driver.h | s | 2.2K | 54 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331908704 |  | device.h: audit and cleanup users in main include dir  The <linux/device.h> header includes a lot of stuff, and it in turn gets a lot of use just for the basic "struct device" which appears so often.  Clean up the users as follows:  1) For those headers only needing "struct device" as a pointer in fcn args, replace the include with exactly that.  2) For headers not really using anything from device.h, simply delete the include altogether.  3) For headers relying on getting device.h implicitly before being included themselves, now explicitly include device.h  4) For files in which doing #1 or #2 uncovers an implicit dependency on some other header, fix by explicitly adding the required header(s).  Any C files that were implicitly relying on device.h to be present have already been dealt with in advance.  Total removals from #1 and #2: 51.  Total additions coming from #3: 9.  Total other implicit dependencies from #4: 7.  As of 3.3-rc1, there were 110, so a net removal of 42 gives about a 38% reduction in device.h presence in include/*  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | cq.h | s | 4.0K | 130 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1218078846 |  | mlx4_core: Add ethernet fields to CQE struct  Add ethernet-related fields to struct mlx4_cqe so that the mlx4_en ethernet NIC driver can share the same definition.  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: Roland Dreier <rolandd@cisco.com>
