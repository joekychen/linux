f | machine.h | s | 6.4K | 174 | Axel Lin | axel.lin@gmail.com | 1333019385 |  | regulator: Fix comments in include/linux/regulator/machine.h  Signed-off-by: Axel Lin <axel.lin@gmail.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | of_regulator.h | s | 934B | 35 | Thierry Reding | thierry.reding@avionic-design.de | 1336134315 |  | regulator: Add generic DT parsing for regulators  Looking up init data for regulators found on chips is a common operation that can be handled in a generic way. The new helper function introduced by this patch looks up the children of a given node by names specified in a match table and fills that match table with information parsed from the DT.  This is based on work by Rhyland Klein <rklein@nvidia.com>.  Signed-off-by: Thierry Reding <thierry.reding@avionic-design.de> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | max8649.h | s | 976B | 37 | Haojian Zhuang | haojian.zhuang@marvell.com | 1267627764 |  | regulator: enable max8649 regulator driver  Signed-off-by: Haojian Zhuang <haojian.zhuang@marvell.com> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | tps6507x.h | s | 1.1K | 29 | Anuj Aggarwal | anuj.aggarwal@ti.com | 1280326166 |  | regulator: tps6507x: allow driver to use DEFDCDC{2,3}_HIGH register  Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com>  In TPS6507x, depending on the status of DEFDCDC{2,3} pin either DEFDCDC{2,3}_LOW or DEFDCDC{2,3}_HIGH register needs to be read or programmed to change the output voltage.  The current driver assumes DEFDCDC{2,3} pins are always tied low and thus operates only on DEFDCDC{2,3}_LOW register. This need not always be the case (as is found on OMAP-L138 EVM).  Unfortunately, software cannot read the status of DEFDCDC{2,3} pins. So, this information is passed through platform data depending on how the board is wired.  Signed-off-by: Anuj Aggarwal <anuj.aggarwal@ti.com> Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | tps62360.h | s | 1.9K | 49 | Laxman Dewangan | ldewangan@nvidia.com | 1337014984 |  | regulator: tps62360: support force PWM mode via regulator mode  Change the mechanism of enabling the force PWM mode through regulator set mode. This can be dynamically configured now. In the REGULATOR_MODE_FAST the force PWM is enabled and in REGULATOR_MODE_NORMAL the force PWM is disabled.  Signed-off-by: Laxman Dewangan <ldewangan@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | max1586.h | s | 2.1K | 56 | Wolfram Sang | w.sang@pengutronix.de | 1253622764 |  | regulator: fix typos  Fix a couple of typos I found while working with this subsystem.  Signed-off-by: Wolfram Sang <w.sang@pengutronix.de> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | gpio-regulator.h | s | 2.4K | 77 | Heiko St√ºbner | heiko@sntech.de | 1318160181 |  | regulator: Add driver for gpio-controlled regulators  This patch adds support for regulators that can be controlled via gpios.  Examples for such regulators are the TI-tps65024x voltage regulators with 4 fixed and 1 runtime-switchable voltage regulators or the TI-bq240XX charger regulators.  The number of controlling gpios is not limited, the mapping between voltage/current and target gpio state is done via the states map and the driver can be used for either voltage or current regulators.  A mapping for a regulator with two GPIOs could look like:  gpios = { 	{ .gpio = GPIO1, .flags = GPIOF_OUT_INIT_HIGH, .label = "gpio name 1" }, 	{ .gpio = GPIO2, .flags = GPIOF_OUT_INIT_LOW,  .label = "gpio name 2" }, }  The flags element of the gpios array determines the initial state of the gpio, set during probe. The initial state of the regulator is also calculated from these values  states = { 	{ .value = volt_or_cur1, .gpios = (0 << 1) || (0 << 0) }, 	{ .value = volt_or_cur2, .gpios = (0 << 1) || (1 << 0) }, 	{ .value = volt_or_cur3, .gpios = (1 << 1) || (0 << 0) }, 	{ .value = volt_or_cur4, .gpios = (1 << 1) || (1 << 0) }, }  The target-state for the n-th gpio is determined by the n-th bit in the bitfield of the target-value.  Signed-off-by: Heiko Stuebner <heiko@sntech.de> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | db8500-prcmu.h | s | 1.1K | 41 | Bengt Jonsson | bengt.g.jonsson@stericsson.com | 1306268423 |  | mach-ux500: voltage domain regulators for DB8500  The DB8500 has ePOD:s (electronic power domains) which are possible to switch on/off to deactivate silicon blocks on the DB8500 SoC by cutting their power without retention. We model these as simple regulators with one bit on/off settings.  Acked-by: Liam Girdwood <lrg@slimlogic.co.uk> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Bengt Jonsson <bengt.g.jonsson@stericsson.com> Signed-off-by: Sundar Iyer <sundar.iyer@stericsson.com> Signed-off-by: Jonas Aberg <jonas.aberg@stericsson.com> Signed-off-by: Virupax Sadashivpetimath <virupax.sadashivpetimath@stericsson.com> Signed-off-by: Martin Persson <martin.persson@stericsson.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
f | tps65090-regulator.h | s | 1.3K | 40 | Venu Byravarasu | vbyravarasu@nvidia.com | 1333277967 |  | regulator: Add TPS65090 regulator driver  Add TPS65090 regulator driver  TPS65090 PMIC from TI consists of 3 step down converters, 2 always on LDOs and 7 current limited load switches. The output voltages are ON/OFF controllable and are meant to supply power to the components on target board.  Signed-off-by: Venu Byravarasu <vbyravarasu@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | lp3972.h | s | 1.3K | 40 | Axel Lin | axel.lin@gmail.com | 1288302031 |  | Regulator: LP3972 PMIC regulator driver  This patch adds regulator drivers for National Semiconductors LP3972 PMIC. This LP3972 PMIC controller has 3 DC/DC voltage converters and 5 low drop-out (LDO) regulators. LP3972 PMIC controller uses I2C interface.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | userspace-consumer.h | s | 636B | 20 | Mike Rapoport | mike@compulab.co.il | 1245061102 |  | regulator: add userspace-consumer driver  The userspace-consumer driver allows control of voltage and current regulator state from userspace. This is required for fine-grained power management of devices that are completely controller by userspace applications, e.g. a GPS transciever connected to a serial port.  Signed-off-by: Mike Rapoport <mike@compulab.co.il> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | max8952.h | s | 2.9K | 122 | MyungJoo Ham | myungjoo.ham@samsung.com | 1288302031 |  | MAX8952 PMIC Driver Initial Release  MAX8952 PMIC is used to provide voltage output between 770mV - 1400mV with DVS support. In this initial release, users can set voltages for four DVS modes, RAMP delay values, and SYNC frequency. Controlling FPWM/SYNC_MODE/Pull-Down/Ramp Modes and reading CHIP_ID is not supported in this release.  If GPIO of EN is not valid in platform data, the driver assumes that it is always-on. If GPIO of VID0 or VID1 is invalid, the driver pulls down VID0 and VID1 to fix DVS mode as 0 and disables DVS support.  We assume that V_OUT is capable to provide every voltage from 770mV to 1.40V in 10mV steps although the data sheet has some ambiguity on it.  Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> -- v2: 	- Style correction 	- Can accept platform_data with invalid GPIOs 	- Removed unnecessary features 	- Improved error handling Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | driver.h | s | 9.9K | 250 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1336817492 |  | regulator: core: Allow drivers to set simple linear voltage maps as data  A lot of regulator hardware maps selectors on to voltages with a simple linear mapping function      selector = base + (selector * step size)  Provide off the shelf list_voltage() and map_voltage() operations which use new min_uV and uV_step members in the regulator_desc to implement this function.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Acked-by: Liam Girdwood <lrg@ti.com>
f | ab8500.h | s | 3.0K | 133 | Linus Walleij | linus.walleij@linaro.org | 1331056003 |  | mfd: Support AB9540 ab8500 variant  The AB9540 variant of the AB8500 is basically close enough to use the same driver. This adds the new registers and deviations for this new chip variant.  Reviewed-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Maxime Coquelin <maxime.coquelin@stericsson.com> Signed-off-by: Alex Macro <alex.macro@stericsson.com> Signed-off-by: Michel Jaouen <michel.jaouen@stericsson.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
f | lp3971.h | s | 1.4K | 43 | Marek Szyprowski | m.szyprowski@samsung.com | 1245061106 |  | LP3971 PMIC regulator driver (updated and combined version)  This patch adds regulator drivers for National Semiconductors LP3971 PMIC. This LP3971 PMIC controller has 3 DC/DC voltage converters and 5 low drop-out (LDO) regulators. LP3971 PMIC controller uses I2C interface.  Reviewed-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | max8660.h | s | 1.5K | 52 | Wolfram Sang | w.sang@pengutronix.de | 1261045642 |  | regulator: add driver for MAX8660/8661  Tested with a MX25-based custom board.  Signed-off-by: Wolfram Sang <w.sang@pengutronix.de> Acked-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Liam Girdwood <lrg@slimlogic.co.uk>
f | fixed.h | s | 2.2K | 65 | Laxman Dewangan | ldewangan@nvidia.com | 1333405073 |  | regulator: fixed: Support for open drain gpio pin  Adding flag on fixed regulator board configuration structure to specify whether gpio is open drain type or not. Passing this information to gpio library when requesting gpio so that gpio driver can set the pin state accordingly, for open drain type: - Pin can be set HIGH as setting as input, PULL UP on   pin make this as HIGH. - Pin can be set LOW as setting it as output and drive to LOW.  The non-open drain pin can be  set HIGH/LOW by setting it to output and driving it to HIGH/LOW.  Signed-off-by: Laxman Dewangan <ldewangan@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | consumer.h | s | 10K | 303 | Linus Torvalds | torvalds@linux-foundation.org | 1332610897 |  | 
