f | inflate.h | s | 233B | 9 | Lasse Collin | lasse.collin@tukaani.org | 1294934605 |  | decompressors: remove unused constant from inflate.h  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | unlzo.h | s | 232B | 9 | Albin Tonnerre | albin.tonnerre@free-electrons.com | 1263231244 |  | lib: add support for LZO-compressed kernels  This patch series adds generic support for creating and extracting LZO-compressed kernel images, as well as support for using such images on the x86 and ARM architectures, and support for creating and using LZO-compressed initrd and initramfs images.  Russell King said:  : Testing on a Cortex A9 model: : - lzo decompressor is 65% of the time gzip takes to decompress a kernel : - lzo kernel is 9% larger than a gzip kernel : : which I'm happy to say confirms your figures when comparing the two. : : However, when comparing your new gzip code to the old gzip code: : - new is 99% of the size of the old code : - new takes 42% of the time to decompress than the old code : : What this means is that for a proper comparison, the results get even better: : - lzo is 7.5% larger than the old gzip'd kernel image : - lzo takes 28% of the time that the old gzip code took : : So the expense seems definitely worth the effort.  The only reason I : can think of ever using gzip would be if you needed the additional : compression (eg, because you have limited flash to store the image.) : : I would argue that the default for ARM should therefore be LZO.  This patch:  The lzo compressor is worse than gzip at compression, but faster at extraction.  Here are some figures for an ARM board I'm working on:  Uncompressed size: 3.24Mo gzip  1.61Mo 0.72s lzo   1.75Mo 0.48s  So for a compression ratio that is still relatively close to gzip, it's much faster to extract, at least in that case.  This part contains:  - Makefile routine to support lzo compression  - Fixes to the existing lzo compressor so that it can be used in    compressed kernels  - wrapper around the existing lzo1x_decompress, as it only extracts one    block at a time, while we need to extract a whole file here  - config dialog for kernel compression  [akpm@linux-foundation.org: coding-style fixes] [akpm@linux-foundation.org: cleanup] Signed-off-by: Albin Tonnerre <albin.tonnerre@free-electrons.com> Tested-by: Wu Zhangjin <wuzhangjin@gmail.com> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Tested-by: Russell King <rmk@arm.linux.org.uk> Acked-by: Russell King <rmk@arm.linux.org.uk> Cc: Ralf Baechle <ralf@linux-mips.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | unlzma.h | s | 245B | 10 | Alain Knaff | alain@knaff.lu | 1231113214 |  | bzip2/lzma: library support for gzip, bzip2 and lzma decompression  Impact: Replaces inflate.c with a wrapper around zlib_inflate; new library code  This is the first part of the bzip2/lzma patch  The bzip patch is based on an idea by Christian Ludwig, includes support for compressing the kernel with bzip2 or lzma rather than gzip. Both compressors give smaller sizes than gzip.  Lzma's decompresses faster than bzip2.  It also supports ramdisks and initramfs' compressed using these two compressors.  The functionality has been successfully used for a couple of years by the udpcast project  This version applies to "tip" kernel 2.6.28  This part contains: - changed inflate.c to accomodate rest of patch - implementation of bzip2 compression (not used at this stage yet) - implementation of lzma compression (not used at this stage yet) - Makefile routines to support bzip2 and lzma kernel compression  Signed-off-by: Alain Knaff <alain@knaff.lu> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | unxz.h | s | 493B | 16 | Lasse Collin | lasse.collin@tukaani.org | 1294934605 |  | decompressors: add boot-time XZ support  This implements the API defined in <linux/decompress/generic.h> which is used for kernel, initramfs, and initrd decompression.  This patch together with the first patch is enough for XZ-compressed initramfs and initrd; XZ-compressed kernel will need arch-specific changes.  The buffering requirements described in decompress_unxz.c are stricter than with gzip, so the relevant changes should be done to the arch-specific code when adding support for XZ-compressed kernel. Similarly, the heap size in arch-specific pre-boot code may need to be increased (30 KiB is enough).  The XZ decompressor needs memmove(), memeq() (memcmp() == 0), and memzero() (memset(ptr, 0, size)), which aren't available in all arch-specific pre-boot environments.  I'm including simple versions in decompress_unxz.c, but a cleaner solution would naturally be nicer.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mm.h | s | 1.8K | 69 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | generic.h | s | 1.4K | 34 | Phillip Lougher | phillip@lougher.demon.co.uk | 1249666796 |  | bzip2/lzma/gzip: fix comments describing decompressor API  Fix and improve comments in decompress/generic.h that describe the decompressor API.  Also remove an unused definition, and rename INBUF_LEN in lib/decompress_inflate.c to conform to bzip2/lzma naming.  Signed-off-by: Phillip Lougher <phillip@lougher.demon.co.uk> Cc: "H. Peter Anvin" <hpa@zytor.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bunzip2.h | s | 258B | 9 | Alain Knaff | alain@knaff.lu | 1231113214 |  | bzip2/lzma: library support for gzip, bzip2 and lzma decompression  Impact: Replaces inflate.c with a wrapper around zlib_inflate; new library code  This is the first part of the bzip2/lzma patch  The bzip patch is based on an idea by Christian Ludwig, includes support for compressing the kernel with bzip2 or lzma rather than gzip. Both compressors give smaller sizes than gzip.  Lzma's decompresses faster than bzip2.  It also supports ramdisks and initramfs' compressed using these two compressors.  The functionality has been successfully used for a couple of years by the udpcast project  This version applies to "tip" kernel 2.6.28  This part contains: - changed inflate.c to accomodate rest of patch - implementation of bzip2 compression (not used at this stage yet) - implementation of lzma compression (not used at this stage yet) - Makefile routines to support bzip2 and lzma kernel compression  Signed-off-by: Alain Knaff <alain@knaff.lu> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
