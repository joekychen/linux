f | kvm_para.h | s | 379B | 17 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337611672 |  | KVM: make asm-generic/kvm_para.h have an ifdef __KERNEL__ block  There are two functions in this asm-generic file.  Looking at other arch which do not use the generic version, these two fcns are within an #ifdef __KERNEL__ block, so make the generic one consistent with those.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | io.h | s | 8.3K | 314 | Linus Torvalds | torvalds@linux-foundation.org | 1326247467 |  | 
f | pci.h | s | 810B | 31 | Bjorn Helgaas | bhelgaas@google.com | 1330053544 |  | PCI: collapse pcibios_resource_to_bus  Everybody uses the generic pcibios_resource_to_bus() supplied by the core now, so remove the ARCH_HAS_GENERIC_PCI_OFFSETS used during conversion.  Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | kmap_types.h | s | 832B | 36 | Andrew Morton | akpm@linux-foundation.org | 1274800023 |  | include/asm-generic/kmap_types.h: add helpful reminder  Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cputime.h | s | 1.8K | 55 | Linus Torvalds | torvalds@linux-foundation.org | 1325868294 |  | Merge branch 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  * 'sched-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (40 commits)   sched/tracing: Add a new tracepoint for sleeptime   sched: Disable scheduler warnings during oopses   sched: Fix cgroup movement of waking process   sched: Fix cgroup movement of newly created process   sched: Fix cgroup movement of forking process   sched: Remove cfs bandwidth period check in tg_set_cfs_period()   sched: Fix load-balance lock-breaking   sched: Replace all_pinned with a generic flags field   sched: Only queue remote wakeups when crossing cache boundaries   sched: Add missing rcu_dereference() around ->real_parent usage   [S390] fix cputime overflow in uptime_proc_show   [S390] cputime: add sparse checking and cleanup   sched: Mark parent and real_parent as __rcu   sched, nohz: Fix missing RCU read lock   sched, nohz: Set the NOHZ_BALANCE_KICK flag for idle load balancer   sched, nohz: Fix the idle cpu check in nohz_idle_balance   sched: Use jump_labels for sched_feat   sched/accounting: Fix parameter passing in task_group_account_field   sched/accounting: Fix user/system tick double accounting   sched/accounting: Re-use scheduler statistics for the root cgroup   ...  Fix up conflicts in  - arch/ia64/include/asm/cputime.h, include/asm-generic/cputime.h 	usecs_to_cputime64() vs the sparse cleanups  - kernel/sched/fair.c, kernel/time/tick-sched.c 	scheduler changes in multiple branches
f | sections.h | s | 1.2K | 36 | Jiri Olsa | jolsa@redhat.com | 1299601331 |  | x86: Separate out entry text section  Put x86 entry code into a separate link section: .entry.text.  Separating the entry text section seems to have performance benefits - caused by more efficient instruction cache usage.  Running hackbench with perf stat --repeat showed that the change compresses the icache footprint. The icache load miss rate went down by about 15%:   before patch:          19417627  L1-icache-load-misses      ( +-   0.147% )   after patch:          16490788  L1-icache-load-misses      ( +-   0.180% )  The motivation of the patch was to fix a particular kprobes bug that relates to the entry text section, the performance advantage was discovered accidentally.  Whole perf output follows:   - results for current tip tree:    Performance counter stats for './hackbench/hackbench 10' (500 runs):           19417627  L1-icache-load-misses      ( +-   0.147% )        2676914223  instructions             #      0.497 IPC     ( +- 0.079% )        5389516026  cycles                     ( +-   0.144% )        0.206267711  seconds time elapsed   ( +-   0.138% )   - results for current tip tree with the patch applied:    Performance counter stats for './hackbench/hackbench 10' (500 runs):           16490788  L1-icache-load-misses      ( +-   0.180% )        2717734941  instructions             #      0.502 IPC     ( +- 0.079% )        5414756975  cycles                     ( +-   0.148% )        0.206747566  seconds time elapsed   ( +-   0.137% )  Signed-off-by: Jiri Olsa <jolsa@redhat.com> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Nick Piggin <npiggin@kernel.dk> Cc: Eric Dumazet <eric.dumazet@gmail.com> Cc: masami.hiramatsu.pt@hitachi.com Cc: ananth@in.ibm.com Cc: davem@davemloft.net Cc: 2nddept-manager@sdl.hitachi.co.jp LKML-Reference: <20110307181039.GB15197@jolsa.redhat.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | barrier.h | s | 1.4K | 42 | David Howells | dhowells@redhat.com | 1332955803 |  | Create asm-generic/barrier.h  Create asm-generic/barrier.h and move the barrier definitions from asm-generic/system.h to it.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | io-64-nonatomic-hi-lo.h | s | 536B | 22 | Hitoshi Mitake | mitake@dcl.info.waseda.ac.jp | 1329871648 |  | asm-generic: architecture independent readq/writeq for 32bit environment  This provides unified readq()/writeq() helper functions for 32-bit drivers.  For some cases, readq/writeq without atomicity is harmful, and order of io access has to be specified explicitly.  So in this patch, new two header files which contain non-atomic readq/writeq are added.   - <asm-generic/io-64-nonatomic-lo-hi.h> provides non-atomic readq/    writeq with the order of lower address -> higher address   - <asm-generic/io-64-nonatomic-hi-lo.h> provides non-atomic readq/    writeq with reversed order  This allows us to remove some readq()s that were added drivers when the default non-atomic ones were removed in commit dbee8a0affd5 ("x86: remove 32-bit versions of readq()/writeq()")  The drivers which need readq/writeq but can do with the non-atomic ones must add the line:    #include <asm-generic/io-64-nonatomic-lo-hi.h> /* or hi-lo.h */  But this will be nop in 64-bit environments, and no other #ifdefs are required.  So I believe that this patch can solve the problem of  1. driver-specific readq/writeq  2. atomicity and order of io access  This patch is tested with building allyesconfig and allmodconfig as ARCH=x86 and ARCH=i386 on top of tip/master.  Cc: Kashyap Desai <Kashyap.Desai@lsi.com> Cc: Len Brown <lenb@kernel.org> Cc: Ravi Anand <ravi.anand@qlogic.com> Cc: Vikas Chaudhary <vikas.chaudhary@qlogic.com> Cc: Matthew Garrett <mjg@redhat.com> Cc: Jason Uhlenkott <juhlenko@akamai.com> Cc: James Bottomley <James.Bottomley@parallels.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Roland Dreier <roland@purestorage.com> Cc: James Bottomley <jbottomley@parallels.com> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Cc: Matthew Wilcox <matthew.r.wilcox@intel.com> Cc: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Hitoshi Mitake <h.mitake@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | delay.h | s | 1.1K | 38 | Andrew Morton | akpm@linux-foundation.org | 1311353133 |  | asm-generic: delay.h fix udelay and ndelay for 8 bit args  With a non-constant 8-bit argument, a call to udelay() generates a warning:  drivers/gpu/drm/radeon/atom.c: In function 'atom_op_delay': drivers/gpu/drm/radeon/atom.c:654: warning: comparison is always false due to limited range of data type  The code looks like it works OK with an 8-bit arg, and the calling code is doing nothing wrong, so udelay() needs fixing.  Fixing it was rather tricky.  Simply typecasting `n' in the comparison with 20000 didn't change anything.  Hence the divide-by-20000 trick.  Using a do{}while loop didn't work because udelay() is used in ?: statements, hence the ({...}) construct.  While I was there I replaced the brain-bending ?:?:?: mess with nice if/else code.  Probably other architectures are generating the same warning and can use a similar change.  [Taken from the x86 tree and moved to asm-generic by Jonas Bonn]  Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Jonas Bonn <jonas@southpole.se>
f | pgtable-nopud.h | s | 1.8K | 49 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1248721838 |  | mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  Upcoming paches to support the new 64-bit "BookE" powerpc architecture will need to have the virtual address corresponding to PTE page when freeing it, due to the way the HW table walker works.  Basically, the TLB can be loaded with "large" pages that cover the whole virtual space (well, sort-of, half of it actually) represented by a PTE page, and which contain an "indirect" bit indicating that this TLB entry RPN points to an array of PTEs from which the TLB can then create direct entries. Thus, in order to invalidate those when PTE pages are deleted, we need the virtual address to pass to tlbilx or tlbivax instructions.  The old trick of sticking it somewhere in the PTE page struct page sucks too much, the address is almost readily available in all call sites and almost everybody implemets these as macros, so we may as well add the argument everywhere. I added it to the pmd and pud variants for consistency.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: David Howells <dhowells@redhat.com> [MN10300 & FRV] Acked-by: Nick Piggin <npiggin@suse.de> Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [s390] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | irq_regs.h | s | 980B | 30 | Christoph Lameter | cl@linux.com | 1292594839 |  | core: Replace __get_cpu_var with __this_cpu_read if not used for an address.  __get_cpu_var() can be replaced with this_cpu_read and will then use a single read instruction with implied address calculation to access the correct per cpu instance.  However, the address of a per cpu variable passed to __this_cpu_read() cannot be determined (since it's an implied address conversion through segment prefixes).  Therefore apply this only to uses of __get_cpu_var where the address of the variable is not used.  Cc: Pekka Enberg <penberg@cs.helsinki.fi> Cc: Hugh Dickins <hughd@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Acked-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Christoph Lameter <cl@linux.com> Signed-off-by: Tejun Heo <tj@kernel.org>
f | atomic64.h | s | 1.8K | 37 | Paul Mackerras | paulus@samba.org | 1245036458 |  | lib: Provide generic atomic64_t implementation  Many processor architectures have no 64-bit atomic instructions, but we need atomic64_t in order to support the perf_counter subsystem.  This adds an implementation of 64-bit atomic operations using hashed spinlocks to provide atomicity.  For each atomic operation, the address of the atomic64_t variable is hashed to an index into an array of 16 spinlocks.  That spinlock is taken (with interrupts disabled) around the operation, which can then be coded non-atomically within the lock.  On UP, all the spinlock manipulation goes away and we simply disable interrupts around each operation.  In fact gcc eliminates the whole atomic64_lock variable as well.  Signed-off-by: Paul Mackerras <paulus@samba.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | cacheflush.h | s | 1.3K | 30 | Mike Frysinger | vapier@gentoo.org | 1306337977 |  | asm-generic/cacheflush.h: flush icache when copying to user pages  The copy_to_user_page() function is supposed to flush the icache on the memory that was written, but the current asm-generic version lacks that logic.  While normally it isn't a big deal as the asm-generic version of icache flushing is a stub, it is a deal for ports that want to use the asm-generic version as a baseline and then overlay its own specific parts (like icache flushing).  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Cc: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | segment.h | s | 249B | 8 | Arnd Bergmann | arnd@arndb.de | 1244746970 |  | asm-generic: add generic NOMMU versions of some headers  Memory management in generic is highly architecture specific, but on NOMMU architectures, it is mostly trivial, so just add a default implementation in asm-generic that applies to all NOMMU architectures.  The two files cache.h and cacheflush.h can possibly also be used by architectures that have an MMU but never require flushing the cache or have cache lines larger than 32 bytes.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | current.h | s | 217B | 6 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | sizes.h | s | 1.2K | 42 | GuanXuetao | gxt@mprc.pku.edu.cn | 1300324744 |  | asm-generic headers: add sizes.h  This patch adds sizes.h into asm-generic headers. Only 32-bit version supported.  Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | iomap.h | s | 2.8K | 70 | James Bottomley | James.Bottomley@HansenPartnership.com | 1330357410 |  | [PARISC] fix compile break caused by iomap: make IOPORT/PCI mapping functions conditional  The problem in  commit fea80311a939a746533a6d7e7c3183729d6a3faf Author: Randy Dunlap <rdunlap@xenotime.net> Date:   Sun Jul 24 11:39:14 2011 -0700      iomap: make IOPORT/PCI mapping functions conditional  is that if your architecture supplies pci_iomap/pci_iounmap, it expects always to supply them.  Adding empty body defitions in the !CONFIG_PCI case, which is what this patch does, breaks the parisc compile because the functions become doubly defined.  It took us a while to spot this, because we don't actually build !CONFIG_PCI very often (only if someone is brave enough to test the snake/asp machines).  Since the note in the commit log says this is to fix a CONFIG_GENERIC_IOMAP issue (which it does because CONFIG_GENERIC_IOMAP supplies pci_iounmap only if CONFIG_PCI is set), there should actually have been a condition upon this.  This should make sure no other architecture's !CONFIG_PCI compile breaks in the same way as parisc.  The fix had to be updated to take account of the GENERIC_PCI_IOMAP separation.  Reported-by: Rolf Eike Beer <eike@sf-mail.de> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | cmpxchg-local.h | s | 1.4K | 58 | David Howells | dhowells@redhat.com | 1286456935 |  | Fix IRQ flag handling naming  Fix the IRQ flag handling naming.  In linux/irqflags.h under one configuration, it maps:  	local_irq_enable() -> raw_local_irq_enable() 	local_irq_disable() -> raw_local_irq_disable() 	local_irq_save() -> raw_local_irq_save() 	...  and under the other configuration, it maps:  	raw_local_irq_enable() -> local_irq_enable() 	raw_local_irq_disable() -> local_irq_disable() 	raw_local_irq_save() -> local_irq_save() 	...  This is quite confusing.  There should be one set of names expected of the arch, and this should be wrapped to give another set of names that are expected by users of this facility.  Change this to have the arch provide:  	flags = arch_local_save_flags() 	flags = arch_local_irq_save() 	arch_local_irq_restore(flags) 	arch_local_irq_disable() 	arch_local_irq_enable() 	arch_irqs_disabled_flags(flags) 	arch_irqs_disabled() 	arch_safe_halt()  Then linux/irqflags.h wraps these to provide:  	raw_local_save_flags(flags) 	raw_local_irq_save(flags) 	raw_local_irq_restore(flags) 	raw_local_irq_disable() 	raw_local_irq_enable() 	raw_irqs_disabled_flags(flags) 	raw_irqs_disabled() 	raw_safe_halt()  with type checking on the flags 'arguments', and then wraps those to provide:  	local_save_flags(flags) 	local_irq_save(flags) 	local_irq_restore(flags) 	local_irq_disable() 	local_irq_enable() 	irqs_disabled_flags(flags) 	irqs_disabled() 	safe_halt()  with tracing included if enabled.  The arch functions can now all be inline functions rather than some of them having to be macros.  Signed-off-by: David Howells <dhowells@redhat.com> [X86, FRV, MN10300] Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> [Tile] Signed-off-by: Michal Simek <monstr@monstr.eu> [Microblaze] Tested-by: Catalin Marinas <catalin.marinas@arm.com> [ARM] Acked-by: Thomas Gleixner <tglx@linutronix.de> Acked-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com> [AVR] Acked-by: Tony Luck <tony.luck@intel.com> [IA-64] Acked-by: Hirokazu Takata <takata@linux-m32r.org> [M32R] Acked-by: Greg Ungerer <gerg@uclinux.org> [M68K/M68KNOMMU] Acked-by: Ralf Baechle <ralf@linux-mips.org> [MIPS] Acked-by: Kyle McMartin <kyle@mcmartin.ca> [PA-RISC] Acked-by: Paul Mackerras <paulus@samba.org> [PowerPC] Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [S390] Acked-by: Chen Liqin <liqin.chen@sunplusct.com> [Score] Acked-by: Matt Fleming <matt@console-pimps.org> [SH] Acked-by: David S. Miller <davem@davemloft.net> [Sparc] Acked-by: Chris Zankel <chris@zankel.net> [Xtensa] Reviewed-by: Richard Henderson <rth@twiddle.net> [Alpha] Reviewed-by: Yoshinori Sato <ysato@users.sourceforge.jp> [H8300] Cc: starvik@axis.com [CRIS] Cc: jesper.nilsson@axis.com [CRIS] Cc: linux-cris-kernel@axis.com
f | mutex-xchg.h | s | 3.7K | 103 | Nick Piggin | npiggin@suse.de | 1224778700 |  | mutex: speed up generic mutex implementations  - atomic operations which both modify the variable and return something imply   full smp memory barriers before and after the memory operations involved   (failing atomic_cmpxchg, atomic_add_unless, etc don't imply a barrier because   they don't modify the target). See Documentation/atomic_ops.txt.   So remove extra barriers and branches.  - All architectures support atomic_cmpxchg. This has no relation to   __HAVE_ARCH_CMPXCHG. We can just take the atomic_cmpxchg path unconditionally  This reduces a simple single threaded fastpath lock+unlock test from 590 cycles to 203 cycles on a ppc970 system.  Signed-off-by: Nick Piggin <npiggin@suse.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | signal-defs.h | s | 802B | 22 | Arnd Bergmann | arnd@arndb.de | 1244746912 |  | asm-generic: rename termios.h, signal.h and mman.h  The existing asm-generic versions are incomplete and included by some architectures. New architectures should be able to use a generic version, so rename the existing files and change all users, which lets us add the new files.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | tlb.h | s | 5.2K | 155 | Shaohua Li | shaohua.li@intel.com | 1326427988 |  | thp: add tlb_remove_pmd_tlb_entry  We have tlb_remove_tlb_entry to indicate a pte tlb flush entry should be flushed, but not a corresponding API for pmd entry.  This isn't a problem so far because THP is only for x86 currently and tlb_flush() under x86 will flush entire TLB.  But this is confusion and could be missed if thp is ported to other arch.  Also convert tlb->need_flush = 1 to a VM_BUG_ON(!tlb->need_flush) in __tlb_remove_page() as suggested by Andrea Arcangeli.  The __tlb_remove_page() function is supposed to be called after tlb_remove_xxx_tlb_entry() and we can catch any misuse.  Signed-off-by: Shaohua Li <shaohua.li@intel.com> Reviewed-by: Andrea Arcangeli <aarcange@redhat.com> Cc: David Rientjes <rientjes@google.com> Cc: Johannes Weiner <jweiner@redhat.com> Cc: Minchan Kim <minchan.kim@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | local64.h | s | 3.8K | 75 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | 4level-fixup.h | s | 1.0K | 29 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1248721838 |  | mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  Upcoming paches to support the new 64-bit "BookE" powerpc architecture will need to have the virtual address corresponding to PTE page when freeing it, due to the way the HW table walker works.  Basically, the TLB can be loaded with "large" pages that cover the whole virtual space (well, sort-of, half of it actually) represented by a PTE page, and which contain an "indirect" bit indicating that this TLB entry RPN points to an array of PTEs from which the TLB can then create direct entries. Thus, in order to invalidate those when PTE pages are deleted, we need the virtual address to pass to tlbilx or tlbivax instructions.  The old trick of sticking it somewhere in the PTE page struct page sucks too much, the address is almost readily available in all call sites and almost everybody implemets these as macros, so we may as well add the argument everywhere. I added it to the pmd and pud variants for consistency.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: David Howells <dhowells@redhat.com> [MN10300 & FRV] Acked-by: Nick Piggin <npiggin@suse.de> Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [s390] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | audit_dir_write.h | s | 416B | 32 | Chris Metcalf | cmetcalf@tilera.com | 1304534488 |  | audit: support the "standard" <asm-generic/unistd.h>  Many of the syscalls mentioned in the audit code are not present for architectures that implement only the "standard" set of Linux syscalls (e.g. openat, but not open, etc.).  This change adds proper #ifdefs for all those syscalls.  Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | unaligned.h | s | 907B | 27 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | resource.h | s | 2.8K | 80 | Tim Gardner | tim.gardner@canonical.com | 1306337983 |  | ulimit: raise default hard ulimit on number of files to 4096  Apps are increasingly using more than 1024 file descriptors.  See discussion in several distro bug trackers, e.g.  BugLink: http://bugs.launchpad.net/bugs/663090 https://issues.rpath.com/browse/RPL-2054  You don't want to raise the default soft limit, since that might break apps that use select(), but it's safe to raise the default hard limit; that way, apps that know they need lots of file descriptors can raise their soft limit without needing root, and without user intervention.  Ubuntu is doing this with a kernel change because they have a policy of not changing kernel defaults in userland.  While 4096 might not be enough for *all* apps, it seems to be plenty for the apps I've seen lately that are unhappy with 1024.  Signed-off-by: Tim Gardner <tim.gardner@canonical.com> Cc: Dan Kegel <dank@kegel.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Christoph Hellwig <hch@lst.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | serial.h | s | 306B | 10 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | ucontext.h | s | 294B | 10 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | getorder.h | s | 1.4K | 54 | Joerg Roedel | joerg.roedel@amd.com | 1330108767 |  | bitops: Add missing parentheses to new get_order macro  The new get_order macro introcuded in commit  	d66acc39c7cee323733c8503b9de1821a56dff7e  does not use parentheses around all uses of the parameter n. This causes new compile warnings, for example in the amd_iommu_init.c function:  drivers/iommu/amd_iommu_init.c:561:6: warning: suggest parentheses around comparison in operand of ‘&’ [-Wparentheses] drivers/iommu/amd_iommu_init.c:561:6: warning: suggest parentheses around comparison in operand of ‘&’ [-Wparentheses]  Fix those warnings by adding the missing parentheses.  Reported-by: Ingo Molnar <mingo@elte.hu> Cc: David Howells <dhowells@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1330088295-28732-1-git-send-email-joerg.roedel@amd.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | dma-mapping-broken.h | s | 2.4K | 58 | FUJITA Tomonori | fujita.tomonori@lab.ntt.co.jp | 1281542361 |  | dma-mapping: remove dma_is_consistent API  Architectures implement dma_is_consistent() in different ways (some misinterpret the definition of API in DMA-API.txt).  So it hasn't been so useful for drivers.  We have only one user of the API in tree.  Unlikely out-of-tree drivers use the API.  Even if we fix dma_is_consistent() in some architectures, it doesn't look useful at all.  It was invented long ago for some old systems that can't allocate coherent memory at all.  It's better to export only APIs that are definitely necessary for drivers.  Let's remove this API.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Cc: James Bottomley <James.Bottomley@HansenPartnership.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | termios.h | s | 4.0K | 128 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | termios-base.h | s | 2.1K | 58 | Arnd Bergmann | arnd@arndb.de | 1244746912 |  | asm-generic: rename termios.h, signal.h and mman.h  The existing asm-generic versions are incomplete and included by some architectures. New architectures should be able to use a generic version, so rename the existing files and change all users, which lets us add the new files.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | siginfo.h | s | 9.5K | 286 | James Morris | james.l.morris@oracle.com | 1336099600 |  | 
f | pci_iomap.h | s | 1.2K | 32 | James Bottomley | James.Bottomley@HansenPartnership.com | 1330357410 |  | [PARISC] fix compile break caused by iomap: make IOPORT/PCI mapping functions conditional  The problem in  commit fea80311a939a746533a6d7e7c3183729d6a3faf Author: Randy Dunlap <rdunlap@xenotime.net> Date:   Sun Jul 24 11:39:14 2011 -0700      iomap: make IOPORT/PCI mapping functions conditional  is that if your architecture supplies pci_iomap/pci_iounmap, it expects always to supply them.  Adding empty body defitions in the !CONFIG_PCI case, which is what this patch does, breaks the parisc compile because the functions become doubly defined.  It took us a while to spot this, because we don't actually build !CONFIG_PCI very often (only if someone is brave enough to test the snake/asp machines).  Since the note in the commit log says this is to fix a CONFIG_GENERIC_IOMAP issue (which it does because CONFIG_GENERIC_IOMAP supplies pci_iounmap only if CONFIG_PCI is set), there should actually have been a condition upon this.  This should make sure no other architecture's !CONFIG_PCI compile breaks in the same way as parisc.  The fix had to be updated to take account of the GENERIC_PCI_IOMAP separation.  Reported-by: Rolf Eike Beer <eike@sf-mail.de> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | ioctls.h | s | 3.5K | 104 | Kay Sievers | kay.sievers@vrfy.org | 1297980990 |  | tty: add TIOCVHANGUP to allow clean tty shutdown of all ttys  This is useful for system management software so that it can kick off things like gettys and everything that's started from a tty, before we reuse it from/for something else or shut it down.  Without this ioctl it would have to temporarily become the owner of the tty, then call vhangup() and then give it up again.  Cc: Lennart Poettering <lennart@poettering.net> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | bitsperlong.h | s | 939B | 30 | Denys Vlasenko | vda.linux@googlemail.com | 1338511767 |  | vsprintf: further optimize decimal conversion  Previous code was using optimizations which were developed to work well even on narrow-word CPUs (by today's standards).  But Linux runs only on 32-bit and wider CPUs.  We can use that.  First: using 32x32->64 multiply and trivial 32-bit shift, we can correctly divide by 10 much larger numbers, and thus we can print groups of 9 digits instead of groups of 5 digits.  Next: there are two algorithms to print larger numbers.  One is generic: divide by 1000000000 and repeatedly print groups of (up to) 9 digits. It's conceptually simple, but requires an (unsigned long long) / 1000000000 division.  Second algorithm splits 64-bit unsigned long long into 16-bit chunks, manipulates them cleverly and generates groups of 4 decimal digits.  It so happens that it does NOT require long long division.  If long is > 32 bits, division of 64-bit values is relatively easy, and we will use the first algorithm.  If long long is > 64 bits (strange architecture with VERY large long long), second algorithm can't be used, and we again use the first one.  Else (if long is 32 bits and long long is 64 bits) we use second one.  And third: there is a simple optimization which takes fast path not only for zero as was done before, but for all one-digit numbers.  In all tested cases new code is faster than old one, in many cases by 30%, in few cases by more than 50% (for example, on x86-32, conversion of 12345678).  Code growth is ~0 in 32-bit case and ~130 bytes in 64-bit case.  This patch is based upon an original from Michal Nazarewicz.  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Cc: Douglas W Jones <jones@cs.uiowa.edu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | types.h | s | 220B | 8 | Al Viro | viro@zeniv.linux.org.uk | 1325649317 |  | consolidate umode_t declarations  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | kdebug.h | s | 143B | 7 | Andrea Gelmini | andrea.gelmini@gelma.net | 1286653904 |  | asm-generic: kdebug.h: Checkpatch cleanup  include/asm-generic/kdebug.h:6: ERROR: spaces required around that '=' (ctx:VxV)  Signed-off-by: Andrea Gelmini <andrea.gelmini@gelma.net> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | errno-base.h | s | 1.5K | 37 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | bugs.h | s | 228B | 8 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | pci-bridge.h | s | 1.7K | 61 | Bjorn Helgaas | bhelgaas@google.com | 1335820862 |  | PCI: work around Stratus ftServer broken PCIe hierarchy  A PCIe downstream port is a P2P bridge.  Its secondary interface is a link that should lead only to device 0 (unless ARI is enabled)[1], so we don't probe for non-zero device numbers.  Some Stratus ftServer systems have a PCIe downstream port (02:00.0) that leads to both an upstream port (03:00.0) and a downstream port (03:01.0), and 03:01.0 has important devices below it:    [0000:02]-+-00.0-[03-3c]--+-00.0-[04-09]--...                             \-01.0-[0a-0d]--+-[USB]                                             +-[NIC]                                             +-...  Previously, we didn't enumerate device 03:01.0, so USB and the network didn't work.  This patch adds a DMI quirk to scan all device numbers, not just 0, below a downstream port.  Based on a patch by Prarit Bhargava.  [1] PCIe spec r3.0, sec 7.3.1  CC: Myron Stowe <mstowe@redhat.com> CC: Don Dutile <ddutile@redhat.com> CC: James Paradis <james.paradis@stratus.com> CC: Matthew Wilcox <matthew.r.wilcox@intel.com> CC: Jesse Barnes <jbarnes@virtuousgeek.org> CC: Prarit Bhargava <prarit@redhat.com> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | hw_irq.h | s | 270B | 8 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | uaccess-unaligned.h | s | 733B | 22 | Arnd Bergmann | arnd@arndb.de | 1244746937 |  | asm-generic: rename page.h and uaccess.h  The current asm-generic/page.h only contains the get_order function, and asm-generic/uaccess.h only implements unaligned accesses. This renames the file to getorder.h and uaccess-unaligned.h to make room for new page.h and uaccess.h file that will be usable by all simple (e.g. nommu) architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | audit_signal.h | s | 36B | 3 | Amy Griffis | amy.griffis@hp.com | 1178876305 |  | [PATCH] add SIGNAL syscall class (v3)  Add a syscall class for sending signals.  Signed-off-by: Amy Griffis <amy.griffis@hp.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | bitops.h | s | 1.2K | 36 | Akinobu Mita | akinobu.mita@gmail.com | 1300934782 |  | bitops: remove minix bitops from asm/bitops.h  minix bit operations are only used by minix filesystem and useless by other modules.  Because byte order of inode and block bitmaps is different on each architecture like below:  m68k: 	big-endian 16bit indexed bitmaps  h8300, microblaze, s390, sparc, m68knommu: 	big-endian 32 or 64bit indexed bitmaps  m32r, mips, sh, xtensa: 	big-endian 32 or 64bit indexed bitmaps for big-endian mode 	little-endian bitmaps for little-endian mode  Others: 	little-endian bitmaps  In order to move minix bit operations from asm/bitops.h to architecture independent code in minix filesystem, this provides two config options.  CONFIG_MINIX_FS_BIG_ENDIAN_16BIT_INDEXED is only selected by m68k. CONFIG_MINIX_FS_NATIVE_ENDIAN is selected by the architectures which use native byte order bitmaps (h8300, microblaze, s390, sparc, m68knommu, m32r, mips, sh, xtensa).  The architectures which always use little-endian bitmaps do not select these options.  Finally, we can remove minix bit operations from asm/bitops.h for all architectures.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Greg Ungerer <gerg@uclinux.org> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Roman Zippel <zippel@linux-m68k.org> Cc: Andreas Schwab <schwab@linux-m68k.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Yoshinori Sato <ysato@users.sourceforge.jp> Cc: Michal Simek <monstr@monstr.eu> Cc: "David S. Miller" <davem@davemloft.net> Cc: Hirokazu Takata <takata@linux-m32r.org> Acked-by: Ralf Baechle <ralf@linux-mips.org> Acked-by: Paul Mundt <lethal@linux-sh.org> Cc: Chris Zankel <chris@zankel.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | checksum.h | s | 2.2K | 73 | Linas Vepstas | linas@codeaurora.org | 1320158061 |  | Add extra arch overrides to asm-generic/checksum.h  There are plausible reasons for architectures to provide their own versions of csum_partial_copy_nocheck and csum_tcpudp_magic. By protecting these, the architecture can still re-use the asm-generic checksum.h, instead of copying it.  Signed-off-by: Linas Vepstas <linas@codeaurora.org> Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Richard Kuo <rkuo@codeaurora.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | setup.h | s | 127B | 4 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | dma.h | s | 514B | 13 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | errno.h | s | 5.1K | 104 | Huang Ying | ying.huang@intel.com | 1300378107 |  | mm: make __get_user_pages return -EHWPOISON for HWPOISON page optionally  Make __get_user_pages return -EHWPOISON for HWPOISON page only if FOLL_HWPOISON is specified.  With this patch, the interested callers can distinguish HWPOISON pages from general FAULT pages, while other callers will still get -EFAULT for all these pages, so the user space interface need not to be changed.  This feature is needed by KVM, where UCR MCE should be relayed to guest for HWPOISON page, while instruction emulation and MMIO will be tried for general FAULT page.  The idea comes from Andrew Morton.  Signed-off-by: Huang Ying <ying.huang@intel.com> Cc: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | ptrace.h | s | 1.6K | 63 | Mike Frysinger | vapier@gentoo.org | 1306455156 |  | asm-generic/ptrace.h: start a common low level ptrace helper  This is a series of low level ptrace unification steps to make it easier for common code (like KGDB) to poke at register state.  This also avoids having to duplicate higher level operations for most ports which don't have special needs for accessing things.  This patch:  This implements a bunch of helper funcs for poking the registers of a ptrace structure.  Now common code should be able to portably update specific registers (like kgdb updating the PC).  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Jason Wessel <jason.wessel@windriver.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Sergei Shtylyov <sshtylyov@mvista.com> Cc: Dongdong Deng <dongdong.deng@windriver.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mmu_context.h | s | 842B | 35 | Arnd Bergmann | arnd@arndb.de | 1244746970 |  | asm-generic: add generic NOMMU versions of some headers  Memory management in generic is highly architecture specific, but on NOMMU architectures, it is mostly trivial, so just add a default implementation in asm-generic that applies to all NOMMU architectures.  The two files cache.h and cacheflush.h can possibly also be used by architectures that have an MMU but never require flushing the cache or have cache lines larger than 32 bytes.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | io-64-nonatomic-lo-hi.h | s | 536B | 22 | Hitoshi Mitake | mitake@dcl.info.waseda.ac.jp | 1329871648 |  | asm-generic: architecture independent readq/writeq for 32bit environment  This provides unified readq()/writeq() helper functions for 32-bit drivers.  For some cases, readq/writeq without atomicity is harmful, and order of io access has to be specified explicitly.  So in this patch, new two header files which contain non-atomic readq/writeq are added.   - <asm-generic/io-64-nonatomic-lo-hi.h> provides non-atomic readq/    writeq with the order of lower address -> higher address   - <asm-generic/io-64-nonatomic-hi-lo.h> provides non-atomic readq/    writeq with reversed order  This allows us to remove some readq()s that were added drivers when the default non-atomic ones were removed in commit dbee8a0affd5 ("x86: remove 32-bit versions of readq()/writeq()")  The drivers which need readq/writeq but can do with the non-atomic ones must add the line:    #include <asm-generic/io-64-nonatomic-lo-hi.h> /* or hi-lo.h */  But this will be nop in 64-bit environments, and no other #ifdefs are required.  So I believe that this patch can solve the problem of  1. driver-specific readq/writeq  2. atomicity and order of io access  This patch is tested with building allyesconfig and allmodconfig as ARCH=x86 and ARCH=i386 on top of tip/master.  Cc: Kashyap Desai <Kashyap.Desai@lsi.com> Cc: Len Brown <lenb@kernel.org> Cc: Ravi Anand <ravi.anand@qlogic.com> Cc: Vikas Chaudhary <vikas.chaudhary@qlogic.com> Cc: Matthew Garrett <mjg@redhat.com> Cc: Jason Uhlenkott <juhlenko@akamai.com> Cc: James Bottomley <James.Bottomley@parallels.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Roland Dreier <roland@purestorage.com> Cc: James Bottomley <jbottomley@parallels.com> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Cc: Matthew Wilcox <matthew.r.wilcox@intel.com> Cc: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Hitoshi Mitake <h.mitake@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | pgtable-nopmd.h | s | 1.9K | 53 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1248721838 |  | mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  mm: Pass virtual address to [__]p{te,ud,md}_free_tlb()  Upcoming paches to support the new 64-bit "BookE" powerpc architecture will need to have the virtual address corresponding to PTE page when freeing it, due to the way the HW table walker works.  Basically, the TLB can be loaded with "large" pages that cover the whole virtual space (well, sort-of, half of it actually) represented by a PTE page, and which contain an "indirect" bit indicating that this TLB entry RPN points to an array of PTEs from which the TLB can then create direct entries. Thus, in order to invalidate those when PTE pages are deleted, we need the virtual address to pass to tlbilx or tlbivax instructions.  The old trick of sticking it somewhere in the PTE page struct page sucks too much, the address is almost readily available in all call sites and almost everybody implemets these as macros, so we may as well add the argument everywhere. I added it to the pmd and pud variants for consistency.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: David Howells <dhowells@redhat.com> [MN10300 & FRV] Acked-by: Nick Piggin <npiggin@suse.de> Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [s390] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ftrace.h | s | 460B | 14 | GuanXuetao | gxt@mprc.pku.edu.cn | 1300324744 |  | asm-generic headers: add ftrace.h  This patch adds ftrace.h into asm-generic headers. The file content could be empty in most architectures.  Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | mm_hooks.h | s | 425B | 15 | Jeremy Fitzhardinge | jeremy@goop.org | 1178126834 |  | [PATCH] x86: PARAVIRT: add hooks to intercept mm creation and destruction  Add hooks to allow a paravirt implementation to track the lifetime of an mm.  Paravirtualization requires three hooks, but only two are needed in common code.  They are:  arch_dup_mmap, which is called when a new mmap is created at fork  arch_exit_mmap, which is called when the last process reference to an   mm is dropped, which typically happens on exit and exec.  The third hook is activate_mm, which is called from the arch-specific activate_mm() macro/function, and so doesn't need stub versions for other architectures.  It's called when an mm is first used.  Signed-off-by: Jeremy Fitzhardinge <jeremy@xensource.com> Signed-off-by: Andi Kleen <ak@suse.de> Cc: linux-arch@vger.kernel.org Cc: James Bottomley <James.Bottomley@SteelEye.com> Acked-by: Ingo Molnar <mingo@elte.hu>
f | cache.h | s | 345B | 10 | Arnd Bergmann | arnd@arndb.de | 1244746970 |  | asm-generic: add generic NOMMU versions of some headers  Memory management in generic is highly architecture specific, but on NOMMU architectures, it is mostly trivial, so just add a default implementation in asm-generic that applies to all NOMMU architectures.  The two files cache.h and cacheflush.h can possibly also be used by architectures that have an MMU but never require flushing the cache or have cache lines larger than 32 bytes.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | vmlinux.lds.h | s | 23K | 740 | Steven Rostedt | srostedt@redhat.com | 1337212724 |  | ftrace: Sort all function addresses, not just per page  Instead of just sorting the ip's of the functions per ftrace page, sort the entire list before adding them to the ftrace pages.  This will allow the bsearch algorithm to be sped up as it can also sort by pages, not just records within a page.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
f | atomic-long.h | s | 5.1K | 185 | Arnd Bergmann | arnd@arndb.de | 1244799178 |  | asm-generic: merge branch 'master' of torvalds/linux-2.6  Fixes a merge conflict against the x86 tree caused by a fix to atomic.h which I renamed to atomic_long.h.  Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | user.h | s | 242B | 7 | Tobias Klauser | tklauser@distanz.ch | 1298990979 |  | asm-generic/user.h: Fix spelling in comment  Fix two misspellings.  Signed-off-by: Tobias Klauser <tklauser@distanz.ch> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | exec.h | s | 697B | 17 | David Howells | dhowells@redhat.com | 1332955803 |  | Split arch_align_stack() out from asm-generic/system.h  Split arch_align_stack() out from asm-generic/system.h into its own header of asm-generic/exec.h as part of the asm/system.h disintegration.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | dma-mapping-common.h | s | 5.3K | 149 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | statfs.h | s | 1.8K | 77 | H. Peter Anvin | hpa@linux.intel.com | 1335815715 |  | asm-generic: Use __BITS_PER_LONG in statfs.h  <asm-generic/statfs.h> is exported to userspace, so using BITS_PER_LONG is invalid.  We need to use __BITS_PER_LONG instead.  This is kernel bugzilla 43165.  Reported-by: H.J. Lu <hjl.tools@gmail.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Link: http://lkml.kernel.org/r/1335465916-16965-1-git-send-email-hpa@linux.intel.com Acked-by: Arnd Bergmann <arnd@arndb.de> Cc: <stable@vger.kernel.org>
f | termbits.h | s | 4.5K | 184 | hyc@symas.com | hyc@symas.com | 1281473259 |  | tty: Add EXTPROC support for LINEMODE  This patch is against the 2.6.34 source.  Paraphrased from the 1989 BSD patch by David Borman @ cray.com:       These are the changes needed for the kernel to support      LINEMODE in the server.       There is a new bit in the termios local flag word, EXTPROC.      When this bit is set, several aspects of the terminal driver      are disabled.  Input line editing, character echo, and mapping      of signals are all disabled.  This allows the telnetd to turn      off these functions when in linemode, but still keep track of      what state the user wants the terminal to be in.       New ioctl:          TIOCSIG         Generate a signal to processes in the                          current process group of the pty.       There is a new mode for packet driver, the TIOCPKT_IOCTL bit.      When packet mode is turned on in the pty, and the EXTPROC bit      is set, then whenever the state of the pty is changed, the      next read on the master side of the pty will have the TIOCPKT_IOCTL      bit set.  This allows the process on the server side of the pty      to know when the state of the terminal has changed; it can then      issue the appropriate ioctl to retrieve the new state.  Since the original BSD patches accompanied the source code for telnet I've left that reference here, but obviously the feature is useful for any remote terminal protocol, including ssh.  The corresponding feature has existed in the BSD tty driver since 1989. For historical reference, a good copy of the relevant files can be found here:  http://anonsvn.mit.edu/viewvc/krb5/trunk/src/appl/telnet/?pathrev=17741  Signed-off-by: Howard Chu <hyc@symas.com> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | xor.h | s | 13K | 670 | Linus Torvalds | torvalds@linux-foundation.org | 1305921029 |  | sanitize <linux/prefetch.h> usage  Commit e66eed651fd1 ("list: remove prefetching from regular list iterators") removed the include of prefetch.h from list.h, which uncovered several cases that had apparently relied on that rather obscure header file dependency.  So this fixes things up a bit, using     grep -L linux/prefetch.h $(git grep -l '[^a-z_]prefetchw*(' -- '*.[ch]')    grep -L 'prefetchw*(' $(git grep -l 'linux/prefetch.h' -- '*.[ch]')  to guide us in finding files that either need <linux/prefetch.h> inclusion, or have it despite not needing it.  There are more of them around (mostly network drivers), but this gets many core ones.  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bug.h | s | 5.5K | 184 | Paul Mundt | lethal@linux-sh.org | 1340645569 |  | bug.h: Fix up CONFIG_BUG=n implicit function declarations.  Commit 2603efa31a03 ("bug.h: Fix up powerpc build regression") corrected the powerpc build case and extended the __ASSEMBLY__ guards, but it also got caught in pre-processor hell accidentally matching the else case of CONFIG_BUG resulting in the BUG disabled case tripping up on -Werror=implicit-function-declaration.  It's not possible to __ASSEMBLY__ guard the entire file as architecture code needs to get at the BUGFLAG_WARNING definition in the GENERIC_BUG case, but the rest of the CONFIG_BUG=y/n case needs to be guarded.  Rather than littering endless __ASSEMBLY__ checks in each of the if/else cases we just move the BUGFLAG definitions up under their own GENERIC_BUG test and then shove everything else under one big __ASSEMBLY__ guard.  Build tested on all of x86 CONFIG_BUG=y, CONFIG_BUG=n, powerpc (due to it's dependence on BUGFLAG definitions in assembly code), and sh (due to not bringing in linux/kernel.h to satisfy the taint flag definitions used by the generic bug code).  Hopefully that's the end of the corner cases and I can abstain from ever having to touch this infernal header ever again.  Reported-by: Fengguang Wu <fengguang.wu@intel.com> Tested-by: Fengguang Wu <wfg@linux.intel.com> Acked-by: Randy Dunlap <rdunlap@xenotime.net> Cc: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Paul Mundt <lethal@linux-sh.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hardirq.h | s | 493B | 16 | Frederic Weisbecker | fweisbec@gmail.com | 1284060538 |  | irq: Fix circular headers dependency  asm-generic/hardirq.h needs asm/irq.h which might include linux/interrupt.h as in the sparc 32 case. At this point we need irq_cpustat generic definitions, but those are included later in asm-generic/hardirq.h.  Then delay a bit the inclusion of irq.h from asm-generic/hardirq.h, it doesn't need to be included early.  This fixes:   include/linux/interrupt.h: In function '__raise_softirq_irqoff':  include/linux/interrupt.h:414: error: implicit declaration of function 'local_softirq_pending'  include/linux/interrupt.h:414: error: lvalue required as left operand of assignment  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Lai Jiangshan <laijs@cn.fujitsu.com> Cc: Koki Sanagi <sanagi.koki@jp.fujitsu.com> Cc: mathieu.desnoyers@efficios.com Cc: rostedt@goodmis.org Cc: nhorman@tuxdriver.com Cc: scott.a.mcmillan@intel.com Cc: eric.dumazet@gmail.com Cc: kaneshige.kenji@jp.fujitsu.com Cc: davem@davemloft.net Cc: izumi.taku@jp.fujitsu.com Cc: kosaki.motohiro@jp.fujitsu.com LKML-Reference: <20100908122557.GA5310@nowhere> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | word-at-a-time.h | s | 1.2K | 43 | Linus Torvalds | torvalds@linux-foundation.org | 1338057220 |  | word-at-a-time: make the interfaces truly generic  This changes the interfaces in <asm/word-at-a-time.h> to be a bit more complicated, but a lot more generic.  In particular, it allows us to really do the operations efficiently on both little-endian and big-endian machines, pretty much regardless of machine details.  For example, if you can rely on a fast population count instruction on your architecture, this will allow you to make your optimized <asm/word-at-a-time.h> file with that.  NOTE! The "generic" version in include/asm-generic/word-at-a-time.h is not truly generic, it actually only works on big-endian.  Why? Because on little-endian the generic algorithms are wasteful, since you can inevitably do better. The x86 implementation is an example of that.  (The only truly non-generic part of the asm-generic implementation is the "find_zero()" function, and you could make a little-endian version of it.  And if the Kbuild infrastructure allowed us to pick a particular header file, that would be lovely)  The <asm/word-at-a-time.h> functions are as follows:   - WORD_AT_A_TIME_CONSTANTS: specific constants that the algorithm    uses.   - has_zero(): take a word, and determine if it has a zero byte in it.    It gets the word, the pointer to the constant pool, and a pointer to    an intermediate "data" field it can set.     This is the "quick-and-dirty" zero tester: it's what is run inside    the hot loops.   - "prep_zero_mask()": take the word, the data that has_zero() produced,    and the constant pool, and generate an *exact* mask of which byte had    the first zero.  This is run directly *outside* the loop, and allows    the "has_zero()" function to answer the "is there a zero byte"    question without necessarily getting exactly *which* byte is the    first one to contain a zero.     If you do multiple byte lookups concurrently (eg "hash_name()", which    looks for both NUL and '/' bytes), after you've done the prep_zero_mask()    phase, the result of those can be or'ed together to get the "either    or" case.   - The result from "prep_zero_mask()" can then be fed into "find_zero()"    (to find the byte offset of the first byte that was zero) or into    "zero_bytemask()" (to find the bytemask of the bytes preceding the    zero byte).     The existence of zero_bytemask() is optional, and is not necessary    for the normal string routines.  But dentry name hashing needs it, so    if you enable DENTRY_WORD_AT_A_TIME you need to expose it.  This changes the generic strncpy_from_user() function and the dentry hashing functions to use these modified word-at-a-time interfaces.  This gets us back to the optimized state of the x86 strncpy that we lost in the previous commit when moving over to the generic version.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | parport.h | s | 585B | 20 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | futex.h | s | 1.2K | 48 | Michel Lespinasse | walken@google.com | 1299842611 |  | futex: Sanitize futex ops argument types  Change futex_atomic_op_inuser and futex_atomic_cmpxchg_inatomic prototypes to use u32 types for the futex as this is the data type the futex core code uses all over the place.  Signed-off-by: Michel Lespinasse <walken@google.com> Cc: Darren Hart <darren@dvhart.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Matt Turner <mattst88@gmail.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: David Howells <dhowells@redhat.com> Cc: Tony Luck <tony.luck@intel.com> Cc: Michal Simek <monstr@monstr.eu> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: "James E.J. Bottomley" <jejb@parisc-linux.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> LKML-Reference: <20110311025058.GD26122@google.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | Kbuild | g | 761B |  | Avi Kivity | avi@redhat.com | 1338283861 |  | KVM: Export asm-generic/kvm_para.h  Prevents build failures on non-KVM archs.  Tested-by: Geert Uytterhoeven <geert@linux-m68k.org> Signed-off-by: Avi Kivity <avi@redhat.com>
f | audit_read.h | s | 202B | 13 | Chris Metcalf | cmetcalf@tilera.com | 1304534488 |  | audit: support the "standard" <asm-generic/unistd.h>  Many of the syscalls mentioned in the audit code are not present for architectures that implement only the "standard" set of Linux syscalls (e.g. openat, but not open, etc.).  This change adds proper #ifdefs for all those syscalls.  Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | mmu.h | s | 329B | 13 | Arnd Bergmann | arnd@arndb.de | 1244746970 |  | asm-generic: add generic NOMMU versions of some headers  Memory management in generic is highly architecture specific, but on NOMMU architectures, it is mostly trivial, so just add a default implementation in asm-generic that applies to all NOMMU architectures.  The two files cache.h and cacheflush.h can possibly also be used by architectures that have an MMU but never require flushing the cache or have cache lines larger than 32 bytes.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | atomic.h | s | 4.8K | 167 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | posix_types.h | s | 2.2K | 80 | Al Viro | viro@zeniv.linux.org.uk | 1338426290 |  | bury __kernel_nlink_t, make internal nlink_t consistent  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | mutex-dec.h | s | 2.9K | 84 | Nick Piggin | npiggin@suse.de | 1224778700 |  | mutex: speed up generic mutex implementations  - atomic operations which both modify the variable and return something imply   full smp memory barriers before and after the memory operations involved   (failing atomic_cmpxchg, atomic_add_unless, etc don't imply a barrier because   they don't modify the target). See Documentation/atomic_ops.txt.   So remove extra barriers and branches.  - All architectures support atomic_cmpxchg. This has no relation to   __HAVE_ARCH_CMPXCHG. We can just take the atomic_cmpxchg path unconditionally  This reduces a simple single threaded fastpath lock+unlock test from 590 cycles to 203 cycles on a ppc970 system.  Signed-off-by: Nick Piggin <npiggin@suse.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | device.h | s | 245B | 12 | Magnus Damm | damm@igel.co.jp | 1248215318 |  | Driver Core: Add platform device arch data V3  Allow architecture specific data in struct platform_device V3.  With this patch struct pdev_archdata is added to struct platform_device, similar to struct dev_archdata in found in struct device. Useful for architecture code that needs to keep extra data associated with each platform device.  Struct pdev_archdata is different from dev.platform_data, the convention is that dev.platform_data points to driver-specific data. It may or may not be required by the driver. The format of this depends on driver but is the same across architectures.  The structure pdev_archdata is a place for architecture specific data. This data is handled by architecture specific code (for example runtime PM), and since it is architecture specific it should _never_ be touched by device driver code. Exactly like struct dev_archdata but for platform devices.  [rjw: This change is for power management mostly and that's why it  goes through the suspend tree.]  Signed-off-by: Magnus Damm <damm@igel.co.jp> Acked-by: Kevin Hilman <khilman@deeprootsystems.com> Acked-by: Greg Kroah-Hartman <gregkh@suse.de> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | tlbflush.h | s | 446B | 16 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | ide_iops.h | s | 752B | 33 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | mutex.h | s | 256B | 8 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | linkage.h | s | 225B | 7 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | topology.h | s | 2.1K | 67 | Lee Schermerhorn | Lee.Schermerhorn@hp.com | 1281411897 |  | topology: alternate fix for ia64 tiger_defconfig build breakage  Define stubs for the numa_*_id() generic percpu related functions for non-NUMA configurations in <asm-generic/topology.h> where the other non-numa stubs live.  Fixes ia64 !NUMA build breakage -- e.g., tiger_defconfig  Back out now unneeded '#ifndef CONFIG_NUMA' guards from ia64 smpboot.c  Signed-off-by: Lee Schermerhorn <lee.schermerhorn@hp.com> Tested-by: Tony Luck <tony.luck@intel.com> Acked-by: Tony Luck <tony.luck@intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | local.h | s | 2.2K | 45 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | irqflags.h | s | 1.5K | 57 | David Howells | dhowells@redhat.com | 1286456935 |  | Fix IRQ flag handling naming  Fix the IRQ flag handling naming.  In linux/irqflags.h under one configuration, it maps:  	local_irq_enable() -> raw_local_irq_enable() 	local_irq_disable() -> raw_local_irq_disable() 	local_irq_save() -> raw_local_irq_save() 	...  and under the other configuration, it maps:  	raw_local_irq_enable() -> local_irq_enable() 	raw_local_irq_disable() -> local_irq_disable() 	raw_local_irq_save() -> local_irq_save() 	...  This is quite confusing.  There should be one set of names expected of the arch, and this should be wrapped to give another set of names that are expected by users of this facility.  Change this to have the arch provide:  	flags = arch_local_save_flags() 	flags = arch_local_irq_save() 	arch_local_irq_restore(flags) 	arch_local_irq_disable() 	arch_local_irq_enable() 	arch_irqs_disabled_flags(flags) 	arch_irqs_disabled() 	arch_safe_halt()  Then linux/irqflags.h wraps these to provide:  	raw_local_save_flags(flags) 	raw_local_irq_save(flags) 	raw_local_irq_restore(flags) 	raw_local_irq_disable() 	raw_local_irq_enable() 	raw_irqs_disabled_flags(flags) 	raw_irqs_disabled() 	raw_safe_halt()  with type checking on the flags 'arguments', and then wraps those to provide:  	local_save_flags(flags) 	local_irq_save(flags) 	local_irq_restore(flags) 	local_irq_disable() 	local_irq_enable() 	irqs_disabled_flags(flags) 	irqs_disabled() 	safe_halt()  with tracing included if enabled.  The arch functions can now all be inline functions rather than some of them having to be macros.  Signed-off-by: David Howells <dhowells@redhat.com> [X86, FRV, MN10300] Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> [Tile] Signed-off-by: Michal Simek <monstr@monstr.eu> [Microblaze] Tested-by: Catalin Marinas <catalin.marinas@arm.com> [ARM] Acked-by: Thomas Gleixner <tglx@linutronix.de> Acked-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com> [AVR] Acked-by: Tony Luck <tony.luck@intel.com> [IA-64] Acked-by: Hirokazu Takata <takata@linux-m32r.org> [M32R] Acked-by: Greg Ungerer <gerg@uclinux.org> [M68K/M68KNOMMU] Acked-by: Ralf Baechle <ralf@linux-mips.org> [MIPS] Acked-by: Kyle McMartin <kyle@mcmartin.ca> [PA-RISC] Acked-by: Paul Mackerras <paulus@samba.org> [PowerPC] Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [S390] Acked-by: Chen Liqin <liqin.chen@sunplusct.com> [Score] Acked-by: Matt Fleming <matt@console-pimps.org> [SH] Acked-by: David S. Miller <davem@davemloft.net> [Sparc] Acked-by: Chris Zankel <chris@zankel.net> [Xtensa] Reviewed-by: Richard Henderson <rth@twiddle.net> [Alpha] Reviewed-by: Yoshinori Sato <ysato@users.sourceforge.jp> [H8300] Cc: starvik@axis.com [CRIS] Cc: jesper.nilsson@axis.com [CRIS] Cc: linux-cris-kernel@axis.com
f | libata-portmap.h | s | 153B | 5 | Alan Cox | alan@lxorguk.ukuu.org.uk | 1192215337 |  | libata-portmap: Remove unused definitions  With the PCI layer properly handling legacy IDE and the kernel now using it these can go  Signed-off-by: Alan Cox <alan@redhat.com> Signed-off-by: Jeff Garzik <jeff@garzik.org>
f | unistd.h | s | 28K | 849 | Chris Metcalf | cmetcalf@tilera.com | 1332869817 |  | compat: use sys_sendfile64() implementation for sendfile syscall  <asm-generic/unistd.h> was set up to use sys_sendfile() for the 32-bit compat API instead of sys_sendfile64(), but in fact the right thing to do is to use sys_sendfile64() in all cases.  The 32-bit sendfile64() API in glibc uses the sendfile64 syscall, so it has to be capable of doing full 64-bit operations.  But the sys_sendfile() kernel implementation has a MAX_NON_LFS test in it which explicitly limits the offset to 2^32. So, we need to use the sys_sendfile64() implementation in the kernel for this case.  Cc: <stable@kernel.org> Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | memory_model.h | s | 1.9K | 59 | Ian Campbell | ian.campbell@citrix.com | 1313611220 |  | mm: fix __page_to_pfn for a const struct page argument  This allows the cast in lowmem_page_address (introduced as a warning fixup to 33dd4e0ec911 "mm: make some struct page's const") to be removed.  Propagate const'ness to page_to_section() as well since it is required by __page_to_pfn.  Signed-off-by: Ian Campbell <ian.campbell@citrix.com> Acked-by: Rik van Riel <riel@redhat.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Cc: Michel Lespinasse <walken@google.com> Cc: Mel Gorman <mel@csn.ul.ie> Cc: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | int-l64.h | s | 1.3K | 53 | Arnd Bergmann | arnd@arndb.de | 1244746934 |  | asm-generic: introduce asm/bitsperlong.h  This provides a reliable way for asm-generic/types.h and other files to find out if it is running on a 32 or 64 bit platform.  We cannot use CONFIG_64BIT for this in headers that are included from user space because CONFIG symbols are not available there. We also cannot do it inside of asm/types.h because some headers need the word size but cannot include types.h.  The solution is to introduce a new header <asm/bitsperlong.h> that defines both __BITS_PER_LONG for user space and BITS_PER_LONG for usage in the kernel. The asm-generic version falls back to 32 bit unless the architecture overrides it, which I did for all 64 bit platforms.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | string.h | s | 281B | 9 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | mman-common.h | s | 2.4K | 47 | Jason Baron | jbaron@redhat.com | 1332547122 |  | coredump: add VM_NODUMP, MADV_NODUMP, MADV_CLEAR_NODUMP  Since we no longer need the VM_ALWAYSDUMP flag, let's use the freed bit for 'VM_NODUMP' flag.  The idea is is to add a new madvise() flag: MADV_DONTDUMP, which can be set by applications to specifically request memory regions which should not dump core.  The specific application I have in mind is qemu: we can add a flag there that wouldn't dump all of guest memory when qemu dumps core.  This flag might also be useful for security sensitive apps that want to absolutely make sure that parts of memory are not dumped.  To clear the flag use: MADV_DODUMP.  [akpm@linux-foundation.org: s/MADV_NODUMP/MADV_DONTDUMP/, s/MADV_CLEAR_NODUMP/MADV_DODUMP/, per Roland] [akpm@linux-foundation.org: fix up the architectures which broke] Signed-off-by: Jason Baron <jbaron@redhat.com> Acked-by: Roland McGrath <roland@hack.frob.com> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Avi Kivity <avi@redhat.com> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Cc: "James E.J. Bottomley" <jejb@parisc-linux.org> Cc: Helge Deller <deller@gmx.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | syscall.h | s | 6.3K | 149 | Will Drewry | wad@chromium.org | 1334365999 |  | asm/syscall.h: add syscall_get_arch  Adds a stub for a function that will return the AUDIT_ARCH_* value appropriate to the supplied task based on the system call convention.  For audit's use, the value can generally be hard-coded at the audit-site.  However, for other functionality not inlined into syscall entry/exit, this makes that information available.  seccomp_filter is the first planned consumer and, as such, the comment indicates a tie to CONFIG_HAVE_ARCH_SECCOMP_FILTER.  Suggested-by: Roland McGrath <mcgrathr@chromium.org> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Acked-by: Eric Paris <eparis@redhat.com>  v18: comment and change reword and rebase. v14: rebase/nochanges v13: rebase on to 88ebdda6159ffc15699f204c33feb3e431bf9bdc v12: rebase on to linux-next v11: fixed improper return type v10: introduced Signed-off-by: James Morris <james.l.morris@oracle.com>
f | audit_write.h | s | 283B | 15 | Chris Metcalf | cmetcalf@tilera.com | 1304534488 |  | audit: support the "standard" <asm-generic/unistd.h>  Many of the syscalls mentioned in the audit code are not present for architectures that implement only the "standard" set of Linux syscalls (e.g. openat, but not open, etc.).  This change adds proper #ifdefs for all those syscalls.  Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | ioctl.h | s | 3.4K | 87 | Michael Abbott | michael@araneidae.co.uk | 1218582451 |  | Make ioctl.h compatible with userland  The attached patch seems to already exist in a number of branches -- it keeps popping up on Google for me, and is certainly already in Debian -- but is strangely absent from mainstream.  The problem appears to be that the patched file ends up as part of the target toolchain, but unfortunately the gcc constant folding doesn't appear to eliminate the __invalid_size_argument_for_IOC value early enough.  Certainly compiling C++ programs which use _IO...  macros as constants fails without this patch.  Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | dma-coherent.h | s | 1015B | 29 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605569 |  | common: add dma_mmap_from_coherent() function  Add a common helper for dma-mapping core for mapping a coherent buffer to userspace.  Reported-by: Subash Patel <subashrp@gmail.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Tested-By: Subash Patel <subash.ramaswamy@linaro.org>
f | poll.h | s | 764B | 34 | Oleg Nesterov | oleg@redhat.com | 1330112570 |  | epoll: introduce POLLFREE to flush ->signalfd_wqh before kfree()  This patch is intentionally incomplete to simplify the review. It ignores ep_unregister_pollwait() which plays with the same wqh. See the next change.  epoll assumes that the EPOLL_CTL_ADD'ed file controls everything f_op->poll() needs. In particular it assumes that the wait queue can't go away until eventpoll_release(). This is not true in case of signalfd, the task which does EPOLL_CTL_ADD uses its ->sighand which is not connected to the file.  This patch adds the special event, POLLFREE, currently only for epoll. It expects that init_poll_funcptr()'ed hook should do the necessary cleanup. Perhaps it should be defined as EPOLLFREE in eventpoll.  __cleanup_sighand() is changed to do wake_up_poll(POLLFREE) if ->signalfd_wqh is not empty, we add the new signalfd_cleanup() helper.  ep_poll_callback(POLLFREE) simply does list_del_init(task_list). This make this poll entry inconsistent, but we don't care. If you share epoll fd which contains our sigfd with another process you should blame yourself. signalfd is "really special". I simply do not know how we can define the "right" semantics if it used with epoll.  The main problem is, epoll calls signalfd_poll() once to establish the connection with the wait queue, after that signalfd_poll(NULL) returns the different/inconsistent results depending on who does EPOLL_CTL_MOD/signalfd_read/etc. IOW: apart from sigmask, signalfd has nothing to do with the file, it works with the current thread.  In short: this patch is the hack which tries to fix the symptoms. It also assumes that nobody can take tasklist_lock under epoll locks, this seems to be true.  Note:  	- we do not have wake_up_all_poll() but wake_up_poll() 	  is fine, poll/epoll doesn't use WQ_FLAG_EXCLUSIVE.  	- signalfd_cleanup() uses POLLHUP along with POLLFREE, 	  we need a couple of simple changes in eventpoll.c to 	  make sure it can't be "lost".  Reported-by: Maxime Bizon <mbizon@freebox.fr> Cc: <stable@kernel.org> Signed-off-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mutex-null.h | s | 666B | 17 | Uwe Zeisberger | Uwe_Zeisberger@digi.com | 1159909286 |  | fix file specification in comments  Many files include the filename at the beginning, serveral used a wrong one.  Signed-off-by: Uwe Zeisberger <Uwe_Zeisberger@digi.com> Signed-off-by: Adrian Bunk <bunk@stusta.de>
f | module.h | s | 421B | 19 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | page.h | s | 2.5K | 77 | Linus Torvalds | torvalds@linux-foundation.org | 1326245980 |  | 
d | bitops |  | 17 items |  | David Howells | dhowells@redhat.com | 1332955803 |  | Add #includes needed to permit the removal of asm/system.h  asm/system.h is a cause of circular dependency problems because it contains commonly used primitive stuff like barrier definitions and uncommonly used stuff like switch_to() that might require MMU definitions.  asm/system.h has been disintegrated by this point on all arches into the following common segments:   (1) asm/barrier.h       Moved memory barrier definitions here.   (2) asm/cmpxchg.h       Moved xchg() and cmpxchg() here.  #included in asm/atomic.h.   (3) asm/bug.h       Moved die() and similar here.   (4) asm/exec.h       Moved arch_align_stack() here.   (5) asm/elf.h       Moved AT_VECTOR_SIZE_ARCH here.   (6) asm/switch_to.h       Moved switch_to() here.  Signed-off-by: David Howells <dhowells@redhat.com>
f | percpu.h | s | 3.2K | 102 | Brian Gerst | brgerst@gmail.com | 1284109011 |  | percpu: Optimize __get_cpu_var()  Redefine __get_cpu_var() using this_cpu_ptr() which can be arch-optimized.  Signed-off-by: Brian Gerst <brgerst@gmail.com> Signed-off-by: Tejun Heo <tj@kernel.org>
f | int-ll64.h | s | 1.4K | 58 | Arnd Bergmann | arnd@arndb.de | 1244746934 |  | asm-generic: introduce asm/bitsperlong.h  This provides a reliable way for asm-generic/types.h and other files to find out if it is running on a 32 or 64 bit platform.  We cannot use CONFIG_64BIT for this in headers that are included from user space because CONFIG symbols are not available there. We also cannot do it inside of asm/types.h because some headers need the word size but cannot include types.h.  The solution is to introduce a new header <asm/bitsperlong.h> that defines both __BITS_PER_LONG for user space and BITS_PER_LONG for usage in the kernel. The asm-generic version falls back to 32 bit unless the architecture overrides it, which I did for all 64 bit platforms.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | cmpxchg.h | s | 2.0K | 82 | Paul Gortmaker | paul.gortmaker@windriver.com | 1333402887 |  | asm-generic: add linux/types.h to cmpxchg.h  Builds of the openrisc or1ksim_defconfig show the following:    In file included from arch/openrisc/include/generated/asm/cmpxchg.h:1:0,                    from include/asm-generic/atomic.h:18,                    from arch/openrisc/include/generated/asm/atomic.h:1,                    from include/linux/atomic.h:4,                    from include/linux/dcache.h:4,                    from fs/notify/fsnotify.c:19:   include/asm-generic/cmpxchg.h: In function '__xchg':   include/asm-generic/cmpxchg.h:34:20: error: expected ')' before 'u8'   include/asm-generic/cmpxchg.h:34:20: warning: type defaults to 'int' in type name  and many more lines of similar errors.  It seems specific to the or32 because most other platforms have an arch specific component that would have already included types.h ahead of time, but the o32 does not.  Cc: Arnd Bergmann <arnd@arndb.de> Cc: Jonas Bonn <jonas@southpole.se> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Acked-by: David Howells <dhowells@redhat.com Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | syscalls.h | s | 1.6K | 50 | David Howells | dhowells@redhat.com | 1282158758 |  | Fix the declaration of sys_execve() in asm-generic/syscalls.h  Fix the declaration of sys_execve() in asm-generic/syscalls.h to have various consts applied to its pointers.  Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | div64.h | s | 1.3K | 48 | Roman Zippel | zippel@linux-m68k.org | 1209654238 |  | rename div64_64 to div64_u64  Rename div64_64 to div64_u64 to make it consistent with the other divide functions, so it clearly includes the type of the divide.  Move its definition to math64.h as currently no architecture overrides the generic implementation.  They can still override it of course, but the duplicated declarations are avoided.  Signed-off-by: Roman Zippel <zippel@linux-m68k.org> Cc: Avi Kivity <avi@qumranet.com> Cc: Russell King <rmk@arm.linux.org.uk> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: David Howells <dhowells@redhat.com> Cc: Jeff Dike <jdike@addtoit.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: "David S. Miller" <davem@davemloft.net> Cc: Patrick McHardy <kaber@trash.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | auxvec.h | s | 218B | 7 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | gpio.h | s | 8.1K | 212 | Grant Likely | grant.likely@secretlab.ca | 1337403665 |  | gpiolib: Remove 'const' from data argument of gpiochip_find()  Commit 3d0f7cf0 "gpio: Adjust of_xlate API to support multiple GPIO chips" changed the api of gpiochip_find to drop const from the data parameter of the match hook, but didn't also drop const from data causing a build warning.  Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
f | param.h | s | 510B | 19 | David Howells | dhowells@redhat.com | 1323768405 |  | UAPI: Rearrange definition of HZ in asm-generic/param.h  Rearrange the definition of HZ in asm-generic/param.h so that the user-specific is declared before the kernel-specific one.  We then explicitly #undef the userspace HZ value and replace it with the kernel HZ value.  This allows the userspace params to be excised into a separate header as part of the UAPI header split.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | Kbuild.asm | g | 1.0K |  | Sam Ravnborg | sam@ravnborg.org | 1281817611 |  | include: replace unifdef-y with header-y  unifdef-y and header-y has same semantic. So there is no need to have both.  Drop the unifdef-y variant and sort all lines again  Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
f | pgalloc.h | s | 303B | 10 | Arnd Bergmann | arnd@arndb.de | 1244746970 |  | asm-generic: add generic NOMMU versions of some headers  Memory management in generic is highly architecture specific, but on NOMMU architectures, it is mostly trivial, so just add a default implementation in asm-generic that applies to all NOMMU architectures.  The two files cache.h and cacheflush.h can possibly also be used by architectures that have an MMU but never require flushing the cache or have cache lines larger than 32 bytes.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | scatterlist.h | s | 845B | 29 | FUJITA Tomonori | fujita.tomonori@lab.ntt.co.jp | 1274976774 |  | asm-generic: remove ARCH_HAS_SG_CHAIN in scatterlist.h  There are more architectures that don't support ARCH_HAS_SG_CHAIN than those that support it.  This removes removes ARCH_HAS_SG_CHAIN in asm-generic/scatterlist.h and lets arhictectures to define it.  It's clearer than defining ARCH_HAS_SG_CHAIN asm-generic/scatterlist.h and undefing it in arhictectures that don't support it.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | pci-dma-compat.h | s | 3.4K | 97 | FUJITA Tomonori | fujita.tomonori@lab.ntt.co.jp | 1268437962 |  | dma-mapping: pci: move pci_set_dma_mask and pci_set_consistent_dma_mask to pci-dma-compat.h  We can use pci-dma-compat.h to implement pci_set_dma_mask and pci_set_consistent_dma_mask as we do with the other PCI DMA API.  We can remove HAVE_ARCH_PCI_SET_DMA_MASK too.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Cc: Greg KH <greg@kroah.com> Cc: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | swab.h | s | 439B | 14 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | fb.h | s | 232B | 9 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | fcntl.h | s | 4.4K | 171 | J. Bruce Fields | bfields@redhat.com | 1313774734 |  | locks: move F_INPROGRESS from fl_type to fl_flags field  F_INPROGRESS isn't exposed to userspace.  To me it makes more sense in fl_flags....  Reviewed-by: Jeff Layton <jlayton@redhat.com> Signed-off-by: J. Bruce Fields <bfields@redhat.com>
f | irq.h | s | 364B | 15 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | dma-contiguous.h | s | 526B | 22 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605777 |  | drivers: add Contiguous Memory Allocator  The Contiguous Memory Allocator is a set of helper functions for DMA mapping framework that improves allocations of contiguous memory chunks.  CMA grabs memory on system boot, marks it with MIGRATE_CMA migrate type and gives back to the system. Kernel is allowed to allocate only movable pages within CMA's managed memory so that it can be used for example for page cache when DMA mapping do not use it. On dma_alloc_from_contiguous() request such pages are migrated out of CMA area to free required contiguous block and fulfill the request. This allows to allocate large contiguous chunks of memory at any time assuming that there is enough free memory available in the system.  This code is heavily based on earlier works by Michal Nazarewicz.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Rob Clark <rob.clark@linaro.org> Tested-by: Ohad Ben-Cohen <ohad@wizery.com> Tested-by: Benjamin Gaignard <benjamin.gaignard@linaro.org> Tested-by: Robert Nelson <robertcnelson@gmail.com> Tested-by: Barry Song <Baohua.Song@csr.com>
f | timex.h | s | 469B | 19 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | pgtable.h | s | 15K | 485 | Andrea Arcangeli | aarcange@redhat.com | 1340228375 |  | thp: avoid atomic64_read in pmd_read_atomic for 32bit PAE  In the x86 32bit PAE CONFIG_TRANSPARENT_HUGEPAGE=y case while holding the mmap_sem for reading, cmpxchg8b cannot be used to read pmd contents under Xen.  So instead of dealing only with "consistent" pmdvals in pmd_none_or_trans_huge_or_clear_bad() (which would be conceptually simpler) we let pmd_none_or_trans_huge_or_clear_bad() deal with pmdvals where the low 32bit and high 32bit could be inconsistent (to avoid having to use cmpxchg8b).  The only guarantee we get from pmd_read_atomic is that if the low part of the pmd was found null, the high part will be null too (so the pmd will be considered unstable).  And if the low part of the pmd is found "stable" later, then it means the whole pmd was read atomically (because after a pmd is stable, neither MADV_DONTNEED nor page faults can alter it anymore, and we read the high part after the low part).  In the 32bit PAE x86 case, it is enough to read the low part of the pmdval atomically to declare the pmd as "stable" and that's true for THP and no THP, furthermore in the THP case we also have a barrier() that will prevent any inconsistent pmdvals to be cached by a later re-read of the *pmd.  Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Cc: Jonathan Nieder <jrnieder@gmail.com> Cc: Ulrich Obergfell <uobergfe@redhat.com> Cc: Mel Gorman <mgorman@suse.de> Cc: Hugh Dickins <hughd@google.com> Cc: Larry Woodman <lwoodman@redhat.com> Cc: Petr Matousek <pmatouse@redhat.com> Cc: Rik van Riel <riel@redhat.com> Cc: Jan Beulich <jbeulich@suse.com> Cc: KOSAKI Motohiro <kosaki.motohiro@gmail.com> Tested-by: Andrew Jones <drjones@redhat.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | socket.h | s | 1.6K | 58 | Ben Greear | greearb@candelatech.com | 1330076255 |  | net: Add framework to allow sending packets with customized CRC.  This is useful for testing RX handling of frames with bad CRCs.  Requires driver support to actually put the packet on the wire properly.  Signed-off-by: Ben Greear <greearb@candelatech.com> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ipcbuf.h | s | 936B | 31 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic sysv ipc headers  The ipc64 data structures were originally meant to be architecture specific so that each architecture could add their own optimizations for padding.  In the end, most of them just copied the x86 version, and most got that wrong. UClibc expects the x86 anyway, so we might just declare that the default and get rid of the extra copies.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | rwsem.h | s | 2.9K | 111 | Richard Kuo | rkuo@codeaurora.org | 1320158060 |  | Hexagon: Add locking types and functions  Signed-off-by: Richard Kuo <rkuo@codeaurora.org> Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | uaccess.h | s | 7.4K | 295 | Mark Salter | msalter@redhat.com | 1317944832 |  | fix default __strnlen_user macro  The existing __strnlen_user macro simply resolved to strnlen. However, the count returned by strnlen_user should include the NULL byte. This patch fixes the __strnlen_user macro to include the NULL byte in the count.  Signed-off-by: Mark Salter <msalter@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | stat.h | s | 2.5K | 66 | Chris Metcalf | cmetcalf@tilera.com | 1288639889 |  | asm-generic/stat.h: support 64-bit file time_t for stat()  The existing asm-generic/stat.h specifies st_mtime, etc., as a 32-value, and works well for 32-bit architectures (currently microblaze, score, and 32-bit tile).  However, for 64-bit architectures it isn't sufficient to return 32 bits of time_t; this isn't good insurance against the 2037 rollover.  (It also makes glibc support less convenient, since we can't use glibc's handy STAT_IS_KERNEL_STAT mode.)  This change extends the two "timespec" fields for each of the three atime, mtime, and ctime fields from "int" to "long".  As a result, on 32-bit platforms nothing changes, and 64-bit platforms will now work as expected.  The only wrinkle is 32-bit userspace under 64-bit kernels taking advantage of COMPAT mode.  For these, we leave the "struct stat64" definitions with the "int" versions of the time_t and nsec fields, so that architectures can implement compat_sys_stat64() and friends with sys_stat64(), etc., and get the expected 32-bit structure layout.  This requires a field-by-field copy in the kernel, implemented by the code guarded under __ARCH_WANT_STAT64.  This does mean that the shape of the "struct stat" and "struct stat64" structures is different on a 64-bit kernel, but only one of the two structures should ever be used by any given process: "struct stat" is meant for 64-bit userspace only, and "struct stat64" for 32-bit userspace only.  (On a 32-bit kernel the two structures continue to have the same shape, since "long" is 32 bits.)  The alternative is keeping the two structures the same shape on 64-bit kernels, which means a 64-bit time_t in "struct stat64" for 32-bit processes.  This is a little unnatural since 32-bit userspace can't do anything with 64 bits of time_t information, since time_t is just "long", not "int64_t"; and in any case 32-bit userspace might expect to be running under a 32-bit kernel, which can't provide the high 32 bits anyway.  In the case of a 32-bit kernel we'd then be extending the kernel's 32-bit time_t to 64 bits, then truncating it back to 32 bits again in userspace, for no particular reason.  And, as mentioned above, if we have 64-bit time_t for 32-bit processes we can't easily use glibc's STAT_IS_KERNEL_STAT, since glibc's stat structure requires an embedded "struct timespec", which is a pair of "long" (32-bit) values in a 32-bit userspace.  "Inventive" solutions are possible, but are pretty hacky.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | shmbuf.h | s | 1.7K | 54 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic sysv ipc headers  The ipc64 data structures were originally meant to be architecture specific so that each architecture could add their own optimizations for padding.  In the end, most of them just copied the x86 version, and most got that wrong. UClibc expects the x86 anyway, so we might just declare that the default and get rid of the extra copies.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | switch_to.h | s | 992B | 26 | David Howells | dhowells@redhat.com | 1332955803 |  | Split the switch_to() wrapper out of asm-generic/system.h  Split the switch_to() wrapper out of asm-generic/system.h into its own asm-generic/system.h as part of the asm/system.h disintegration.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | audit_change_attr.h | s | 419B | 30 | Chris Metcalf | cmetcalf@tilera.com | 1304534488 |  | audit: support the "standard" <asm-generic/unistd.h>  Many of the syscalls mentioned in the audit code are not present for architectures that implement only the "standard" set of Linux syscalls (e.g. openat, but not open, etc.).  This change adds proper #ifdefs for all those syscalls.  Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | mman.h | s | 799B | 15 | Arnd Bergmann | arnd@arndb.de | 1253629061 |  | mm: add MAP_HUGETLB for mmaping pseudo-anonymous huge page regions  Add a flag for mmap that will be used to request a huge page region that will look like anonymous memory to user space.  This is accomplished by using a file on the internal vfsmount.  MAP_HUGETLB is a modifier of MAP_ANONYMOUS and so must be specified with it.  The region will behave the same as a MAP_ANONYMOUS region using small pages.  The patch also adds the MAP_STACK flag, which was previously defined only on some architectures but not on others.  Since MAP_STACK is meant to be a hint only, architectures can define it without assigning a specific meaning to it.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Cc: Eric B Munson <ebmunson@us.ibm.com> Cc: Hugh Dickins <hugh.dickins@tiscali.co.uk> Cc: David Rientjes <rientjes@google.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | signal.h | s | 2.8K | 111 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | vga.h | s | 548B | 21 | Arnd Bergmann | arnd@arndb.de | 1244746962 |  | asm-generic: add legacy I/O header files  The dma.h, hw_irq.h, serial.h and timex.h files originally described PC-style i8237, i8259A, i8250, i8253 and i8255 chips as well as the VGA style text mode graphics.  Modern architectures live happily without these specific interfaces, but a few definitions from these headers keep getting used in common code.  The new generic headers are what most architectures use anyway nowadays, just implementing the minimal definitions.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | rtc.h | s | 5.3K | 185 | Arnd Bergmann | arnd@arndb.de | 1244746938 |  | asm-generic: make get_rtc_time overridable  Evidently, set_rtc_time is supposed to be overridable by architectures that define their own version, but unfortunately, get_rtc_ss would in that case still use the generic version.  This makes get_rtc_ss call the real set_rtc_time to let architectures define their own version. The change should fix the "Extended RTC operation" on Alpha, which uses the incorrect get_rtc_ss call. It also allows PowerPC to use the asm-generic/rtc.h file in the future.  Cc: Richard Henderson <rth@twiddle.net> Cc: linux-alpha@vger.kernel.org Cc: Tom Rini <trini@mvista.com> Cc: rtc-linux@googlegroups.com Cc: Alessandro Zummo <a.zummo@towertech.it> Cc: Paul Gortmaker <p_gortmaker@yahoo.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | emergency-restart.h | s | 209B | 7 | Eric W. Biederman | ebiederm@xmission.com | 1122413741 |  | [PATCH] Add emergency_restart()  When the kernel is working well and we want to restart cleanly kernel_restart is the function to use.   But in many instances the kernel wants to reboot when thing are expected to be working very badly such as from panic or a software watchdog handler.  This patch adds the function emergency_restart() so that callers can be clear what semantics they expect when calling restart.  emergency_restart() is expected to be callable from interrupt context and possibly reliable in even more trying circumstances.  This is an initial generic implementation for all architectures.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | sockios.h | s | 376B | 11 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic ABI headers  These header files are typically copied from an existing architecture into any new one, slightly modified and then remain untouched until the end of time in the name of ABI stability.  To make it easier for future architectures, provide a sane generic version here. In cases where multiple architectures already use identical code, I used the most common version. In cases like stat.h that are more or less broken everywhere, I provide a version that is meant to be ideal for new architectures.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | msgbuf.h | s | 1.5K | 44 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic sysv ipc headers  The ipc64 data structures were originally meant to be architecture specific so that each architecture could add their own optimizations for padding.  In the end, most of them just copied the x86 version, and most got that wrong. UClibc expects the x86 anyway, so we might just declare that the default and get rid of the extra copies.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | shmparam.h | s | 168B | 4 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic sysv ipc headers  The ipc64 data structures were originally meant to be architecture specific so that each architecture could add their own optimizations for padding.  In the end, most of them just copied the x86 version, and most got that wrong. UClibc expects the x86 anyway, so we might just declare that the default and get rid of the extra copies.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | sembuf.h | s | 1.2K | 35 | Arnd Bergmann | arnd@arndb.de | 1244746935 |  | asm-generic: add generic sysv ipc headers  The ipc64 data structures were originally meant to be architecture specific so that each architecture could add their own optimizations for padding.  In the end, most of them just copied the x86 version, and most got that wrong. UClibc expects the x86 anyway, so we might just declare that the default and get rid of the extra copies.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | spinlock.h | s | 290B | 10 | Arnd Bergmann | arnd@arndb.de | 1244746957 |  | asm-generic: add generic versions of common headers  These are all kernel internal interfaces that get copied around a lot. In most cases, architectures can provide their own optimized versions, but these generic versions can work as well.  I have tried to use the most common contents of each header to allow existing architectures to migrate easily.  Thanks to Remis for suggesting a number of cleanups.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
