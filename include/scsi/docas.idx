f | scsi_cmnd.h | s | 8.5K | 253 | Martin K. Petersen | martin.petersen@oracle.com | 1334513333 |  | SCSI: Fix error handling when no ULD is attached  Commit 18a4d0a22ed6 ("[SCSI] Handle disk devices which can not process medium access commands") introduced a bug in which we would attempt to dereference the scsi driver even when the device had no ULD attached.  Ensure that a driver is registered and make the driver accessor function more resilient to errors during device discovery.  Reported-by: Elric Fu <elricfu1@gmail.com> Reported-by: Bart Van Assche <bvanassche@acm.org> Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | libsas.h | s | 18K | 571 | Dan Williams | dan.j.williams@intel.com | 1335179019 |  | [SCSI] libsas: introduce sas_work to fix sas_drain_work vs sas_queue_work  When requeuing work to a draining workqueue the last work instance may not be idle, so sas_queue_work() must not touch work->entry.  Introduce sas_work with a drain_node list_head to have a private list for collecting work deferred due to drain collision.  Fixes reports like:   BUG: unable to handle kernel NULL pointer dereference at           (null)   IP: [<ffffffff810410d4>] process_one_work+0x2e/0x338  Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | libfc.h | s | 33K | 1043 | Neerav Parikh | neerav.parikh@intel.com | 1329660538 |  | [SCSI] libfc: Add support for FDMI  This patch adds support for Fabric Device Management Interface as per FC-GS-4 spec. in libfc. Any driver making use of libfc can enable fdmi state machine for a given lport.  If lport has enabled FDMI support the lport state machine will transition into FDMI after completing the DNS states and before entering the SCR state. The FDMI state transition is such that if there is an error, it won't stop the lport state machine from transitioning and the it will behave as if there was no FDMI support.  The FDMI HBA attributes are registed with the Management server via Register HBA (RHBA) command and the port attributes are reigstered using the Register Port(RPA) command.  Signed-off-by: Neerav Parikh <neerav.parikh@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Acked-by: Robert Love <robert.w.love@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_devinfo.h | s | 1.9K | 33 | James Bottomley | jejb@mulgrave.il.steeleye.com | 1145047665 |  | Merge ../scsi-rc-fixes-2.6  Conflicts:  	include/scsi/scsi_devinfo.h  Same number for two BLIST flags:  BLIST_MAX_512 and BLIST_ATTACH_PQ3  Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | libfcoe.h | s | 12K | 347 | Robert Love | robert.w.love@intel.com | 1337762593 |  | [SCSI] fcoe, bnx2fc, libfcoe: SW FCoE and bnx2fc use FCoE Syfs  This patch has the SW FCoE driver and the bnx2fc driver make use of the new fcoe_sysfs API added earlier in this patch series.  After this patch a fcoe_ctlr_device is allocated with private data in this order.  +------------------+   +------------------+ || fcoe_ctlr_device ||   || fcoe_ctlr_device || +------------------+   +------------------+ || fcoe_ctlr        ||   || fcoe_ctlr        || +------------------+   +------------------+ || fcoe_interface   ||   || bnx2fc_interface || +------------------+   +------------------+  libfcoe also takes part in this new model since it discovers and manages fcoe_fcf instances. The memory allocation is different for FCFs. I didn't want to impact libfcoe's fcoe_fcf processing, so this patch creates fcoe_fcf_device instances for each discovered fcoe_fcf. The two are paired using a (void * priv) member of the fcoe_ctlr_device. This allows libfcoe to continue maintaining its list of fcoe_fcf instances and simply attaches and detaches them from existing or new fcoe_fcf_device instances.  Signed-off-by: Robert Love <robert.w.love@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_transport_fc.h | s | 26K | 750 | Neerav Parikh | neerav.parikh@intel.com | 1329660537 |  | [SCSI] scsi_transport_fc: Getting FC Port Speed in sync with FC-GS  The values for the 4G and 10G speeds are not in sync with definitions in SM-HBA/FC-GS-x/etc. This patch brings them in sync to these specifications.  The values are converted to strings when represented via sysfs attribute, hence that should cover for user space apps as they may not see any change.  Signed-off-by: Neerav Parikh <neerav.parikh@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Acked-by: Robert Love <robert.w.love@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | osd_attributes.h | s | 15K | 345 | Boaz Harrosh | bharrosh@panasas.com | 1244642047 |  | [SCSI] libosd: OSD2r05: Attribute definitions  Some New revision 5 Attribute definitions. Some missing definitions of Attributes and pages  Signed-off-by: Boaz Harrosh <bharrosh@panasas.com> Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
f | scsi_tgt_if.h | s | 2.5K | 100 | FUJITA Tomonori | tomof@acm.org | 1192214270 |  | [SCSI] tgt: add I_T nexus support  tgt uses scsi_host as I_T nexus. This works for ibmvstgt because it creates one scsi_host for one initiator. However, other target drivers don't work like that.  This adds I_T nexus support, which enable one scsi_host to handle multiple initiators. New scsi_tgt_it_nexus_create/destroy functions are expected be called transport classes. For example, ibmvstgt creates an initiator remote port, then the srp transport calls tgt_it_nexus_create. tgt doesn't manages I_T nexus, instead it tells tgtd, user-space daemon, to create a new I_T nexus.  On the receiving the response from tgtd, tgt calls shost->transportt->it_nexus_response. transports should notify a lld. The srp transport uses it_nexus_response callback in srp_function_template to do that.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | libiscsi.h | s | 12K | 399 | Mike Christie | michaelc@cs.wisc.edu | 1329660540 |  | [SCSI] libiscsi_tcp: fix max_r2t manipulation  Problem description from Xi Wang: A large max_r2t could lead to integer overflow in subsequent call to iscsi_tcp_r2tpool_alloc(), allocating a smaller buffer than expected and leading to out-of-bounds write.  Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | iscsi_proto.h | s | 16K | 590 | John Soni Jose | sony.john-n@emulex.com | 1335342575 |  | [SCSI] be2iscsi: Get Initiator Name for the iSCSI_Host  Implement the ISCSI_HOST_PARAM_INITIATOR_NAME for .get_host_param  Signed-off-by: John Soni Jose <sony.john-n@emulex.com> Signed-off-by: Jayamohan Kallickal <jayamohan.kallickal@emulex.com> Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_driver.h | s | 1.1K | 29 | Martin K. Petersen | martin.petersen@oracle.com | 1329668092 |  | [SCSI] Handle disk devices which can not process medium access commands  We have experienced several devices which fail in a fashion we do not currently handle gracefully in SCSI. After a failure these devices will respond to the SCSI primary command set (INQUIRY, TEST UNIT READY, etc.) but any command accessing the storage medium will time out.  The following patch adds an callback that can be used by upper level drivers to inspect the results of an error handling command. This in turn has been used to implement additional checking in the SCSI disk driver.  If a medium access command fails twice but TEST UNIT READY succeeds both times in the subsequent error handling we will offline the device. The maximum number of failed commands required to take a device offline can be tweaked in sysfs.  Also add a new error flag to scsi_debug which allows this scenario to be easily reproduced.  [jejb: fix up integer parsing to use kstrtouint] Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | osd_types.h | s | 1021B | 38 | Boaz Harrosh | bharrosh@panasas.com | 1288107754 |  | [SCSI] libosd: Support for scatter gather write/read commands  This patch adds the Scatter-Gather (sg) API to libosd. Scatter-gather enables a write/read of multiple none-contiguous areas of an object, in a single call. The extents may overlap and/or be in any order.  The Scatter-Gather list is sent to the target in what is called a "cdb continuation segment". This is yet another possible segment in the osd-out-buffer. It is unlike all other segments in that it sits before the actual "data" segment (which until now was always first), and that it is signed by itself and not part of the data buffer. This is because the cdb-continuation-segment is considered a spill-over of the CDB data, and is therefor signed under OSD_SEC_CAPKEY and higher.  TODO: A new osd_finalize_request_ex version should be supplied so the @caps received on the network also contains a size parameter and can be spilled over into the "cdb continuation segment".  Thanks to John Chandy <john.chandy@uconn.edu> for the original code, and investigations. And the implementation of SG support in the osd-target.  Original-coded-by: John Chandy <john.chandy@uconn.edu> Signed-off-by: Boaz Harrosh <bharrosh@panasas.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | sas_ata.h | s | 2.4K | 76 | Dan Williams | dan.j.williams@intel.com | 1335179507 |  | [SCSI] libsas, libata: fix start of life for a sas ata_port  This changes the ordering of initialization and probing events from:   1/ allocate rphy in PORTE_BYTES_DMAED, DISCE_REVALIDATE_DOMAIN   2/ allocate ata_port and schedule port probe in DISCE_PROBE ...to:   1/ allocate ata_port in PORTE_BYTES_DMAED, DISCE_REVALIDATE_DOMAIN   2/ allocate rphy in PORTE_BYTES_DMAED, DISCE_REVALIDATE_DOMAIN   3/ schedule port probe in DISCE_PROBE  This ordering prevents PHYE_SIGNAL_LOSS_EVENTS from sneaking in to destrory ata devices before they have been fully initialized:    BUG: unable to handle kernel paging request at 0000000000003b10   IP: [<ffffffffa0053d7e>] sas_ata_end_eh+0x12/0x5e [libsas]   ...   [<ffffffffa004d1af>] sas_unregister_common_dev+0x78/0xc9 [libsas]   [<ffffffffa004d4d4>] sas_unregister_dev+0x4f/0xad [libsas]   [<ffffffffa004d5b1>] sas_unregister_domain_devices+0x7f/0xbf [libsas]   [<ffffffffa004c487>] sas_deform_port+0x61/0x1b8 [libsas]   [<ffffffffa004bed0>] sas_phye_loss_of_signal+0x29/0x2b [libsas]  ...and kills the awkward "sata domain_device briefly existing in the domain without an ata_port" state.  Reported-by: Michal Kosciowski <michal.kosciowski@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com> Acked-by: Jeff Garzik <jgarzik@redhat.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | libsrp.h | s | 1.5K | 60 | James Bottomley | James.Bottomley@suse.de | 1262204607 |  | libsrp: fix compile failure  commit 45465487897a1c6d508b14b904dc5777f7ec7e04 ("kfifo: move struct kfifo in place") caused a compile failure in ibmvscsitgt.c because it changed a pointer to kfifo in the libsrp.h structure to a direct inclusion without including <linux/kfifo.h>.  The fix is simple, just add the include, but how did this happen? This change, introduced at -rc2, hardly looks like a bug fix, and it clearly didn't go through linux-next, which would have picked up this compile failure (it only occurs on ppc because of the ibm virtual scsi target).  [ Apparently all of -mm wasn't in linux-next.. ]  Signed-off-by: James Bottomley <James.Bottomley@suse.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | scsi_dbg.h | s | 968B | 21 | James Bottomley | James.Bottomley@steeleye.com | 1192215116 |  | [SCSI] Fix device not ready printk  Because scsi_print_sense_hdr prefixes with KERN_INFO, the output from scsi_io_completion looks like:  sd 0:0:0:0: [sdb] Device not ready: <6>: Sense Key : 0x2 [current] : ASC=0x4 ASCQ=0x3  By using scsi_show_sense_hdr, we can get the much more appealing output:  sd 0:0:0:0: [sdb] Device not ready: Sense Key : 0x2 [current] sd 0:0:0:0: [sdb] Device not ready: ASC=0x4 ASCQ=0x3  Acked-by: Matthew Wilcox <willy@linux.intel.com> Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | fcoe_sysfs.h | s | 3.6K | 105 | Robert Love | robert.w.love@intel.com | 1337762409 |  | [SCSI] libfcoe: Add fcoe_sysfs  This patch adds a 'fcoe bus' infrastructure to the kernel that is driven by changes to libfcoe which allow LLDs to present FIP (FCoE Initialization Protocol) discovered entities and their attributes to user space via sysfs.  This patch adds the following APIs-  fcoe_ctlr_device_add fcoe_ctlr_device_delete fcoe_fcf_device_add fcoe_fcf_device_delete  They allow the LLD to expose the FCoE ENode Controller and any discovered FCFs (Fibre Channel Forwarders, e.g. FCoE switches) to the user. Each of these new devices has their own bus_type so that they are grouped together for easy lookup from a user space application. Each new class has an attribute_group to expose attributes for any created instances. The attributes are-  fcoe_ctlr_device * fcf_dev_loss_tmo * lesb_link_fail * lesb_vlink_fail * lesb_miss_fka * lesb_symb_err * lesb_err_block * lesb_fcs_error  fcoe_fcf_device * fabric_name * switch_name * priority * selected * fc_map * vfid * mac * fka_peroid * fabric_state * dev_loss_tmo  A device loss infrastructre similar to the FC Transport's is also added by this patch. It is nice to have so that a link flapping adapter doesn't continually advance the count used to identify the discovered FCF. FCFs will exist in a "Disconnected" state until either the timer expires or the FCF is rediscovered and becomes "Connected."  This patch generates a few checkpatch.pl WARNINGS that I'm not sure what to do about. They're macros modeled around the FC Transport attribute building macros, which have the same 'feature' where the caller can ommit a cast in the argument list and no cast occurs in the code. I'm not sure how to keep the code condensed while keeping the macros. Any advice would be appreciated.  Signed-off-by: Robert Love <robert.w.love@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | fc_encode.h | s | 21K | 665 | Neerav Parikh | neerav.parikh@intel.com | 1329660538 |  | [SCSI] libfc: Add support for FDMI  This patch adds support for Fabric Device Management Interface as per FC-GS-4 spec. in libfc. Any driver making use of libfc can enable fdmi state machine for a given lport.  If lport has enabled FDMI support the lport state machine will transition into FDMI after completing the DNS states and before entering the SCR state. The FDMI state transition is such that if there is an error, it won't stop the lport state machine from transitioning and the it will behave as if there was no FDMI support.  The FDMI HBA attributes are registed with the Management server via Register HBA (RHBA) command and the port attributes are reigstered using the Register Port(RPA) command.  Signed-off-by: Neerav Parikh <neerav.parikh@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Acked-by: Robert Love <robert.w.love@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_tcq.h | s | 4.1K | 153 | Nicholas Bellinger | nab@linux-iscsi.org | 1306256636 |  | [SCSI] target: Convert TASK_ATTR to scsi_tcq.h definitions  This patch converts target core and follwing scsi-misc upstream fabric modules to use include/scsi/scsi_tcq.h includes for SIMPLE, HEAD_OF_QUEUE and ORDERED SCSI tasks instead of scsi/libsas.h with TASK_ATTR*  *) tcm_loop: Convert tcm_loop_allocate_core_cmd() + tcm_loop_device_reset() to    scsi_tcq.h *) tcm_fc: Convert ft_send_cmd() from FCP_PTA_* to scsi_tcq.h  Reported-by: Christoph Hellwig <hch@infradead.org> Signed-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org> Signed-off-by: James Bottomley <jbottomley@parallels.com>
f | scsi_scan.h | s | 256B | 9 | Rafael J. Wysocki | rjw@sisk.pl | 1239647827 |  | PM/Hibernate: Wait for SCSI devices scan to complete during resume  There is a race between resume from hibernation and the asynchronous scanning of SCSI devices and to prevent it from happening we need to call scsi_complete_async_scans() during resume from hibernation.  In addition, if the resume from hibernation is userland-driven, it's better to wait for all device probes in the kernel to complete before attempting to open the resume device.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by: Arjan van de Ven <arjan@linux.intel.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | osd_sec.h | s | 1.5K | 38 | Boaz Harrosh | bharrosh@panasas.com | 1236880686 |  | [SCSI] libosd: OSDv1 Headers  Headers only patch.  osd_protocol.h 	Contains a C-fied definition of the T10 OSD standard osd_types.h 	Contains CPU order common used types osd_initiator.h 	API definition of the osd_initiator library osd_sec.h 	Contains High level API for the security manager.  [Note that checkpatch spews errors on things that are valid in this context and will not be fixed]  Signed-off-by: Boaz Harrosh <bharrosh@panasas.com> Reviewed-by: Benny Halevy <bhalevy@panasas.com> Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
f | sas.h | s | 12K | 518 | Dan Williams | dan.j.williams@intel.com | 1337282831 |  | isci: kill sci_phy_protocol and sci_request_protocol  Holdovers from the initial driver cleanup, replace with enum sas_protocol.  Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | scsi_netlink.h | s | 4.3K | 118 | Bobby Powers | bobbypowers@gmail.com | 1332547111 |  | headers: include linux/types.h where appropriate  This addresses some header check warnings.  DRM headers which include "drm.h" have been excluded, as they indirectly include types.h.  Signed-off-by: Bobby Powers <bobbypowers@gmail.com> Cc: Chris Ball <cjb@laptop.org> Cc: Dave Airlie <airlied@linux.ie> Cc: James Bottomley <James.Bottomley@HansenPartnership.com> Cc: Takashi Iwai <tiwai@suse.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | scsi_dh.h | s | 2.6K | 83 | Chandra Seetharaman | sekharan@us.ibm.com | 1259949646 |  | [SCSI] scsi_dh: Change the scsidh_activate interface to be asynchronous  Make scsi_dh_activate() function asynchronous, by taking in two additional parameters, one is the callback function and the other is the data to call the callback function with.  Signed-off-by: Chandra Seetharaman <sekharan@us.ibm.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | scsi_bsg_fc.h | s | 8.6K | 259 | Harish Zunjarrao | harish.zunjarrao@qlogic.com | 1263753393 |  | [SCSI] fc-transport: Use packed modifier for fc_bsg_request structure.  The 32bit kernel does not add padding bytes in the fc_bsg_request structure whereas the 64bit kernel adds padding bytes in the fc_bsg_request structure. Due to this, structure elements gets mismatched with 32bit application and 64bit kernel.To resolve this, used packed modifier to avoid adding padding bytes. Signed-off-by: Giridhar Malavali <giridhar.malavali@qlogic.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | scsi_transport_iscsi.h | s | 12K | 295 | Nilesh Javali | nilesh.javali@qlogic.com | 1330556159 |  | [SCSI] iscsi_transport: Add support to display CHAP list and delete CHAP entry  For offload iSCSI like qla4xxx CHAP entries are stored in FLASH. This patch adds support to list CHAP entries stored in FLASH and delete specified CHAP entry from FLASH using iscsi tools.  Signed-off-by: Nilesh Javali <nilesh.javali@qlogic.com> Signed-off-by: Vikas Chaudhary <vikas.chaudhary@qlogic.com> Reviewed-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
d | fc |  | 11 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1332446129 |  | 
f | libiscsi_tcp.h | s | 4.2K | 115 | Mike Christie | michaelc@cs.wisc.edu | 1329660540 |  | [SCSI] libiscsi_tcp: fix max_r2t manipulation  Problem description from Xi Wang: A large max_r2t could lead to integer overflow in subsequent call to iscsi_tcp_r2tpool_alloc(), allocating a smaller buffer than expected and leading to out-of-bounds write.  Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | srp.h | s | 6.1K | 254 | David Dillow | dillowda@ornl.gov | 1287811150 |  | IB/srp: Implement SRP_CRED_REQ and SRP_AER_REQ  This patch adds support for SRP_CRED_REQ to avoid a lockup by targets that use that mechanism to return credits to the initiator. This prevents a lockup observed in the field where we would never add the credits from the SRP_CRED_REQ to our current count, and would therefore never send another command to the target.  Minimal support for SRP_AER_REQ is also added, as these messages can also be used to convey additional credits to the initiator.  Based upon extensive debugging and code by Bart Van Assche and a bug report by Chris Worley.  Signed-off-by: David Dillow <dillowda@ornl.gov> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iscsi_if.h | s | 15K | 544 | Vikas Chaudhary | vikas.chaudhary@qlogic.com | 1332833195 |  | [SCSI] qla4xxx: Removed packed attr from struct iscsi_chap_rec  We don't need to pack 'struct iscsi_chap_rec' as buffer is built locally in the driver and pass to the user-space.  Signed-off-by: Vikas Chaudhary <vikas.chaudhary@qlogic.com> Reviewed-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi.h | s | 17K | 503 | Andy Grover | agrover@redhat.com | 1330209466 |  | scsi: update scsi.h with SYNCHRONIZE_CACHE_16  It's in SBC-3.  Signed-off-by: Andy Grover <agrover@redhat.com> Cc: Christoph Hellwig <hch@lst.de> Cc: James Bottomley <JBottomley@Parallels.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | Kbuild | g | 99B |  | Tom Rini | tom_rini@mentor.com | 1272815112 |  | [SCSI] Unexport scsi/scsi.h from headers_install  The scsi/scsi.h header is normally provided by the libc (and was not exported by the kernel since 2.6.24) and has been until it was re-exported with 2.6.31.  The kernel version is not userspace clean and does not appear to provide anything useable in userland over the (e)glibc version.  Signed-off-by: Tom Rini <tom_rini@mentor.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | osd_sense.h | s | 9.9K | 245 | Boaz Harrosh | bharrosh@panasas.com | 1259949704 |  | [SCSI] libosd: osd_sense: OSD_CFO_PERMISSIONS  Add one more important cdb_field_offset that can be returned with scsi_invalid_field_in_cdb. It is the offset of the permissions_bit_mask field in the capabilities structure.  Interestingly, the offset is the same for V1/V2  Signed-off-by: Boaz Harrosh <bharrosh@panasas.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | osd_ore.h | s | 5.3K | 172 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | scsi_host.h | s | 28K | 801 | Lin Ming | ming.m.lin@intel.com | 1326068097 |  | [SCSI] add flag to skip the runtime PM calls on the host  With previous change, now the ata port runtime suspend will happen as:  disk suspend --> scsi target suspend --> scsi host suspend --> ata port suspend  ata port(parent device) suspend need to schedule scsi EH which will resume scsi host(child device). Then the child device resume will in turn make parent device resume first. This is kind of recursive.  This patch adds a new flag Scsi_Host::eh_noresume. ata port will set this flag to skip the runtime PM calls on scsi host.  Acked-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Lin Ming <ming.m.lin@intel.com> Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
f | fc_frame.h | s | 6.9K | 223 | Yi Zou | yi.zou@intel.com | 1311840535 |  | [SCSI] fcoe: remove unused ptype field in fcoe_rcv_info  There is no need to cache the ptype in fcoe_rcv_info struct as it is never used anywhere.  Signed-off-by: Yi Zou <yi.zou@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Robert Love <robert.w.love@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_bsg_iscsi.h | s | 2.8K | 87 | Mike Christie | michaelc@cs.wisc.edu | 1314455781 |  | [SCSI] iscsi class: add bsg support to iscsi class  This patch adds bsg support to the iscsi class. There is only 1 request, the host vendor one, supported. It is expected that this would be used for things like flash updates.  This patch is made over this one http://marc.info/?l=linux-scsi&m=131149780020992&w=2  Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | scsi_device.h | s | 17K | 433 | Alan Stern | stern@rowland.harvard.edu | 1340427931 |  | SCSI & usb-storage: add try_rc_10_first flag  Several bug reports have been received recently for USB mass-storage devices that don't handle READ CAPACITY(16) commands properly.  They report bogus sizes, in some cases becoming unusable as a result.  The bugs were triggered by commit 09b6b51b0b6c1b9bb61815baf205e4d74c89ff04 (SCSI & usb-storage: add flags for VPD pages and REPORT LUNS), which caused usb-storage to stop overriding the SCSI level reported by devices.  By default, the sd driver will try READ CAPACITY(16) first for any device whose level is above SCSI_SPC_2.  It seems likely that any device large enough to require the use of READ CAPACITY(16) (i.e., 2 TB or more) would be able to handle READ CAPACITY(10) commands properly.  Indeed, I don't know of any devices that don't handle READ CAPACITY(10) properly.  Therefore this patch (as1559) adds a new flag telling the sd driver to try READ CAPACITY(10) before READ CAPACITY(16), and sets this flag for every USB mass-storage device.  If a device really is larger than 2 TB, sd will fall back to READ CAPACITY(16) just as it used to.  This fixes Bugzilla #43391.  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Acked-by: Hans de Goede <hdegoede@redhat.com> CC: "James E.J. Bottomley" <JBottomley@parallels.com> CC: Matthew Dharm <mdharm-usb@one-eyed-alien.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | osd_initiator.h | s | 16K | 444 | Joe Perches | joe@perches.com | 1308907137 |  | treewide: Fix recieve/receive typos  Just spelling fixes.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | scsi_transport_srp.h | s | 902B | 29 | FUJITA Tomonori | tomof@acm.org | 1192214281 |  | [SCSI] tgt: move tsk_mgmt_response callback to transport class  This moves tsk_mgmt_response callback in struct scsi_host_template to struct scsi_transport_template since struct scsi_transport_template is more suitable for the task management stuff.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | scsi_netlink_fc.h | s | 1.9K | 60 | James Smart | James.Smart@Emulex.Com | 1157229315 |  | [SCSI] SCSI & FC transport: extend event vendor id's to 64bits  During discussions with Mike Christie, I became convinced that we needed a larger vendor id. This patch extends the id from 32 to 64 bits.  This applies on top of the prior patches that add SCSI transport events via netlink.  Signed-off-by: James Smart <James.Smart@emulex.com> Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | scsi_transport.h | s | 3.9K | 108 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330901674 |  | BUG: headers with BUG/BUG_ON etc. need linux/bug.h  If a header file is making use of BUG, BUG_ON, BUILD_BUG_ON, or any other BUG variant in a static inline (i.e. not in a #define) then that header really should be including <linux/bug.h> and not just expecting it to be implicitly present.  We can make this change risk-free, since if the files using these headers didn't have exposure to linux/bug.h already, they would have been causing compile failures/warnings.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | scsi_tgt.h | s | 807B | 18 | FUJITA Tomonori | tomof@acm.org | 1192214270 |  | [SCSI] tgt: add I_T nexus support  tgt uses scsi_host as I_T nexus. This works for ibmvstgt because it creates one scsi_host for one initiator. However, other target drivers don't work like that.  This adds I_T nexus support, which enable one scsi_host to handle multiple initiators. New scsi_tgt_it_nexus_create/destroy functions are expected be called transport classes. For example, ibmvstgt creates an initiator remote port, then the srp transport calls tgt_it_nexus_create. tgt doesn't manages I_T nexus, instead it tells tgtd, user-space daemon, to create a new I_T nexus.  On the receiving the response from tgtd, tgt calls shost->transportt->it_nexus_response. transports should notify a lld. The srp transport uses it_nexus_response callback in srp_function_template to do that.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Mike Christie <michaelc@cs.wisc.edu> Signed-off-by: James Bottomley <James.Bottomley@SteelEye.com>
f | scsi_transport_spi.h | s | 7.1K | 148 | James Bottomley | James.Bottomley@HansenPartnership.com | 1245078575 |  | [SCSI] aic79xx: make driver respect nvram for IU and QAS settings  This patch allows the Adaptec firmware to pass on its values for Packetize and QAS.  To do this, the settings max_iu and max_qas have been introduced into the SPI transport class and populated from the adaptec NVram tables.  Domain validation in the SPI transport class will respect the max settings when configuring to the highest possible speed for testing.  Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
f | scsi_ioctl.h | s | 1.2K | 38 | Al Viro | viro@zeniv.linux.org.uk | 1224589648 |  | [PATCH] don't mess with file in scsi_nonblockable_ioctl()  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | osd_protocol.h | s | 17K | 590 | Boaz Harrosh | bharrosh@panasas.com | 1288107754 |  | [SCSI] libosd: Support for scatter gather write/read commands  This patch adds the Scatter-Gather (sg) API to libosd. Scatter-gather enables a write/read of multiple none-contiguous areas of an object, in a single call. The extents may overlap and/or be in any order.  The Scatter-Gather list is sent to the target in what is called a "cdb continuation segment". This is yet another possible segment in the osd-out-buffer. It is unlike all other segments in that it sits before the actual "data" segment (which until now was always first), and that it is signed by itself and not part of the data buffer. This is because the cdb-continuation-segment is considered a spill-over of the CDB data, and is therefor signed under OSD_SEC_CAPKEY and higher.  TODO: A new osd_finalize_request_ex version should be supplied so the @caps received on the network also contains a size parameter and can be spilled over into the "cdb continuation segment".  Thanks to John Chandy <john.chandy@uconn.edu> for the original code, and investigations. And the implementation of SG support in the osd-target.  Original-coded-by: John Chandy <john.chandy@uconn.edu> Signed-off-by: Boaz Harrosh <bharrosh@panasas.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | sg.h | s | 14K | 249 | Dave Young | hidave.darkstar@gmail.com | 1268437990 |  | sysctl extern cleanup: sg  Extern declarations in sysctl.c should be moved to their own header file, and then include them in relavant .c files.  Move sg_big_buff extern declaration to scsi/sg.h  Signed-off-by: Dave Young <hidave.darkstar@gmail.com> Acked-by: Doug Gilbert <dgilbert@interlog.com> Cc: James Bottomley <James.Bottomley@HansenPartnership.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | scsi_eh.h | s | 2.7K | 78 | Alan Stern | stern@rowland.harvard.edu | 1217099696 |  | [SCSI] scsi_eh_prep_cmnd should save scmd->underflow  This patch (as1116) fixes a bug in scsi_eh_prep_cmnd() and scsi_eh_restore_cmnd().  These routines are supposed to save any values they change and restore them later, but someone forgot to save & restore scmd->underflow.  This fixes part of the problem reported in Bugzilla #9638.  [jejb: fix up rejections around DIF/DIX] Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
f | scsicam.h | s | 674B | 18 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | scsi_transport_sas.h | s | 6.6K | 200 | Dan Williams | dan.j.williams@intel.com | 1330542066 |  | [SCSI] libsas: fix sas_find_local_phy(), take phy references  In the direct-attached case this routine returns the phy on which this device was first discovered.  Which is broken if we want to support wide-targets, as this phy reference can become stale even though the port is still active.  In the expander-attached case this routine tries to lookup the phy by scanning the attached sas addresses of the parent expander, and BUG_ONs if it can't find it.  However since eh and the libsas workqueue run independently we can still be attempting device recovery via eh after libsas has recorded the device as detached.  This is even easier to hit now that eh is blocked while device domain rediscovery takes place, and that libata is fed more timed out commands increasing the chances that it will try to recover the ata device.  Arrange for dev->phy to always point to a last known good phy, it may be stale after the port is torn down, but it will catch up for wide port reconfigurations, and never be NULL.  Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
