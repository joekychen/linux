f | builtin-stat.c | s | 33K | 1062 | Stephane Eranian | eranian@google.com | 1339424421 |  | perf stat: Fix default output file  The following commit:  commit 56f3bae70638b33477a6015fd362ccfe354fd3ee Author: Jim Cromie <jim.cromie@gmail.com> Date:   Wed Sep 7 17:14:00 2011 -0600      perf stat: Add --log-fd <N> option to redirect stderr elsewhere  introduced a bug in the way perf stat outputs the results by default, i.e., without the --log-fd or --output option. It would default to writing to file descriptor 0, i.e., stdin. Writing to stdin is allowed and is equivalent to writing to stdout. However, there is a major difference for any script that was already capturing the output of perf stat via redirection:      perf stat >/tmp/log .... or perf stat 2>/tmp/log ....  They would not capture anything anymore. They would have to do:     perf stat 0>/tmp/log ...  This breaks compatibility with existing scripts and does not look very natural.  This patch fixes the problem by looking at output_fd only when it was modified by user (> 0). It also checks that the value if positive. Passing --log-fd 0 is ignored.  I would also argue that defaulting to stderr for the results is not the right thing to do, though this patch does not address this specific issue.  Signed-off-by: Stephane Eranian <eranian@google.com> Cc: David Ahern <dsahern@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Jim Cromie <jim.cromie@gmail.com> Link: http://lkml.kernel.org/r/20120515111111.GA9870@quad Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-test.c | s | 28K | 1042 | Jiri Olsa | jolsa@redhat.com | 1337696356 |  | perf test: Move parse event automated tests to separated object  Moving event parsing specific tests into separated file:    util/parse-events-test.c  Also changing the code a bit to ease running separate tests.  Signed-off-by: Jiri Olsa <jolsa@redhat.com> Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1337584373-2741-2-git-send-email-jolsa@redhat.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | scripts |  | 2 items |  | Neil Horman | nhorman@tuxdriver.com | 1317325297 |  | perf script: Add drop monitor script  A while back I created the dropmonitor protocol, which allowed users to get reports of dropped frames communicated to them via a netlink socket.  While useful, several people have now asked that I integrate the ability to do drop monitoring with perf, so they don't have to run additional tools.  This patch adds a drop monitor script to the perf suite, and provides the same output that the netlink socket does.  Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1309801217-22450-1-git-send-email-nhorman@tuxdriver.com Signed-off-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | design.txt | g | 17K |  | Namhyung Kim | namhyung.kim@lge.com | 1338475122 |  | perf tools: Update ioctl documentation for PERF_IOC_FLAG_GROUP  The ioctl interface of perf event fd receives 3 arguments to control event group behavior but it lacked documentation.  Signed-off-by: Namhyung Kim <namhyung.kim@lge.com> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1338443506-25009-2-git-send-email-namhyung.kim@lge.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-top.c | s | 34K | 1148 | Namhyung Kim | namhyung.kim@lge.com | 1338472032 |  | perf callchain: Make callchain cursors TLS  perf top -G has a race on callchain cursor between main thread and display thread. Since the callchain cursors are used locally make them thread-local data would solve the problem.  Signed-off-by: Namhyung Kim <namhyung.kim@lge.com> Reported-by: Sunjin Yang <fan4326@gmail.com> Suggested-by: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Cc: Ingo Molnar <mingo@redhat.com> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Sunjin Yang <fan4326@gmail.com> Link: http://lkml.kernel.org/r/1338443007-24857-1-git-send-email-namhyung.kim@lge.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | Makefile | g | 31K |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1337881719 |  | perf tools: Do not use _FORTIFY_SOURCE when DEBUG=1 is specified  As:  make DEBUG=1 -C tools/perf  disables optimizations and _FORTIFY_SOURCE in recent distros requires optimizations to be enabled, seen on a Fedora 17 system:  [acme@Fedora17 linux]$ make DEBUG=1 O=/home/acme/git/build/perf/ -C tools/perf install In file included from /usr/include/sys/types.h:26:0,                  from /usr/include/libelf.h:53,                  from /usr/include/gelf.h:53,                  from /usr/include/elfutils/libdw.h:53,                  from <stdin>:2: /usr/include/features.h:314:4: error: #warning _FORTIFY_SOURCE requires compiling with optimization (-O) [-Werror=cpp  Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-4ccyiebqju4uatm31ky7725b@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-record.c | s | 25K | 798 | Namhyung Kim | namhyung@gmail.com | 1338303222 |  | perf tools: Convert critical messages to ui__error()  There were places where use ui__warning (or even fprintf) to show critical messages. This patch converts them to ui__error so that the front-end code can implement appropriate behavior.  Signed-off-by: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Pekka Enberg <penberg@kernel.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1338265382-6872-3-git-send-email-namhyung@gmail.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-bench.c | s | 4.9K | 207 | Jan Beulich | jbeulich@suse.com | 1327443932 |  | perf bench: Also allow measuring memset()  This simply clones the respective memcpy() implementation.  Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/r/4F16D743020000780006D735@nat28.tlf.novell.com Signed-off-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | ui |  | 15 items |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1338391904 |  | perf annotate browser: Fix help window entry for navigating to hottest line  Its 'H', not 'h'. The later is for getting to the help window.  Reported-by: Ingo Molnar <mingo@kernel.org> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-7zvwphhm815y2zczoxgstzuf@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-lock.c | s | 23K | 850 | Steven Rostedt | srostedt@redhat.com | 1335353328 |  | perf: Have perf use the new libtraceevent.a library  The event parsing code in perf was originally copied from trace-cmd but never was kept up-to-date with the changes that was done there. The trace-cmd libtraceevent.a code is much more mature than what is currently in perf.  This updates the code to use wrappers to handle the calls to the new event parsing code. The new code requires a handle to be pass around, which removes the global event variables and allows more than one event structure to be read from different files (and different machines).  But perf still has the old global events and the code throughout perf does not yet have a nice way to pass around a handle. A global 'pevent' has been made for perf and the old calls have been created as wrappers to the new event parsing code that uses the global pevent.  With this change, perf can later incorporate the pevent handle into the perf structures and allow more than one file to be read and compared, that contains different events.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@alien8.de> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arun Sharma <asharma@fb.com> Cc: Namhyung Kim <namhyung.kim@lge.com> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
f | builtin-timechart.c | s | 23K | 927 | Robert Richter | robert.richter@amd.com | 1324666863 |  | perf report: Accept fifos as input file  The default input file for perf report is not handled the same way as perf record does it for its output file. This leads to unexpected behavior of perf report, etc. E.g.:   # perf record -a -e cpu-cycles sleep 2 || perf report || cat  failed to open perf.data: No such file or directory  (try 'perf record' first)  While perf record writes to a fifo, perf report expects perf.data to be read. This patch changes this to accept fifos as input file.  Applies to the following commands:   perf annotate  perf buildid-list  perf evlist  perf kmem  perf lock  perf report  perf sched  perf script  perf timechart  Also fixes char const* -> const char* type declaration for filename strings.  v2: * Prevent potential null pointer access to input_name in   builtin-report.c. Needed due to removal of patch "perf report: Setup   browser if stdout is a pipe"  Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/r/1323248577-11268-5-git-send-email-robert.richter@amd.com Signed-off-by: Robert Richter <robert.richter@amd.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin.h | s | 2.0K | 34 | Stephane Eranian | eranian@google.com | 1318017684 |  | perf tools: Make perf.data more self-descriptive (v8)  The goal of this patch is to include more information about the host environment into the perf.data so it is more self-descriptive. Overtime, profiles are captured on various machines and it becomes hard to track what was recorded, on what machine and when.  This patch provides a way to solve this by extending the perf.data file with basic information about the host machine. To add those extensions, we leverage the feature bits capabilities of the perf.data format.  The change is backward compatible with existing perf.data files.  We define the following useful new extensions:  - HEADER_HOSTNAME: the hostname  - HEADER_OSRELEASE: the kernel release number  - HEADER_ARCH: the hw architecture  - HEADER_CPUDESC: generic CPU description  - HEADER_NRCPUS: number of online/avail cpus  - HEADER_CMDLINE: perf command line  - HEADER_VERSION: perf version  - HEADER_TOPOLOGY: cpu topology  - HEADER_EVENT_DESC: full event description (attrs)  - HEADER_CPUID: easy-to-parse low level CPU identication  The small granularity for the entries is to make it easier to extend without breaking backward compatiblity. Many entries are provided as ASCII strings.  Perf report/script have been modified to print the basic information as easy-to-parse ASCII strings. Extended information about CPU and NUMA topology may be requested with the -I option.  Thanks to David Ahern for reviewing and testing the many versions of this patch.   $ perf report --stdio  # ========  # captured on : Mon Sep 26 15:22:14 2011  # hostname : quad  # os release : 3.1.0-rc4-tip  # perf version : 3.1.0-rc4  # arch : x86_64  # nrcpus online : 4  # nrcpus avail : 4  # cpudesc : Intel(R) Core(TM)2 Quad CPU Q6600 @ 2.40GHz  # cpuid : GenuineIntel,6,15,11  # total memory : 8105360 kB  # cmdline : /home/eranian/perfmon/official/tip/build/tools/perf/perf record date  # event : name = cycles, type = 0, config = 0x0, config1 = 0x0, config2 = 0x0, excl_usr = 0, excl_kern = 0, id = { 29, 30, 31,  # HEADER_CPU_TOPOLOGY info available, use -I to display  # HEADER_NUMA_TOPOLOGY info available, use -I to display  # ========  #  ...   $ perf report --stdio -I  # ========  # captured on : Mon Sep 26 15:22:14 2011  # hostname : quad  # os release : 3.1.0-rc4-tip  # perf version : 3.1.0-rc4  # arch : x86_64  # nrcpus online : 4  # nrcpus avail : 4  # cpudesc : Intel(R) Core(TM)2 Quad CPU Q6600 @ 2.40GHz  # cpuid : GenuineIntel,6,15,11  # total memory : 8105360 kB  # cmdline : /home/eranian/perfmon/official/tip/build/tools/perf/perf record date  # event : name = cycles, type = 0, config = 0x0, config1 = 0x0, config2 = 0x0, excl_usr = 0, excl_kern = 0, id = { 29, 30, 31,  # sibling cores   : 0-3  # sibling threads : 0  # sibling threads : 1  # sibling threads : 2  # sibling threads : 3  # node0 meminfo  : total = 8320608 kB, free = 7571024 kB  # node0 cpu list : 0-3  # ========  #  ...  Reviewed-by: David Ahern <dsahern@gmail.com> Tested-by: David Ahern <dsahern@gmail.com> Cc: David Ahern <dsahern@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Robert Richter <robert.richter@amd.com> Cc: Andi Kleen <ak@linux.intel.com> Link: http://lkml.kernel.org/r/20110930134040.GA5575@quad Signed-off-by: Stephane Eranian <eranian@google.com> [ committer notes: Use --show-info in the tools as was in the docs, rename   perf_header_fprintf_info to perf_file_section__fprintf_info, fixup   conflict with f69b64f7 "perf: Support setting the disassembler style" ] Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | util |  | 116 items |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1339511289 |  | perf tools: Fix synthesizing tracepoint names from the perf.data headers  We need to use the per event info snapshoted at record time to synthesize the events name, so do it just after reading the perf.data headers, when we already processed the /sys events data, otherwise we'll end up using the local /sys that only by sheer luck will have the same tracepoint ID -> real event association.  Example:    # uname -a   Linux felicio.ghostprotocols.net 3.4.0-rc5+ #1 SMP Sat May 19 15:27:11 BRT 2012 x86_64 x86_64 x86_64 GNU/Linux   # perf record -e sched:sched_switch usleep 1   [ perf record: Woken up 1 times to write data ]   [ perf record: Captured and wrote 0.015 MB perf.data (~648 samples) ]   # cat /t/events/sched/sched_switch/id   279   # perf evlist -v   sched:sched_switch: sample_freq=1, type: 2, config: 279, size: 80, sample_type: 1159, read_format: 7, disabled: 1, inherit: 1, mmap: 1, comm: 1, enable_on_exec: 1, sample_id_all: 1, exclude_guest: 1   #  So on the above machine the sched:sched_switch has tracepoint id 279, but on the machine were we'll analyse it it has a different id:    $ cat /t/events/sched/sched_switch/id   56   $ perf evlist -i /tmp/perf.data   kmem:mm_balancedirty_writeout   $ cat /t/events/kmem/mm_balancedirty_writeout/id   279  With this fix:    $ perf evlist -i /tmp/perf.data   sched:sched_switch  Reported-by: Dmitry Antipov <dmitry.antipov@linaro.org> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-auwks8fpuhmrdpiefs55o5oz@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-inject.c | s | 6.4K | 227 | Stephane Eranian | eranian@google.com | 1337702368 |  | perf inject: Fix broken perf inject -b  perf inject -b was broken. It would not inject any build_id into the stream. Furthermore, it would strip samples from the stream.  The reason was a missing initialization of the event attribute structure. The perf_tool.tool.attr() callback was pointing to a simple repipe. But there was no initialization of the internal data structures to keep track of events and event ids. That later caused event id lookups to fail, and sample would get removed.  The patch simply adds back the call to perf_event__process_attr() to initialize the evlist structure and now build_ids are again injected.  Signed-off-by: Stephane Eranian <eranian@google.com> Cc: David Ahern <dsahern@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/1337081295-10303-2-git-send-email-eranian@google.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | perf-archive.sh | s | 1.3K | 40 | Chanho Park | chanho61.park@samsung.com | 1334422335 |  | perf archive: Correct cutting of symbolic link  If a '$PERF_BUILDID_DIR'(typically $HOME/.debug) is a symbolic link directory, cutting of the path will fail.  Here is an example where a buildid directory is a symbolic link.  / # ls -al /root lrwxrwxrwx    1 root     root            13 Mar 26  2012 /root -> opt/home/root / # cd ~ /opt/home/root # perf record -a -g sleep 1 [ perf record: Woken up 1 times to write data ] [ perf record: Captured and wrote 0.322 MB perf.data (~14057 samples) ] /opt/home/root # perf archive tar: Removing leading `/' from member names Now please run:  $ tar xvf perf.data.tar.bz2 -C ~/.debug  wherever you need to run 'perf report' on. /opt/home/root # mkdir temp /opt/home/root # tar xf perf.data.tar.bz2 -C ./temp /opt/home/root # find ./temp -name "*kernel*" ./temp/opt/home/root/.debug/[kernel.kallsyms]  -> If successfully cut off the path, [kernel.kallsyms] is located in top of the archived file.  This patch enables to cut correctly even if the buildid directory is a symbolic link.  Signed-off-by: Chanho Park <chanho61.park@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Cc: Ingo Molnar <mingo@redhat.com> Cc: Kyungmin Park <kyungmin.park@samsung.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1333348109-12598-1-git-send-email-chanho61.park@samsung.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-buildid-cache.c | s | 3.1K | 111 | Stephane Eranian | eranian@google.com | 1275741244 |  | perf buildid: add perfconfig option to specify buildid cache dir  This patch adds the ability to specify an alternate directory to store the buildid cache (buildids, copy of binaries). By default, it is hardcoded to $HOME/.debug. This directory contains immutable data. The layout of the directory is such that no conflicts in filenames are possible. A modification in a file, yields a different buildid and thus a different location in the subdir hierarchy.  You may want to put the buildid cache elsewhere because of disk space limitation or simply to share the cache between users. It is also useful for remote collect vs. local analysis of profiles.  This patch adds a new config option to the perfconfig file.  Under the tag 'buildid', there is a dir option. For instance, if you have:  $ cat /etc/perfconfig [buildid] dir = /var/cache/perf-buildid  All buildids and binaries are be saved in the directory specified. The perf record, buildid-list, buildid-cache, report, annotate, and archive commands will it to pull information out.  The option can be set in the system-wide perfconfig file or in the $HOME/.perfconfig file.  Cc: David S. Miller <davem@davemloft.net> Cc: Frédéric Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Tom Zanussi <tzanussi@gmail.com> LKML-Reference: <4c055fb7.df0ce30a.5f0d.ffffae52@mx.google.com> Signed-off-by: Stephane Eranian <eranian@google.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | perf.h | s | 5.3K | 199 | Stephane Eranian | eranian@google.com | 1337981564 |  | perf record: Fix branch_stack type in perf_record_opts  The attr.branch_sample_type field is defined as u64 by the API.  As such, we need to ensure the variable holding the value of the branch stack filters is also u64 otherwise we may lose bits in the future.  Note also that the bogus definition of the field in perf_record_opts caused problems on big-endian PPC systems.  Thanks to Anshuman Khandual for tracking the problem on PPC.  Reported-by: Anshuman Khandual <khandual@linux.vnet.ibm.com> Signed-off-by: Stephane Eranian <eranian@google.com> Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/20120525211344.GA7729@quad Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-sched.c | s | 43K | 1547 | Steven Rostedt | srostedt@redhat.com | 1335353328 |  | perf: Have perf use the new libtraceevent.a library  The event parsing code in perf was originally copied from trace-cmd but never was kept up-to-date with the changes that was done there. The trace-cmd libtraceevent.a code is much more mature than what is currently in perf.  This updates the code to use wrappers to handle the calls to the new event parsing code. The new code requires a handle to be pass around, which removes the global event variables and allows more than one event structure to be read from different files (and different machines).  But perf still has the old global events and the code throughout perf does not yet have a nice way to pass around a handle. A global 'pevent' has been made for perf and the old calls have been created as wrappers to the new event parsing code that uses the global pevent.  With this change, perf can later incorporate the pevent handle into the perf structures and allow more than one file to be read and compared, that contains different events.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@alien8.de> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arun Sharma <asharma@fb.com> Cc: Namhyung Kim <namhyung.kim@lge.com> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
d | Documentation |  | 34 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1338401520 |  | Merge branch 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull perf updates from Ingo Molnar.  * 'perf-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (21 commits)   perf ui browser: Stop using 'self'   perf annotate browser: Read perf config file for settings   perf config: Allow '_' in config file variable names   perf annotate browser: Make feature toggles global   perf annotate browser: The idx_asm field should be used in asm only view   perf tools: Convert critical messages to ui__error()   perf ui: Make --stdio default when TUI is not supported   tools lib traceevent: Silence compiler warning on 32bit build   perf record: Fix branch_stack type in perf_record_opts   perf tools: Reconstruct event with modifiers from perf_event_attr   perf top: Fix counter name fixup when fallbacking to cpu-clock   perf tools: fix thread_map__new_by_pid_str() memory leak in error path   perf tools: Do not use _FORTIFY_SOURCE when DEBUG=1 is specified   tools lib traceevent: Fix signature of create_arg_item()   tools lib traceevent: Use proper function parameter type   tools lib traceevent: Fix freeing arg on process_dynamic_array()   tools lib traceevent: Fix a possibly wrong memory dereference   tools lib traceevent: Fix a possible memory leak   tools lib traceevent: Allow expressions in __print_symbolic() fields   perf evlist: Explicititely initialize input_name   ...
d | python |  | 1 items |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1327955903 |  | perf python: Use attr.watermark in twatch.py  We want to be woken up for every PERF_RECORD_ event, attr.wakeup_events is only for PERF_RECORD_SAMPLE, so also use attr.watermark = 1 to fix that.  Suggested-by: Peter Zijlstra <peterz@infradead.org> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-v3lnpwgrr8mllcr3ntduuqvc@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-probe.c | s | 12K | 423 | Srikar Dronamraju | srikar@linux.vnet.ibm.com | 1336755533 |  | perf probe: Detect probe target when m/x options are absent  Options -m and -x explicitly allow tracing of modules / user space binaries. In absense of these options, check if the first argument can be used as a target.  perf probe /bin/zsh zfree is equivalent to perf probe -x /bin/zsh zfree.  Suggested-by: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Anton Arapov <anton@redhat.com> Cc: Christoph Hellwig <hch@infradead.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Jim Keniston <jkenisto@linux.vnet.ibm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Linux-mm <linux-mm@kvack.org> Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Thomas Gleixner <tglx@linutronix.de> Link: http://lkml.kernel.org/r/20120416120925.30661.40409.sendpatchset@srdronam.in.ibm.com Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | bench |  | 11 items |  | Jiri Olsa | jolsa@redhat.com | 1328562857 |  | perf tool: Fix perf stack to non executable on x86_64  By adding following objects:   bench/mem-memset-x86-64-asm.o   bench/mem-memcpy-x86-64-asm.o the x86_64 perf binary ended up with executable stack.  The reason was that above objects are assembler sourced and are missing the GNU-stack note section. In such case the linker assumes that the final binary should not be restricted at all and mark the stack as RWX.  Adding section ".note.GNU-stack" definition to mentioned objects, with all flags disabled, thus omiting those objects from linker stack flags decision.  Reported-at: https://bugzilla.redhat.com/show_bug.cgi?id=783570 Reported-by: Clark Williams <williams@redhat.com> Acked-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1328100848-5630-1-git-send-email-jolsa@redhat.com Signed-off-by: Jiri Olsa <jolsa@redhat.com> [ committer note: Remaining bits after what was already added to perf/urgent ] Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | perf.c | s | 11K | 443 | Arnaldo Carvalho de Melo | acme@redhat.com | 1322482288 |  | perf tools: Simplify debugfs mountpoint handling code  We don't need to have two PATH_MAX char sized arrays holding it, just one in util/debugfs.c will do.  Also rename debugfs_path to tracing_events_path, as it is not the path to debugfs, that is debugfs_mountpoint. Both are now accessible.  This will allow accessing this code in the perf python binding without having to drag in perf.c and util/parse-events.c.  The defaults for these variables are the canonical "/sys/kernel/debug" and "/sys/kernel/debug/tracing/events/", removing the need for simple tools to call debugfs_mount(NULL).  Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-ug9jvtjrsqbluuhqqxpvg30f@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | config |  | 2 items |  | Pekka Enberg | penberg@kernel.org | 1332180809 |  | perf report: Add a simple GTK2-based 'perf report' browser  This patch adds a simple GTK2-based browser to 'perf report' that's based on the TTY-based browser in builtin-report.c.  To launch "perf report" using the new GTK interface just type:    $ perf report --gtk  The interface is somewhat limited in features at the moment:    - No callgraph support    - No KVM guest profiling support    - No color coding for percentages    - No sorting from the UI    - ..and many, many more!  That said, I think this patch a reasonable start to build future features on.  Signed-off-by: Pekka Enberg <penberg@kernel.org> Cc: Colin Walters <walters@verbum.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Paul Mackerras <paulus@samba.org> Cc: Ingo Molnar <mingo@kernel.org> Link: http://lkml.kernel.org/r/alpine.LFD.2.02.1202231952410.6689@tux.localdomain [ committer note: Added #pragma to make gtk no strict prototype problem go   away as suggested by Colin Walters modulo avoiding push/pop ] Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-evlist.c | s | 2.9K | 113 | Arnaldo Carvalho de Melo | acme@redhat.com | 1337820471 |  | perf evlist: Explicititely initialize input_name  It was a global variable, so it was initialized, implicitely, to zero by being placed in the bss.  Now it is just a local variable that is then passed to the __cmd_evlist routine, so it must be explicitely set to NULL.  The problem manifested on a Fedora 17 system, using:   gcc version 4.7.0 20120507 (Red Hat 4.7.0-5) (GCC)  But not on several other systems, by luck.  Reported-by: Ingo Molnar <mingo@kernel.org> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/n/tip-5e8wolcjs3rgd5i6yi995gfh@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-script.c | s | 32K | 1158 | Steven Rostedt | srostedt@redhat.com | 1335353328 |  | perf: Have perf use the new libtraceevent.a library  The event parsing code in perf was originally copied from trace-cmd but never was kept up-to-date with the changes that was done there. The trace-cmd libtraceevent.a code is much more mature than what is currently in perf.  This updates the code to use wrappers to handle the calls to the new event parsing code. The new code requires a handle to be pass around, which removes the global event variables and allows more than one event structure to be read from different files (and different machines).  But perf still has the old global events and the code throughout perf does not yet have a nice way to pass around a handle. A global 'pevent' has been made for perf and the old calls have been created as wrappers to the new event parsing code that uses the global pevent.  With this change, perf can later incorporate the pevent handle into the perf structures and allow more than one file to be read and compared, that contains different events.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@alien8.de> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arun Sharma <asharma@fb.com> Cc: Namhyung Kim <namhyung.kim@lge.com> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
f | builtin-kmem.c | s | 17K | 642 | Steven Rostedt | srostedt@redhat.com | 1335353328 |  | perf: Have perf use the new libtraceevent.a library  The event parsing code in perf was originally copied from trace-cmd but never was kept up-to-date with the changes that was done there. The trace-cmd libtraceevent.a code is much more mature than what is currently in perf.  This updates the code to use wrappers to handle the calls to the new event parsing code. The new code requires a handle to be pass around, which removes the global event variables and allows more than one event structure to be read from different files (and different machines).  But perf still has the old global events and the code throughout perf does not yet have a nice way to pass around a handle. A global 'pevent' has been made for perf and the old calls have been created as wrappers to the new event parsing code that uses the global pevent.  With this change, perf can later incorporate the pevent handle into the perf structures and allow more than one file to be read and compared, that contains different events.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org> Cc: Ingo Molnar <mingo@kernel.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Borislav Petkov <bp@alien8.de> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Arun Sharma <asharma@fb.com> Cc: Namhyung Kim <namhyung.kim@lge.com> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
f | builtin-list.c | s | 1.4K | 53 | Arnaldo Carvalho de Melo | acme@redhat.com | 1297964338 |  | perf list: Allow filtering list of events  The man page has the details, here are some examples:  [root@emilia ~]# perf list *fault*  *:*wait*  List of pre-defined events (to be used in -e):   page-faults OR faults                      [Software event]   minor-faults                               [Software event]   major-faults                               [Software event]   alignment-faults                           [Software event]   emulation-faults                           [Software event]    radeon:radeon_fence_wait_begin             [Tracepoint event]   radeon:radeon_fence_wait_end               [Tracepoint event]   writeback:wbc_writeback_wait               [Tracepoint event]   writeback:wbc_balance_dirty_wait           [Tracepoint event]   writeback:writeback_congestion_wait        [Tracepoint event]   writeback:writeback_wait_iff_congested     [Tracepoint event]   sched:sched_wait_task                      [Tracepoint event]   sched:sched_process_wait                   [Tracepoint event]   sched:sched_stat_wait                      [Tracepoint event]   sched:sched_stat_iowait                    [Tracepoint event]   syscalls:sys_enter_epoll_wait              [Tracepoint event]   syscalls:sys_exit_epoll_wait               [Tracepoint event]   syscalls:sys_enter_epoll_pwait             [Tracepoint event]   syscalls:sys_exit_epoll_pwait              [Tracepoint event]   syscalls:sys_enter_rt_sigtimedwait         [Tracepoint event]   syscalls:sys_exit_rt_sigtimedwait          [Tracepoint event]   syscalls:sys_enter_waitid                  [Tracepoint event]   syscalls:sys_exit_waitid                   [Tracepoint event]   syscalls:sys_enter_wait4                   [Tracepoint event]   syscalls:sys_exit_wait4                    [Tracepoint event]   syscalls:sys_enter_waitpid                 [Tracepoint event]   syscalls:sys_exit_waitpid                  [Tracepoint event] [root@emilia ~]#  Suggested-by: Ingo Molnar <mingo@elte.hu> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Tom Zanussi <tzanussi@gmail.com> LKML-Reference: <new-submission> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-buildid-list.c | s | 2.8K | 94 | Stephane Eranian | eranian@google.com | 1337702634 |  | perf buildid-list: Work better with pipe mode  In order for perf buildid-list to work with pipe-mode files, it needs to process buildids and event attr structs.  $ perf record -o - noploop 2 || ./perf inject -b || perf buildid-list -i - -H noploop for 2 seconds [ perf record: Woken up 1 times to write data ] [ perf record: Captured and wrote 0.084 MB - (~3678 samples) ] 0000000000000000000000000000000000000000 [kernel.kallsyms] 3a0d0629efe74a8da3eeba372cdbd74ad9b8f5d5 /usr/local/bin/noploop  The reason [kernel.kallsyms] shows a 0 build-id comes from the way buildids are injected in the stream.  The buildid for the kernel is provided by a BUILD_ID record. The [kernel.kallsyms] is provided by a MMAP record. There is no clean and obvious way to link the two, unfortunately.  In regular mode, the kernel buildid is generated from reading the ELF image or kallsyms and perf knows to associate [kernel.kallsyms] to it. Later on, when perf processes the [kernel.kallsyms] MMAP record, it will already have a dso for it.  So for now, make sure perf buildid-list shows the buildids for everything but the kernel image.  Signed-off-by: Stephane Eranian <eranian@google.com> Cc: David Ahern <dsahern@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/1337081295-10303-6-git-send-email-eranian@google.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-kvm.c | s | 3.5K | 116 | Joerg Roedel | joerg.roedel@amd.com | 1325872057 |  | perf kvm: Do guest-only counting by default  Make use of exclude_guest and exlude_host in perf-kvm to do only guest-only counting by default.  Cc: Gleb Natapov <gleb@redhat.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Joerg Roedel <joro@8bytes.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Signed-off-by: Gleb Natapov <gleb@redhat.com> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com> [ committer note: Moved perf_{guest,host} & event_attr_init to util.c ] [                 so as not to drag more stuff to the python binding] Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-diff.c | s | 6.6K | 210 | Jiri Olsa | jolsa@redhat.com | 1332439929 |  | perf diff: Fix to work with new hists design  The perf diff command is broken since:   perf hists: Threaded addition and sorting of entries   commit 1980c2ebd7020d82c024b8c4046849b38e78e7da  Several places were broken:   - hists data need to be collected into opened sessions instead     of into events   - session's hists data need to be initialized properly when the     session is created   - hist_entry__pcnt_snprintf: the percentage and displacement     buffer preparation must not use 'ret' because it's used     as a pointer to the final buffer  Signed-off-by: Jiri Olsa <jolsa@redhat.com> Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/20120322133726.GB1601@m.brq.redhat.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | CREDITS | g | 603B |  | Ingo Molnar | mingo@elte.hu | 1245866069 |  | perf_counter tools: Add CREDITS file for Git contributors  Much of perf's libraries comes from the Git project. I noticed that the files (in tools/perf/util/*.[ch] and elsewhere) are quite spartan wrt. credits, so lets add a CREDITS file that includes an (incomplete!) list of main contributors.  Thanks guys, these libraries are really useful. Special thanks go to Johannes Schindelin and Junio C Hamano for coming up with this list.  List-Composed-By: Johannes Schindelin <Johannes.Schindelin@gmx.de> Cc: Junio C Hamano <gitster@pobox.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | builtin-report.c | s | 21K | 655 | Namhyung Kim | namhyung.kim@lge.com | 1338472032 |  | perf callchain: Make callchain cursors TLS  perf top -G has a race on callchain cursor between main thread and display thread. Since the callchain cursors are used locally make them thread-local data would solve the problem.  Signed-off-by: Namhyung Kim <namhyung.kim@lge.com> Reported-by: Sunjin Yang <fan4326@gmail.com> Suggested-by: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Cc: Ingo Molnar <mingo@redhat.com> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Sunjin Yang <fan4326@gmail.com> Link: http://lkml.kernel.org/r/1338443007-24857-1-git-send-email-namhyung.kim@lge.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | MANIFEST | g | 366B |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1338401159 |  | perf tools: Fix make tarballs  The patch series that introduced the top level tools/ makefile and the libtraceevent broke this feature where files needed to build in a detached tarball were not included in the MANIFEST file and thus not included in the tarball.  Fix it by adding the relevant files to the MANIFEST.  Cc: Borislav Petkov <borislav.petkov@amd.com> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jiri Olsa <jolsa@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Steven Rostedt <rostedt@goodmis.org> Link: http://lkml.kernel.org/n/tip-z3mjj74927xvqwhlmu18kj80@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | command-list.txt | g | 814B |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1300198248 |  | perf evlist: New command to list the names of events present in a perf.data file  [root@emilia ~]# perf record -a -e sched:* -e timer:timer* sleep 5 [ perf record: Woken up 1 times to write data ] [ perf record: Captured and wrote 0.172 MB perf.data (~7530 samples) ] [root@emilia ~]# perf evlist sched:sched_kthread_stop sched:sched_kthread_stop_ret sched:sched_wakeup sched:sched_wakeup_new sched:sched_switch sched:sched_migrate_task sched:sched_process_free sched:sched_process_exit sched:sched_wait_task sched:sched_process_wait sched:sched_process_fork sched:sched_stat_wait sched:sched_stat_sleep sched:sched_stat_iowait sched:sched_stat_runtime sched:sched_pi_setprio timer:timer_init timer:timer_start timer:timer_expire_entry timer:timer_expire_exit timer:timer_cancel [root@emilia ~]#  Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Tom Zanussi <tzanussi@gmail.com> LKML-Reference: <new-submission> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-help.c | s | 11K | 389 | Arnaldo Carvalho de Melo | acme@redhat.com | 1274124161 |  | perf options: Type check all the remaining OPT_ variants  OPT_SET_INT was renamed to OPT_SET_UINT since the only use in these tools is to set something that has an enum type, that is builtin compatible with unsigned int.  Several string constifications were done to make OPT_STRING require a const char * type.  Cc: Frédéric Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Stephane Eranian <eranian@google.com> Cc: Tom Zanussi <tzanussi@gmail.com> LKML-Reference: <new-submission> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | builtin-annotate.c | s | 8.2K | 273 | Namhyung Kim | namhyung@gmail.com | 1338303222 |  | perf tools: Convert critical messages to ui__error()  There were places where use ui__warning (or even fprintf) to show critical messages. This patch converts them to ui__error so that the front-end code can implement appropriate behavior.  Signed-off-by: Namhyung Kim <namhyung@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Pekka Enberg <penberg@kernel.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1338265382-6872-3-git-send-email-namhyung@gmail.com Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
d | arch |  | 6 items |  | Arnaldo Carvalho de Melo | acme@redhat.com | 1331739379 |  | perf tools: Use scnprintf where applicable  Several places were expecting that the value returned was the number of characters printed, not what would be printed if there was space.  Fix it by using the scnprintf and vscnprintf variants we inherited from the kernel sources.  Some corner cases where the number of printed characters were not accounted were fixed too.  Reported-by: Anton Blanchard <anton@samba.org> Cc: Anton Blanchard <anton@samba.org> Cc: Eric B Munson <emunson@mgebm.net> Cc: David Ahern <dsahern@gmail.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Stephane Eranian <eranian@google.com> Cc: Yanmin Zhang <yanmin_zhang@linux.intel.com> Cc: stable@kernel.org Link: http://lkml.kernel.org/n/tip-kwxo2eh29cxmd8ilixi2005x@git.kernel.org Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
