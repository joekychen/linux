f | dwarf2.h | s | 253B | 8 | Jan Beulich | jbeulich@suse.com | 1327443932 |  | perf bench: Also allow measuring memset()  This simply clones the respective memcpy() implementation.  Cc: Ingo Molnar <mingo@elte.hu> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Stephane Eranian <eranian@google.com> Link: http://lkml.kernel.org/r/4F16D743020000780006D735@nat28.tlf.novell.com Signed-off-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | cpufeature.h | s | 198B | 5 | Hitoshi Mitake | mitake@dcl.info.waseda.ac.jp | 1290755757 |  | perf bench: Add feature that measures the performance of the arch/x86/lib/memcpy_64.S memcpy routines via 'perf bench mem'  This patch ports arch/x86/lib/memcpy_64.S to perf bench mem memcpy for benchmarking memcpy() in userland with tricky and dirty way.  util/include/asm/cpufeature.h, util/include/asm/dwarf2.h, and util/include/linux/linkage.h are mostly dummy files with small wrappers, so that we are able to include memcpy_64.S unmodified.  Signed-off-by: Hitoshi Mitake <mitake@dcl.info.waseda.ac.jp> Cc: h.mitake@gmail.com Cc: Miao Xie <miaox@cn.fujitsu.com> Cc: Ma Ling <ling.ma@intel.com> Cc: Zhao Yakui <yakui.zhao@intel.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Andi Kleen <andi@firstfloor.org> LKML-Reference: <1290668693-27068-2-git-send-email-mitake@dcl.info.waseda.ac.jp> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | alternative-asm.h | s | 192B | 5 | Ingo Molnar | mingo@elte.hu | 1305745244 |  | perf bench, x86: Add alternatives-asm.h wrapper  perf bench needs this to build the kernel's memcpy routine:  In file included from bench/mem-memcpy-x86-64-asm.S:2:0: bench/../../../arch/x86/lib/memcpy_64.S:7:33: fatal error: asm/alternative-asm.h: No such file or directory  Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Steven Rostedt <rostedt@goodmis.org> Link: http://lkml.kernel.org/n/tip-c5d41xibgullk8h2280q4gv0@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | bug.h | s | 557B | 19 | Arnaldo Carvalho de Melo | acme@redhat.com | 1259077022 |  | perf symbols: Simplify symbol machinery setup  And also express its configuration toggles via a struct.  Now all one has to do is to call symbol__init(NULL) if the defaults are OK, or pass a struct symbol_conf pointer with the desired configuration.  If a tool uses kernel_maps__find_symbol() to look at the kernel and modules mappings for a symbol but didn't call symbol__init() first, that will generate a one time warning too, alerting the subcommand developer that symbol__init() must be called.  Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frédéric Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Paul Mackerras <paulus@samba.org> LKML-Reference: <1259071517-3242-2-git-send-email-acme@infradead.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | system.h | s | 12B | 1 | Arnaldo Carvalho de Melo | acme@redhat.com | 1246480643 |  | perf_counter tools: Share list.h with the kernel  The copy we were using came from another copy I did for the dwarves (pahole) package, that came from the kernel years ago.  The only function that is used by the perf tools and that isn't in the kernel is list_del_range, that I'm leaving in the perf tools only for now.  Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Paul Mackerras <paulus@samba.org> LKML-Reference: <20090701174608.GA5823@ghostprotocols.net> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | unistd_64.h | s | 1.0B | 0 | Ingo Molnar | mingo@elte.hu | 1331739754 |  | perf tools, x86: Build perf on older user-space as well  On ancient systems I get this build failure:    util/../../../arch/x86/include/asm/unistd.h:67:29: error: asm/unistd_64.h: No such file or directory   In file included from util/cache.h:7,                    from builtin-test.c:8:   util/../perf.h: In function ‘sys_perf_event_open’:In file included from util/../perf.h:16   perf.h:170: error: ‘__NR_perf_event_open’ undeclared (first use in this function)  The reason is that this old system does not have the split unistd.h headers yet, from which to pick up the syscall definitions.  Add the syscall numbers to the already existing i386 and x86_64 blocks in perf.h, and also provide empty include file stubs.  With this patch perf builds and works fine on 5 years old user-space as well.  Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Link: http://lkml.kernel.org/n/tip-jctwg64le1w47tuaoeyftsg9@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | unistd_32.h | s | 1.0B | 0 | Ingo Molnar | mingo@elte.hu | 1331739754 |  | perf tools, x86: Build perf on older user-space as well  On ancient systems I get this build failure:    util/../../../arch/x86/include/asm/unistd.h:67:29: error: asm/unistd_64.h: No such file or directory   In file included from util/cache.h:7,                    from builtin-test.c:8:   util/../perf.h: In function ‘sys_perf_event_open’:In file included from util/../perf.h:16   perf.h:170: error: ‘__NR_perf_event_open’ undeclared (first use in this function)  The reason is that this old system does not have the split unistd.h headers yet, from which to pick up the syscall definitions.  Add the syscall numbers to the already existing i386 and x86_64 blocks in perf.h, and also provide empty include file stubs.  With this patch perf builds and works fine on 5 years old user-space as well.  Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Link: http://lkml.kernel.org/n/tip-jctwg64le1w47tuaoeyftsg9@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | hweight.h | s | 175B | 6 | Arnaldo Carvalho de Melo | acme@redhat.com | 1272812444 |  | perf tools: Don't use code surrounded by __KERNEL__  We need to refactor code to be explicitely shared by the kernel and at least the tools/ userspace programs, so, till we do that, copy the bare minimum bitmap/bitops code needed by tools/perf.  Reported-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Frédéric Weisbecker <fweisbec@gmail.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> LKML-Reference: <new-submission> Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
f | byteorder.h | s | 67B | 2 | Frederic Weisbecker | fweisbec@gmail.com | 1256277319 |  | perf tools: Drop asm/types.h wrapper  Wrapping the kernel headers is dangerous when it comes to arch headers. Once we wrap asm/types.h, it will also replace the glibc asm/types.h, not only the kernel one.  This results in build errors on some machines.  Drop this wrapper and do its work from linux/types.h wrapper, also the glibc asm/types.h can already handle most of the type definition it was doing (typedef __u64, __u32, etc...).  Todo: Check the others asm/*.h wrappers to prevent from other conflicts.  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Anton Blanchard <anton@samba.org> LKML-Reference: <1256246604-17156-3-git-send-email-fweisbec@gmail.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | asm-offsets.h | s | 11B | 1 | Frederic Weisbecker | fweisbec@gmail.com | 1255937195 |  | perf tools: Use DECLARE_BITMAP instead of an open-coded array  Use DECLARE_BITMAP instead of an open coded array for our bitmap of featured sections.  This makes the array an unsigned long instead of a u64 but since we use a 256 bits bitmap, the array size shouldn't vary between different boxes.  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Steven Rostedt <rostedt@goodmis.org> LKML-Reference: <1255795038-13751-1-git-send-email-fweisbec@gmail.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | swab.h | s | 11B | 1 | Frederic Weisbecker | fweisbec@gmail.com | 1255937194 |  | perf tools: Use kernel bitmap library  Use the kernel bitmap library for internal perf tools uses.  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Steven Rostedt <rostedt@goodmis.org> LKML-Reference: <1255792354-11304-1-git-send-email-fweisbec@gmail.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | uaccess.h | s | 225B | 10 | Frederic Weisbecker | fweisbec@gmail.com | 1255937194 |  | perf tools: Use kernel bitmap library  Use the kernel bitmap library for internal perf tools uses.  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Arnaldo Carvalho de Melo <acme@redhat.com> Cc: Mike Galbraith <efault@gmx.de> Cc: Paul Mackerras <paulus@samba.org> Cc: Steven Rostedt <rostedt@goodmis.org> LKML-Reference: <1255792354-11304-1-git-send-email-fweisbec@gmail.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
