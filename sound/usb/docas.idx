f | endpoint.h | s | 1.0K | 22 | Daniel Mack | zonque@gmail.com | 1334305463 |  | ALSA: snd-usb: remove old streaming logic  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | debug.h | s | 262B | 11 | Daniel Mack | zonque@gmail.com | 1305711875 |  | ALSA: usb-audio: make hwc_debug a noop in case HW_CONST_DEBUG is not set  Just defining it to nothing is dangerous as it can alter the code execution flow, for example when used in as only function in a conditional code block.  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | format.h | s | 317B | 7 | Daniel Mack | daniel@caiaq.de | 1274946511 |  | ALSA: usb-audio: parse more format descriptors with structs  Signed-off-by: Daniel Mack <daniel@caiaq.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | power.h | s | 375B | 15 | Oliver Neukum | oneukum@suse.de | 1299851969 |  | ALSA: usbaudio: implement USB autosuspend  Devices are autosuspended if no pcm nor midi channel is open Mixer devices may be opened. This way they are active when in use to play or record sound, but can be suspended while users have a mixer application running.  [Small clean-ups using static inline by tiwai]  Signed-off-by: Oliver Neukum <oneukum@suse.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | stream.c | s | 13K | 412 | Takashi Iwai | tiwai@suse.de | 1339138897 |  | ALSA: usb-audio: Fix substream assignments  In 3.5 kernel, the endpoint is assigned dynamically for the substreams, but the PCM assignment still checks the presence of the endpoint pointer.  This ended up in duplicated PCM substream creations at probing time, resulting in kernel warnings like:  WARNING: at fs/proc/generic.c:586 proc_register+0x169/0x1a6() Pid: 1152, comm: modprobe Not tainted 3.5.0-rc1-00110-g71fae7e #2 Call Trace:  [<ffffffff8102a400>] warn_slowpath_common+0x83/0x9c  [<ffffffff8102a4bc>] warn_slowpath_fmt+0x46/0x48  [<ffffffff813829ad>] ? add_preempt_count+0x39/0x3b  [<ffffffff811292f0>] proc_register+0x169/0x1a6  [<ffffffff8112962e>] create_proc_entry+0x74/0x8c  [<ffffffffa018eb63>] snd_info_register+0x3e/0xc3 [snd]  [<ffffffffa01fde2e>] snd_pcm_new_stream+0xb1/0x404 [snd_pcm]  [<ffffffffa024861f>] snd_usb_add_audio_stream+0xd2/0x230 [snd_usb_audio]  [<ffffffffa0241d33>] ? snd_usb_parse_audio_format+0x252/0x34f [snd_usb_audio]  [<ffffffff810d6b17>] ? kmem_cache_alloc_trace+0xab/0xbb  [<ffffffffa0248c29>] snd_usb_parse_audio_interface+0x4ac/0x567 [snd_usb_audio]  [<ffffffffa023f0ff>] snd_usb_create_stream+0xe9/0x125 [snd_usb_audio]  [<ffffffffa023f9b1>] usb_audio_probe+0x62a/0x72c [snd_usb_audio]  .....  This patch fixes the regression by checking the fixed endpoint number for each substream instead of the endpoint pointer.  Reported-and-tested-by: Jamie Heilman <jamie@audible.transient.net> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | usbaudio.h | s | 2.9K | 91 | Daniel Mack | zonque@gmail.com | 1334305422 |  | ALSA: snd-usb: implement new endpoint streaming model  This patch adds a new generic streaming logic for audio over USB.  It defines a model (snd_usb_endpoint) that handles everything that is related to an USB endpoint and its streaming. There are functions to activate and deactivate an endpoint (which call usb_set_interface()), and to start and stop its URBs. It also has function pointers to be called when data was received or is about to be sent, and pointer to a sync slave (another snd_usb_endpoint) that is informed when data has been received.  A snd_usb_endpoint knows about its state and implements a refcounting, so only the first user will actually start the URBs and only the last one to stop it will tear them down again.  With this sort of abstraction, the actual streaming is decoupled from the pcm handling, which makes the "implicit feedback" mechanisms easy to implement.  In order to split changes properly, this patch only adds the new implementation but leaves the old one around, so the the driver doesn't change its behaviour. The switch to actually use the new code is submitted separately.  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | quirks-table.h | s | 66K | 2768 | Clemens Ladisch | clemens@ladisch.de | 1340615484 |  | ALSA: usb-audio: add BOSS GT-100 support  Reported-by: John McFarland <mcfarljm@gmail.com> Tested-by: John McFarland <mcfarljm@gmail.com> Signed-off-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | Makefile | g | 521B |  | Daniel Mack | zonque@gmail.com | 1316012823 |  | ALSA: snd-usb: move code from urb.c to endpoint.c  No code altered at this point, simply preparing for upcoming refactorizations.  Signed-off-by: Daniel Mack <zonque@gmail.com> Acked-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | endpoint.c | s | 30K | 993 | Daniel Mack | zonque@gmail.com | 1335291378 |  | ALSA: snd-usb: fix some typos in endpoint.c documentation  Also be more specific about some details while at it.  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | card.h | s | 5.4K | 125 | Takashi Iwai | tiwai@suse.de | 1339138897 |  | ALSA: usb-audio: Fix substream assignments  In 3.5 kernel, the endpoint is assigned dynamically for the substreams, but the PCM assignment still checks the presence of the endpoint pointer.  This ended up in duplicated PCM substream creations at probing time, resulting in kernel warnings like:  WARNING: at fs/proc/generic.c:586 proc_register+0x169/0x1a6() Pid: 1152, comm: modprobe Not tainted 3.5.0-rc1-00110-g71fae7e #2 Call Trace:  [<ffffffff8102a400>] warn_slowpath_common+0x83/0x9c  [<ffffffff8102a4bc>] warn_slowpath_fmt+0x46/0x48  [<ffffffff813829ad>] ? add_preempt_count+0x39/0x3b  [<ffffffff811292f0>] proc_register+0x169/0x1a6  [<ffffffff8112962e>] create_proc_entry+0x74/0x8c  [<ffffffffa018eb63>] snd_info_register+0x3e/0xc3 [snd]  [<ffffffffa01fde2e>] snd_pcm_new_stream+0xb1/0x404 [snd_pcm]  [<ffffffffa024861f>] snd_usb_add_audio_stream+0xd2/0x230 [snd_usb_audio]  [<ffffffffa0241d33>] ? snd_usb_parse_audio_format+0x252/0x34f [snd_usb_audio]  [<ffffffff810d6b17>] ? kmem_cache_alloc_trace+0xab/0xbb  [<ffffffffa0248c29>] snd_usb_parse_audio_interface+0x4ac/0x567 [snd_usb_audio]  [<ffffffffa023f0ff>] snd_usb_create_stream+0xe9/0x125 [snd_usb_audio]  [<ffffffffa023f9b1>] usb_audio_probe+0x62a/0x72c [snd_usb_audio]  .....  This patch fixes the regression by checking the fixed endpoint number for each substream instead of the endpoint pointer.  Reported-and-tested-by: Jamie Heilman <jamie@audible.transient.net> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | mixer.h | s | 2.0K | 61 | Felix Homann | linuxaudio@showlabor.de | 1335247287 |  | ALSA: usb-audio: Rename and export mixer_vol_tlv  Rename mixer_vol_tlv to snd_usb_mixer_vol_tlv and export it to make it reuseable in mixer_quirks.c.  Signed-off-by: Felix Homann <linuxaudio@showlabor.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | pcm.h | s | 379B | 9 | Pierre-Louis Bossart | pierre-louis.bossart@linux.intel.com | 1315816220 |  | ALSA: usb: refine delay information with USB frame counter  Existing code only updates the audio delay when URBs were submitted/retired. This can introduce an uncertainty of 8ms on the number of samples played out with the default settings, and a lot more when URBs convey more packets to reduce the interrupt rate and power consumption.  This patch relies on the USB frame counter to reduce the uncertainty to less than 2ms worst-case. The delay information essentially becomes independent of the URB size and number of packets. This should help applications like PulseAudio which require accurate audio timing. Clemens Ladisch reported a decrease of mplayer's A-V difference from nrpacks down to at most 1ms.  Thanks to Clemens for also pointing out that the implementation of frame counters varies between different HCDs. Only the 8 lowest-bits are used to estimate the delay.  Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com> [clemens: changed debug code] Signed-off-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | proc.c | s | 6.0K | 161 | Daniel Mack | zonque@gmail.com | 1335022828 |  | ALSA: snd-usb: remove refactorization left-overs  Drop some struct members and definitions that became obsolete during the refactorization of the driver.  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | quirks.c | s | 22K | 687 | Xi Wang | xi.wang@gmail.com | 1329314295 |  | ALSA: usb-audio: avoid integer overflow in create_fixed_stream_quirk()  A malicious USB device could feed in a large nr_rates value.  This would cause the subsequent call to kmemdup() to allocate a smaller buffer than expected, leading to out-of-bounds access.  This patch validates the nr_rates value and reuses the limit introduced in commit 4fa0e81b ("ALSA: usb-audio: fix possible hang and overflow in parse_uac2_sample_rate_range()").  Signed-off-by: Xi Wang <xi.wang@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | helper.h | s | 1.1K | 28 | Clemens Ladisch | clemens@ladisch.de | 1317108108 |  | ALSA: usb-audio: increase control transfer timeout  There are certain devices that are reportedly so slow that they need more than 100 ms to handle control transfers.  Therefore, increase the timeout in mixer(_quirks).c to 1000 ms.  The timeout parameter of snd_usb_ctl_msg() is now constant, so we can drop it.  Reported-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | proc.h | s | 211B | 5 | Daniel Mack | daniel@caiaq.de | 1267773434 |  | ALSA: usb-audio: refactor code  Clean up the usb audio driver by factoring out a lot of functions to separate files. Code for procfs, quirks, urbs, format parsers etc all got a new home now.  Moved almost all special quirk handling to quirks.c and introduced new generic functions to handle them, so the exceptions do not pollute the whole driver.  Renamed usbaudio.c to card.c because this is what it actually does now. Renamed usbmidi.c to midi.c for namespace clarity. Removed more things from usbaudio.h.  The non-standard drivers were adopted accordingly.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Cc: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | card.c | s | 19K | 642 | Daniel Mack | zonque@gmail.com | 1334305448 |  | ALSA: snd-usb: switch over to new endpoint streaming logic  With the previous commit that added the new streaming model, all endpoint and streaming related code is now in endpoint.c, and pcm.c only acts as a wrapper for handling the packet's payload.  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | clock.c | s | 9.0K | 261 | Clemens Ladisch | clemens@ladisch.de | 1317108108 |  | ALSA: usb-audio: increase control transfer timeout  There are certain devices that are reportedly so slow that they need more than 100 ms to handle control transfers.  Therefore, increase the timeout in mixer(_quirks).c to 1000 ms.  The timeout parameter of snd_usb_ctl_msg() is now constant, so we can drop it.  Reported-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
d | misc |  | 2 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1326384030 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (526 commits)   ASoC: twl6040 - Add method to query optimum PDM_DL1 gain   ALSA: hda - Fix the lost power-setup of seconary pins after PM resume   ALSA: usb-audio: add Yamaha MOX6/MOX8 support   ALSA: virtuoso: add S/PDIF input support for all Xonars   ALSA: ice1724 - Support for ooAoo SQ210a   ALSA: ice1724 - Allow card info based on model only   ALSA: ice1724 - Create capture pcm only for ADC-enabled configurations   ALSA: hdspm - Provide unique driver id based on card serial   ASoC: Dynamically allocate the rtd device for a non-empty release()   ASoC: Fix recursive dependency due to select ATMEL_SSC in SND_ATMEL_SOC_SSC   ALSA: hda - Fix the detection of "Loopback Mixing" control for VIA codecs   ALSA: hda - Return the error from get_wcaps_type() for invalid NIDs   ALSA: hda - Use auto-parser for HP laptops with cx20459 codec   ALSA: asihpi - Fix potential Oops in snd_asihpi_cmode_info()   ALSA: hdsp - Fix potential Oops in snd_hdsp_info_pref_sync_ref()   ALSA: hda/cirrus - support for iMac12,2 model   ASoC: cx20442: add bias control over a platform provided regulator   ALSA: usb-audio - Avoid flood of frame-active debug messages   ALSA: snd-usb-us122l: Delete calls to preempt_disable   mfd: Put WM8994 into cache only mode when suspending   ...  Fix up trivial conflicts in:  - arch/arm/mach-s3c64xx/mach-crag6410.c: 	renamed speyside_wm8962 to tobermory, added littlemill right 	next to it  - drivers/base/regmap/{regcache.c,regmap.c}: 	duplicate diff that had already come in with other changes in 	the regmap tree
f | clock.h | s | 316B | 7 | Daniel Mack | daniel@caiaq.de | 1277302223 |  | ALSA: usb-audio: simplify control interface access  As the control interface is now carried in struct snd_usb_audio, we can simplify the API a little and also drop the private ctrlif field from struct usb_mixer_interface.  Also remove a left-over function prototype in pcm.h.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | mixer_maps.c | s | 12K | 372 | Oleksij Rempel | bug-track@fisher-privat.net | 1340173748 |  | ALSA: snd_usb_audio: ignore ctrl errors on QuickCam Pro for Notebooks  This webcam works mostly ok, exept with skype. Skype sends lots of ctrl messages to dynamically ajust record level. If for some reasons it pokes some error every thing goes broken: - first pulseaudio blocks sound for all apps - then video is reseted - then skype freez  dmesg has lots of messages like: cannot set freq 16000 to ep 0x86"  Setting ignore_ctl_error=1 fixes this problem.  Signed-off-by: Oleksij Rempel <bug-track@fisher-privat.net> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | mixer.c | s | 62K | 2044 | Takashi Iwai | tiwai@suse.de | 1337063700 |  | ALSA: usb-audio - Call get_min_max_*() after determining the name string  get_min_max_with_quirks() must be called after the control id name string is determined, but the current code changes the id name string after calling the function.  Reported-by: Christian Melki <christian.melki@ericsson.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
d | caiaq |  | 11 items |  | Mark Hills | mark@pogo.org.uk | 1329896098 |  | ALSA: snd-usb-caiaq: Fix the return of XRUN  Commit 3702b08 added a lock, but did not account for the case of SNDRV_PCM_POS_XRUN, which would get immediately overwritten.  This could be bundled into one if-else-if statement, but the goto helps to clarify the 'exceptional' case.  Thanks to Andreas Pape for spotting this.  Signed-off-by: Mark Hills <mark@pogo.org.uk> Acked-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | helper.c | s | 2.8K | 107 | Clemens Ladisch | clemens@ladisch.de | 1317108108 |  | ALSA: usb-audio: increase control transfer timeout  There are certain devices that are reportedly so slow that they need more than 100 ms to handle control transfers.  Therefore, increase the timeout in mixer(_quirks).c to 1000 ms.  The timeout parameter of snd_usb_ctl_msg() is now constant, so we can drop it.  Reported-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
d | usx2y |  | 14 items |  | Masanari Iida | standby24x7@gmail.com | 1329314171 |  | ALSA: usx2y: Fix typo in usbusx2yaudio.c and usx2yhwdeppcm.c  Correct spelling "propably" to "probably" and "activ" to "active" in sound/usb/usx2y/usbusx2yaudio.c and usx2yhwdeppcm.c  Signed-off-by: Masanari Iida <standby24x7@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | format.c | s | 14K | 465 | Xi Wang | xi.wang@gmail.com | 1329314295 |  | ALSA: usb-audio: avoid integer overflow in create_fixed_stream_quirk()  A malicious USB device could feed in a large nr_rates value.  This would cause the subsequent call to kmemdup() to allocate a smaller buffer than expected, leading to out-of-bounds access.  This patch validates the nr_rates value and reuses the limit introduced in commit 4fa0e81b ("ALSA: usb-audio: fix possible hang and overflow in parse_uac2_sample_rate_range()").  Signed-off-by: Xi Wang <xi.wang@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | Kconfig | g | 3.4K |  | Torsten Schenk | torsten.schenk@zoho.com | 1330164439 |  | ALSA: snd-usb-6fire: Select missing SND_VMASTER option in Kconfig  Signed-off-by: Torsten Schenk <torsten.schenk@zoho.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | stream.h | s | 286B | 8 | Daniel Mack | zonque@gmail.com | 1316012822 |  | ALSA: snd-usb: re-order code  Move code from endpoint.c into a new file called stream.c and rename functions so that their names actually reflect what they're doing.  This way, endpoint.c will be available to functions that hold all the endpoint logic.  Signed-off-by: Daniel Mack <zonque@gmail.com> Acked-by: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
d | 6fire |  | 14 items |  | Daniel Mack | zonque@gmail.com | 1340004998 |  | ALSA: 6fire: use NULL instead of 0 for pointer assignment  Signed-off-by: Daniel Mack <zonque@gmail.com> Cc: Torsten Schenk <torsten.schenk@zoho.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | midi.h | s | 1.5K | 35 | Krzysztof Foltman | wdev@foltman.com | 1274454750 |  | ALSA: usb-audio: add support for Akai MPD16  The decoding/encoding is based on own reverse-engineering. Both control and data ports are handled. Writing to control port supports SysEx events only, as this is the only type of messages that MPD16 recognizes.  Signed-off-by: Krzysztof Foltman <wdev@foltman.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | quirks.h | s | 682B | 17 | Daniel Mack | daniel@caiaq.de | 1267773434 |  | ALSA: usb-audio: refactor code  Clean up the usb audio driver by factoring out a lot of functions to separate files. Code for procfs, quirks, urbs, format parsers etc all got a new home now.  Moved almost all special quirk handling to quirks.c and introduced new generic functions to handle them, so the exceptions do not pollute the whole driver.  Renamed usbaudio.c to card.c because this is what it actually does now. Renamed usbmidi.c to midi.c for namespace clarity. Removed more things from usbaudio.h.  The non-standard drivers were adopted accordingly.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Cc: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | mixer_quirks.h | s | 367B | 8 | Daniel Mack | daniel@caiaq.de | 1268392826 |  | ALSA: usb-mixer: factor out quirks  Move all non-standard mixer controls and vendor-specific extensions to a separate file. Some structs need to be exported now.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Cc: Clemens Ladisch <clemens@ladisch.de> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | pcm.c | s | 33K | 1080 | Daniel Mack | zonque@gmail.com | 1340004773 |  | ALSA: snd-usb: make snd_usb_substream_capture_trigger static  Signed-off-by: Daniel Mack <zonque@gmail.com> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | mixer_quirks.c | s | 27K | 929 | Mark Hills | mark@pogo.org.uk | 1336764456 |  | ALSA: usb-audio: Fix comment  Explained by Takashi in <s5hfwbtmz0q.wl%tiwai@suse.de>  > The reason is because get_min_max*() isn't called in the place you > created these controls, and get_min_max() would be called only for > integer volumes later even if uninitialized.  A short cut for booleans.  Signed-off-by: Mark Hills <mark@pogo.org.uk> Signed-off-by: Takashi Iwai <tiwai@suse.de>
f | midi.c | s | 62K | 2026 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103881 |  | sound: Add module.h to the previously silent sound users  Lots of sound drivers were getting module.h via the implicit presence of it in <linux/device.h> but we are going to clean that up.  So fix up those users now.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
