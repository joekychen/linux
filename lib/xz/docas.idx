f | xz_private.h | s | 4.4K | 139 | Lasse Collin | lasse.collin@tukaani.org | 1311526808 |  | XZ: Fix missing <linux/kernel.h> include  <linux/kernel.h> is needed for min_t. The old version happened to work on x86 because <asm/unaligned.h> indirectly includes <linux/kernel.h>, but it didn't work on ARM.  <linux/kernel.h> includes <asm/byteorder.h> so it's not necessary to include it explicitly anymore.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: stable <stable@kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_dec_bcj.c | s | 13K | 489 | Lasse Collin | lasse.collin@tukaani.org | 1316637599 |  | XZ: Fix incorrect XZ_BUF_ERROR  xz_dec_run() could incorrectly return XZ_BUF_ERROR if all of the following was true:   - The caller knows how many bytes of output to expect and only provides    that much output space.   - When the last output bytes are decoded, the caller-provided input    buffer ends right before the LZMA2 end of payload marker.  So LZMA2    won't provide more output anymore, but it won't know it yet and thus    won't return XZ_STREAM_END yet.   - A BCJ filter is in use and it hasn't left any unfiltered bytes in the    temp buffer.  This can happen with any BCJ filter, but in practice    it's more likely with filters other than the x86 BCJ.  This fixes <https://bugzilla.redhat.com/show_bug.cgi?id=735408> where Squashfs thinks that a valid file system is corrupt.  This also fixes a similar bug in single-call mode where the uncompressed size of a block using BCJ + LZMA2 was 0 bytes and caller provided no output space.  Many empty .xz files don't contain any blocks and thus don't trigger this bug.  This also tweaks a closely related detail: xz_dec_bcj_run() could call xz_dec_lzma2_run() to decode into temp buffer when it was known to be useless.  This was harmless although it wasted a minuscule number of CPU cycles.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: stable <stable@kernel.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 178B |  | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_lzma2.h | s | 6.0K | 178 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_dec_syms.c | s | 664B | 22 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_dec_test.c | s | 5.2K | 178 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_stream.h | s | 1.4K | 50 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_dec_stream.c | s | 19K | 673 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_dec_lzma2.c | s | 28K | 974 | Lasse Collin | lasse.collin@tukaani.org | 1304351172 |  | XZ decompressor: Fix decoding of empty LZMA2 streams  The old code considered valid empty LZMA2 streams to be corrupt. Note that a typical empty .xz file has no LZMA2 data at all, and thus most .xz files having no uncompressed data are handled correctly even without this fix.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 1.3K |  | David Rientjes | rientjes@google.com | 1295571725 |  | kconfig: rename CONFIG_EMBEDDED to CONFIG_EXPERT  The meaning of CONFIG_EMBEDDED has long since been obsoleted; the option is used to configure any non-standard kernel with a much larger scope than only small devices.  This patch renames the option to CONFIG_EXPERT in init/Kconfig and fixes references to the option throughout the kernel.  A new CONFIG_EMBEDDED option is added that automatically selects CONFIG_EXPERT when enabled and can be used in the future to isolate options that should only be considered for embedded systems (RISC architectures, SLOB, etc).  Calling the option "EXPERT" more accurately represents its intention: only expert users who understand the impact of the configuration changes they are making should enable it.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Acked-by: David Woodhouse <david.woodhouse@intel.com> Signed-off-by: David Rientjes <rientjes@google.com> Cc: Greg KH <gregkh@suse.de> Cc: "David S. Miller" <davem@davemloft.net> Cc: Jens Axboe <axboe@kernel.dk> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Robin Holt <holt@sgi.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xz_crc32.c | s | 1.2K | 47 | Lasse Collin | lasse.collin@tukaani.org | 1294934604 |  | decompressors: add XZ decompressor module  In userspace, the .lzma format has become mostly a legacy file format that got superseded by the .xz format.  Similarly, LZMA Utils was superseded by XZ Utils.  These patches add support for XZ decompression into the kernel.  Most of the code is as is from XZ Embedded <http://tukaani.org/xz/embedded.html>. It was written for the Linux kernel but is usable in other projects too.  Advantages of XZ over the current LZMA code in the kernel:   - Nice API that can be used by other kernel modules; it's     not limited to kernel, initramfs, and initrd decompression.   - Integrity check support (CRC32)   - BCJ filters improve compression of executable code on     certain architectures. These together with LZMA2 can     produce a few percent smaller kernel or Squashfs images     than plain LZMA without making the decompression slower.  This patch: Add the main decompression code (xz_dec), testing module (xz_dec_test), wrapper script (xz_wrap.sh) for the xz command line tool, and documentation.  The xz_dec module is enough to have a usable XZ decompressor e.g.  for Squashfs.  Signed-off-by: Lasse Collin <lasse.collin@tukaani.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Alain Knaff <alain@knaff.lu> Cc: Albin Tonnerre <albin.tonnerre@free-electrons.com> Cc: Phillip Lougher <phillip@lougher.demon.co.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
