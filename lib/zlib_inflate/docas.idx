f | Makefile | g | 559B |  | David S. Miller | davem@sunset.davemloft.net | 1192166240 |  | [ZLIB]: Fix external builds of zlib_inflate code.  Move zlib_inflate_blob() out into it's own source file, infutil.c, so that things like the powerpc zImage builder in arch/powerpc/boot/Makefile don't end up trying to compile it.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | inftrees.h | s | 2.3K | 52 | Alain Knaff | alain@knaff.lu | 1231113214 |  | bzip2/lzma: library support for gzip, bzip2 and lzma decompression  Impact: Replaces inflate.c with a wrapper around zlib_inflate; new library code  This is the first part of the bzip2/lzma patch  The bzip patch is based on an idea by Christian Ludwig, includes support for compressing the kernel with bzip2 or lzma rather than gzip. Both compressors give smaller sizes than gzip.  Lzma's decompresses faster than bzip2.  It also supports ramdisks and initramfs' compressed using these two compressors.  The functionality has been successfully used for a couple of years by the udpcast project  This version applies to "tip" kernel 2.6.28  This part contains: - changed inflate.c to accomodate rest of patch - implementation of bzip2 compression (not used at this stage yet) - implementation of lzma compression (not used at this stage yet) - Makefile routines to support bzip2 and lzma kernel compression  Signed-off-by: Alain Knaff <alain@knaff.lu> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | inflate_syms.c | s | 447B | 17 | Denys Vlasenko | vda.linux@googlemail.com | 1192060437 |  | [ZLIB]: Move bnx2 driver gzip unpacker into zlib.  Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Acked-by: Michael Chan <mchan@broadcom.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | inffixed.h | s | 6.2K | 91 | Richard Purdie | rpurdie@rpsys.net | 1151013958 |  | [PATCH] zlib_inflate: Upgrade library code to a recent version  Upgrade the zlib_inflate implementation in the kernel from a patched version 1.1.3/4 to a patched 1.2.3.  The code in the kernel is about seven years old and I noticed that the external zlib library's inflate performance was significantly faster (~50%) than the code in the kernel on ARM (and faster again on x86_32).  For comparison the newer deflate code is 20% slower on ARM and 50% slower on x86_32 but gives an approx 1% compression ratio improvement.  I don't consider this to be an improvement for kernel use so have no plans to change the zlib_deflate code.  Various changes have been made to the zlib code in the kernel, the most significant being the extra functions/flush option used by ppp_deflate. This update reimplements the features PPP needs to ensure it continues to work.  This code has been tested on ARM under both JFFS2 (with zlib compression enabled) and ppp_deflate and on x86_32.  JFFS2 sees an approx.  10% real world file read speed improvement.  This patch also removes ZLIB_VERSION as it no longer has a correct value. We don't need version checks anyway as the kernel's module handling will take care of that for us.  This removal is also more in keeping with the zlib author's wishes (http://www.zlib.net/zlib_faq.html#faq24) and I've added something to the zlib.h header to note its a modified version.  Signed-off-by: Richard Purdie <rpurdie@rpsys.net> Acked-by: Joern Engel <joern@wh.fh-wedel.de> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | inflate.h | s | 5.5K | 104 | Alain Knaff | alain@knaff.lu | 1231113214 |  | bzip2/lzma: library support for gzip, bzip2 and lzma decompression  Impact: Replaces inflate.c with a wrapper around zlib_inflate; new library code  This is the first part of the bzip2/lzma patch  The bzip patch is based on an idea by Christian Ludwig, includes support for compressing the kernel with bzip2 or lzma rather than gzip. Both compressors give smaller sizes than gzip.  Lzma's decompresses faster than bzip2.  It also supports ramdisks and initramfs' compressed using these two compressors.  The functionality has been successfully used for a couple of years by the udpcast project  This version applies to "tip" kernel 2.6.28  This part contains: - changed inflate.c to accomodate rest of patch - implementation of bzip2 compression (not used at this stage yet) - implementation of lzma compression (not used at this stage yet) - Makefile routines to support bzip2 and lzma kernel compression  Signed-off-by: Alain Knaff <alain@knaff.lu> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | infutil.c | s | 1.2K | 44 | David S. Miller | davem@sunset.davemloft.net | 1192166240 |  | [ZLIB]: Fix external builds of zlib_inflate code.  Move zlib_inflate_blob() out into it's own source file, infutil.c, so that things like the powerpc zImage builder in arch/powerpc/boot/Makefile don't end up trying to compile it.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | infutil.h | s | 657B | 18 | Richard Purdie | rpurdie@rpsys.net | 1151013958 |  | [PATCH] zlib_inflate: Upgrade library code to a recent version  Upgrade the zlib_inflate implementation in the kernel from a patched version 1.1.3/4 to a patched 1.2.3.  The code in the kernel is about seven years old and I noticed that the external zlib library's inflate performance was significantly faster (~50%) than the code in the kernel on ARM (and faster again on x86_32).  For comparison the newer deflate code is 20% slower on ARM and 50% slower on x86_32 but gives an approx 1% compression ratio improvement.  I don't consider this to be an improvement for kernel use so have no plans to change the zlib_deflate code.  Various changes have been made to the zlib code in the kernel, the most significant being the extra functions/flush option used by ppp_deflate. This update reimplements the features PPP needs to ensure it continues to work.  This code has been tested on ARM under both JFFS2 (with zlib compression enabled) and ppp_deflate and on x86_32.  JFFS2 sees an approx.  10% real world file read speed improvement.  This patch also removes ZLIB_VERSION as it no longer has a correct value. We don't need version checks anyway as the kernel's module handling will take care of that for us.  This removal is also more in keeping with the zlib author's wishes (http://www.zlib.net/zlib_faq.html#faq24) and I've added something to the zlib.h header to note its a modified version.  Signed-off-by: Richard Purdie <rpurdie@rpsys.net> Acked-by: Joern Engel <joern@wh.fh-wedel.de> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | inffast.h | s | 403B | 9 | Richard Purdie | rpurdie@rpsys.net | 1151013958 |  | [PATCH] zlib_inflate: Upgrade library code to a recent version  Upgrade the zlib_inflate implementation in the kernel from a patched version 1.1.3/4 to a patched 1.2.3.  The code in the kernel is about seven years old and I noticed that the external zlib library's inflate performance was significantly faster (~50%) than the code in the kernel on ARM (and faster again on x86_32).  For comparison the newer deflate code is 20% slower on ARM and 50% slower on x86_32 but gives an approx 1% compression ratio improvement.  I don't consider this to be an improvement for kernel use so have no plans to change the zlib_deflate code.  Various changes have been made to the zlib code in the kernel, the most significant being the extra functions/flush option used by ppp_deflate. This update reimplements the features PPP needs to ensure it continues to work.  This code has been tested on ARM under both JFFS2 (with zlib compression enabled) and ppp_deflate and on x86_32.  JFFS2 sees an approx.  10% real world file read speed improvement.  This patch also removes ZLIB_VERSION as it no longer has a correct value. We don't need version checks anyway as the kernel's module handling will take care of that for us.  This removal is also more in keeping with the zlib author's wishes (http://www.zlib.net/zlib_faq.html#faq24) and I've added something to the zlib.h header to note its a modified version.  Signed-off-by: Richard Purdie <rpurdie@rpsys.net> Acked-by: Joern Engel <joern@wh.fh-wedel.de> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | inffast.c | s | 12K | 339 | Joakim Tjernlund | joakim.tjernlund@transmode.se | 1268437964 |  | inflate_fast: sout is already a short so ptr arith was off by one.  inflate_fast() can do either POST INC or PRE INC on its pointers walking the memory to decompress.  Default is PRE INC.  The sout pointer offset was miscalculated in one case as the calculation assumed sout was a char * This breaks inflate_fast() iff configured to do POST INC.  Signed-off-by: Joakim Tjernlund <Joakim.Tjernlund@transmode.se> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | inflate.c | s | 30K | 838 | David S. Miller | davem@sunset.davemloft.net | 1192166240 |  | [ZLIB]: Fix external builds of zlib_inflate code.  Move zlib_inflate_blob() out into it's own source file, infutil.c, so that things like the powerpc zImage builder in arch/powerpc/boot/Makefile don't end up trying to compile it.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | inftrees.c | s | 13K | 282 | Randy Dunlap | rdunlap@xenotime.net | 1151454755 |  | [PATCH] zlib inflate: fix function definitions  Fix function definitions to be ANSI-compliant: lib/zlib_inflate/inffast.c:68:1: warning: non-ANSI definition of function 'inflate_fast' lib/zlib_inflate/inftrees.c:33:1: warning: non-ANSI definition of function 'zlib_inflate_table'  Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
