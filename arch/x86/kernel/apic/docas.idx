f | summit_32.c | s | 17K | 483 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | x2apic_uv_x.c | s | 23K | 741 | Michael S. Tsirkin | mst@redhat.com | 1337327169 |  | x86/apic: Implement EIO micro-optimization  We know both register and value for eoi beforehand, so there's no need to check it and no need to do math to calculate the msr. Saves instructions/branches on each EOI when using x2apic.  I looked at the objdump output to verify that the generated code looks right and actually is shorter.  The real improvemements will be on the KVM guest side though, those come in a later patch.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/e019d1a125316f10d3e3a4b2f6bda41473f4fb72.1337184153.git.mst@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | apic_numachip.c | s | 7.3K | 243 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | Makefile | g | 798B |  | Steffen Persvold | sp@numascale.com | 1323101844 |  | x86: Add NumaChip support  Adds support for Numascale NumaChip large-SMP systems. It is needed to enable the booting of more than ~168 cores.  v2:  - [Steffen] enumerate only accessible northbridges  - [Daniel] rediffed and validated against 3.1-rc10  v3:  - [Daniel] use x86_init core numbering override  - [Daniel] cleanups as per feedback  v4:  - [Daniel] use updated x86_cpuinit override  v5:  - drop disabling interrupts locally, as ISR write is atomic; drop delay  - added read-mostly annotations where appropriate  - require CONFIG_SMP, so drop conditional path  Workload tested on 96 cores/16 sockets.  Signed-off-by: Steffen Persvold <sp@numascale.com> Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com> Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Link: http://lkml.kernel.org/r/1323101246-2400-1-git-send-email-daniel@numascale-asia.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | apic.c | s | 59K | 2129 | Linus Torvalds | torvalds@linux-foundation.org | 1337737091 |  | Merge branch 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull x86/apic changes from Ingo Molnar:  "Most of the changes are about helping virtualized guest kernels   achieve better performance."  Fix up trivial conflicts with the iommu updates to arch/x86/kernel/apic/io_apic.c  * 'x86-apic-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:   x86/apic: Implement EIO micro-optimization   x86/apic: Add apic->eoi_write() callback   x86/apic: Use symbolic APIC_EOI_ACK   x86/apic: Fix typo EIO_ACK -> EOI_ACK and document it   x86/xen/apic: Add missing #include <xen/xen.h>   x86/apic: Only compile local function if used with !CONFIG_GENERIC_PENDING_IRQ   x86/apic: Fix UP boot crash   x86: Conditionally update time when ack-ing pending irqs   xen/apic: implement io apic read with hypercall   Revert "xen/x86: Workaround 'x86/ioapic: Add register level checks to detect bogus io-apic entries'"   xen/x86: Implement x86_apic_ops   x86/apic: Replace io_apic_ops with x86_io_apic_ops.
f | probe_32.c | s | 6.6K | 228 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | bigsmp_32.c | s | 6.5K | 226 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | es7000_32.c | s | 17K | 613 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | io_apic.c | s | 94K | 3283 | Tomoki Sekiyama | tomoki.sekiyama.qu@hitachi.com | 1338977005 |  | x86/ioapic: Fix NULL pointer dereference on CPU hotplug after disabling irqs  In current Linux, percpu variable `vector_irq' is not cleared on offlined cpus while disabling devices' irqs. If the cpu that has the disabled irqs in vector_irq is hotplugged, __setup_vector_irq() hits invalid irq vector and may crash.  This bug can be reproduced as following;    # echo 0 > /sys/devices/system/cpu/cpu7/online   # modprobe -r some_driver_using_interrupts      # vector_irq@cpu7 uncleared   # echo 1 > /sys/devices/system/cpu/cpu7/online  # kernel may crash  This patch fixes this bug by clearing vector_irq in __clear_irq_vector() even if the cpu is offlined.  Signed-off-by: Tomoki Sekiyama <tomoki.sekiyama.qu@hitachi.com> Acked-by: Thomas Gleixner <tglx@linutronix.de> Cc: yrl.pp-manager.tt@hitachi.com Cc: ltc-kernel@ml.yrl.intra.hitachi.co.jp Cc: Suresh Siddha <suresh.b.siddha@intel.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Alexander Gordeev <agordeev@redhat.com> Link: http://lkml.kernel.org/r/4FC340BE.7080101@hitachi.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | numaq_32.c | s | 13K | 452 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | x2apic_cluster.c | s | 6.9K | 222 | Michael S. Tsirkin | mst@redhat.com | 1337327169 |  | x86/apic: Implement EIO micro-optimization  We know both register and value for eoi beforehand, so there's no need to check it and no need to do math to calculate the msr. Saves instructions/branches on each EOI when using x2apic.  I looked at the objdump output to verify that the generated code looks right and actually is shorter.  The real improvemements will be on the KVM guest side though, those come in a later patch.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/e019d1a125316f10d3e3a4b2f6bda41473f4fb72.1337184153.git.mst@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | apic_flat_64.c | s | 10K | 334 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | x2apic_phys.c | s | 4.5K | 149 | Michael S. Tsirkin | mst@redhat.com | 1337327169 |  | x86/apic: Implement EIO micro-optimization  We know both register and value for eoi beforehand, so there's no need to check it and no need to do math to calculate the msr. Saves instructions/branches on each EOI when using x2apic.  I looked at the objdump output to verify that the generated code looks right and actually is shorter.  The real improvemements will be on the KVM guest side though, those come in a later patch.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/e019d1a125316f10d3e3a4b2f6bda41473f4fb72.1337184153.git.mst@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | apic_noop.c | s | 4.6K | 157 | Michael S. Tsirkin | mst@redhat.com | 1337327168 |  | x86/apic: Add apic->eoi_write() callback  Add eoi_write callback so that kvm can override eoi accesses without touching the rest of the apic. As a side-effect, this will enable a micro-optimization for apics using msr.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/0df425d746c49ac2ecc405174df87752869629d2.1337184153.git.mst@redhat.com [ tidied it up a bit ] Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | hw_nmi.c | s | 2.1K | 74 | Don Zickus | dzickus@redhat.com | 1318222617 |  | x86, nmi: Wire up NMI handlers to new routines  Just convert all the files that have an nmi handler to the new routines. Most of it is straight forward conversion.  A couple of places needed some tweaking like kgdb which separates the debug notifier from the nmi handler and mce removes a call to notify_die.  [Thanks to Ying for finding out the history behind that mce call  https://lkml.org/lkml/2010/5/27/114  And Boris responding that he would like to remove that call because of it  https://lkml.org/lkml/2011/9/21/163]  The things that get converted are the registeration/unregistration routines and the nmi handler itself has its args changed along with code removal to check which list it is on (most are on one NMI list except for kgdb which has both an NMI routine and an NMI Unknown routine).  Signed-off-by: Don Zickus <dzickus@redhat.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Acked-by: Corey Minyard <minyard@acm.org> Cc: Jason Wessel <jason.wessel@windriver.com> Cc: Andi Kleen <ak@linux.intel.com> Cc: Robert Richter <robert.richter@amd.com> Cc: Huang Ying <ying.huang@intel.com> Cc: Corey Minyard <minyard@acm.org> Cc: Jack Steiner <steiner@sgi.com> Link: http://lkml.kernel.org/r/1317409584-23662-4-git-send-email-dzickus@redhat.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | ipi.c | s | 3.7K | 139 | Tejun Heo | tj@kernel.org | 1296222845 |  | x86: Always use x86_cpu_to_logical_apicid for cpu -> logical apic id  Currently, cpu -> logical apic id translation is done by apic->cpu_to_logical_apicid() callback which may or may not use x86_cpu_to_logical_apicid.  This is unnecessary as it should always equal logical_smp_processor_id() which is known early during CPU bring up.  Initialize x86_cpu_to_logical_apicid after apic->init_apic_ldr() in setup_local_APIC() and always use x86_cpu_to_logical_apicid for cpu -> logical apic id mapping.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: eric.dumazet@gmail.com Cc: yinghai@kernel.org Cc: brgerst@gmail.com Cc: gorcunov@gmail.com Cc: penberg@kernel.org Cc: shaohui.zheng@intel.com Cc: rientjes@google.com LKML-Reference: <1295789862-25482-6-git-send-email-tj@kernel.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | probe_64.c | s | 1.7K | 69 | Suresh Siddha | suresh.b.siddha@intel.com | 1306057684 |  | x86, apic: Make apic drivers static  Apic probe now looks at the apic drivers listed in the .apicdrivers section. Remove apic_probe[] and make each apic driver static.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Tested-by: Cyrill Gorcunov <gorcunov@openvz.org> Cc: steiner@sgi.com Cc: gorcunov@openvz.org Cc: yinghai@kernel.org Link: http://lkml.kernel.org/r/20110521005526.341718626@sbsiddha-MOBL3.sc.intel.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
