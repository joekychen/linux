f | mce-severity.c | s | 7.5K | 269 | Tony Luck | tony.luck@intel.com | 1337808251 |  | x86/mce: Add instruction recovery signatures to mce-severity table  Instruction recovery cases are very similar to the data recovery one we already have. Just trade out for a new MCACOD value.  Signed-off-by: Tony Luck <tony.luck@intel.com>
f | mce_amd.c | s | 16K | 636 | Borislav Petkov | borislav.petkov@amd.com | 1335784964 |  | x86, MCE, AMD: Hide interrupt_enable sysfs node  Depending on whether the box supports the APIC LVT interrupt for thresholding, we want to show the 'interrupt_enable' sysfs node or not. Make that the case by adding it to the default sysfs attributes only if it is supported.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | mce-apei.c | s | 4.3K | 133 | Chen Gong | gong.chen@linux.intel.com | 1334962925 |  | x86/mce Add validation check before GHES error is recorded  When GHES error record is logged into mcelog kernel buffer, a validation check for physical address is necessary, which prevents reporting an invalid physical address.  [Since physical address is the only useful element in this error record, we drop generating the record completely if we don't have a valid address]  Signed-off-by: Chen Gong <gong.chen@linux.intel.com> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | Makefile | g | 347B |  | Huang Ying | ying.huang@intel.com | 1274323276 |  | ACPI, APEI, Generic Hardware Error Source memory error support  Generic Hardware Error Source provides a way to report platform hardware errors (such as that from chipset). It works in so called "Firmware First" mode, that is, hardware errors are reported to firmware firstly, then reported to Linux by firmware. This way, some non-standard hardware error registers or non-standard hardware link can be checked by firmware to produce more valuable hardware error information for Linux.  Now, only SCI notification type and memory errors are supported. More notification type and hardware error type will be added later. These memory errors are reported to user space through /dev/mcelog via faking a corrected Machine Check, so that the error memory page can be offlined by /sbin/mcelog if the error count for one page is beyond the threshold.  On some machines, Machine Check can not report physical address for some corrected memory errors, but GHES can do that. So this simplified GHES is implemented firstly.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Andi Kleen <ak@linux.intel.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | mce.c | s | 54K | 2033 | Thomas Gleixner | tglx@linutronix.de | 1338975201 |  | x86: mce: Add the dropped timer interval init back  commit 82f7af09 ("x86/mce: Cleanup timer mess) dropped the initialization of the per cpu timer interval. Duh :(  Restore the previous behaviour.  Reported-by: Chen Gong <gong.chen@linux.intel.com> Cc: bp@amd64.org Cc: tony.luck@intel.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | therm_throt.c | s | 13K | 433 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | winchip.c | s | 1016B | 32 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | p5.c | s | 1.6K | 54 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | mce-inject.c | s | 5.9K | 223 | Chen Gong | gong.chen@linux.intel.com | 1324063202 |  | x86: add IRQ context simulation in module mce-inject  mce-inject provides a mechanism to simulate errors so that test scripts can check for correct operation of the kernel without requiring any specialized hardware to create rare events.  The existing code can simulate events in normal process context and also in NMI context - but not in IRQ context. This patch fills that gap.  Link: https://lkml.org/lkml/2011/12/7/537 Signed-off-by: Chen Gong <gong.chen@linux.intel.com> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | mce_intel.c | s | 5.5K | 199 | Thomas Gleixner | tglx@linutronix.de | 1315905129 |  | locking, x86: mce: Annotate cmci_discover_lock as raw  The cmci_discover_lock can be taken in atomic context (cpu bring up sequence) and therefore cannot be preempted on -rt.  In mainline this change documents the low level nature of the lock - otherwise there's no functional difference. Lockdep and Sparse checking will work as usual.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mce-internal.h | s | 1.1K | 46 | Kay Sievers | kay.sievers@vrfy.org | 1324506582 |  | cpu: convert 'cpu' and 'machinecheck' sysdev_class to a regular subsystem  This moves the 'cpu sysdev_class' over to a regular 'cpu' subsystem and converts the devices to regular devices. The sysdev drivers are implemented as subsystem interfaces now.  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Userspace relies on events and generic sysfs subsystem infrastructure from sysdev devices, which are made available with this conversion.  Cc: Haavard Skinnemoen <hskinnemoen@gmail.com> Cc: Hans-Christian Egtvedt <egtvedt@samfundet.no> Cc: Tony Luck <tony.luck@intel.com> Cc: Fenghua Yu <fenghua.yu@intel.com> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Paul Mackerras <paulus@samba.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Borislav Petkov <bp@amd64.org> Cc: Tigran Aivazian <tigran@aivazian.fsnet.co.uk> Cc: Len Brown <lenb@kernel.org> Cc: Zhang Rui <rui.zhang@intel.com> Cc: Dave Jones <davej@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Russell King <rmk+kernel@arm.linux.org.uk> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Arjan van de Ven <arjan@linux.intel.com> Cc: "Rafael J. Wysocki" <rjw@sisk.pl> Cc: "Srivatsa S. Bhat" <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | threshold.c | s | 641B | 25 | Frederic Weisbecker | fweisbec@gmail.com | 1323628298 |  | x86: Call idle notifier after irq_enter()  Interrupts notify the idle exit state before calling irq_enter(). But the notifier code calls rcu_read_lock() and this is not allowed while rcu is in an extended quiescent state. We need to wait for irq_enter() -> rcu_idle_exit() to be called before doing so otherwise this results in a grumpy RCU:  [    0.099991] WARNING: at include/linux/rcupdate.h:194 __atomic_notifier_call_chain+0xd2/0x110() [    0.099991] Hardware name: AMD690VM-FMH [    0.099991] Modules linked in: [    0.099991] Pid: 0, comm: swapper Not tainted 3.0.0-rc6+ #255 [    0.099991] Call Trace: [    0.099991]  <IRQ>  [<ffffffff81051c8a>] warn_slowpath_common+0x7a/0xb0 [    0.099991]  [<ffffffff81051cd5>] warn_slowpath_null+0x15/0x20 [    0.099991]  [<ffffffff817d6fa2>] __atomic_notifier_call_chain+0xd2/0x110 [    0.099991]  [<ffffffff817d6ff1>] atomic_notifier_call_chain+0x11/0x20 [    0.099991]  [<ffffffff81001873>] exit_idle+0x43/0x50 [    0.099991]  [<ffffffff81020439>] smp_apic_timer_interrupt+0x39/0xa0 [    0.099991]  [<ffffffff817da253>] apic_timer_interrupt+0x13/0x20 [    0.099991]  <EOI>  [<ffffffff8100ae67>] ? default_idle+0xa7/0x350 [    0.099991]  [<ffffffff8100ae65>] ? default_idle+0xa5/0x350 [    0.099991]  [<ffffffff8100b19b>] amd_e400_idle+0x8b/0x110 [    0.099991]  [<ffffffff810cb01f>] ? rcu_enter_nohz+0x8f/0x160 [    0.099991]  [<ffffffff810019a0>] cpu_idle+0xb0/0x110 [    0.099991]  [<ffffffff817a7505>] rest_init+0xe5/0x140 [    0.099991]  [<ffffffff817a7468>] ? rest_init+0x48/0x140 [    0.099991]  [<ffffffff81cc5ca3>] start_kernel+0x3d1/0x3dc [    0.099991]  [<ffffffff81cc5321>] x86_64_start_reservations+0x131/0x135 [    0.099991]  [<ffffffff81cc5412>] x86_64_start_kernel+0xed/0xf4  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Cc: Ingo Molnar <mingo@redhat.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Andy Henroid <andrew.d.henroid@intel.com> Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com> Reviewed-by: Josh Triplett <josh@joshtriplett.org>
