f | kvm_para.h | s | 5.5K | 189 | Linus Torvalds | torvalds@linux-foundation.org | 1337901450 |  | Merge branch 'next' of git://git.kernel.org/pub/scm/virt/kvm/kvm  Pull KVM changes from Avi Kivity:  "Changes include additional instruction emulation, page-crossing MMIO,   faster dirty logging, preventing the watchdog from killing a stopped   guest, module autoload, a new MSI ABI, and some minor optimizations   and fixes.  Outside x86 we have a small s390 and a very large ppc   update.    Regarding the new (for kvm) rebaseless workflow, some of the patches   that were merged before we switch trees had to be rebased, while   others are true pulls.  In either case the signoffs should be correct   now."  Fix up trivial conflicts in Documentation/feature-removal-schedule.txt arch/powerpc/kvm/book3s_segment.S and arch/x86/include/asm/kvm_para.h.  I suspect the kvm_para.h resolution ends up doing the "do I have cpuid" check effectively twice (it was done differently in two different commits), but better safe than sorry ;)  * 'next' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (125 commits)   KVM: make asm-generic/kvm_para.h have an ifdef __KERNEL__ block   KVM: s390: onereg for timer related registers   KVM: s390: epoch difference and TOD programmable field   KVM: s390: KVM_GET/SET_ONEREG for s390   KVM: s390: add capability indicating COW support   KVM: Fix mmu_reload() clash with nested vmx event injection   KVM: MMU: Don't use RCU for lockless shadow walking   KVM: VMX: Optimize %ds, %es reload   KVM: VMX: Fix %ds/%es clobber   KVM: x86 emulator: convert bsf/bsr instructions to emulate_2op_SrcV_nobyte()   KVM: VMX: unlike vmcs on fail path   KVM: PPC: Emulator: clean up SPR reads and writes   KVM: PPC: Emulator: clean up instruction parsing   kvm/powerpc: Add new ioctl to retreive server MMU infos   kvm/book3s: Make kernel emulated H_PUT_TCE available for "PR" KVM   KVM: PPC: bookehv: Fix r8/r13 storing in level exception handler   KVM: PPC: Book3S: Enable IRQs during exit handling   KVM: PPC: Fix PR KVM on POWER7 bare metal   KVM: PPC: Fix stbux emulation   KVM: PPC: bookehv: Use lwz/stw instead of PPC_LL/PPC_STL for 32-bit fields   ...
f | io.h | s | 10K | 291 | Linus Torvalds | torvalds@linux-foundation.org | 1312444838 |  | x86: don't include xen/xen.h in <asm/io.h> unless XEN is enabled  Dmitry Kasatkin reports:   "kernel-devel package with kernel headers have no <include/xen>    directory if XEN is disabled.  Modules which inclide asm/io.h won't    compile.     XEN related content is behind the CONFIG_XEN flag in the io.h.  And    <xen/xen.h> should be also behind CONFIG_XEN flag."  So move the include of <xen/xen.h> down into the section that is conditional on CONFIG_XEN.  Reported-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | kmap_types.h | s | 250B | 8 | Randy Dunlap | randy.dunlap@oracle.com | 1245206871 |  | kmap_types: make most arches use generic header file  Convert most arches to use asm-generic/kmap_types.h.  Move the KM_FENCE_ macro additions into asm-generic/kmap_types.h, controlled by __WITH_KM_FENCE from each arch's kmap_types.h file.  Would be nice to be able to add custom KM_types per arch, but I don't yet see a nice, clean way to do that.  Built on x86_64, i386, mips, sparc, alpha(tonyb), powerpc(tonyb), and 68k(tonyb).  Note: avr32 should be able to remove KM_PTE2 (since it's not used) and then just use the generic kmap_types.h file.  Get avr32 maintainer approval.  Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com> Cc: <linux-arch@vger.kernel.org> Acked-by: Mike Frysinger <vapier@gentoo.org> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Bryan Wu <cooloney@kernel.org> Cc: Mikael Starvik <starvik@axis.com> Cc: Hirokazu Takata <takata@linux-m32r.org> Cc: "Luck Tony" <tony.luck@intel.com> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: David Howells <dhowells@redhat.com> Cc: Kyle McMartin <kyle@mcmartin.ca> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | rwlock.h | s | 1.0K | 37 | Jan Beulich | JBeulich@novell.com | 1311231816 |  | x86: Fix write lock scalability 64-bit issue  With the write lock path simply subtracting RW_LOCK_BIAS there is, on large systems, the theoretical possibility of overflowing the 32-bit value that was used so far (namely if 128 or more CPUs manage to do the subtraction, but don't get to do the inverse addition in the failure path quickly enough).  A first measure is to modify RW_LOCK_BIAS itself - with the new value chosen, it is good for up to 2048 CPUs each allowed to nest over 2048 times on the read path without causing an issue. Quite possibly it would even be sufficient to adjust the bias a little further, assuming that allowing for significantly less nesting would suffice.  However, as the original value chosen allowed for even more nesting levels, to support more than 2048 CPUs (possible currently only for 64-bit kernels) the lock itself gets widened to 64 bits.  Signed-off-by: Jan Beulich <jbeulich@novell.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/4E258E0D020000780004E3F0@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | alternative-asm.h | s | 382B | 22 | Eric Dumazet | eric.dumazet@gmail.com | 1325685716 |  | x86: Fix atomic64_xxx_cx8() functions  It appears about all functions in arch/x86/lib/atomic64_cx8_32.S are wrong in case cmpxchg8b must be restarted, because LOCK_PREFIX macro defines a label "1" clashing with other local labels :  1: 	some_instructions 	LOCK_PREFIX 	cmpxchg8b (%ebp) 	jne 1b  / jumps to beginning of LOCK_PREFIX !  A possible fix is to use a magic label "672" in LOCK_PREFIX asm definition, similar to the "671" one we defined in LOCK_PREFIX_HERE.  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Jan Beulich <JBeulich@suse.com> Cc: Christoph Lameter <cl@linux.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/r/1325608540.2320.103.camel@edumazet-HP-Compaq-6005-Pro-SFF-PC Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mpspec_def.h | s | 3.9K | 148 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337295973 |  | MCA: delete all remaining traces of microchannel bus support.  Hardware with MCA bus is limited to 386 and 486 class machines that are now 20+ years old and typically with less than 32MB of memory.  A quick search on the internet, and you see that even the MCA hobbyist/enthusiast community has lost interest in the early 2000 era and never really even moved ahead from the 2.4 kernels to the 2.6 series.  This deletes anything remaining related to CONFIG_MCA from core kernel code and from the x86 architecture.  There is no point in carrying this any further into the future.  One complication to watch for is inadvertently scooping up stuff relating to machine check, since there is overlap in the TLA name space (e.g. arch/x86/boot/mca.c).  Cc: Thomas Gleixner <tglx@linutronix.de> Cc: James Bottomley <JBottomley@Parallels.com> Cc: x86@kernel.org Acked-by: Ingo Molnar <mingo@elte.hu> Acked-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | pci.h | s | 4.5K | 142 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1325887346 |  | x86/PCI: Expand the x86_msi_ops to have a restore MSIs.  The MSI restore function will become a function pointer in an x86_msi_ops struct. It defaults to the implementation in the io_apic.c and msi.c. We piggyback on the indirection mechanism introduced by "x86: Introduce x86_msi_ops".  Cc: x86@kernel.org Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: linux-pci@vger.kernel.org Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | numaq.h | s | 6.1K | 160 | Tejun Heo | tj@kernel.org | 1304338733 |  | x86-32, NUMA: Update numaq to use new NUMA init protocol  Update numaq such that it calls numa_add_memblk() and sets numa_nodes_parsed instead of directly diddling with NUMA states.  The original get_memcfg_numaq() is renamed to numaq_numa_init() and new get_memcfg_numaq() is created in numa_32.c.  The shim numa_add_memblk() implementation handles node_start/end_pfn[] and node_set_online() for nodes with memory.  The new get_memcfg_numaq() exactly the same with get_memcfg_from_srat() other than calling the numaq init function.  Things get_memcfgs_numaq() do are not strictly necessary for numaq but added for consistency and to help unifying NUMA init handling.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | compat.h | s | 5.5K | 220 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | pgtable-2level.h | s | 3.3K | 96 | Johannes Weiner | hannes@cmpxchg.org | 1294968764 |  | thp: add x86 32bit support  Add support for transparent hugepages to x86 32bit.  Share the same VM_ bitflag for VM_MAPPED_COPY.  mm/nommu.c will never support transparent hugepages.  Signed-off-by: Johannes Weiner <hannes@cmpxchg.org> Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Reviewed-by: Rik van Riel <riel@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | genapic.h | s | 22B | 1 | Ingo Molnar | mingo@elte.hu | 1234889563 |  | x86, apic: merge genapic.h into apic.h  Impact: cleanup  Reduce the number of include files to worry about. Also, most of the users of APIC facilities had to include genapic.h already, which embedded apic.h, so the distinction was meaningless.  [ include apic.h from genapic.h for compatibility. ]  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | cputime.h | s | 33B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | cmpxchg_64.h | s | 517B | 19 | Jan Beulich | JBeulich@suse.com | 1325685714 |  | x86: Fix and improve cmpxchg_double{,_local}()  Just like the per-CPU ones they had several problems/shortcomings:  Only the first memory operand was mentioned in the asm() operands, and the 2x64-bit version didn't have a memory clobber while the 2x32-bit one did. The former allowed the compiler to not recognize the need to re-load the data in case it had it cached in some register, while the latter was overly destructive.  The types of the local copies of the old and new values were incorrect (the types of the pointed-to variables should be used here, to make sure the respective old/new variable types are compatible).  The __dummy/__junk variables were pointless, given that local copies of the inputs already existed (and can hence be used for discarded outputs).  The 32-bit variant of cmpxchg_double_local() referenced cmpxchg16b_local().  At once also:   - change the return value type to what it really is: 'bool'  - unify 32- and 64-bit variants  - abstract out the common part of the 'normal' and 'local' variants  Signed-off-by: Jan Beulich <jbeulich@suse.com> Cc: Christoph Lameter <cl@linux.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/r/4F01F12A020000780006A19B@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | pgtable_64.h | s | 4.7K | 147 | Johannes Weiner | hannes@cmpxchg.org | 1294968764 |  | thp: add x86 32bit support  Add support for transparent hugepages to x86 32bit.  Share the same VM_ bitflag for VM_MAPPED_COPY.  mm/nommu.c will never support transparent hugepages.  Signed-off-by: Johannes Weiner <hannes@cmpxchg.org> Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Reviewed-by: Rik van Riel <riel@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sections.h | s | 356B | 10 | Suresh Siddha | suresh.b.siddha@intel.com | 1256017560 |  | x86-64: align RODATA kernel section to 2MB with CONFIG_DEBUG_RODATA  CONFIG_DEBUG_RODATA chops the large pages spanning boundaries of kernel text/rodata/data to small 4KB pages as they are mapped with different attributes (text as RO, RODATA as RO and NX etc).  On x86_64, preserve the large page mappings for kernel text/rodata/data boundaries when CONFIG_DEBUG_RODATA is enabled. This is done by allowing the RODATA section to be hugepage aligned and having same RWX attributes for the 2MB page boundaries  Extra Memory pages padding the sections will be freed during the end of the boot and the kernel identity mappings will have different RWX permissions compared to the kernel text mappings.  Kernel identity mappings to these physical pages will be mapped with smaller pages but large page mappings are still retained for kernel text,rodata,data mappings.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> LKML-Reference: <20091014220254.190119924@sbs-t61.sc.intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | agp.h | s | 1.0K | 25 | David Woodhouse | David.Woodhouse@intel.com | 1249286700 |  | agp: kill phys_to_gart() and gart_to_phys()  There seems to be no reason for these -- they're a 1:1 mapping on all platforms.  Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
f | io_apic.h | s | 5.6K | 188 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1335898209 |  | x86/apic: Replace io_apic_ops with x86_io_apic_ops.  Which makes the code fit within the rest of the x86_ops functions.  Acked-by: Suresh Siddha <suresh.b.siddha@intel.com> [v1: Changed x86_apic -> x86_ioapic per Yinghai Lu <yinghai@kernel.org> suggestion] [v2: Rebased on tip/x86/urgent and redid to match Ingo's syntax style] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | apicdef.h | s | 11K | 387 | Michael S. Tsirkin | mst@redhat.com | 1337327167 |  | x86/apic: Fix typo EIO_ACK -> EOI_ACK and document it  Fix typo in the macro name and document the reason it has this value. Update users.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/37867b31b9330690af2e60a2a7c4cb4b1b070caf.1337184153.git.mst@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | mach_timer.h | s | 1.5K | 43 | Deepak Saxena | dsaxena@linaro.org | 1321930857 |  | time: x86: Remove CLOCK_TICK_RATE from mach_timer.h  CLOCK_TICK_RATE is defined as PIT_TICK_RATE on x86 so we update mach_timers.h to just use the later as we want to depecrate CLOCK_TICK_RATE.  Signed-off-by: Deepak Saxena <dsaxena@linaro.org> Signed-off-by: John Stultz <john.stultz@linaro.org>
f | barrier.h | s | 3.5K | 108 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | pvclock-abi.h | s | 1.3K | 41 | Eric B Munson | emunson@mgebm.net | 1333878537 |  | x86: pvclock: Add flag to indicate that a vm was stopped by the host  This flag will be used to check if the vm was stopped by the host when a soft lockup was detected.  The host will set the flag when it stops the guest.  On resume, the guest will check this flag if a soft lockup is detected and skip issuing the warning.  Signed-off-by: Eric B Munson <emunson@mgebm.net> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | virtext.h | s | 2.7K | 109 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | ist.h | s | 867B | 27 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | edac.h | s | 430B | 14 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | cpu.h | s | 725B | 25 | Borislav Petkov | bp@amd64.org | 1297681708 |  | x86: Fix mwait_usable section mismatch  We use it in non __cpuinit code now too so drop marker.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com> LKML-Reference: <20110211171754.GA21047@aftab> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | irq_regs.h | s | 640B | 23 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | vm86.h | s | 5.4K | 179 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | xor_avx.h | s | 5.3K | 174 | Jim Kukunas | james.t.kukunas@linux.intel.com | 1337658844 |  | raid5: add AVX optimized RAID5 checksumming  Optimize RAID5 xor checksumming by taking advantage of 256-bit YMM registers introduced in AVX.  Signed-off-by: Jim Kukunas <james.t.kukunas@linux.intel.com> Signed-off-by: NeilBrown <neilb@suse.de>
f | atomic64_64.h | s | 5.4K | 217 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1314650652 |  | x86: Use xadd helper more widely  This covers the trivial cases from open-coded xadd to the xadd macros.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Link: http://lkml.kernel.org/r/4E5BCC40.3030501@goop.org Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | checksum_64.h | s | 5.2K | 169 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | delay.h | s | 140B | 5 | Jonas Bonn | jonas@southpole.se | 1311353184 |  | asm-generic: move archictures to common delay.h  This patch moves the in-tree architectures that were using the 'generic' delay.h over to using the header file in asm-generic.  This is not done using the generic-y mechanism as none of these arch's have started using that mechanism yet.  This is a trivial change to make later when the arch begins using generic-y.  Note the subtle change to the avr32 and SH architectures where the argument to __const_udelay was previously using the rounded down constant value instead of the rounded up value.  Signed-off-by: Jonas Bonn <jonas@southpole.se> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Hans-Christian Egtvedt <egtvedt@samfundet.no>
f | mmzone.h | s | 82B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | kvm_emulate.h | s | 13K | 361 | Avi Kivity | avi@redhat.com | 1334619376 |  | KVM: x86 emulator: MMX support  General support for the MMX instruction set.  Special care is taken to trap pending x87 exceptions so that they are properly reflected to the guest.  Signed-off-by: Avi Kivity <avi@redhat.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
d | uv |  | 6 items |  | Cliff Wickman | cpw@sgi.com | 1339148908 |  | x86/uv: Fix UV2 BAU legacy mode  The SGI Altix UV2 BAU (Broadcast Assist Unit) as used for tlb-shootdown (selective broadcast mode) always uses UV2 broadcast descriptor format. There is no need to clear the 'legacy' (UV1) mode, because the hardware always uses UV2 mode for selective broadcast.  But the BIOS uses general broadcast and legacy mode, and the hardware pays attention to the legacy mode bit for general broadcast. So the kernel must not clear that mode bit.  Signed-off-by: Cliff Wickman <cpw@sgi.com> Cc: <stable@kernel.org> Link: http://lkml.kernel.org/r/E1SccoO-0002Lh-Cb@eag09.americas.sgi.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | hw_breakpoint.h | s | 1.9K | 57 | Frederic Weisbecker | fweisbec@gmail.com | 1284686653 |  | x86: Fix instruction breakpoint encoding  Lengths and types of breakpoints are encoded in a half byte into CPU registers. However when we extract these values and store them, we add a high half byte part to them: 0x40 to the length and 0x80 to the type. When that gets reloaded to the CPU registers, the high part is masked.  While making the instruction breakpoints available for perf, I zapped that high part on instruction breakpoint encoding and that broke the arch -> generic translation used by ptrace instruction breakpoints. Writing dr7 to set an inst breakpoint was then failing.  There is no apparent reason for these high parts so we could get rid of them altogether. That's an invasive change though so let's do that later and for now fix the problem by restoring that inst breakpoint high part encoding in this sole patch.  Reported-by: Kelvie Wong <kelvie@ieee.org> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Prasad <prasad@linux.vnet.ibm.com> Cc: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com> Cc: Will Deacon <will.deacon@arm.com>
f | frame.h | s | 582B | 23 | Jan Beulich | JBeulich@novell.com | 1311231811 |  | x86: Unify rwlock assembly implementation  Rather than having two functionally identical implementations for 32- and 64-bit configurations, extend the existing assembly abstractions enough to fold the two rwlock implementations into a shared one.  Signed-off-by: Jan Beulich <jbeulich@novell.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/4E258DD7020000780004E3EA@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | efi.h | s | 4.2K | 98 | Olof Johansson | olof@lixom.net | 1330052091 |  | x86, efi: Allow basic init with mixed 32/64-bit efi/kernel  Traditionally the kernel has refused to setup EFI at all if there's been a mismatch in 32/64-bit mode between EFI and the kernel.  On some platforms that boot natively through EFI (Chrome OS being one), we still need to get at least some of the static data such as memory configuration out of EFI. Runtime services aren't as critical, and it's a significant amount of work to implement switching between the operating modes to call between kernel and firmware for thise cases. So I'm ignoring it for now.  v5: * Fixed some printk strings based on feedback * Renamed 32/64-bit specific types to not have _ prefix * Fixed bug in printout of efi runtime disablement  v4: * Some of the earlier cleanup was accidentally reverted by this patch, fixed. * Reworded some messages to not have to line wrap printk strings  v3: * Reorganized to a series of patches to make it easier to review, and   do some of the cleanups I had left out before.  v2: * Added graceful error handling for 32-bit kernel that gets passed   EFI data above 4GB. * Removed some warnings that were missed in first version.  Signed-off-by: Olof Johansson <olof@lixom.net> Link: http://lkml.kernel.org/r/1329081869-20779-6-git-send-email-olof@lixom.net Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | bios_ebda.h | s | 1.3K | 50 | Mike Waychison | mikew@google.com | 1304111595 |  | x86: Better comments for get_bios_ebda()  Make the comments a bit clearer for get_bios_ebda so that it actually tells us what it is returning.  Signed-off-by: Mike Waychison <mikew@google.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | cacheflush.h | s | 5.7K | 147 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | user_32.h | s | 4.9K | 124 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | traps.h | s | 4.0K | 107 | Kees Cook | keescook@chromium.org | 1331340474 |  | x86: Use enum instead of literals for trap values  The traps are referred to by their numbers and it can be difficult to understand them while reading the code without context. This patch adds enumeration of the trap numbers and replaces the numbers with the correct enum for x86.  Signed-off-by: Kees Cook <keescook@chromium.org> Link: http://lkml.kernel.org/r/20120310000710.GA32667@www.outflux.net Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mutex_64.h | s | 2.9K | 94 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | ipi.h | s | 3.7K | 137 | Tejun Heo | tj@kernel.org | 1296222845 |  | x86: Make default_send_IPI_mask_sequence/allbutself_logical() 32bit only  Both functions are used only in 32bit.  Put them inside CONFIG_X86_32. This is to prepare for logical apicid handling update.  - Cyrill Gorcunov spotted that I forgot to move declarations in ipi.h   under CONFIG_X86_32.  Fixed.  Signed-off-by: Tejun Heo <tj@kernel.org> Reviewed-by: Pekka Enberg <penberg@kernel.org> Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com> Acked-by: Yinghai Lu <yinghai@kernel.org> Cc: eric.dumazet@gmail.com Cc: brgerst@gmail.com Cc: shaohui.zheng@intel.com Cc: rientjes@google.com LKML-Reference: <1295789862-25482-4-git-send-email-tj@kernel.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | sta2x11.h | s | 313B | 9 | Alessandro Rubini | rubini@gnudd.com | 1336570468 |  | mfd: Add driver for STA2X11 MFD block  This also introduces <asm/sta2x11.h> to export a function that is in the base sta2x11 support patches. The header will increase with other prototypes and constants over time.  Signed-off-by: Alessandro Rubini <rubini@gnudd.com> Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com> Cc: Alan Cox <alan@linux.intel.com> Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
f | x86_init.h | s | 6.2K | 187 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1335898209 |  | x86/apic: Replace io_apic_ops with x86_io_apic_ops.  Which makes the code fit within the rest of the x86_ops functions.  Acked-by: Suresh Siddha <suresh.b.siddha@intel.com> [v1: Changed x86_apic -> x86_ioapic per Yinghai Lu <yinghai@kernel.org> suggestion] [v2: Rebased on tip/x86/urgent and redid to match Ingo's syntax style] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | segment.h | s | 7.7K | 227 | H. Peter Anvin | hpa@zytor.com | 1334875365 |  | x86-64: Handle exception table entries during early boot  If we get an exception during early boot, walk the exception table to see if we should intercept it.  The main use case for this is to allow rdmsr_safe()/wrmsr_safe() during CPU initialization.  Since the exception table is currently sorted at runtime, and fairly late in startup, this code walks the exception table linearly.  We obviously don't need to worry about modules, however: none have been loaded at this point.  [ v2: Use early_fixup_exception() instead of linear search ]  Link: http://lkml.kernel.org/r/1334794610-5546-5-git-send-email-hpa@zytor.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | timer.h | s | 2.1K | 68 | Salman Qazi | sqazi@google.com | 1331652471 |  | sched/x86: Fix overflow in cyc2ns_offset  When a machine boots up, the TSC generally gets reset.  However, when kexec is used to boot into a kernel, the TSC value would be carried over from the previous kernel.  The computation of cycns_offset in set_cyc2ns_scale is prone to an overflow, if the machine has been up more than 208 days prior to the kexec.  The overflow happens when we multiply *scale, even though there is enough room to store the final answer.  We fix this issue by decomposing tsc_now into the quotient and remainder of division by CYC2NS_SCALE_FACTOR and then performing the multiplication separately on the two components.  Refactor code to share the calculation with the previous fix in __cycles_2_ns().  Signed-off-by: Salman Qazi <sqazi@google.com> Acked-by: John Stultz <john.stultz@linaro.org> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Paul Turner <pjt@google.com> Cc: john stultz <johnstul@us.ibm.com> Link: http://lkml.kernel.org/r/20120310004027.19291.88460.stgit@dungbeetle.mtv.corp.google.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | alternative.h | s | 6.7K | 173 | Jan Beulich | JBeulich@suse.com | 1327109371 |  | x86: Adjust asm constraints in atomic64 wrappers  Eric pointed out overly restrictive constraints in atomic64_set(), but there are issues throughout the file. In the cited case, %ebx and %ecx are inputs only (don't get changed by either of the two low level implementations). This was also the case elsewhere.  Further in many cases early-clobber indicators were missing.  Finally, the previous implementation rolled a custom alternative instruction macro from scratch, rather than using alternative_call() (which was introduced with the commit that the description of the change in question actually refers to). Adjusting has the benefit of not hiding referenced symbols from the compiler, which however requires them to be declared not just in the exporting source file (which, as a desirable side effect, in turn allows that exporting file to become a real 5-line stub).  This patch does not eliminate the overly restrictive memory clobbers, however: Doing so would occasionally make the compiler set up a second register for accessing the memory object (to satisfy the added "m" constraint), and it's not clear which of the two non-optimal alternatives is better.  v2: Re-do the declaration and exporting of the internal symbols.  Reported-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: Jan Beulich <jbeulich@suse.com> Link: http://lkml.kernel.org/r/4F19A2A5020000780006E0D9@nat28.tlf.novell.com Cc: Luca Barbieri <luca@luca-barbieri.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | iomap.h | s | 1.2K | 34 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1288137128 |  | mm: stack based kmap_atomic()  Keep the current interface but ignore the KM_type and use a stack based approach.  The advantage is that we get rid of crappy code like:  	#define __KM_PTE			\ 		(in_nmi() ? KM_NMI_PTE : 	\ 		 in_irq() ? KM_IRQ_PTE :	\ 		 KM_PTE0)  and in general can stop worrying about what context we're in and what kmap slots might be appropriate for that.  The downside is that FRV kmap_atomic() gets more expensive.  For now we use a CPP trick suggested by Andrew:    #define kmap_atomic(page, args...) __kmap_atomic(page)  to avoid having to touch all kmap_atomic() users in a single patch.  [ not compiled on:   - mn10300: the arch doesn't actually build with highmem to begin with ]  [akpm@linux-foundation.org: coding-style fixes] [akpm@linux-foundation.org: fix up drivers/gpu/drm/i915/intel_overlay.c] Acked-by: Rik van Riel <riel@redhat.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Acked-by: Chris Metcalf <cmetcalf@tilera.com> Cc: David Howells <dhowells@redhat.com> Cc: Hugh Dickins <hughd@google.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Russell King <rmk@arm.linux.org.uk> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: David Miller <davem@davemloft.net> Cc: Paul Mackerras <paulus@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Dave Airlie <airlied@linux.ie> Cc: Li Zefan <lizf@cn.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | current.h | s | 404B | 14 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | reboot_fixups.h | s | 144B | 4 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
d | numachip |  | 1 items |  | Steffen Persvold | sp@numascale.com | 1323101844 |  | x86: Add NumaChip support  Adds support for Numascale NumaChip large-SMP systems. It is needed to enable the booting of more than ~168 cores.  v2:  - [Steffen] enumerate only accessible northbridges  - [Daniel] rediffed and validated against 3.1-rc10  v3:  - [Daniel] use x86_init core numbering override  - [Daniel] cleanups as per feedback  v4:  - [Daniel] use updated x86_cpuinit override  v5:  - drop disabling interrupts locally, as ISR write is atomic; drop delay  - added read-mostly annotations where appropriate  - require CONFIG_SMP, so drop conditional path  Workload tested on 96 cores/16 sockets.  Signed-off-by: Steffen Persvold <sp@numascale.com> Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com> Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Link: http://lkml.kernel.org/r/1323101246-2400-1-git-send-email-daniel@numascale-asia.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | stacktrace.h | s | 2.7K | 93 | Richard Weinberger | richard@nod.at | 1305207088 |  | x86: Remove warning and warning_symbol from struct stacktrace_ops  Both warning and warning_symbol are nowhere used. Let's get rid of them.  Signed-off-by: Richard Weinberger <richard@nod.at> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Huang Ying <ying.huang@intel.com> Cc: Soeren Sandmann Pedersen <ssp@redhat.com> Cc: Namhyung Kim <namhyung@gmail.com> Cc: x86 <x86@kernel.org> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Robert Richter <robert.richter@amd.com> Cc: Paul Mundt <lethal@linux-sh.org> Link: http://lkml.kernel.org/r/1305205872-10321-2-git-send-email-richard@nod.at Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
f | geode.h | s | 842B | 30 | Andres Salomon | dilinger@collabora.co.uk | 1260896008 |  | cs5535: drop the Geode-specific MFGPT/GPIO code  With generic modular drivers handling all of this stuff, the geode-specific code can go away.  The cs5535-gpio, cs5535-mfgpt, and cs5535-clockevt drivers now handle this.  Signed-off-by: Andres Salomon <dilinger@collabora.co.uk> Cc: Jordan Crouse <jordan@cosmicpenguin.net> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: john stultz <johnstul@us.ibm.com> Cc: Chris Ball <cjb@laptop.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sync_bitops.h | s | 3.4K | 115 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | user_64.h | s | 5.2K | 129 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
d | xen |  | 10 items |  | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1336419207 |  | Merge branch 'stable/autoballoon.v5.2' into stable/for-linus-3.5  * stable/autoballoon.v5.2:   xen/setup: update VA mapping when releasing memory during setup   xen/setup: Combine the two hypercall functions - since they are quite similar.   xen/setup: Populate freed MFNs from non-RAM E820 entries and gaps to E820 RAM   xen/setup: Only print "Freeing XXX-YYY pfn range: Z pages freed" if Z > 0   xen/p2m: An early bootup variant of set_phys_to_machine   xen/p2m: Collapse early_alloc_p2m_middle redundant checks.   xen/p2m: Allow alloc_p2m_middle to call reserve_brk depending on argument   xen/p2m: Move code around to allow for better re-usage.
f | elf.h | s | 10K | 295 | Linus Torvalds | torvalds@linux-foundation.org | 1333069943 |  | Merge branch 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull x32 support for x86-64 from Ingo Molnar:  "This tree introduces the X32 binary format and execution mode for x86:   32-bit data space binaries using 64-bit instructions and 64-bit kernel   syscalls.    This allows applications whose working set fits into a 32 bits address   space to make use of 64-bit instructions while using a 32-bit address   space with shorter pointers, more compressed data structures, etc."  Fix up trivial context conflicts in arch/x86/{Kconfig,vdso/vma.c}  * 'x86-x32-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (71 commits)   x32: Fix alignment fail in struct compat_siginfo   x32: Fix stupid ia32/x32 inversion in the siginfo format   x32: Add ptrace for x32   x32: Switch to a 64-bit clock_t   x32: Provide separate is_ia32_task() and is_x32_task() predicates   x86, mtrr: Use explicit sizing and padding for the 64-bit ioctls   x86/x32: Fix the binutils auto-detect   x32: Warn and disable rather than error if binutils too old   x32: Only clear TIF_X32 flag once   x32: Make sure TS_COMPAT is cleared for x32 tasks   fs: Remove missed ->fds_bits from cessation use of fd_set structs internally   fs: Fix close_on_exec pointer in alloc_fdtable   x32: Drop non-__vdso weak symbols from the x32 VDSO   x32: Fix coding style violations in the x32 VDSO code   x32: Add x32 VDSO support   x32: Allow x32 to be configured   x32: If configured, add x32 system calls to system call tables   x32: Handle process creation   x32: Signal-related system calls   x86: Add #ifdef CONFIG_COMPAT to <asm/sys_ia32.h>   ...
f | local64.h | s | 33B | 1 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1276074756 |  | arch: Implement local64_t  On 64bit, local_t is of size long, and thus we make local64_t an alias. On 32bit, we fall back to atomic64_t. (architecture can provide optimized 32-bit version)  (This new facility is to be used by perf events optimizations.)  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: linux-arch@vger.kernel.org Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> LKML-Reference: <new-submission> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | seccomp.h | s | 84B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | numa_32.h | s | 217B | 10 | Tejun Heo | tj@kernel.org | 1304338733 |  | x86, NUMA: Move NUMA init logic from numa_64.c to numa.c  Move the generic 64bit NUMA init machinery from numa_64.c to numa.c.  * node_data[], numa_mem_info and numa_distance * numa_add_memblk[_to](), numa_remove_memblk[_from]() * numa_set_distance() and friends * numa_init() and all the numa_meminfo handling helpers called from it * dummy_numa_init() * memory_add_physaddr_to_nid()  A new function x86_numa_init() is added and the content of numa_64.c::initmem_init() is moved into it.  initmem_init() now simply calls x86_numa_init().  Constants and numa_off declaration are moved from numa_{32||64}.h to numa.h.  This is code reorganization and doesn't involve any functional change.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | hypervisor.h | s | 1.7K | 52 | Sheng Yang | sheng@linux.intel.com | 1294412630 |  | xen: HVM X2APIC support  This patch is similiar to Gleb Natapov's patch for KVM, which enable the hypervisor to emulate x2apic feature for the guest. By this way, the emulation of lapic would be simpler with x2apic interface(MSR), and faster.  [v2: Re-organized 'xen_hvm_need_lapic' per Ian Campbell suggestion]  Acked-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Sheng Yang <sheng@linux.intel.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | kmemcheck.h | s | 847B | 33 | Vegard Nossum | vegard.nossum@gmail.com | 1244900250 |  | kmemcheck: add the kmemcheck core  General description: kmemcheck is a patch to the linux kernel that detects use of uninitialized memory. It does this by trapping every read and write to memory that was allocated dynamically (e.g. using kmalloc()). If a memory address is read that has not previously been written to, a message is printed to the kernel log.  Thanks to Andi Kleen for the set_memory_4k() solution.  Andrew Morton suggested documenting the shadow member of struct page.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>  [export kmemcheck_mark_initialized] [build fix for setup_max_cpus] Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | xcr.h | s | 1.1K | 38 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | cpufeature.h | s | 18K | 363 | H. Peter Anvin | hpa@linux.intel.com | 1340640075 |  | x86, cpufeature: Rename X86_FEATURE_DTS to X86_FEATURE_DTHERM  It makes sense to label "Digital Thermal Sensor" as "DTS", but unfortunately the string "dts" was already used for "Debug Store", and /proc/cpuinfo is a user space ABI.  Therefore, rename this to "dtherm".  This conflict went into mainline via the hwmon tree without any x86 maintainer ack, and without any kind of hint in the subject.      a4659053 x86/hwmon: fix initialization of coretemp  Reported-by: Jean Delvare <khali@linux-fr.org> Link: http://lkml.kernel.org/r/4FE34BCB.5050305@linux.intel.com Cc: Jan Beulich <JBeulich@suse.com> Cc: <stable@vger.kernel.org> v2.6.36..v3.4 Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | amd_nb.h | s | 1.5K | 55 | Bjorn Helgaas | bhelgaas@google.com | 1325880679 |  | x86/PCI: amd: factor out MMCONFIG discovery  This factors out the AMD native MMCONFIG discovery so we can use it outside amd_bus.c.  amd_bus.c reads AMD MSRs so it can remove the MMCONFIG area from the PCI resources.  We may also need the MMCONFIG information to work around BIOS defects in the ACPI MCFG table.  Cc: Borislav Petkov <borislav.petkov@amd.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: stable@kernel.org       # 2.6.34+ Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | dwarf2.h | s | 3.4K | 124 | Jan Beulich | JBeulich@suse.com | 1317229492 |  | x86-64: Fix CFI data for interrupt frames  The patch titled "x86: Don't use frame pointer to save old stack on irq entry" did not properly adjust CFI directives, so this patch is a follow-up to that one.  With the old stack pointer no longer stored in a callee-saved register (plus some offset), we now have to use a CFA expression to describe the memory location where it is being found. This requires the use of .cfi_escape (allowing arbitrary byte streams to be emitted into .eh_frame), as there is no .cfi_def_cfa_expression (which also cannot reasonably be expected, as it would require a full expression parser).  Signed-off-by: Jan Beulich <jbeulich@suse.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Link: http://lkml.kernel.org/r/4E8360200200007800058467@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | tlb.h | s | 317B | 8 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | page_32_types.h | s | 1.5K | 45 | Thomas Gleixner | tglx@linutronix.de | 1336478924 |  | x86: Use common threadinfo allocator  The only difference is the free_thread_info function, which frees xstate.  Use the new arch_release_task_struct() function instead and switch over to the core allocator.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Link: http://lkml.kernel.org/r/20120505150141.559556763@linutronix.de Cc: x86@kernel.org
f | serial.h | s | 1.0K | 25 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | processor-cyrix.h | s | 840B | 33 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | resource.h | s | 34B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | suspend_64.h | s | 1.3K | 44 | Rafael J. Wysocki | rjw@sisk.pl | 1306272955 |  | PM / Hibernate: Remove arch_prepare_suspend()  All architectures supporting hibernation define arch_prepare_suspend() as an empty function, so remove it.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | ucontext.h | s | 339B | 9 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | vdso.h | s | 961B | 28 | Andy Lutomirski | luto@MIT.EDU | 1306241488 |  | x86-64: Clean up vdso/kernel shared variables  Variables that are shared between the vdso and the kernel are currently a bit of a mess.  They are each defined with their own magic, they are accessed differently in the kernel, the vsyscall page, and the vdso, and one of them (vsyscall_clock) doesn't even really exist.  This changes them all to use a common mechanism.  All of them are delcared in vvar.h with a fixed address (validated by the linker script).  In the kernel (as before), they look like ordinary read-write variables.  In the vsyscall page and the vdso, they are accessed through a new macro VVAR, which gives read-only access.  The vdso is now loaded verbatim into memory without any fixups.  As a side bonus, access from the vdso is faster because a level of indirection is removed.  While we're at it, pack jiffies and vgetcpu_mode into the same cacheline.  Signed-off-by: Andy Lutomirski <luto@mit.edu> Cc: Andi Kleen <andi@firstfloor.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Borislav Petkov <bp@amd64.org> Link: http://lkml.kernel.org/r/%3C7357882fbb51fa30491636a7b6528747301b7ee9.1306156808.git.luto%40mit.edu%3E Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | unaligned.h | s | 306B | 10 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mmzone_32.h | s | 1.3K | 47 | Sam Ravnborg | sam@ravnborg.org | 1334406538 |  | x86: Drop obsolete ARCH_BOOTMEM support  x86 unconditionally uses NO_BOOTMEM so there is no use of the HAVE_ARCH_BOOTMEM support as mm/bootmem.c is the only file referencing this symbol.  bootmem_arch_preferred_node() is the function referred in the mm/bootmem.c code and can thuis be dropped too.  x86 was the sole user of HAVE_ARCH_BOOTMEM - so there is an opportunity to clean up a little in mm/bootmem.c too if we do not expect other users to emerge.  Signed-off-by: Sam Ravnborg <sam@ravnborg.org> Cc: Tejun Heo <tj@kernel.org> Link: http://lkml.kernel.org/r/20120406124735.GA6920@merkur.ravnborg.org Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | mpspec.h | s | 4.6K | 134 | Paul Gortmaker | paul.gortmaker@windriver.com | 1337295973 |  | MCA: delete all remaining traces of microchannel bus support.  Hardware with MCA bus is limited to 386 and 486 class machines that are now 20+ years old and typically with less than 32MB of memory.  A quick search on the internet, and you see that even the MCA hobbyist/enthusiast community has lost interest in the early 2000 era and never really even moved ahead from the 2.4 kernels to the 2.6 series.  This deletes anything remaining related to CONFIG_MCA from core kernel code and from the x86 architecture.  There is no point in carrying this any further into the future.  One complication to watch for is inadvertently scooping up stuff relating to machine check, since there is overlap in the TLA name space (e.g. arch/x86/boot/mca.c).  Cc: Thomas Gleixner <tglx@linutronix.de> Cc: James Bottomley <JBottomley@Parallels.com> Cc: x86@kernel.org Acked-by: Ingo Molnar <mingo@elte.hu> Acked-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | numa.h | s | 2.3K | 68 | Tejun Heo | tj@kernel.org | 1304349888 |  | x86, NUMA: Make numa_init_array() static  numa_init_array() no longer has users outside of numa.c.  Make it static.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | ia32_unistd.h | s | 274B | 9 | H. Peter Anvin | hpa@linux.intel.com | 1321565737 |  | x86: Generate system call tables and unistd_*.h from tables  Generate system call tables and unistd_*.h automatically from the tables in arch/x86/syscalls.  All other information, like NR_syscalls, is auto-generated, some of which is in asm-offsets_*.c.  This allows us to keep all the system call information in one place, and allows for kernel space and user space to see different information; this is currently used for the ia32 system call numbers when building the 64-bit kernel, but will be used by the x32 ABI in the near future.  This also removes some gratuitious differences between i386, x86-64 and ia32; in particular, now all system call tables are generated with the same mechanism.  Cc: H. J. Lu <hjl.tools@gmail.com> Cc: Sam Ravnborg <sam@ravnborg.org> Cc: Michal Marek <mmarek@suse.cz> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | msr-index.h | s | 16K | 410 | Ingo Molnar | mingo@kernel.org | 1336569743 |  | Merge branch 'perf/x86-ibs' into perf/core
f | calling.h | s | 5.1K | 160 | Borislav Petkov | bp@alien8.de | 1307137133 |  | x86, asm: Flip RESTORE_ARGS arguments logic  ... thus getting rid of the "else" part of the conditional statement in the macro.  No functionality change.  Signed-off-by: Borislav Petkov <bp@alien8.de> Link: http://lkml.kernel.org/r/1306873314-32523-4-git-send-email-bp@alien8.de Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | reboot.h | s | 712B | 22 | Don Zickus | dzickus@redhat.com | 1318222617 |  | x86, nmi: Wire up NMI handlers to new routines  Just convert all the files that have an nmi handler to the new routines. Most of it is straight forward conversion.  A couple of places needed some tweaking like kgdb which separates the debug notifier from the nmi handler and mce removes a call to notify_die.  [Thanks to Ying for finding out the history behind that mce call  https://lkml.org/lkml/2010/5/27/114  And Boris responding that he would like to remove that call because of it  https://lkml.org/lkml/2011/9/21/163]  The things that get converted are the registeration/unregistration routines and the nmi handler itself has its args changed along with code removal to check which list it is on (most are on one NMI list except for kgdb which has both an NMI routine and an NMI Unknown routine).  Signed-off-by: Don Zickus <dzickus@redhat.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Acked-by: Corey Minyard <minyard@acm.org> Cc: Jason Wessel <jason.wessel@windriver.com> Cc: Andi Kleen <ak@linux.intel.com> Cc: Robert Richter <robert.richter@amd.com> Cc: Huang Ying <ying.huang@intel.com> Cc: Corey Minyard <minyard@acm.org> Cc: Jack Steiner <steiner@sgi.com> Link: http://lkml.kernel.org/r/1317409584-23662-4-git-send-email-dzickus@redhat.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mwait.h | s | 361B | 11 | H. Peter Anvin | hpa@linux.intel.com | 1284763000 |  | x86, mwait: Move mwait constants to a common header file  We have MWAIT constants spread across three different .c files, for no good reason.  Move them all into a common header file.  Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Reviewed-by: Arjan van de Ven <arjan@linux.intel.com> Cc: Len Brown <lenb@kernel.org> LKML-Reference: <tip-*@git.kernel.org>
f | termios.h | s | 33B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | page_32.h | s | 1.0K | 40 | Ingo Molnar | mingo@elte.hu | 1234528607 |  | x86 headers: protect page_32.h via __ASSEMBLY__  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | lguest.h | s | 2.7K | 80 | H. Peter Anvin | hpa@zytor.com | 1251240029 |  | Merge commit 'origin/x86/urgent' into x86/asm
f | bitsperlong.h | s | 229B | 9 | Arnd Bergmann | arnd@arndb.de | 1244746934 |  | asm-generic: introduce asm/bitsperlong.h  This provides a reliable way for asm-generic/types.h and other files to find out if it is running on a 32 or 64 bit platform.  We cannot use CONFIG_64BIT for this in headers that are included from user space because CONFIG symbols are not available there. We also cannot do it inside of asm/types.h because some headers need the word size but cannot include types.h.  The solution is to introduce a new header <asm/bitsperlong.h> that defines both __BITS_PER_LONG for user space and BITS_PER_LONG for usage in the kernel. The asm-generic version falls back to 32 bit unless the architecture overrides it, which I did for all 64 bit platforms.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | smp.h | s | 5.5K | 192 | Linus Torvalds | torvalds@linux-foundation.org | 1337733467 |  | Merge branch 'for-3.5' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu  Pull percpu updates from Tejun Heo:  "Contains Alex Shi's three patches to remove percpu_xxx() which overlap   with this_cpu_xxx().  There shouldn't be any functional change."  * 'for-3.5' of git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu:   percpu: remove percpu_xxx() functions   x86: replace percpu_xxx funcs with this_cpu_xxx   net: replace percpu_xxx funcs with this_cpu_xxx or __this_cpu_xxx
f | archrandom.h | s | 2.2K | 61 | H. Peter Anvin | hpa@zytor.com | 1312146139 |  | x86, random: Verify RDRAND functionality and allow it to be disabled  If the CPU declares that RDRAND is available, go through a guranteed reseed sequence, and make sure that it is actually working (producing data.)   If it does not, disable the CPU feature flag.  Allow RDRAND to be disabled on the command line (as opposed to at compile time) for a user who has special requirements with regards to random numbers.  Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: Matt Mackall <mpm@selenic.com> Cc: Herbert Xu <herbert@gondor.apana.org.au> Cc: "Theodore Ts'o" <tytso@mit.edu>
f | ioctls.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | sigcontext32.h | s | 1.6K | 67 | Jaswinder Singh Rajput | jaswinderrajput@gmail.com | 1233341338 |  | headers_check fix: x86, sigcontext32.h  fix the following 'make headers_check' warning:    usr/include/asm/sigcontext32.h:20: found __[us]{8,16,32,64} type without #include <linux/types.h>  Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
f | pvclock.h | s | 1.3K | 52 | Duncan Sands | baldrick@free.fr | 1314704550 |  | KVM: Fix instruction size issue in pvclock scaling  Commit de2d1a524e94 ("KVM: Fix register corruption in pvclock_scale_delta") introduced a mul instruction that may have only a memory operand; the assembler therefore cannot select the correct size:     pvclock.s:229: Error: no instruction mnemonic suffix given and no register operands; can't size instruction  In this example the assembler is:           #APP          mul -48(%rbp) ; shrd $32, %rdx, %rax          #NO_APP  A simple solution is to use mulq.  Signed-off-by: Duncan Sands <baldrick@free.fr> Signed-off-by: Avi Kivity <avi@redhat.com>
f | hpet.h | s | 3.3K | 97 | Thomas Gleixner | tglx@linutronix.de | 1286895217 |  | x86: ioapic/hpet: Convert to new chip functions  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Reviewed-by: Ingo Molnar <mingo@elte.hu>
f | arch_hweight.h | s | 1.4K | 51 | H. Peter Anvin | hpa@linux.intel.com | 1274134636 |  | x86, hweight: Use a 32-bit popcnt for __arch_hweight32()  Use a 32-bit popcnt instruction for __arch_hweight32(), even on x86-64.  Even though the input register will *usually* be zero-extended due to the standard operation of the hardware, it isn't necessarily so if the input value was the result of truncating a 64-bit operation.  Note: the POPCNT32 variant used on x86-64 has a technically unnecessary REX prefix to make it five bytes long, the same as a CALL instruction, therefore avoiding an unnecessary NOP.  Reported-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: Borislav Petkov <borislav.petkov@amd.com> LKML-Reference: <alpine.LFD.2.00.1005171443060.4195@i5.linux-foundation.org>
f | siginfo.h | s | 431B | 13 | H. Peter Anvin | hpa@linux.intel.com | 1335229900 |  | x32, siginfo: Provide proper overrides for x32 siginfo_t  Provide the proper override macros for x32 siginfo_t.  The combination of a special type here and an overall alignment constraint actually ends up with all the types being properly aligned, but the hack is needed to keep the substructures inside siginfo_t from adding padding.  Note: use __attribute__((aligned())) since __aligned() is not exported to user space.  [ v2: fix stray semicolon ]  Reported-by: H.J. Lu <hjl.rools@gmail.com> Cc: Bruce J. Beare <bruce.j.beare@intel.com> Cc: Arnd Bergmann <arnd@arndb.de> Link: http://lkml.kernel.org/r/CAMe9rOqF6Kh6-NK7oP0Fpzkd4SBAWU%2BG53hwBbSD4iA2UzyxuA@mail.gmail.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | dma-mapping.h | s | 4.3K | 135 | Linus Torvalds | torvalds@linux-foundation.org | 1337962739 |  | Merge branch 'for-linus' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping  Pull CMA and ARM DMA-mapping updates from Marek Szyprowski:  "These patches contain two major updates for DMA mapping subsystem   (mainly for ARM architecture).  First one is Contiguous Memory   Allocator (CMA) which makes it possible for device drivers to allocate   big contiguous chunks of memory after the system has booted.    The main difference from the similar frameworks is the fact that CMA   allows to transparently reuse the memory region reserved for the big   chunk allocation as a system memory, so no memory is wasted when no   big chunk is allocated.  Once the alloc request is issued, the   framework migrates system pages to create space for the required big   chunk of physically contiguous memory.    For more information one can refer to nice LWN articles:     - 'A reworked contiguous memory allocator': 		http://lwn.net/Articles/447405/     - 'CMA and ARM': 		http://lwn.net/Articles/450286/     - 'A deep dive into CMA': 		http://lwn.net/Articles/486301/     - and the following thread with the patches and links to all previous      versions: 		https://lkml.org/lkml/2012/4/3/204    The main client for this new framework is ARM DMA-mapping subsystem.    The second part provides a complete redesign in ARM DMA-mapping   subsystem.  The core implementation has been changed to use common   struct dma_map_ops based infrastructure with the recent updates for   new dma attributes merged in v3.4-rc2.  This allows to use more than   one implementation of dma-mapping calls and change/select them on the   struct device basis.  The first client of this new infractructure is   dmabounce implementation which has been completely cut out of the   core, common code.    The last patch of this redesign update introduces a new, experimental   implementation of dma-mapping calls on top of generic IOMMU framework.   This lets ARM sub-platform to transparently use IOMMU for DMA-mapping   calls if one provides required IOMMU hardware.    For more information please refer to the following thread: 		http://www.spinics.net/lists/arm-kernel/msg175729.html    The last patch merges changes from both updates and provides a   resolution for the conflicts which cannot be avoided when patches have   been applied on the same files (mainly arch/arm/mm/dma-mapping.c)."  Acked by Andrew Morton <akpm@linux-foundation.org>:  "Yup, this one please.  It's had much work, plenty of review and I   think even Russell is happy with it."  * 'for-linus' of git://git.linaro.org/people/mszyprowski/linux-dma-mapping: (28 commits)   ARM: dma-mapping: use PMD size for section unmap   cma: fix migration mode   ARM: integrate CMA with DMA-mapping subsystem   X86: integrate CMA with DMA-mapping subsystem   drivers: add Contiguous Memory Allocator   mm: trigger page reclaim in alloc_contig_range() to stabilise watermarks   mm: extract reclaim code from __alloc_pages_direct_reclaim()   mm: Serialize access to min_free_kbytes   mm: page_isolation: MIGRATE_CMA isolation functions added   mm: mmzone: MIGRATE_CMA migration type added   mm: page_alloc: change fallbacks array handling   mm: page_alloc: introduce alloc_contig_range()   mm: compaction: export some of the functions   mm: compaction: introduce isolate_freepages_range()   mm: compaction: introduce map_pages()   mm: compaction: introduce isolate_migratepages_range()   mm: page_alloc: remove trailing whitespace   ARM: dma-mapping: add support for IOMMU mapper   ARM: dma-mapping: use alloc, mmap, free from dma_ops   ARM: dma-mapping: remove redundant code and do the cleanup   ...  Conflicts: 	arch/x86/include/asm/dma-mapping.h
f | kvm_host.h | s | 26K | 813 | Linus Torvalds | torvalds@linux-foundation.org | 1337901450 |  | Merge branch 'next' of git://git.kernel.org/pub/scm/virt/kvm/kvm  Pull KVM changes from Avi Kivity:  "Changes include additional instruction emulation, page-crossing MMIO,   faster dirty logging, preventing the watchdog from killing a stopped   guest, module autoload, a new MSI ABI, and some minor optimizations   and fixes.  Outside x86 we have a small s390 and a very large ppc   update.    Regarding the new (for kvm) rebaseless workflow, some of the patches   that were merged before we switch trees had to be rebased, while   others are true pulls.  In either case the signoffs should be correct   now."  Fix up trivial conflicts in Documentation/feature-removal-schedule.txt arch/powerpc/kvm/book3s_segment.S and arch/x86/include/asm/kvm_para.h.  I suspect the kvm_para.h resolution ends up doing the "do I have cpuid" check effectively twice (it was done differently in two different commits), but better safe than sorry ;)  * 'next' of git://git.kernel.org/pub/scm/virt/kvm/kvm: (125 commits)   KVM: make asm-generic/kvm_para.h have an ifdef __KERNEL__ block   KVM: s390: onereg for timer related registers   KVM: s390: epoch difference and TOD programmable field   KVM: s390: KVM_GET/SET_ONEREG for s390   KVM: s390: add capability indicating COW support   KVM: Fix mmu_reload() clash with nested vmx event injection   KVM: MMU: Don't use RCU for lockless shadow walking   KVM: VMX: Optimize %ds, %es reload   KVM: VMX: Fix %ds/%es clobber   KVM: x86 emulator: convert bsf/bsr instructions to emulate_2op_SrcV_nobyte()   KVM: VMX: unlike vmcs on fail path   KVM: PPC: Emulator: clean up SPR reads and writes   KVM: PPC: Emulator: clean up instruction parsing   kvm/powerpc: Add new ioctl to retreive server MMU infos   kvm/book3s: Make kernel emulated H_PUT_TCE available for "PR" KVM   KVM: PPC: bookehv: Fix r8/r13 storing in level exception handler   KVM: PPC: Book3S: Enable IRQs during exit handling   KVM: PPC: Fix PR KVM on POWER7 bare metal   KVM: PPC: Fix stbux emulation   KVM: PPC: bookehv: Use lwz/stw instead of PPC_LL/PPC_STL for 32-bit fields   ...
f | smpboot_hooks.h | s | 1.5K | 59 | Jan Beulich | JBeulich@novell.com | 1311232859 |  | x86: Serialize SMP bootup CMOS accesses on rtc_lock  With CPU hotplug, there is a theoretical race between other CMOS (namely RTC) accesses and those done in the SMP secondary processor bringup path.  I am unware of the problem having been noticed by anyone in practice, but it would very likely be rather spurious and very hard to reproduce. So to be on the safe side, acquire rtc_lock around those accesses.  Signed-off-by: Jan Beulich <jbeulich@novell.com> Cc: John Stultz <john.stultz@linaro.org> Link: http://lkml.kernel.org/r/4E257AE7020000780004E2FF@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | proto.h | s | 509B | 16 | Yinghai Lu | yinghai@kernel.org | 1265996559 |  | Move round_up/down to kernel.h  ... in preparation of moving early_res to kernel/.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <1265793639-15071-26-git-send-email-yinghai@kernel.org> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | i387.h | s | 1.9K | 65 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | prom.h | s | 1.2K | 40 | Grant Likely | grant.likely@secretlab.ca | 1330033067 |  | irq_domain/x86: Convert x86 (embedded) to use common irq_domain  This patch removes the x86-specific definition of irq_domain and replaces it with the common implementation.  Signed-off-by: Grant Likely <grant.likely@secretlab.ca> Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Cc: Rob Herring <rob.herring@calxeda.com> Cc: Thomas Gleixner <tglx@linutronix.de>
f | tce.h | s | 1.7K | 41 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | a.out-core.h | s | 1.9K | 57 | Frederic Weisbecker | fweisbec@gmail.com | 1257848585 |  | hw-breakpoints: Fix broken a.out format dump  Fix the broken a.out format dump. For now we only dump the ptrace breakpoints.  TODO: Dump every perf breakpoints for the current thread, not only ptrace based ones.  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: "K. Prasad" <prasad@linux.vnet.ibm.com>
f | hw_irq.h | s | 5.1K | 155 | Suresh Siddha | suresh.b.siddha@intel.com | 1316593323 |  | iommu: Rename the DMAR and INTR_REMAP config options  Change the CONFIG_DMAR to CONFIG_INTEL_IOMMU to be consistent with the other IOMMU options.  Rename the CONFIG_INTR_REMAP to CONFIG_IRQ_REMAP to match the irq subsystem name.  And define the CONFIG_DMAR_TABLE for the common ACPI DMAR routines shared by both CONFIG_INTEL_IOMMU and CONFIG_IRQ_REMAP.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Cc: yinghai@kernel.org Cc: youquan.song@intel.com Cc: joerg.roedel@amd.com Cc: tony.luck@intel.com Cc: dwmw2@infradead.org Link: http://lkml.kernel.org/r/20110824001456.558630224@sbsiddha-desk.sc.intel.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | kdebug.h | s | 951B | 34 | Jan Beulich | JBeulich@suse.com | 1336556682 |  | x86: Avoid double stack traces with show_regs()  What was called show_registers() so far already showed a stack trace for kernel faults, and kernel_stack_pointer() isn't even valid to be used for faults from user mode, hence it was pointless for show_regs() to call show_trace() after show_registers().  Simply rename show_registers() to show_regs() and eliminate the old definition.  Signed-off-by: Jan Beulich <jbeulich@suse.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Arjan van de Ven <arjan@linux.intel.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Link: http://lkml.kernel.org/r/4FAA3D3902000078000826E1@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | types.h | s | 113B | 4 | FUJITA Tomonori | fujita.tomonori@lab.ntt.co.jp | 1300934838 |  | remove dma64_addr_t  There is no user now.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Cc: David Miller <davem@davemloft.net> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Matt Turner <mattst88@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bugs.h | s | 268B | 9 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | uprobes.h | s | 1.9K | 50 | Srikar Dronamraju | srikar@linux.vnet.ibm.com | 1331707296 |  | uprobes/core: Handle breakpoint and singlestep exceptions  Uprobes uses exception notifiers to get to know if a thread hit a breakpoint or a singlestep exception.  When a thread hits a uprobe or is singlestepping post a uprobe hit, the uprobe exception notifier sets its TIF_UPROBE bit, which will then be checked on its return to userspace path (do_notify_resume() ->uprobe_notify_resume()), where the consumers handlers are run (in task context) based on the defined filters.  Uprobe hits are thread specific and hence we need to maintain information about if a task hit a uprobe, what uprobe was hit, the slot where the original instruction was copied for xol so that it can be singlestepped with appropriate fixups.  In some cases, special care is needed for instructions that are executed out of line (xol). These are architecture specific artefacts, such as handling RIP relative instructions on x86_64.  Since the instruction at which the uprobe was inserted is executed out of line, architecture specific fixups are added so that the thread continues normal execution in the presence of a uprobe.  Postpone the signals until we execute the probed insn. post_xol() path does a recalc_sigpending() before return to user-mode, this ensures the signal can't be lost.  Uprobes relies on DIE_DEBUG notification to notify if a singlestep is complete.  Adds x86 specific uprobe exception notifiers and appropriate hooks needed to determine a uprobe hit and subsequent post processing.  Add requisite x86 fixups for xol for uprobes. Specific cases needing fixups include relative jumps (x86_64), calls, etc.  Where possible, we check and skip singlestepping the breakpointed instructions. For now we skip single byte as well as few multibyte nop instructions. However this can be extended to other instructions too.  Credits to Oleg Nesterov for suggestions/patches related to signal, breakpoint, singlestep handling code.  Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com> Cc: Jim Keniston <jkenisto@linux.vnet.ibm.com> Cc: Linux-mm <linux-mm@kvack.org> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Christoph Hellwig <hch@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/20120313180011.29771.89027.sendpatchset@srdronam.in.ibm.com [ Performed various cleanliness edits ] Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | page_types.h | s | 1.6K | 43 | David Howells | dhowells@redhat.com | 1332955803 |  | Move all declarations of free_initmem() to linux/mm.h  Move all declarations of free_initmem() to linux/mm.h so that there's only one and it's used by everything.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-c6x-dev@linux-c6x.org cc: microblaze-uclinux@itee.uq.edu.au cc: linux-sh@vger.kernel.org cc: sparclinux@vger.kernel.org cc: x86@kernel.org cc: linux-mm@kvack.org
f | suspend_32.h | s | 596B | 24 | Rafael J. Wysocki | rjw@sisk.pl | 1306272955 |  | PM / Hibernate: Remove arch_prepare_suspend()  All architectures supporting hibernation define arch_prepare_suspend() as an empty function, so remove it.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | xor_64.h | s | 7.9K | 316 | Jim Kukunas | james.t.kukunas@linux.intel.com | 1337658844 |  | raid5: add AVX optimized RAID5 checksumming  Optimize RAID5 xor checksumming by taking advantage of 256-bit YMM registers introduced in AVX.  Signed-off-by: Jim Kukunas <james.t.kukunas@linux.intel.com> Signed-off-by: NeilBrown <neilb@suse.de>
f | uaccess_32.h | s | 6.3K | 198 | Linus Torvalds | torvalds@linux-foundation.org | 1338057234 |  | x86: use the new generic strnlen_user() function  This throws away the old x86-specific functions in favor of the generic optimized version.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bitops.h | s | 13K | 459 | Borislav Petkov | borislav.petkov@amd.com | 1337786202 |  | x86/bitops: Move BIT_64() for a wider use  Needed for shifting 64-bit values on 32-bit, like MSR values, for example.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Frank Arnold <frank.arnold@amd.com> Link: http://lkml.kernel.org/r/1337684026-19740-1-git-send-email-bp@amd64.org Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | dma.h | s | 9.6K | 277 | Tejun Heo | tj@kernel.org | 1304349888 |  | x86, NUMA: Enable emulation on 32bit too  Now that NUMA init path is unified, NUMA emulation can be enabled on 32bit.  Make numa_emluation.c safe on 32bit by doing the followings.  * Define MAX_DMA32_PFN on 32bit too.  * Include bootmem.h for max_pfn declaration.  * Use u64 explicitly and always use PFN_PHYS() when converting page   number to address.  * Avoid __udivdi3() generation on 32bit by doing number of pages   calculation instead in split_nodes_interleave().  And drop X86_64 dependency from Kconfig.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | sparsemem.h | s | 895B | 31 | Rik van Riel | riel@redhat.com | 1241575818 |  | x86: 46 bit physical address support on 64 bits  Extend the maximum addressable memory on x86-64 from 2^44 to 2^46 bytes. This requires some shuffling around of the vmalloc and virtual memmap memory areas, to keep them away from the direct mapping of up to 64TB of physical memory.  This patch also introduces a guard hole between the vmalloc area and the virtual memory map space.  There's really no good reason why we wouldn't have a guard hole there.  [ Impact: future hardware enablement ]  Signed-off-by: Rik van Riel <riel@redhat.com> LKML-Reference: <20090505172856.6820db22@cuia.bos.redhat.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | boot.h | s | 1.2K | 35 | Thomas Gleixner | tglx@linutronix.de | 1336478924 |  | x86: Use common threadinfo allocator  The only difference is the free_thread_info function, which frees xstate.  Use the new arch_release_task_struct() function instead and switch over to the core allocator.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Link: http://lkml.kernel.org/r/20120505150141.559556763@linutronix.de Cc: x86@kernel.org
f | kprobes.h | s | 3.7K | 104 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1268223814 |  | x86: Move MAX_INSN_SIZE into asm/insn.h  Since there's now two users for this, place it in a common header.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Masami Hiramatsu <mhiramat@redhat.com> Cc: paulus@samba.org Cc: eranian@google.com Cc: robert.richter@amd.com Cc: fweisbec@gmail.com LKML-Reference: <20100304140100.923774125@chello.nl> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | probe_roms.h | s | 234B | 7 | Dan Williams | dan.j.williams@intel.com | 1300228455 |  | x86: Introduce pci_map_biosrom()  The isci driver needs to retrieve its preboot OROM image which contains necessary runtime parameters like platform specific sas addresses and phy configuration.  There is no ROM BAR associated with this area, instead we will need to scan legacy expansion ROM space.  1/ Promote the probe_roms_32 implementation to x86-64 2/ Add a facility to find and map an adapter rom by pci device (according to    PCI Firmware Specification Revision 3.0)  Signed-off-by: Dave Jiang <dave.jiang@intel.com> LKML-Reference: <20110308183226.6246.90354.stgit@localhost6.localdomain6> Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | checksum.h | s | 86B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | setup.h | s | 3.1K | 102 | Alan Cox | alan@linux.intel.com | 1324196222 |  | x86/intel config: Revamp configuration to allow for Moorestown and Medfield  This sets all up the other bits that need to be INTEL_MID specific rather than Moorestown specific.  Signed-off-by: Alan Cox <alan@linux.intel.com> Link: http://lkml.kernel.org/r/20111217174318.7207.91543.stgit@bob.linux.org.uk Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | fixmap.h | s | 6.9K | 211 | Alan Cox | alan@linux.intel.com | 1324196222 |  | x86/intel config: Revamp configuration to allow for Moorestown and Medfield  This sets all up the other bits that need to be INTEL_MID specific rather than Moorestown specific.  Signed-off-by: Alan Cox <alan@linux.intel.com> Link: http://lkml.kernel.org/r/20111217174318.7207.91543.stgit@bob.linux.org.uk Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | e820.h | s | 4.5K | 127 | Tejun Heo | tj@kernel.org | 1310669267 |  | x86: Use __memblock_alloc_base() in early_reserve_e820()  early_reserve_e820() implements its own ad-hoc early allocator using memblock_x86_find_in_range_size().  Use __memblock_alloc_base() instead and remove the unnecessary @startt parameter (it's top-down allocation anyway).  Signed-off-by: Tejun Heo <tj@kernel.org> Link: http://lkml.kernel.org/r/1310462166-31469-6-git-send-email-tj@kernel.org Cc: Yinghai Lu <yinghai@kernel.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | errno.h | s | 31B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | ptrace.h | s | 7.2K | 266 | H. Peter Anvin | hpa@zytor.com | 1329771124 |  | x86: Move some signal-handling definitions to a common header  There are some definitions which are duplicated between kernel/signal.c and ia32/ia32_signal.c; move them to a common header file.  Rather than adding stuff to existing header files which contain data structures, create a new header file; hence the slightly odd name ("all the good ones were taken.")  Note: nothing relied on signal_fault() being defined in <asm/ptrace.h>.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | perf_event_p4.h | s | 25K | 744 | Cyrill Gorcunov | gorcunov@gmail.com | 1311273714 |  | x86, perf: P4 PMU - Fix typos in comments and style cleanup  This patch:   - fixes typos in comments and clarifies the text  - renames obscure p4_event_alias::original and ::alter members to    ::original and ::alternative as appropriate  - drops parenthesis from the return of p4_get_alias_event()  No functional changes.  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org> Link: http://lkml.kernel.org/r/20110721160625.GX7492@sun Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mutex_32.h | s | 3.9K | 117 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | ce4100.h | s | 82B | 4 | Sebastian Andrzej Siewior | bigeasy@linutronix.de | 1300112003 |  | x86: ce4100: Set pci ops via callback instead of module init  Setting the pci ops on subsys initcall unconditionally will break multi platform kernels on anything except ce4100.  Use x86_init.pci.init ops to call this only on real ce4100 platforms.  Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Cc: sodaville@linutronix.de LKML-Reference: <20110314093340.GA21026@www.tglx.de> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | intel_scu_ipc.h | s | 2.0K | 53 | Jacob Pan | jacob.jun.pan@linux.intel.com | 1323085331 |  | x86,mrst: Power control commands update  On the Intel MID devices SCU commands are issued to manage power off and the like. We need to issue different ones for non-Lincroft based devices.  Signed-off-by: Alek Du <alek.du@intel.com> Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com> Signed-off-by: Alan Cox <alan@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mmu_context.h | s | 2.2K | 79 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | jump_label.h | s | 749B | 33 | Ingo Molnar | mingo@elte.hu | 1330074359 |  | static keys: Introduce 'struct static_key', static_key_true()/false() and static_key_slow_[inc||dec]()  So here's a boot tested patch on top of Jason's series that does all the cleanups I talked about and turns jump labels into a more intuitive to use facility. It should also address the various misconceptions and confusions that surround jump labels.  Typical usage scenarios:          #include <linux/static_key.h>          struct static_key key = STATIC_KEY_INIT_TRUE;          if (static_key_false(&key))                 do unlikely code         else                 do likely code  Or:          if (static_key_true(&key))                 do likely code         else                 do unlikely code  The static key is modified via:          static_key_slow_inc(&key);         ...         static_key_slow_dec(&key);  The 'slow' prefix makes it abundantly clear that this is an expensive operation.  I've updated all in-kernel code to use this everywhere. Note that I (intentionally) have not pushed through the rename blindly through to the lowest levels: the actual jump-label patching arch facility should be named like that, so we want to decouple jump labels from the static-key facility a bit.  On non-jump-label enabled architectures static keys default to likely()/unlikely() branches.  Signed-off-by: Ingo Molnar <mingo@elte.hu> Acked-by: Jason Baron <jbaron@redhat.com> Acked-by: Steven Rostedt <rostedt@goodmis.org> Cc: a.p.zijlstra@chello.nl Cc: mathieu.desnoyers@efficios.com Cc: davem@davemloft.net Cc: ddaney.cavm@gmail.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/20120222085809.GA26397@elte.hu Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | apb_timer.h | s | 1.4K | 39 | Linus Torvalds | torvalds@linux-foundation.org | 1311442487 |  | Merge branch 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip  * 'timers-clocksource-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:   clocksource: apb: Share APB timer code with other platforms
f | ia32.h | s | 3.8K | 135 | Will Drewry | wad@chromium.org | 1334366001 |  | signal, x86: add SIGSYS info and make it synchronous.  This change enables SIGSYS, defines _sigfields._sigsys, and adds x86 (compat) arch support.  _sigsys defines fields which allow a signal handler to receive the triggering system call number, the relevant AUDIT_ARCH_* value for that number, and the address of the callsite.  SIGSYS is added to the SYNCHRONOUS_MASK because it is desirable for it to have setup_frame() called for it. The goal is to ensure that ucontext_t reflects the machine state from the time-of-syscall and not from another signal handler.  The first consumer of SIGSYS would be seccomp filter.  In particular, a filter program could specify a new return value, SECCOMP_RET_TRAP, which would result in the system call being denied and the calling thread signaled.  This also means that implementing arch-specific support can be dependent upon HAVE_ARCH_SECCOMP_FILTER.  Suggested-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Reviewed-by: H. Peter Anvin <hpa@zytor.com> Acked-by: Eric Paris <eparis@redhat.com>  v18: - added acked by, rebase v17: - rebase and reviewed-by addition v14: - rebase/nochanges v13: - rebase on to 88ebdda6159ffc15699f204c33feb3e431bf9bdc v12: - reworded changelog (oleg@redhat.com) v11: - fix dropped words in the change description      - added fallback copy_siginfo support.      - added __ARCH_SIGSYS define to allow stepped arch support. v10: - first version based on suggestion Signed-off-by: James Morris <james.l.morris@oracle.com>
f | clocksource.h | s | 412B | 12 | H. Peter Anvin | hpa@zytor.com | 1311280445 |  | clocksource: Change __ARCH_HAS_CLOCKSOURCE_DATA to a CONFIG option  The machinery for __ARCH_HAS_CLOCKSOURCE_DATA assumed a file in asm-generic would be the default for architectures without their own file in asm/, but that is not how it works.  Replace it with a Kconfig option instead.  Link: http://lkml.kernel.org/r/4E288AA6.7090804@zytor.com Signed-off-by: H. Peter Anvin <hpa@zytor.com> Cc: Andy Lutomirski <luto@mit.edu> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Tony Luck <tony.luck@intel.com>
f | lguest_hcall.h | s | 2.6K | 68 | Rusty Russell | rusty@rustcorp.com.au | 1311311390 |  | lguest: update comments  Also removes a long-unused #define and an extraneous semicolon.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | string_32.h | s | 7.7K | 297 | Arjan van de Ven | arjan@infradead.org | 1254181395 |  | x86: Use __builtin_memset and __builtin_memcpy for memset/memcpy  GCC provides reasonable memset/memcpy functions itself, with __builtin_memset and __builtin_memcpy. For the "unknown" cases, it'll fall back to our current existing functions, but for fixed size versions it'll inline something smart. Quite often that will be the same as we have now, but sometimes it can do something smarter (for example, if the code then sets the first member of a struct, it can do a shorter memset).  In addition, and this is more important, gcc knows which registers and such are not clobbered (while for our asm version it pretty much acts like a compiler barrier), so for various cases it can avoid reloading values.  The effect on codesize is shown below on my typical laptop .config:     text	   data	    bss	    dec	    hex	filename 5605675	2041100	6525148	14171923	 d83f13	vmlinux.before 5595849	2041668	6525148	14162665	 d81ae9	vmlinux.after  Due to some not-so-good behavior in the gcc 3.x series, this change is only done for GCC 4.x and above.  Signed-off-by: Arjan van de Ven <arjan@linux.intel.com> LKML-Reference: <20090928142122.6fc57e9c@infradead.org> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | ftrace.h | s | 1.2K | 48 | Steven Rostedt | srostedt@redhat.com | 1338520337 |  | ftrace: Synchronize variable setting with breakpoints  When the function tracer starts modifying the code via breakpoints it sets a variable (modifying_ftrace_code) to inform the breakpoint handler to call the ftrace int3 code.  But there's no synchronization between setting this code and the handler, thus it is possible for the handler to be called on another CPU before it sees the variable. This will cause a kernel crash as the int3 handler will not know what to do with it.  I originally added smp_mb()'s to force the visibility of the variable but H. Peter Anvin suggested that I just make it atomic.  [ Added comments as suggested by Peter Zijlstra ]  Suggested-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
f | mc146818rtc.h | s | 2.8K | 89 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | cache.h | s | 602B | 17 | Denys Vlasenko | vda.linux@googlemail.com | 1267611960 |  | Rename .data.read_mostly to .data..read_mostly.  Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | mtrr.h | s | 7.1K | 182 | H. Peter Anvin | hpa@linux.intel.com | 1330634932 |  | x86, mtrr: Use explicit sizing and padding for the 64-bit ioctls  Specify the data structures for the 64-bit ioctls with explicit sizing and padding so that the x32 kernel will correctly use the 64-bit forms of these ioctls.  Note that these ioctls are bogus in both forms on both 32 and 64 bits; even on 64 bits the maximum MTRR size is only 44 bits long.  Note that nothing really is supposed to use these ioctls and that the preferred interface is text strings on /proc/mtrr, or better yet, nothing at all (use /sys/bus/pci/devices/*/resource*_wc for write combining; that uses PAT not MTRRs.)  Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: H. J. Lu <hjl.tools@gmail.com> Tested-by: Nitin A. Kamble <nitin.a.kamble@intel.com> Link: http://lkml.kernel.org/n/tip-vwvnlu3hjmtkwvij4qxtm90l@git.kernel.org Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | acpi.h | s | 5.0K | 156 | H. Peter Anvin | hpa@kernel.org | 1338397968 |  | x86, realmode: Unbreak the ia64 build of drivers/acpi/sleep.c  Revert usage of acpi_wakeup_address and move definition to x86 architecture code in order to make compilation work in ia64.  [jsakkine: tested compilation in ia64/x86-64 and added proper commit message]  Reported-by: Paul Gortmaker <paul.gortmaker@windriver.com> Originally-by: H. Peter Anvin <hpa@kernel.org> Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@intel.com> Link: http://lkml.kernel.org/r/1338370421-27735-1-git-send-email-jarkko.sakkinen@intel.com Cc: Tony Luck <tony.luck@intel.com> Cc: Len Brown <lenb@kernel.org> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | msidef.h | s | 1.7K | 44 | Suresh Siddha | suresh.b.siddha@intel.com | 1237329539 |  | x86, x2apic: enable fault handling for intr-remapping  Impact: interface augmentation (not yet used)  Enable fault handling flow for intr-remapping aswell. Fault handling code now shared by both dma-remapping and intr-remapping.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | prctl.h | s | 190B | 7 | Jaswinder Singh Rajput | jaswinderrajput@gmail.com | 1233597429 |  | headers_check fix: x86, prctl.h  fix the following 'make headers_check' warning:    usr/include/asm/prctl.h:10: extern's make no sense in userspace  Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
f | floppy.h | s | 6.4K | 237 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | rio.h | s | 2.5K | 56 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pci-direct.h | s | 846B | 16 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | posix_types_x32.h | s | 518B | 15 | H. Peter Anvin | hpa@zytor.com | 1329770927 |  | x32: Create posix_types_x32.h  This is the same as the 64-bit posix_types.h, except that __kernel_[u]long_t is defined to be [unsigned] long long and therefore 64 bits.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | setup_arch.h | s | 77B | 2 | Ingo Molnar | mingo@elte.hu | 1233235011 |  | x86: move mach-default/*.h files to asm/  We are getting rid of subarchitecture support - move the hook files to asm/. (These are now stale and should be replaced with more explicit runtime mechanisms - but the transition is simpler this way.)  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | nmi.h | s | 1.7K | 63 | Don Zickus | dzickus@redhat.com | 1339150767 |  | x86/nmi: Fix section mismatch warnings on 32-bit  It was reported that compiling for 32-bit caused a bunch of section mismatch warnings:   VDSOSYM arch/x86/vdso/vdso32-syms.lds   LD      arch/x86/vdso/built-in.o   LD      arch/x86/built-in.o   WARNING: arch/x86/built-in.o(.data+0x5af0): Section mismatch in  reference from the variable test_nmi_ipi_callback_na.10451 to  the function .init.text:test_nmi_ipi_callback() [...]   WARNING: arch/x86/built-in.o(.data+0x5b04): Section mismatch in  reference from the variable nmi_unk_cb_na.10399 to the function  .init.text:nmi_unk_cb() The variable nmi_unk_cb_na.10399  references the function __init nmi_unk_cb() [...]  Both of these are attributed to the internal representation of the nmiaction struct created during register_nmi_handler.  The reason for this is that those structs are not defined in the init section whereas the rest of the code in nmi_selftest.c is.  To resolve this, I created a new #define, register_nmi_handler_initonly, that tags the struct as __initdata to resolve the mismatch.  This #define should only be used in rare situations where the register/unregister is called during init of the kernel.  Big thanks to Jan Beulich for decoding this for me as I didn't have a clue what was going on.  Reported-by: Witold Baryluk <baryluk@smp.if.uj.edu.pl> Tested-by: Witold Baryluk <baryluk@smp.if.uj.edu.pl> Cc: Jan Beulich <JBeulich@suse.com> Signed-off-by: Don Zickus <dzickus@redhat.com> Link: http://lkml.kernel.org/r/1338991542-23000-1-git-send-email-dzickus@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | idle.h | s | 532B | 17 | Richard Weinberger | richard@nod.at | 1332724567 |  | x86: Merge the x86_32 and x86_64 cpu_idle() functions  Both functions are mostly identical. The differences are:  - x86_32's cpu_idle() makes use of check_pgt_cache(), which is a   nop on both x86_32 and x86_64.  - x86_64's cpu_idle() uses enter/__exit_idle/(), on x86_32 these   function are a nop.  - In contrast to x86_32, x86_64 calls rcu_idle_enter/exit() in   the innermost loop because idle notifications need RCU.   Calling these function on x86_32 also in the innermost loop   does not hurt.  So we can merge both functions.  Signed-off-by: Richard Weinberger <richard@nod.at> Acked-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: paulmck@linux.vnet.ibm.com Cc: josh@joshtriplett.org Cc: tj@kernel.org Link: http://lkml.kernel.org/r/1332709204-22496-1-git-send-email-richard@nod.at Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | user.h | s | 2.2K | 56 | Suresh Siddha | suresh.b.siddha@intel.com | 1265929697 |  | x86, ptrace: regset extensions to support xstate  Add the xstate regset support which helps extend the kernel ptrace and the core-dump interfaces to support AVX state etc.  This regset interface is designed to support all the future state that gets supported using xsave/xrstor infrastructure.  Looking at the memory layout saved by "xsave", one can't say which state is represented in the memory layout. This is because if a particular state is in init state, in the xsave hdr it can be represented by bit '0'. And hence we can't really say by the xsave header wether a state is in init state or the state is not saved in the memory layout.  And hence the xsave memory layout available through this regset interface uses SW usable bytes [464..511] to convey what state is represented in the memory layout.  First 8 bytes of the sw_usable_bytes[464..467] will be set to OS enabled xstate mask(which is same as the 64bit mask returned by the xgetbv's xCR0).  The note NT_X86_XSTATE represents the extended state information in the core file, using the above mentioned memory layout.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> LKML-Reference: <20100211195614.802495327@sbs-t61.sc.intel.com> Signed-off-by: Hongjiu Lu <hjl.tools@gmail.com> Cc: Roland McGrath <roland@redhat.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pci_64.h | s | 645B | 21 | Yinghai Lu | yinghai@kernel.org | 1265852838 |  | x86: Only call dma32_reserve_bootmem 64bit !CONFIG_NUMA  64bit NUMA already make enough space under 4G with new early_node_mem.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <1265793639-15071-16-git-send-email-yinghai@kernel.org> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | stackprotector.h | s | 3.8K | 105 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | pgtable_64_types.h | s | 1.6K | 51 | Rik van Riel | riel@redhat.com | 1241575818 |  | x86: 46 bit physical address support on 64 bits  Extend the maximum addressable memory on x86-64 from 2^44 to 2^46 bytes. This requires some shuffling around of the vmalloc and virtual memmap memory areas, to keep them away from the direct mapping of up to 64TB of physical memory.  This patch also introduces a guard hole between the vmalloc area and the virtual memory map space.  There's really no good reason why we wouldn't have a guard hole there.  [ Impact: future hardware enablement ]  Signed-off-by: Rik van Riel <riel@redhat.com> LKML-Reference: <20090505172856.6820db22@cuia.bos.redhat.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | sigframe.h | s | 2.0K | 70 | H. Peter Anvin | hpa@zytor.com | 1329771125 |  | x32: Add rt_sigframe_x32  Add rt_sigframe_x32 to <asm/sigframe.h>.  Unfortunately we can't just define all the data structures unconditionally, due to the #ifdef CONFIG_COMPAT in <linux/compat.h> and its trickle-down effects, hence the #ifdef mess.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | exec.h | s | 37B | 1 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | termbits.h | s | 34B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | statfs.h | s | 353B | 10 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | xor.h | s | 200B | 10 | Vegard Nossum | vegard.nossum@gmail.com | 1245062402 |  | x86: add hooks for kmemcheck  The hooks that we modify are: - Page fault handler (to handle kmemcheck faults) - Debug exception handler (to hide pages after single-stepping   the instruction that caused the page fault)  Also redefine memset() to use the optimized version if kmemcheck is enabled.  (Thanks to Pekka Enberg for minimizing the impact on the page fault handler.)  As kmemcheck doesn't handle MMX/SSE instructions (yet), we also disable the optimized xor code, and rely instead on the generic C implementation in order to avoid false-positive warnings.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>  [whitespace fixlet] Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi> Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | pci-functions.h | s | 615B | 17 | Ingo Molnar | mingo@elte.hu | 1233235011 |  | x86: move mach-default/*.h files to asm/  We are getting rid of subarchitecture support - move the hook files to asm/. (These are now stale and should be replaced with more explicit runtime mechanisms - but the transition is simpler this way.)  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | sigcontext.h | s | 7.0K | 272 | H.J. Lu | hjl.tools@gmail.com | 1335217874 |  | x32: Check __ILP32__ instead of __LP64__ for x32  Check __LP64__ isn't a reliable way to tell if we are compiling for x32 since __LP64__ isnn't specified by x86-64 psABI.  Not all x86-64 compilers define __LP64__, which was added to GCC 3.3. The updated x32 psABI:  https://sites.google.com/site/x32abi/documents  definse _ILP32 and __ILP32__ for x32.  GCC trunk and 4.7 branch have been updated to define _ILP32 and __ILP32__ for x32.  This patch replaces __LP64__ check with __ILP32__.  Signed-off-by: H.J. Lu <hjl.tools@gmail.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mce.h | s | 7.8K | 204 | Greg Kroah-Hartman | gregkh@suse.de | 1329944286 |  | x86/mce: Convert static array of pointers to per-cpu variables  When I previously fixed up the mce_device code, I used a static array of the pointers.  It was (rightfully) pointed out to me that I should be using the per_cpu code instead.  This patch converts the code over to that structure, moving the variable back into the per_cpu area, like it used to be for 3.2 and earlier.  Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de> Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Link: https://lkml.org/lkml/2012/1/27/165 Signed-off-by: Tony Luck <tony.luck@intel.com>
f | vmx.h | s | 19K | 447 | Kevin Tian | kevin.tian@intel.com | 1316969537 |  | KVM: APIC: avoid instruction emulation for EOI writes  Instruction emulation for EOI writes can be skipped, since sane guest simply uses MOV instead of string operations. This is a nice improvement when guest doesn't support x2apic or hyper-V EOI support.  a single VM bandwidth is observed with ~8% bandwidth improvement (7.4Gbps->8Gbps), by saving ~5% cycles from EOI emulation.  Signed-off-by: Kevin Tian <kevin.tian@intel.com> <Based on earlier work from>: Signed-off-by: Eddie Dong <eddie.dong@intel.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | hyperv.h | s | 7.0K | 173 | K. Y. Srinivasan | kys@microsoft.com | 1314310999 |  | Staging: hv: vmbus: Retry vmbus_post_msg() before giving up  The function hv_post_msg() can fail because of transient resource conditions. It may be useful to retry the operation.  Signed-off-by: K. Y. Srinivasan <kys@microsoft.com> Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | word-at-a-time.h | s | 2.5K | 89 | Linus Torvalds | torvalds@linux-foundation.org | 1338057220 |  | word-at-a-time: make the interfaces truly generic  This changes the interfaces in <asm/word-at-a-time.h> to be a bit more complicated, but a lot more generic.  In particular, it allows us to really do the operations efficiently on both little-endian and big-endian machines, pretty much regardless of machine details.  For example, if you can rely on a fast population count instruction on your architecture, this will allow you to make your optimized <asm/word-at-a-time.h> file with that.  NOTE! The "generic" version in include/asm-generic/word-at-a-time.h is not truly generic, it actually only works on big-endian.  Why? Because on little-endian the generic algorithms are wasteful, since you can inevitably do better. The x86 implementation is an example of that.  (The only truly non-generic part of the asm-generic implementation is the "find_zero()" function, and you could make a little-endian version of it.  And if the Kbuild infrastructure allowed us to pick a particular header file, that would be lovely)  The <asm/word-at-a-time.h> functions are as follows:   - WORD_AT_A_TIME_CONSTANTS: specific constants that the algorithm    uses.   - has_zero(): take a word, and determine if it has a zero byte in it.    It gets the word, the pointer to the constant pool, and a pointer to    an intermediate "data" field it can set.     This is the "quick-and-dirty" zero tester: it's what is run inside    the hot loops.   - "prep_zero_mask()": take the word, the data that has_zero() produced,    and the constant pool, and generate an *exact* mask of which byte had    the first zero.  This is run directly *outside* the loop, and allows    the "has_zero()" function to answer the "is there a zero byte"    question without necessarily getting exactly *which* byte is the    first one to contain a zero.     If you do multiple byte lookups concurrently (eg "hash_name()", which    looks for both NUL and '/' bytes), after you've done the prep_zero_mask()    phase, the result of those can be or'ed together to get the "either    or" case.   - The result from "prep_zero_mask()" can then be fed into "find_zero()"    (to find the byte offset of the first byte that was zero) or into    "zero_bytemask()" (to find the bytemask of the bytes preceding the    zero byte).     The existence of zero_bytemask() is optional, and is not necessary    for the normal string routines.  But dentry name hashing needs it, so    if you enable DENTRY_WORD_AT_A_TIME you need to expose it.  This changes the generic strncpy_from_user() function and the dentry hashing functions to use these modified word-at-a-time interfaces.  This gets us back to the optimized state of the x86 strncpy that we lost in the previous commit when moving over to the generic version.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bootparam.h | s | 3.3K | 125 | Joshua Cov | joshuacov@googlemail.com | 1336511981 |  | keyboard: Use BIOS Keyboard variable to set Numlock  The PC BIOS does provide a NUMLOCK flag containing the desired state of this LED. This patch sets the current state according to the data in the bios.  [ hpa: fixed __weak declaration without definition, changed "inline"   to "static inline" ]  Signed-Off-By: Joshua Cov <joshuacov@googlemail.com> Link: http://lkml.kernel.org/r/CAKL7Q7rvq87TNS1T_Km8fW_5OzS%2BSbYazLXKxW-6ztOxo3zorg@mail.gmail.com Acked-by: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | hardirq.h | s | 1.5K | 43 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | aes.h | s | 279B | 9 | Huang Ying | ying.huang@intel.com | 1234946885 |  | crypto: aes - Export x86 AES encrypt/decrypt functions  Intel AES-NI AES acceleration instructions touch XMM state, to use that in soft_irq context, general x86 AES implementation is used as fallback. The first parameter is changed from struct crypto_tfm * to struct crypto_aes_ctx * to make it easier to deal with 16 bytes alignment requirement of AES-NI implementation.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | sighandling.h | s | 702B | 16 | Al Viro | viro@zeniv.linux.org.uk | 1338569931 |  | most of set_current_blocked() callers want SIGKILL/SIGSTOP removed from set  Only 3 out of 63 do not.  Renamed the current variant to __set_current_blocked(), added set_current_blocked() that will exclude unblockable signals, switched open-coded instances to it.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | cmpxchg_32.h | s | 4.7K | 153 | Jan Beulich | JBeulich@suse.com | 1325685714 |  | x86: Fix and improve cmpxchg_double{,_local}()  Just like the per-CPU ones they had several problems/shortcomings:  Only the first memory operand was mentioned in the asm() operands, and the 2x64-bit version didn't have a memory clobber while the 2x32-bit one did. The former allowed the compiler to not recognize the need to re-load the data in case it had it cached in some register, while the latter was overly destructive.  The types of the local copies of the old and new values were incorrect (the types of the pointed-to variables should be used here, to make sure the respective old/new variable types are compatible).  The __dummy/__junk variables were pointless, given that local copies of the inputs already existed (and can hence be used for discarded outputs).  The 32-bit variant of cmpxchg_double_local() referenced cmpxchg16b_local().  At once also:   - change the return value type to what it really is: 'bool'  - unify 32- and 64-bit variants  - abstract out the common part of the 'normal' and 'local' variants  Signed-off-by: Jan Beulich <jbeulich@suse.com> Cc: Christoph Lameter <cl@linux.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/r/4F01F12A020000780006A19B@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | bug.h | s | 825B | 33 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | cpumask.h | s | 369B | 11 | Rusty Russell | rusty@rustcorp.com.au | 1236917994 |  | x86: unify cpu_callin_mask/cpu_callout_mask/cpu_initialized_mask/cpu_sibling_setup_mask  Impact: cleanup  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | atomic64_32.h | s | 7.5K | 281 | Philipp Hahn | hahn@univention.de | 1336556300 |  | atomic64_32.h: fix parameter naming mismatch  The doc string doesn't match the parameter name, fix @p -> @v @ptr -> @v @n -> @i  Signed-off-by: Philipp Hahn <hahn@univention.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | microcode.h | s | 1.5K | 53 | Borislav Petkov | borislav.petkov@amd.com | 1323863207 |  | x86, microcode, AMD: Add a vendor-specific exit function  This will be used to do cleanup work before the driver exits.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | parport.h | s | 295B | 8 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | suspend.h | s | 84B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | Kbuild | g | 618B |  | H. Peter Anvin | hpa@zytor.com | 1329771060 |  | x32: Generate <asm/unistd_x32.h>  Generate <asm/unistd_x32.h>; this exports x32 system call numbers to user space.  [ v2: Enclose all arguments to syshdr in '' so empty arguments aren't       dropped on the floor. ]  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | vgtod.h | s | 622B | 24 | Andy Lutomirski | luto@mit.edu | 1332546573 |  | x86-64: Simplify and optimize vdso clock_gettime monotonic variants  We used to store the wall-to-monotonic offset and the realtime base. It's faster to precompute the monotonic base.  This is about a 3% speedup on Sandy Bridge for CLOCK_MONOTONIC. It's much more impressive for CLOCK_MONOTONIC_COARSE.  Signed-off-by: Andy Lutomirski <luto@amacapital.net> Signed-off-by: John Stultz <john.stultz@linaro.org>
f | futex.h | s | 3.4K | 122 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | mmu.h | s | 537B | 26 | Richard Kennedy | richard@rsk.demon.co.uk | 1306333001 |  | x86: Reorder mm_context_t to remove x86_64 alignment padding and thus shrink mm_struct  Reorder mm_context_t to remove alignment padding on 64 bit builds shrinking its size from 64 to 56 bytes.  This allows mm_struct to shrink from 840 to 832 bytes, so using one fewer cache lines, and getting more objects per slab when using slub.  slabinfo mm_struct reports before :-      Sizes (bytes)     Slabs     -----------------------------------     Object :     840  Total  :       7     SlabObj:     896  Full   :       1     SlabSiz:   16384  Partial:       4     Loss   :      56  CpuSlab:       2     Align  :      64  Objects:      18  after :-      Sizes (bytes)     Slabs     ----------------------------------     Object :     832  Total  :       7     SlabObj:     832  Full   :       1     SlabSiz:   16384  Partial:       4     Loss   :       0  CpuSlab:       2     Align  :      64  Objects:      19  Signed-off-by: Richard Kennedy <richard@rsk.demon.co.uk> Cc: wilsons@start.ca Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Pekka Enberg <penberg@kernel.org> Link: http://lkml.kernel.org/r/1306244999.1999.5.camel@castor.rsk Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | paravirt.h | s | 25K | 876 | H. Peter Anvin | hpa@zytor.com | 1334873276 |  | x86, paravirt: Replace GET_CR2_INTO_RCX with GET_CR2_INTO_RAX  GET_CR2_INTO_RCX is asinine: it is only used in one place, the actual paravirt call returns the value in %rax, not %rcx; and the one place that wants it wants the result in %r9.  We actually generate as a result of this call:         call ...        movq %rax, %rcx        xorq %rax, %rax		/* this value isn't even used... */        movq %rcx, %r9  At least make the macro do what the paravirt call does, which is put the value into %rax.  Nevermind the fact that the macro clobbers all the volatile registers.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Link: http://lkml.kernel.org/r/1334794610-5546-4-git-send-email-hpa@zytor.com Cc: Glauber de Oliveira Costa <glommer@parallels.com>
f | posix_types.h | s | 277B | 15 | H.J. Lu | hjl.tools@gmail.com | 1335217874 |  | x32: Check __ILP32__ instead of __LP64__ for x32  Check __LP64__ isn't a reliable way to tell if we are compiling for x32 since __LP64__ isnn't specified by x86-64 psABI.  Not all x86-64 compilers define __LP64__, which was added to GCC 3.3. The updated x32 psABI:  https://sites.google.com/site/x32abi/documents  definse _ILP32 and __ILP32__ for x32.  GCC trunk and 4.7 branch have been updated to define _ILP32 and __ILP32__ for x32.  This patch replaces __LP64__ check with __ILP32__.  Signed-off-by: H.J. Lu <hjl.tools@gmail.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | device.h | s | 372B | 16 | Alessandro Rubini | rubini@gnudd.com | 1334254196 |  | x86-32: Introduce CONFIG_X86_DEV_DMA_OPS  32-bit x86 systems may need their own DMA operations, so add a new config option, which is turned on for 64-bit systems. This patch has no functional effect but it paves the way for supporting the STA2x11 I/O Hub and possibly other chips.  Signed-off-by: Alessandro Rubini <rubini@gnudd.com> Link: http://lkml.kernel.org/r/f79fcc1a2e17ef942e1b798b92aac43a80202532.1333560789.git.rubini@gnudd.com Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com> Cc: Alan Cox <alan@linux.intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mmconfig.h | s | 355B | 10 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | spinlock_types.h | s | 643B | 25 | Jan Beulich | JBeulich@suse.com | 1328605794 |  | x86/spinlocks: Eliminate TICKET_MASK  The definition of it being questionable already (unnecessarily including a cast), and it being used in a single place that can be written shorter without it, remove this #define.  Along the same lines, simplify __ticket_spin_is_locked()'s main expression, which was the more convoluted way because of needs that went away with the recent type changes by Jeremy.  This is pure cleanup, no functional change intended.  Signed-off-by: Jan Beulich <jbeulich@suse.com> Acked-by: Jeremy Fitzhardinge <jeremy@goop.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/4F2C06020200007800071066@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | atomic.h | s | 6.9K | 284 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1314650652 |  | x86: Use xadd helper more widely  This covers the trivial cases from open-coded xadd to the xadd macros.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Link: http://lkml.kernel.org/r/4E5BCC40.3030501@goop.org Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | mshyperv.h | s | 208B | 10 | H. Peter Anvin | hpa@zytor.com | 1273277584 |  | x86: Clean up the hypervisor layer  Clean up the hypervisor layer and the hypervisor drivers, using an ops structure instead of an enumeration with if statements.  The identity of the hypervisor, if needed, can be tested by testing the pointer value in x86_hyper.  The MS-HyperV private state is moved into a normal global variable (it's per-system state, not per-CPU state).  Being a normal bss variable, it will be left at all zero on non-HyperV platforms, and so can generally be tested for HyperV-specific features without additional qualification.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Acked-by: Greg KH <greg@kroah.com> Cc: Hank Janssen <hjanssen@microsoft.com> Cc: Alok Kataria <akataria@vmware.com> Cc: Ky Srinivasan <ksrinivasan@novell.com> LKML-Reference: <4BE49778.6060800@zytor.com>
f | xor_32.h | s | 21K | 782 | Jim Kukunas | james.t.kukunas@linux.intel.com | 1337658844 |  | raid5: add AVX optimized RAID5 checksumming  Optimize RAID5 xor checksumming by taking advantage of 256-bit YMM registers introduced in AVX.  Signed-off-by: Jim Kukunas <james.t.kukunas@linux.intel.com> Signed-off-by: NeilBrown <neilb@suse.de>
f | tlbflush.h | s | 4.0K | 137 | Linus Torvalds | torvalds@linux-foundation.org | 1337796419 |  | Merge branch 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull x86 mm changes from Ingo Molnar:  "This tree includes a micro-optimization that avoids cr3 switches   during idling; it fixes corner cases and there's also small cleanups"  Fix up trivial context conflict with the percpu_xx -> this_cpu_xx changes.  * 'x86-mm-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:   x86-64: Fix accounting in kernel_physical_mapping_init()   x86/tlb: Clean up and unify TLB_FLUSH_ALL definition   x86: Drop obsolete ARCH_BOOTMEM support   x86, tlb: Switch cr3 in leave_mm() only when needed   x86/mm: Fix the size calculation of mapping tables
f | svm.h | s | 8.7K | 313 | Andre Przywara | andre.przywara@amd.com | 1294824667 |  | KVM: SVM: copy instruction bytes from VMCB  In case of a nested page fault or an intercepted #PF newer SVM implementations provide a copy of the faulting instruction bytes in the VMCB. Use these bytes to feed the instruction emulator and avoid the costly guest instruction fetch in this case.  Signed-off-by: Andre Przywara <andre.przywara@amd.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
f | linkage.h | s | 2.0K | 50 | Richard Weinberger | richard@nod.at | 1306240415 |  | x86: Get rid of asmregparm  As UML does no longer need asmregparm we can remove it.  Signed-off-by: Richard Weinberger <richard@nod.at> Cc: namhyung@gmail.com Cc: davem@davemloft.net Cc: fweisbec@gmail.com Cc: dhowells@redhat.com Link: http://lkml.kernel.org/r/%3C1306189085-29896-1-git-send-email-richard%40nod.at%3E Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | mutex.h | s | 80B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | perf_event.h | s | 7.1K | 219 | Robert Richter | robert.richter@amd.com | 1336998695 |  | perf/x86/ibs: Fix undefined reference to `get_ibs_caps'  Fixing i386 allnoconfig built errors:   arch/x86/built-in.o: In function `amd_pmu_hw_config':  perf_event_amd.c:(.text+0xc3e1): undefined reference to `get_ibs_caps'  Reported-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Robert Richter <robert.richter@amd.com> Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | mrst.h | s | 2.0K | 62 | Alan Cox | alan@linux.intel.com | 1327609433 |  | x86/mid: Remove Intel Moorestown  All production devices operate in the Oaktrail configuration with legacy PC elements present and an ACPI BIOS. Continue stripping out the Moorestown elements from the tree leaving Medfield.  Signed-off-by: Alan Cox <alan@linux.intel.com> Cc: jacob.jun.pan@linux.intel.com Link: http://lkml.kernel.org/n/tip-fvm1hgpq99jln6l0fbek68ik@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | local.h | s | 4.4K | 172 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | nops.h | s | 4.3K | 135 | H. Peter Anvin | hpa@zytor.com | 1334873262 |  | x86, nop: Make the ASM_NOP* macros work from assembly  Make the ASM_NOP* macros work in actual assembly files.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Link: http://lkml.kernel.org/r/1334794610-5546-2-git-send-email-hpa@zytor.com
f | tsc.h | s | 1.4K | 53 | Marcelo Tosatti | mtosatti@redhat.com | 1332239865 |  | x86: kvmclock: abstract save/restore sched_clock_state  Upon resume from hibernation, CPU 0's hvclock area contains the old values for system_time and tsc_timestamp. It is necessary for the hypervisor to update these values with uptodate ones before the CPU uses them.  Abstract TSC's save/restore sched_clock_state functions and use restore_state to write to KVM_SYSTEM_TIME MSR, forcing an update.  Also move restore_sched_clock_state before __restore_processor_state, since the later calls CONFIG_LOCK_STAT's lockstat_clock (also for TSC). Thanks to Igor Mammedov for tracking it down.  Fixes suspend-to-disk with kvmclock.  Reviewed-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | serpent.h | s | 1.5K | 48 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1321863203 |  | crypto: serpent - add 4-way parallel i586/SSE2 assembler implementation  Patch adds i586/SSE2 assembler implementation of serpent cipher. Assembler functions crypt data in four block chunks.  Patch has been tested with tcrypt and automated filesystem tests.  Tcrypt benchmarks results (serpent-sse2/serpent_generic speed ratios):  Intel Atom N270:  size    ecb-enc ecb-dec cbc-enc cbc-dec ctr-enc ctr-dec 16      0.95x   1.12x   1.02x   1.07x   0.97x   0.98x 64      1.73x   1.82x   1.08x   1.82x   1.72x   1.73x 256     2.08x   2.00x   1.04x   2.07x   1.99x   2.01x 1024    2.28x   2.18x   1.05x   2.23x   2.17x   2.20x 8192    2.28x   2.13x   1.05x   2.23x   2.18x   2.20x  Full output:  http://koti.mbnet.fi/axh/kernel/crypto/atom-n270/serpent-generic.txt  http://koti.mbnet.fi/axh/kernel/crypto/atom-n270/serpent-sse2.txt  Userspace test results:  Encryption/decryption of sse2-i586 vs generic on Intel Atom N270:  encrypt: 2.35x  decrypt: 2.54x  Encryption/decryption of sse2-i586 vs generic on AMD Phenom II:  encrypt: 1.82x  decrypt: 2.51x  Encryption/decryption of sse2-i586 vs generic on Intel Xeon E7330:  encrypt: 2.99x  decrypt: 3.48x  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | irqflags.h | s | 4.0K | 174 | Steven Rostedt | srostedt@redhat.com | 1310059352 |  | tracing, x86/irq: Do not trace arch_local_{*,irq_*}() functions  I triggered a triple fault with gcc 4.5.1 because it did not honor the inline annotation to arch_local_save_flags() function and that function was added to the pool of functions traced by the function tracer.  When preempt_schedule() called arch_local_save_flags() (called by irqs_disabled()), it was traced, but the first thing the function tracer does is disable preemption. When it enables preemption, the NEED_RESCHED flag will not have been cleared and the preemption check will trigger the call to preempt_schedule() again.  Although the dynamic function tracer crashed immediately, the static version of the function tracer (CONFIG_DYNAMIC_FTRACE is not set) actually was able to show where the problem was.   swapper-1       3.N.. 103885us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103886us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103886us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103887us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103887us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103888us : arch_local_save_flags <-preempt_schedule  swapper-1       3.N.. 103888us : arch_local_save_flags <-preempt_schedule  It went on for a while before it triple faulted with a corrupted stack.  The arch_local_save_flags and arch_local_irq_* functions should not be traced. Even though they are marked as inline, gcc may still make them a function and enable tracing of them.  The simple solution is to just mark them as notrace. I had to add the <linux/types.h> for this file to include the notrace tag.  Signed-off-by: Steven Rostedt <rostedt@goodmis.org> Link: http://lkml.kernel.org/r/20110702033852.733414762@goodmis.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | hugetlb.h | s | 2.0K | 76 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | fpu-internal.h | s | 12K | 459 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | topology.h | s | 4.0K | 128 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1336568455 |  | sched/numa: Rewrite the CONFIG_NUMA sched domain support  The current code groups up to 16 nodes in a level and then puts an ALLNODES domain spanning the entire tree on top of that. This doesn't reflect the numa topology and esp for the smaller not-fully-connected machines out there today this might make a difference.  Therefore, build a proper numa topology based on node_distance().  Since there's no fixed numa layers anymore, the static SD_NODE_INIT and SD_ALLNODES_INIT aren't usable anymore, the new code tries to construct something similar and scales some values either on the number of cpus in the domain and/or the node_distance() ratio.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Anton Blanchard <anton@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: David Howells <dhowells@redhat.com> Cc: "David S. Miller" <davem@davemloft.net> Cc: Fenghua Yu <fenghua.yu@intel.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: linux-alpha@vger.kernel.org Cc: linux-ia64@vger.kernel.org Cc: linux-kernel@vger.kernel.org Cc: linux-mips@linux-mips.org Cc: linuxppc-dev@lists.ozlabs.org Cc: linux-sh@vger.kernel.org Cc: Matt Turner <mattst88@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Richard Henderson <rth@twiddle.net> Cc: sparclinux@vger.kernel.org Cc: Tony Luck <tony.luck@intel.com> Cc: x86@kernel.org Cc: Dimitri Sivanich <sivanich@sgi.com> Cc: Greg Pearson <greg.pearson@hp.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: bob.picco@oracle.com Cc: chris.mason@oracle.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/n/tip-r74n3n8hhuc2ynbrnp3vt954@git.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | gart.h | s | 2.6K | 91 | Joerg Roedel | joerg.roedel@amd.com | 1303144008 |  | x86, gart: Set DISTLBWALKPRB bit always  The DISTLBWALKPRB bit must be set for the GART because the gatt table is mapped UC. But the current code does not set the bit at boot when the BIOS setup the aperture correctly. Fix that by setting this bit when enabling the GART instead of the other places.  Cc: <stable@kernel.org> Cc: Borislav Petkov <borislav.petkov@amd.com> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1303134346-5805-4-git-send-email-joerg.roedel@amd.com Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | kexec.h | s | 5.0K | 150 | Huang Ying | ying.huang@intel.com | 1236734005 |  | x86, kexec: x86_64: add kexec jump support for x86_64  Impact: New major feature  This patch add kexec jump support for x86_64. More information about kexec jump can be found in corresponding x86_32 support patch.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | unistd.h | s | 1.7K | 61 | H.J. Lu | hjl.tools@gmail.com | 1335217874 |  | x32: Check __ILP32__ instead of __LP64__ for x32  Check __LP64__ isn't a reliable way to tell if we are compiling for x32 since __LP64__ isnn't specified by x86-64 psABI.  Not all x86-64 compilers define __LP64__, which was added to GCC 3.3. The updated x32 psABI:  https://sites.google.com/site/x32abi/documents  definse _ILP32 and __ILP32__ for x32.  GCC trunk and 4.7 branch have been updated to define _ILP32 and __ILP32__ for x32.  This patch replaces __LP64__ check with __ILP32__.  Signed-off-by: H.J. Lu <hjl.tools@gmail.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pgtable_32.h | s | 2.2K | 71 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1288137128 |  | mm: remove pte_*map_nested()  Since we no longer need to provide KM_type, the whole pte_*map_nested() API is now redundant, remove it.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Acked-by: Chris Metcalf <cmetcalf@tilera.com> Cc: David Howells <dhowells@redhat.com> Cc: Hugh Dickins <hughd@google.com> Cc: Rik van Riel <riel@redhat.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Russell King <rmk@arm.linux.org.uk> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: David Miller <davem@davemloft.net> Cc: Paul Mackerras <paulus@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mrst-vrtc.h | s | 265B | 7 | Feng Tang | feng.tang@intel.com | 1289471667 |  | x86: mrst: Add vrtc driver which serves as a wall clock device  Moorestown platform doesn't have a m146818 RTC device like traditional x86 PC, but a firmware emulated virtual RTC device(vrtc), which provides some basic RTC functions like get/set time. vrtc serves as the only wall clock device on Moorestown platform.  [ tglx: Changed the exports to _GPL ]  Signed-off-by: Feng Tang <feng.tang@intel.com> Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com> Signed-off-by: Alan Cox <alan@linux.intel.com> LKML-Reference: <20101110172837.3311.40483.stgit@localhost.localdomain> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | string.h | s | 82B | 5 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | paravirt_types.h | s | 22K | 591 | Linus Torvalds | torvalds@linux-foundation.org | 1313207184 |  | Merge branch 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-tip  * 'x86-vdso-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-tip:   x86-64: Rework vsyscall emulation and add vsyscall= parameter   x86-64: Wire up getcpu syscall   x86: Remove unnecessary compile flag tweaks for vsyscall code   x86-64: Add vsyscall:emulate_vsyscall trace event   x86-64: Add user_64bit_mode paravirt op   x86-64, xen: Enable the vvar mapping   x86-64: Work around gold bug 13023   x86-64: Move the "user" vsyscall segment out of the data segment.   x86-64: Pad vDSO to a page boundary
f | syscall.h | s | 5.2K | 227 | Will Drewry | wad@chromium.org | 1334366000 |  | arch/x86: add syscall_get_arch to syscall.h  Add syscall_get_arch() to export the current AUDIT_ARCH_* based on system call entry path.  Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Reviewed-by: H. Peter Anvin <hpa@zytor.com> Acked-by: Eric Paris <eparis@redhat.com> Reviewed-by: Kees Cook <keescook@chromium.org>  v18: - update comment about x32 tasks      - rebase to v3.4-rc2 v17: rebase and reviewed-by v14: rebase/nochanges v13: rebase on to 88ebdda6159ffc15699f204c33feb3e431bf9bdc Signed-off-by: James Morris <james.l.morris@oracle.com>
f | hypertransport.h | s | 1.3K | 33 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | kbdleds.h | s | 415B | 13 | Joshua Cov | joshuacov@googlemail.com | 1336511981 |  | keyboard: Use BIOS Keyboard variable to set Numlock  The PC BIOS does provide a NUMLOCK flag containing the desired state of this LED. This patch sets the current state according to the data in the bios.  [ hpa: fixed __weak declaration without definition, changed "inline"   to "static inline" ]  Signed-Off-By: Joshua Cov <joshuacov@googlemail.com> Link: http://lkml.kernel.org/r/CAKL7Q7rvq87TNS1T_Km8fW_5OzS%2BSbYazLXKxW-6ztOxo3zorg@mail.gmail.com Acked-by: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | page_64.h | s | 119B | 4 | Jeremy Fitzhardinge | jeremy@goop.org | 1234392849 |  | x86: create _types.h counterparts for page*.h  Signed-off-by: Jeremy Fitzhardinge <jeremy@goop.org>
f | user32.h | s | 2.1K | 63 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | posix_types_64.h | s | 546B | 14 | H. Peter Anvin | hpa@zytor.com | 1329249690 |  | x86: Use generic posix_types.h  Change the x86 architecture to use <asm-generic/posix_types.h>.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Link: http://lkml.kernel.org/r/1328677745-20121-20-git-send-email-hpa@zytor.com Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de>
f | ioctl.h | s | 31B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | module.h | s | 1.9K | 62 | Ian Campbell | ijc@hellion.org.uk | 1302292885 |  | x86, cpu: Move AMD Elan Kconfig under "Processor family"  Currently the option resides under X86_EXTENDED_PLATFORM due to historical nonstandard A20M# handling. However that is no longer the case and so Elan can be treated as part of the standard processor choice Kconfig option.  Signed-off-by: Ian Campbell <ian.campbell@citrix.com> Link: http://lkml.kernel.org/r/1302245177.31620.47.camel@localhost.localdomain Cc: H. Peter Anvin <hpa@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | iommu_table.h | s | 3.7K | 89 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1286568681 |  | x86, iommu: Update header comments with appropriate naming  The header comments diverged a bit from the implementation. Lets re-sync them.  Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> LKML-Reference: <1286564028-2352-3-git-send-email-konrad.wilk@oracle.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | pgtable_32_types.h | s | 1.6K | 45 | Andres Salomon | dilinger@queued.net | 1275956831 |  | x86: use __ASSEMBLY__ rather than __ASSEMBLER__  As Ingo pointed out in a separate patch, we should be using __ASSEMBLY__. Make that the case in pgtable headers.  Signed-off-by: Andres Salomon <dilinger@queued.net> LKML-Reference: <20100605114042.35ac69c1@dev.queued.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | math_emu.h | s | 425B | 16 | Tejun Heo | tj@kernel.org | 1234222754 |  | x86: fix math_emu register frame access  do_device_not_available() is the handler for #NM and it declares that it takes a unsigned long and calls math_emu(), which takes a long argument and surprisingly expects the stack frame starting at the zero argument would match struct math_emu_info, which isn't true regardless of configuration in the current code.  This patch makes do_device_not_available() take struct pt_regs like other exception handlers and initialize struct math_emu_info with pointer to it and pass pointer to the math_emu_info to math_emulate() like normal C functions do.  This way, unless gcc makes a copy of struct pt_regs in do_device_not_available(), the register frame is correctly accessed regardless of kernel configuration or compiler used.  This doesn't fix all math_emu problems but it at least gets it somewhat working.  Signed-off-by: Tejun Heo <tj@kernel.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | uaccess_64.h | s | 6.4K | 221 | Linus Torvalds | torvalds@linux-foundation.org | 1338057234 |  | x86: use the new generic strnlen_user() function  This throws away the old x86-specific functions in favor of the generic optimized version.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | pgtable-2level_types.h | s | 702B | 27 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1234553701 |  | x86: move more pagetable-related definitions into pgtable*.h  PAGETABLE_LEVELS and the PTE masks should be in pgtable*.h  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
f | poll.h | s | 30B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | inat_types.h | s | 1013B | 27 | Masami Hiramatsu | mhiramat@redhat.com | 1251326156 |  | x86: Instruction decoder API  Add x86 instruction decoder to arch-specific libraries. This decoder can decode x86 instructions used in kernel into prefix, opcode, modrm, sib, displacement and immediates. This can also show the length of instructions.  This version introduces instruction attributes for decoding instructions. The instruction attribute tables are generated from the opcode map file (x86-opcode-map.txt) by the generator script(gen-insn-attr-x86.awk).  Currently, the opcode maps are based on opcode maps in Intel(R) 64 and IA-32 Architectures Software Developers Manual Vol.2: Appendix.A, and consist of below two types of opcode tables.  1-byte/2-bytes/3-bytes opcodes, which has 256 elements, are written as below;   Table: table-name  Referrer: escaped-name  opcode: mnemonic||GrpXXX [operand1[,operand2...]] [(extra1)[,(extra2)...] [|| 2nd-mnemonic ...]   (or)  opcode: escape # escaped-name  EndTable  Group opcodes, which has 8 elements, are written as below;   GrpTable: GrpXXX  reg:  mnemonic [operand1[,operand2...]] [(extra1)[,(extra2)...] [|| 2nd-mnemonic ...]  EndTable  These opcode maps include a few SSE and FP opcodes (for setup), because those opcodes are used in the kernel.  Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com> Signed-off-by: Jim Keniston <jkenisto@us.ibm.com> Acked-by: H. Peter Anvin <hpa@zytor.com> Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com> Cc: Avi Kivity <avi@redhat.com> Cc: Andi Kleen <ak@linux.intel.com> Cc: Christoph Hellwig <hch@infradead.org> Cc: Frank Ch. Eigler <fche@redhat.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Jason Baron <jbaron@redhat.com> Cc: K.Prasad <prasad@linux.vnet.ibm.com> Cc: Lai Jiangshan <laijs@cn.fujitsu.com> Cc: Li Zefan <lizf@cn.fujitsu.com> Cc: Przemysław Pawełczyk <przemyslaw@pawelczyk.it> Cc: Roland McGrath <roland@redhat.com> Cc: Sam Ravnborg <sam@ravnborg.org> Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Tom Zanussi <tzanussi@gmail.com> Cc: Vegard Nossum <vegard.nossum@gmail.com> LKML-Reference: <20090813203413.31965.49709.stgit@localhost.localdomain> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
f | processor.h | s | 23K | 834 | Linus Torvalds | torvalds@linux-foundation.org | 1338347693 |  | Merge branch 'x86-trampoline-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull x86 trampoline rework from H. Peter Anvin:  "This code reworks all the "trampoline"/"realmode" code (various bits   that need to live in the first megabyte of memory, most but not all of   which runs in real mode at some point) in the kernel into a single   object.  The main reason for doing this is that it eliminates the last   place in the kernel where we needed pages to be mapped RWX.  This code   separates all that code into proper R/RW/RX pages."  Fix up conflicts in arch/x86/kernel/Makefile (mca removed next to reboot code), and arch/x86/kernel/reboot.c (reboot code moved around in one branch, modified in this one), and arch/x86/tools/relocs.c (mostly same code came in earlier due to working around the ld bugs just before the 3.4 release).  Also remove stale x86-relocs entry from scripts/.gitignore as per Peter Anvin.  * commit '61f5446169046c217a5479517edac3a890c3bee7': (36 commits)   x86, realmode: Move end signature into header.S   x86, relocs: When printing an error, say relative or absolute   x86, relocs: More relocations which may end up as absolute   x86, relocs: Workaround for binutils 2.22.52.0.1 section bug   xen-acpi-processor: Add missing #include <xen/xen.h>   acpi, bgrd: Add missing <linux/io.h> to drivers/acpi/bgrt.c   x86, realmode: Change EFER to a single u64 field   x86, realmode: Move kernel/realmode.c to realmode/init.c   x86, realmode: Move not-common bits out of trampoline_common.S   x86, realmode: Mask out EFER.LMA when saving trampoline EFER   x86, realmode: Fix no cache bits test in reboot_32.S   x86, realmode: Make sure all generated files are listed in targets   x86, realmode: build fix: remove duplicate build   x86, realmode: read cr4 and EFER from kernel for 64-bit trampoline   x86, realmode: fixes compilation issue in tboot.c   x86, realmode: move relocs from scripts/ to arch/x86/tools   x86, realmode: header for trampoline code   x86, realmode: flattened rm hierachy   x86, realmode: don't copy real_mode_header   x86, realmode: fix 64-bit wakeup sequence   ...
f | pci_x86.h | s | 5.1K | 164 | Myron Stowe | mstowe@redhat.com | 1325880642 |  | PCI: Pull PCI 'latency timer' setup up into the core  The 'latency timer' of PCI devices, both Type 0 and Type 1, is setup in architecture-specific code [see: 'pcibios_set_master()']. There are two approaches being taken by all the architectures - check if the 'latency timer' is currently set between 16 and 255 and if not bring it within bounds, or, do nothing (and then there is the gratuitously different PA-RISC implementation).  There is nothing architecture-specific about PCI's 'latency timer' so this patch pulls its setup functionality up into the PCI core by creating a generic 'pcibios_set_master()' function using the '__weak' attribute which can be used by all architectures as a default which, if necessary, can then be over-ridden by architecture-specific code.  No functional change.  Signed-off-by: Myron Stowe <myron.stowe@redhat.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | seccomp_32.h | s | 280B | 8 | Roland McGrath | roland@redhat.com | 1236037290 |  | x86-64: seccomp: fix 32/64 syscall hole  On x86-64, a 32-bit process (TIF_IA32) can switch to 64-bit mode with ljmp, and then use the "syscall" instruction to make a 64-bit system call.  A 64-bit process make a 32-bit system call with int $0x80.  In both these cases under CONFIG_SECCOMP=y, secure_computing() will use the wrong system call number table.  The fix is simple: test TS_COMPAT instead of TIF_IA32.  Here is an example exploit:  	/* test case for seccomp circumvention on x86-64  	   There are two failure modes: compile with -m64 or compile with -m32.  	   The -m64 case is the worst one, because it does "chmod 777 ." (could 	   be any chmod call).  The -m32 case demonstrates it was able to do 	   stat(), which can glean information but not harm anything directly.  	   A buggy kernel will let the test do something, print, and exit 1; a 	   fixed kernel will make it exit with SIGKILL before it does anything. 	*/  	#define _GNU_SOURCE 	#include <assert.h> 	#include <inttypes.h> 	#include <stdio.h> 	#include <linux/prctl.h> 	#include <sys/stat.h> 	#include <unistd.h> 	#include <asm/unistd.h>  	int 	main (int argc, char **argv) 	{ 	  char buf[100]; 	  static const char dot[] = "."; 	  long ret; 	  unsigned st[24];  	  if (prctl (PR_SET_SECCOMP, 1, 0, 0, 0) != 0) 	    perror ("prctl(PR_SET_SECCOMP) -- not compiled into kernel?");  	#ifdef __x86_64__ 	  assert ((uintptr_t) dot < (1UL << 32)); 	  asm ("int $0x80 # %0 <- %1(%2 %3)" 	       : "=a" (ret) : "0" (15), "b" (dot), "c" (0777)); 	  ret = snprintf (buf, sizeof buf, 			  "result %ld (check mode on .!)\n", ret); 	#elif defined __i386__ 	  asm (".code32\n" 	       "pushl %%cs\n" 	       "pushl $2f\n" 	       "ljmpl $0x33, $1f\n" 	       ".code64\n" 	       "1: syscall # %0 <- %1(%2 %3)\n" 	       "lretl\n" 	       ".code32\n" 	       "2:" 	       : "=a" (ret) : "0" (4), "D" (dot), "S" (&st)); 	  if (ret == 0) 	    ret = snprintf (buf, sizeof buf, 			    "stat . -> st_uid=%u\n", st[7]); 	  else 	    ret = snprintf (buf, sizeof buf, "result %ld\n", ret); 	#else 	# error "not this one" 	#endif  	  write (1, buf, ret);  	  syscall (__NR_exit, 1); 	  return 2; 	}  Signed-off-by: Roland McGrath <roland@redhat.com> [ I don't know if anybody actually uses seccomp, but it's enabled in   at least both Fedora and SuSE kernels, so maybe somebody is. - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cpu_device_id.h | s | 294B | 9 | Andi Kleen | ak@linux.intel.com | 1327625081 |  | Add driver auto probing for x86 features v4  There's a growing number of drivers that support a specific x86 feature or CPU.  Currently loading these drivers currently on a generic distribution requires various driver specific hacks and it often doesn't work.  This patch adds auto probing for drivers based on the x86 cpuid information, in particular based on vendor/family/model number and also based on CPUID feature bits.  For example a common issue is not loading the SSE 4.2 accelerated CRC module: this can significantly lower the performance of BTRFS which relies on fast CRC.  Another issue is loading the right CPUFREQ driver for the current CPU. Currently distributions often try all all possible driver until one sticks, which is not really a good way to do this.  It works with existing udev without any changes. The code exports the x86 information as a generic string in sysfs that can be matched by udev's pattern matching.  This scheme does not support numeric ranges, so if you want to handle e.g. ranges of model numbers they have to be encoded in ASCII or simply all models or families listed. Fixing that would require changing udev.  Another issue is that udev will happily load all drivers that match, there is currently no nice way to stop a specific driver from being loaded if it's not needed (e.g. if you don't need fast CRC) But there are not that many cpu specific drivers around and they're all not that bloated, so this isn't a particularly serious issue.  Originally this patch added the modalias to the normal cpu sysdevs. However sysdevs don't have all the infrastructure needed for udev, so it couldn't really autoload drivers. This patch instead adds the CPU modaliases to the cpuid devices, which are real devices with full support for udev. This implies that the cpuid driver has to be loaded to use this.  This patch just adds infrastructure, some driver conversions in followups.  Thanks to Kay for helping with some sysfs magic.  v2: Constifcation, some updates v4: (trenn@suse.de):     - Use kzalloc instead of kmalloc to terminate modalias buffer     - Use uppercase hex values to match correctly against hex values containing       letters  Cc: Dave Jones <davej@redhat.com> Cc: Kay Sievers <kay.sievers@vrfy.org> Cc: Jen Axboe <axboe@kernel.dk> Cc: Herbert Xu <herbert@gondor.apana.org.au> Cc: Huang Ying <ying.huang@intel.com> Cc: Len Brown <lenb@kernel.org> Signed-off-by: Andi Kleen <ak@linux.intel.com> Signed-off-by: Thomas Renninger <trenn@suse.de> Acked-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | percpu.h | s | 18K | 529 | Alex Shi | alex.shi@intel.com | 1337030132 |  | percpu: remove percpu_xxx() functions  Remove percpu_xxx serial functions, all of them were replaced by this_cpu_xxx or __this_cpu_xxx serial functions  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | pgtable-3level_types.h | s | 876B | 38 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1234553701 |  | x86: move more pagetable-related definitions into pgtable*.h  PAGETABLE_LEVELS and the PTE masks should be in pgtable*.h  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
f | page_64_types.h | s | 2.2K | 56 | Thomas Gleixner | tglx@linutronix.de | 1336478924 |  | x86: Use common threadinfo allocator  The only difference is the free_thread_info function, which frees xstate.  Use the new arch_release_task_struct() function instead and switch over to the core allocator.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Link: http://lkml.kernel.org/r/20120505150141.559556763@linutronix.de Cc: x86@kernel.org
f | special_insns.h | s | 3.8K | 158 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | syscalls.h | s | 1.9K | 54 | David Howells | dhowells@redhat.com | 1282093663 |  | Make do_execve() take a const filename pointer  Make do_execve() take a const filename pointer so that kernel_execve() compiles correctly on ARM:  arch/arm/kernel/sys_arm.c:88: warning: passing argument 1 of 'do_execve' discards qualifiers from pointer target type  This also requires the argv and envp arguments to be consted twice, once for the pointer array and once for the strings the array points to.  This is because do_execve() passes a pointer to the filename (now const) to copy_strings_kernel().  A simpler alternative would be to cast the filename pointer in do_execve() when it's passed to copy_strings_kernel().  do_execve() may not change any of the strings it is passed as part of the argv or envp lists as they are some of them in .rodata, so marking these strings as const should be fine.  Further kernel_execve() and sys_execve() need to be changed to match.  This has been test built on x86_64, frv, arm and mips.  Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Ralf Baechle <ralf@linux-mips.org> Acked-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | page.h | s | 2.0K | 54 | Namhyung Kim | namhyung@gmail.com | 1281509029 |  | x86: Document __phys_reloc_hide() usage in __pa_symbol()  Until all supported versions of gcc recognize -fno-strict-overflow, we should keep the RELOC_HIDE() magic in __pa_symbol(). Comment it.  Signed-off-by: Namhyung Kim <namhyung@gmail.com> LKML-Reference: <1281508661-29507-1-git-send-email-namhyung@gmail.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | div64.h | s | 1.5K | 59 | Sebastian Andrzej Siewior | bigeasy@linutronix.de | 1323105371 |  | x86/div64: Add a micro-optimization shortcut if base is power of two  In the target code I have a do_div(x, PAGE_SIZE). The x86-64 version of it was doing a shift and a mask which is clever. The 32bit version of it had a div operation in it which made me think. After digging I noticed that x86 has an optimized version of it. This patch adds this shift and mask optimization if base is constant so we don't have any runtime "checking" overhead since most users use a power of ten.  Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/1322649814-544-1-git-send-email-bigeasy@linutronix.de Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | seccomp_64.h | s | 501B | 13 | Roland McGrath | roland@redhat.com | 1236037290 |  | x86-64: seccomp: fix 32/64 syscall hole  On x86-64, a 32-bit process (TIF_IA32) can switch to 64-bit mode with ljmp, and then use the "syscall" instruction to make a 64-bit system call.  A 64-bit process make a 32-bit system call with int $0x80.  In both these cases under CONFIG_SECCOMP=y, secure_computing() will use the wrong system call number table.  The fix is simple: test TS_COMPAT instead of TIF_IA32.  Here is an example exploit:  	/* test case for seccomp circumvention on x86-64  	   There are two failure modes: compile with -m64 or compile with -m32.  	   The -m64 case is the worst one, because it does "chmod 777 ." (could 	   be any chmod call).  The -m32 case demonstrates it was able to do 	   stat(), which can glean information but not harm anything directly.  	   A buggy kernel will let the test do something, print, and exit 1; a 	   fixed kernel will make it exit with SIGKILL before it does anything. 	*/  	#define _GNU_SOURCE 	#include <assert.h> 	#include <inttypes.h> 	#include <stdio.h> 	#include <linux/prctl.h> 	#include <sys/stat.h> 	#include <unistd.h> 	#include <asm/unistd.h>  	int 	main (int argc, char **argv) 	{ 	  char buf[100]; 	  static const char dot[] = "."; 	  long ret; 	  unsigned st[24];  	  if (prctl (PR_SET_SECCOMP, 1, 0, 0, 0) != 0) 	    perror ("prctl(PR_SET_SECCOMP) -- not compiled into kernel?");  	#ifdef __x86_64__ 	  assert ((uintptr_t) dot < (1UL << 32)); 	  asm ("int $0x80 # %0 <- %1(%2 %3)" 	       : "=a" (ret) : "0" (15), "b" (dot), "c" (0777)); 	  ret = snprintf (buf, sizeof buf, 			  "result %ld (check mode on .!)\n", ret); 	#elif defined __i386__ 	  asm (".code32\n" 	       "pushl %%cs\n" 	       "pushl $2f\n" 	       "ljmpl $0x33, $1f\n" 	       ".code64\n" 	       "1: syscall # %0 <- %1(%2 %3)\n" 	       "lretl\n" 	       ".code32\n" 	       "2:" 	       : "=a" (ret) : "0" (4), "D" (dot), "S" (&st)); 	  if (ret == 0) 	    ret = snprintf (buf, sizeof buf, 			    "stat . -> st_uid=%u\n", st[7]); 	  else 	    ret = snprintf (buf, sizeof buf, "result %ld\n", ret); 	#else 	# error "not this one" 	#endif  	  write (1, buf, ret);  	  syscall (__NR_exit, 1); 	  return 2; 	}  Signed-off-by: Roland McGrath <roland@redhat.com> [ I don't know if anybody actually uses seccomp, but it's enabled in   at least both Fedora and SuSE kernels, so maybe somebody is. - Linus ] Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cmpxchg.h | s | 6.9K | 213 | H. Peter Anvin | hpa@zytor.com | 1333730407 |  | x86: Use correct byte-sized register constraint in __add()  Similar to:   2ca052a x86: Use correct byte-sized register constraint in __xchg_op()  ... the __add() macro also needs to use a "q" constraint in the byte-sized case, lest we try to generate an illegal register.  Link: http://lkml.kernel.org/r/4F7A3315.501@goop.org Signed-off-by: H. Peter Anvin <hpa@zytor.com> Cc: Jeremy Fitzhardinge <jeremy@goop.org> Cc: Leigh Scott <leigh123linux@googlemail.com> Cc: Thomas Reitmayr <treitmayr@devbase.at> Cc: <stable@vger.kernel.org> v3.3
f | msr.h | s | 7.7K | 257 | H. Peter Anvin | hpa@linux.intel.com | 1334880454 |  | x86, doc: Revert "x86: Document rdmsr_safe restrictions"  This reverts commit ce37defc0f6673f5ca2c92ed5cfcaf290ae7dd16 "x86: Document rdmsr_safe restrictions", as these restrictions no longer apply.  Reported-by: Borislav Petkov <borislav.petkov@amd.com> Link: http://lkml.kernel.org/r/20120419171609.GH3221@aftab.osrc.amd.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | vvar.h | s | 1.5K | 39 | Andy Lutomirski | luto@MIT.EDU | 1307302232 |  | x86-64: Give vvars their own page  Move vvars out of the vsyscall page into their own page and mark it NX.  Without this patch, an attacker who can force a daemon to call some fixed address could wait until the time contains, say, 0xCD80, and then execute the current time.  Signed-off-by: Andy Lutomirski <luto@mit.edu> Cc: Jesper Juhl <jj@chaosbits.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Arjan van de Ven <arjan@infradead.org> Cc: Jan Beulich <JBeulich@novell.com> Cc: richard -rw- weinberger <richard.weinberger@gmail.com> Cc: Mikael Pettersson <mikpe@it.uu.se> Cc: Andi Kleen <andi@firstfloor.org> Cc: Brian Gerst <brgerst@gmail.com> Cc: Louis Rilling <Louis.Rilling@kerlabs.com> Cc: Valdis.Kletnieks@vt.edu Cc: pageexec@freemail.hu Link: http://lkml.kernel.org/r/b1460f81dc4463d66ea3f2b5ce240f58d48effec.1307292171.git.luto@mit.edu Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | xsave.h | s | 3.6K | 120 | H. Peter Anvin | hpa@zytor.com | 1334955100 |  | x86, extable: Remove open-coded exception table entries in arch/x86/include/asm/xsave.h  Remove open-coded exception table entries in arch/x86/include/asm/xsave.h, and replace them with _ASM_EXTABLE() macros; this will allow us to change the format and type of the exception table entries.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Cc: David Daney <david.daney@cavium.com> Cc: Suresh Siddha <suresh.b.siddha@intel.com> Link: http://lkml.kernel.org/r/CA%2B55aFyijf43qSu3N9nWHEBwaGbb7T2Oq9A=9EyR=Jtyqfq_cQ@mail.gmail.com
f | realmode.h | s | 1.2K | 53 | H. Peter Anvin | hpa@linux.intel.com | 1337202125 |  | x86, realmode: Change EFER to a single u64 field  Change EFER to be a single u64 field instead of two u32 fields; change the order to maintain alignment.  Note that on x86-64 cr4 is really also a 64-bit quantity, although we can only set the low 32 bits from the trampoline code since it is still executing in 32-bit mode at that point.  Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: Jarkko Sakkinen <jarkko.sakkinen@intel.com>
f | highmem.h | s | 2.0K | 65 | Cong Wang | amwang@redhat.com | 1332251310 |  | highmem: kill all __kmap_atomic() [swarren@nvidia.com: highmem: Fix ARM build break due to __kmap_atomic rename]  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Cong Wang <amwang@redhat.com>
f | i8259.h | s | 1.7K | 56 | Thomas Gleixner | tglx@linutronix.de | 1286895216 |  | x86: i8259: Convert to new irq_chip functions  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Reviewed-by: Ingo Molnar <mingo@elte.hu>
f | auxvec.h | s | 483B | 17 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | entry_arch.h | s | 1.8K | 47 | Hidetoshi Seto | seto.hidetoshi@jp.fujitsu.com | 1308219008 |  | x86, mce: Replace MCE_SELF_VECTOR by irq_work  The MCE handler uses a special vector for self IPI to invoke post-emergency processing in an interrupt context, e.g. call an NMI-unsafe function, wakeup loggers, schedule time-consuming work for recovery, etc.  This mechanism is now generalized by the following commit:   > e360adbe29241a0194e10e20595360dd7b98a2b3  > Author: Peter Zijlstra <a.p.zijlstra@chello.nl>  > Date:   Thu Oct 14 14:01:34 2010 +0800  >  >  irq_work: Add generic hardirq context callbacks  >  >  Provide a mechanism that allows running code in IRQ context. It is  >  most useful for NMI code that needs to interact with the rest of the  >  system -- like wakeup a task to drain buffers.  :  So change to use provided generic mechanism.  Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com> Acked-by: Tony Luck <tony.luck@intel.com> Link: http://lkml.kernel.org/r/4DEED6B2.6080005@jp.fujitsu.com Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | param.h | s | 31B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | calgary.h | s | 2.3K | 62 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1282860793 |  | x86, iommu: Make all IOMMU's detection routines return a value.  We return 1 if the IOMMU has been detected. Zero or an error number if we failed to find it. This is in preperation of using the IOMMU_INIT so that we can detect whether an IOMMU is present. I have not tested this for regression on Calgary, nor on AMD Vi chipsets as I don't have that hardware.  CC: Muli Ben-Yehuda <muli@il.ibm.com> CC: "Jon D. Mason" <jdmason@kudzu.us> CC: "Darrick J. Wong" <djwong@us.ibm.com> CC: Jesse Barnes <jbarnes@virtuousgeek.org> CC: David Woodhouse <David.Woodhouse@intel.com> CC: Chris Wright <chrisw@sous-sol.org> CC: Yinghai Lu <yinghai@kernel.org> CC: Joerg Roedel <joerg.roedel@amd.com> CC: H. Peter Anvin <hpa@zytor.com> CC: Fujita Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> LKML-Reference: <1282845485-8991-3-git-send-email-konrad.wilk@oracle.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | dmi.h | s | 411B | 14 | Jeremy Fitzhardinge | jeremy@goop.org | 1237825250 |  | x86/dmi: fix dmi_alloc() section mismatches  Impact: section mismatch fix  Ingo reports these warnings: > WARNING: vmlinux.o(.text+0x6a288e): Section mismatch in reference from > the function dmi_alloc() to the function .init.text:extend_brk() > The function dmi_alloc() references > the function __init extend_brk(). > This is often because dmi_alloc lacks a __init annotation or the > annotation of extend_brk is wrong.  dmi_alloc() is a static inline, and so should be immune to this kind of error.  But force it to be inlined and make it __init anyway, just to be extra sure.  All of dmi_alloc()'s callers are already __init.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Cc: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <49C6B23C.2040308@goop.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | debugreg.h | s | 5.5K | 162 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330469284 |  | x86: relocate get/set debugreg fcns to include/asm/debugreg.  Since we already have a debugreg.h header file, move the assoc. get/set functions to it.  In addition to it being the logical home for them, it has a secondary advantage.  The functions that are moved use BUG().  So we really need to have linux/bug.h in scope.  But asm/processor.h is used about 600 times, vs. only about 15 for debugreg.h -- so adding bug.h to the latter reduces the amount of time we'll be processing it during a compile.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Acked-by: Ingo Molnar <mingo@elte.hu> CC: Thomas Gleixner <tglx@linutronix.de> CC: "H. Peter Anvin" <hpa@zytor.com>
f | olpc.h | s | 3.6K | 120 | Daniel Drake | dsd@laptop.org | 1309988678 |  | x86, olpc-xo1-sci: Add GPE handler and ebook switch functionality  The EC in the OLPC XO-1 delivers GPE events to provide various notifications. Add the basic code for GPE/EC event processing and enable the ebook switch, which can be used as a wakeup source.  Signed-off-by: Daniel Drake <dsd@laptop.org> Link: http://lkml.kernel.org/r/1309019658-1712-8-git-send-email-dsd@laptop.org Acked-by: Andres Salomon <dilinger@queued.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | kvm.h | s | 6.1K | 285 | Christian Borntraeger | borntraeger@de.ibm.com | 1330951942 |  | KVM: provide synchronous registers in kvm_run  On some cpus the overhead for virtualization instructions is in the same range as a system call. Having to call multiple ioctls to get set registers will make certain userspace handled exits more expensive than necessary. Lets provide a section in kvm_run that works as a shared save area for guest registers. We also provide two 64bit flags fields (architecture specific), that will specify 1. which parts of these fields are valid. 2. which registers were modified by userspace  Each bit for these flag fields will define a group of registers (like general purpose) or a single register.  Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | pgalloc.h | s | 4.0K | 112 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1288640314 |  | tree-wide: fix comment/printk typos  "gadget", "through", "command", "maintain", "maintain", "controller", "address", "between", "initiali[zs]e", "instead", "function", "select", "already", "equal", "access", "management", "hierarchy", "registration", "interest", "relative", "memory", "offset", "already",  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | apic.h | s | 15K | 532 | Michael S. Tsirkin | mst@redhat.com | 1337327169 |  | x86/apic: Implement EIO micro-optimization  We know both register and value for eoi beforehand, so there's no need to check it and no need to do math to calculate the msr. Saves instructions/branches on each EOI when using x2apic.  I looked at the objdump output to verify that the generated code looks right and actually is shorter.  The real improvemements will be on the KVM guest side though, those come in a later patch.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Cc: Avi Kivity <avi@redhat.com> Cc: Marcelo Tosatti <mtosatti@redhat.com> Cc: gleb@redhat.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Link: http://lkml.kernel.org/r/e019d1a125316f10d3e3a4b2f6bda41473f4fb72.1337184153.git.mst@redhat.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | insn.h | s | 5.8K | 176 | Masami Hiramatsu | masami.hiramatsu.pt@hitachi.com | 1328969495 |  | x86: Fix to decode grouped AVX with VEX pp bits  Fix to decode grouped AVX with VEX pp bits which should be handled as same as last-prefixes. This fixes below warnings in posttest with CONFIG_CRYPTO_SHA1_SSSE3=y.   Warning: arch/x86/tools/test_get_len found difference at <sha1_transform_avx>:ffffffff810d5fc0  Warning: ffffffff810d6069:	c5 f9 73 de 04       	vpsrldq $0x4,%xmm6,%xmm0  Warning: objdump says 5 bytes, but insn_get_length() says 4  ...  With this change, test_get_len can decode it correctly.   $ arch/x86/tools/test_get_len -v -y  ffffffff810d6069:       c5 f9 73 de 04          vpsrldq $0x4,%xmm6,%xmm0  Succeed: decoded and checked 1 instructions  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: yrl.pp-manager.tt@hitachi.com Link: http://lkml.kernel.org/r/20120210053340.30429.73410.stgit@localhost.localdomain Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | gpio.h | s | 106B | 4 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1336780814 |  | gpiolib/arches: Centralise bolierplate asm/gpio.h  Rather than requiring architectures that use gpiolib but don't have any need to define anything custom to copy an asm/gpio.h provide a Kconfig symbol which architectures must select in order to include gpio.h and for other architectures just provide the trivial implementation directly.  This makes it much easier to do gpiolib updates and is also a step towards making gpiolib APIs available on every architecture.  For architectures with existing boilerplate code leave a stub header in place which warns on direct inclusion of asm/gpio.h and includes linux/gpio.h to catch code that's doing this.  Direct inclusion of asm/gpio.h has long been deprecated.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Acked-by: Jonas Bonn <jonas@southpole.se> Acked-by: Tony Luck <tony.luck@intel.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
f | asm-offsets.h | s | 35B | 1 | Sam Ravnborg | sam@ravnborg.org | 1260619694 |  | kbuild: move asm-offsets.h to include/generated  The simplest method was to add an extra asm-offsets.h file in arch/$ARCH/include/asm that references the generated file.  We can now migrate the architectures one-by-one to reference the generated file direct - and when done we can delete the temporary arch/$ARCH/include/asm/asm-offsets.h file.  Signed-off-by: Sam Ravnborg <sam@ravnborg.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | scatterlist.h | s | 164B | 5 | FUJITA Tomonori | fujita.tomonori@lab.ntt.co.jp | 1281197750 |  | remove needless ISA_DMA_THRESHOLD  Architectures don't need to define ISA_DMA_THRESHOLD anymore.  Signed-off-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Acked-by: James Bottomley <James.Bottomley@suse.de> Acked-by: David Howells <dhowells@redhat.com> Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
f | desc_defs.h | s | 2.6K | 87 | André Goddard Rosa | andre.goddard@gmail.com | 1259937595 |  | tree-wide: fix assorted typos all over the place  That is "success", "unknown", "through", "performance", "[re||un]mapping" , "access", "default", "reasonable", "[con]currently", "temperature" , "channel", "[un]used", "application", "example","hierarchy", "therefore" , "[over||under]flow", "contiguous", "threshold", "enough" and others.  Signed-off-by: André Goddard Rosa <andre.goddard@gmail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | time.h | s | 258B | 8 | Ralf Baechle | ralf@linux-mips.org | 1307624500 |  | x86: i8253: Consolidate definitions of global_clock_event  There are multiple declarations of global_clock_event in header files specific to particular clock event implementations.  Consolidate them in <asm/time.h> and make sure all users include that header.  Signed-off-by: Ralf Baechle <ralf@linux-mips.org> Cc: Venkatesh Pallipadi (Venki) <venki@google.com> Link: http://lkml.kernel.org/r/20110601180610.762763451@duck.linux-mips.net Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | ldt.h | s | 963B | 36 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | desc.h | s | 10K | 335 | Alex Shi | alex.shi@intel.com | 1337030131 |  | x86: replace percpu_xxx funcs with this_cpu_xxx  Since percpu_xxx() serial functions are duplicated with this_cpu_xxx(). Removing percpu_xxx() definition and replacing them by this_cpu_xxx() in code. There is no function change in this patch, just preparation for later percpu_xxx serial function removing.  On x86 machine the this_cpu_xxx() serial functions are same as __this_cpu_xxx() without no unnecessary premmpt enable/disable.  Thanks for Stephen Rothwell, he found and fixed a i386 build error in the patch.  Also thanks for Andrew Morton, he kept updating the patchset in Linus' tree.  Signed-off-by: Alex Shi <alex.shi@intel.com> Acked-by: Christoph Lameter <cl@gentwo.org> Acked-by: Tejun Heo <tj@kernel.org> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Tejun Heo <tj@kernel.org>
f | resume-trace.h | s | 540B | 18 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | swab.h | s | 1.2K | 56 | Jaswinder Singh Rajput | jaswinderrajput@gmail.com | 1233341372 |  | headers_check fix: x86, swab.h  fix the following 'make headers_check' warnings:    usr/include/asm/swab.h:4: include of <linux/types.h> is preferred over <asm/types.h>   usr/include/asm/swab.h:7: found __[us]{8,16,32,64} type without #include <linux/types.h>  Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com>
f | fb.h | s | 376B | 13 | Dave Airlie | airlied@redhat.com | 1266384146 |  | x86-64: Allow fbdev primary video code  For some reason the 64-bit tree was doing this differently and I can't see why it would need to.  This correct behaviour when you have two GPUs plugged in and 32-bit put the console in one place and 64-bit in another.  Signed-off-by: Dave Airlie <airlied@redhat.com> LKML-Reference: <1262847894-27498-1-git-send-email-airlied@gmail.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mach_traps.h | s | 974B | 35 | Jacob Pan | jacob.jun.pan@linux.intel.com | 1320938461 |  | x86/mrst: Avoid reporting wrong nmi status  Moorestown/Medfield platform does not have port 0x61 to report NMI status, nor does it have external NMI sources. The only NMI sources are from lapic, as results of perf counter overflow or IPI, e.g. NMI watchdog or spin lock debug.  Reading port 0x61 on Moorestown will return 0xff which misled NMI handlers to false critical errors such memory parity error. The subsequent ioport access for NMI handling can also cause undefined behavior on Moorestown.  This patch allows kernel process NMI due to watchdog or backrace dump without unnecessary hangs.  Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com> Signed-off-by: Ingo Molnar <mingo@elte.hu> [hand applied] Signed-off-by: Alan Cox <alan@linux.intel.com>
f | irq.h | s | 1016B | 34 | Sebastian Andrzej Siewior | bigeasy@linutronix.de | 1298496472 |  | x86: Add device tree support  This patch adds minimal support for device tree on x86. The device tree blob is passed to the kernel via setup_data which requires at least boot protocol 2.09.  Memory size, restricted memory regions, boot arguments are gathered the traditional way so things like cmd_line are just here to let the code compile.  The current plan is use the device tree as an extension and to gather information which can not be enumerated and would have to be hardcoded otherwise. This includes things like    - which devices are on this I2C/SPI bus?    - how are the interrupts wired to IO APIC?    - where could my hpet be?  Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Signed-off-by: Dirk Brandewie <dirk.brandewie@gmail.com> Acked-by: Grant Likely <grant.likely@secretlab.ca> Cc: sodaville@linutronix.de Cc: devicetree-discuss@lists.ozlabs.org LKML-Reference: <1298405266-1624-3-git-send-email-bigeasy@linutronix.de> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | inat.h | s | 6.0K | 193 | Masami Hiramatsu | masami.hiramatsu.pt@hitachi.com | 1328969495 |  | x86: Fix to decode grouped AVX with VEX pp bits  Fix to decode grouped AVX with VEX pp bits which should be handled as same as last-prefixes. This fixes below warnings in posttest with CONFIG_CRYPTO_SHA1_SSSE3=y.   Warning: arch/x86/tools/test_get_len found difference at <sha1_transform_avx>:ffffffff810d5fc0  Warning: ffffffff810d6069:	c5 f9 73 de 04       	vpsrldq $0x4,%xmm6,%xmm0  Warning: objdump says 5 bytes, but insn_get_length() says 4  ...  With this change, test_get_len can decode it correctly.   $ arch/x86/tools/test_get_len -v -y  ffffffff810d6069:       c5 f9 73 de 04          vpsrldq $0x4,%xmm6,%xmm0  Succeed: decoded and checked 1 instructions  Reported-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: yrl.pp-manager.tt@hitachi.com Link: http://lkml.kernel.org/r/20120210053340.30429.73410.stgit@localhost.localdomain Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | fcntl.h | s | 31B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | thread_info.h | s | 8.8K | 246 | Al Viro | viro@zeniv.linux.org.uk | 1338569930 |  | set_restore_sigmask() is never called without SIGPENDING (and never should be)  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | timex.h | s | 266B | 8 | Arnd Bergmann | arnd@arndb.de | 1245206847 |  | time: move PIT_TICK_RATE to linux/timex.h  PIT_TICK_RATE is currently defined in four architectures, but in three different places.  While linux/timex.h is not the perfect place for it, it is still a reasonable replacement for those drivers that traditionally use asm/timex.h to get CLOCK_TICK_RATE and expect it to be the PIT frequency.  Note that for Alpha, the actual value changed from 1193182UL to 1193180UL.  This is unlikely to make a difference, and probably can only improve accuracy.  There was a discussion on the correct value of CLOCK_TICK_RATE a few years ago, after which every existing instance was getting changed to 1193182.  According to the specification, it should be 1193181.818181...  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Len Brown <lenb@kernel.org> Cc: john stultz <johnstul@us.ibm.com> Cc: Dmitry Torokhov <dtor@mail.ru> Cc: Takashi Iwai <tiwai@suse.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | dma-contiguous.h | s | 253B | 9 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605778 |  | X86: integrate CMA with DMA-mapping subsystem  This patch adds support for CMA to dma-mapping subsystem for x86 architecture that uses common pci-dma/pci-nommu implementation. This allows to test CMA on KVM/QEMU and a lot of common x86 boxes.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> CC: Michal Nazarewicz <mina86@mina86.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | apic_flat_64.h | s | 112B | 4 | Daniel J Blueman | daniel@numascale-asia.com | 1323101827 |  | x86: Make flat_init_apic_ldr() available  Allow flat_init_apic_ldr() to be used outside the compilation unit for similar APIC implementations.  Signed-off-by: Daniel J Blueman <daniel@numascale-asia.com> Cc: Steffen Persvold <sp@numascale.com> Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Link: http://lkml.kernel.org/r/1323073238-32686-1-git-send-email-daniel@numascale-asia.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | rwsem.h | s | 5.9K | 194 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1314650652 |  | x86: Use xadd helper more widely  This covers the trivial cases from open-coded xadd to the xadd macros.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Link: http://lkml.kernel.org/r/4E5BCC40.3030501@goop.org Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | pgtable.h | s | 18K | 621 | Jesper Juhl | jj@chaosbits.net | 1324196058 |  | x86: Use "do { } while(0)" for empty flush_tlb_fix_spurious_fault() macro  If one builds the kernel with -Wempty-body one gets this warning:    mm/memory.c:3432:46: warning: suggest braces around empty body in an ¡if¢ statement [-Wempty-body]  due to the fact that 'flush_tlb_fix_spurious_fault' is a macro that can sometimes be defined to nothing.  Signed-off-by: Jesper Juhl <jj@chaosbits.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Cc: linux-mm@kvack.org Cc: Michel Lespinasse <walken@google.com> Cc: Hugh Dickins <hughd@google.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Rik van Riel <riel@redhat.com> Cc: Mel Gorman <mel@csn.ul.ie> Cc: Johannes Weiner <hannes@cmpxchg.org> Link: http://lkml.kernel.org/r/alpine.LNX.2.00.1112180128070.21784@swampdragon.chaosbits.net Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | ipcbuf.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | socket.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | asm.h | s | 1.8K | 62 | H. Peter Anvin | hpa@zytor.com | 1334967754 |  | x86, extable: Switch to relative exception table entries  Switch to using relative exception table entries on x86.  On i386, this has the advantage that the exception table entries don't need to be relocated; on x86-64 this means the exception table entries take up only half the space.  In either case, a 32-bit delta is sufficient, as the range of kernel code addresses is limited.  Since part of the goal is to avoid needing to adjust the entries when the kernel is relocated, the old trick of using addresses in the NULL pointer range to indicate uaccess_err no longer works (and unlike RISC architectures we can't use a flag bit); instead use an delta just below +2G to indicate these special entries.  The reach is still limited to a single instruction.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> Cc: David Daney <david.daney@cavium.com> Link: http://lkml.kernel.org/r/CA%2B55aFyijf43qSu3N9nWHEBwaGbb7T2Oq9A=9EyR=Jtyqfq_cQ@mail.gmail.com
f | processor-flags.h | s | 3.6K | 94 | Seiichi Ikarashi | s.ikarashi@jp.fujitsu.com | 1323162158 |  | x86: Fix rflags in FAKE_STACK_FRAME  The x86_64 kernel pushes the fake kernel stack in arch/x86/kernel/entry_64.S:FAKE_STACK_FRAME, and rflags register in it does not conform to the specification.  Although Intel's manual[1] says bit 1 of it shall be set to 1, this bit is cleared to 0 on pushing the fake stack.  [1] Intel(R) 64 and IA-32 Architectures Software Developer's Manual     Vol.1 3-21 Figure 3-8. EFLAGS Register  If it is not on purpose, it is better to be fixed, because it can lead some tools misunderstanding the stack frame. For example, "crash" utility[2] actually detects it and warns you like below:         RIP: ffffffff8005dfa2  RSP: ffff8104ce0c7f58  RFLAGS: 00000200        [...]         bt: WARNING: possibly bogus exception frame  Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com> Tested-by: Masayoshi MIZUMA <m.mizuma@jp.fujitsu.com> Cc: Jan Beulich <JBeulich@suse.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | pgtable_types.h | s | 10K | 281 | Andy Lutomirski | luto@mit.edu | 1307302233 |  | x86-64: Map the HPET NX  Currently the HPET mapping is a user-accessible syscall instruction at a fixed address some of the time.  A sufficiently determined hacker might be able to guess when.  Signed-off-by: Andy Lutomirski <luto@mit.edu> Cc: Jesper Juhl <jj@chaosbits.net> Cc: Borislav Petkov <bp@alien8.de> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Arjan van de Ven <arjan@infradead.org> Cc: Jan Beulich <JBeulich@novell.com> Cc: richard -rw- weinberger <richard.weinberger@gmail.com> Cc: Mikael Pettersson <mikpe@it.uu.se> Cc: Andi Kleen <andi@firstfloor.org> Cc: Brian Gerst <brgerst@gmail.com> Cc: Louis Rilling <Louis.Rilling@kerlabs.com> Cc: Valdis.Kletnieks@vt.edu Cc: pageexec@freemail.hu Link: http://lkml.kernel.org/r/ab41b525a4ca346b1ca1145d16fb8d181861a8aa.1307292171.git.luto@mit.edu Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | init.h | s | 511B | 14 | Pekka Enberg | penberg@kernel.org | 1321003375 |  | x86, mm: Unify zone_sizes_init()  Now that zone_sizes_init() is identical on 32-bit and 64-bit, move the code to arch/x86/mm/init.c and use it for both architectures.  Acked-by: Tejun Heo <tj@kernel.org> Acked-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Pekka Enberg <penberg@kernel.org> Link: http://lkml.kernel.org/r/1320155902-10424-7-git-send-email-penberg@kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | pgtable-3level.h | s | 6.2K | 174 | Andrea Arcangeli | aarcange@redhat.com | 1340228375 |  | thp: avoid atomic64_read in pmd_read_atomic for 32bit PAE  In the x86 32bit PAE CONFIG_TRANSPARENT_HUGEPAGE=y case while holding the mmap_sem for reading, cmpxchg8b cannot be used to read pmd contents under Xen.  So instead of dealing only with "consistent" pmdvals in pmd_none_or_trans_huge_or_clear_bad() (which would be conceptually simpler) we let pmd_none_or_trans_huge_or_clear_bad() deal with pmdvals where the low 32bit and high 32bit could be inconsistent (to avoid having to use cmpxchg8b).  The only guarantee we get from pmd_read_atomic is that if the low part of the pmd was found null, the high part will be null too (so the pmd will be considered unstable).  And if the low part of the pmd is found "stable" later, then it means the whole pmd was read atomically (because after a pmd is stable, neither MADV_DONTNEED nor page faults can alter it anymore, and we read the high part after the low part).  In the 32bit PAE x86 case, it is enough to read the low part of the pmdval atomically to declare the pmd as "stable" and that's true for THP and no THP, furthermore in the THP case we also have a barrier() that will prevent any inconsistent pmdvals to be cached by a later re-read of the *pmd.  Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Cc: Jonathan Nieder <jrnieder@gmail.com> Cc: Ulrich Obergfell <uobergfe@redhat.com> Cc: Mel Gorman <mgorman@suse.de> Cc: Hugh Dickins <hughd@google.com> Cc: Larry Woodman <lwoodman@redhat.com> Cc: Petr Matousek <pmatouse@redhat.com> Cc: Rik van Riel <riel@redhat.com> Cc: Jan Beulich <jbeulich@suse.com> Cc: KOSAKI Motohiro <kosaki.motohiro@gmail.com> Tested-by: Andrew Jones <drjones@redhat.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | x2apic.h | s | 1.2K | 55 | Steffen Persvold | sp@numascale.com | 1332505723 |  | x86/apic: Add separate apic_id_valid() functions for selected apic drivers  As suggested by Suresh Siddha and Yinghai Lu:  For x2apic pre-enabled systems, apic driver is set already early through early_acpi_boot_init()/early_acpi_process_madt()/ acpi_parse_madt()/default_acpi_madt_oem_check() path so that apic_id_valid() checking will be sufficient during MADT and SRAT parsing.  For non-x2apic pre-enabled systems, all apic ids should be less than 255.  This allows us to substitute the checks in arch/x86/kernel/acpi/boot.c::acpi_parse_x2apic() and arch/x86/mm/srat.c::acpi_numa_x2apic_affinity_init() with apic->apic_id_valid().  In addition we can avoid feigning the x2apic cpu feature in the NumaChip apic code.  The following apic drivers have separate apic_id_valid() functions which will accept x2apic type IDs :   x2apic_phys  x2apic_cluster  x2apic_uv_x  apic_numachip  Signed-off-by: Steffen Persvold <sp@numascale.com> Cc: Suresh Siddha <suresh.b.siddha@intel.com> Cc: Daniel J Blueman <daniel@numascale-asia.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Jack Steiner <steiner@sgi.com> Link: http://lkml.kernel.org/r/1331925935-13372-1-git-send-email-sp@numascale.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | stat.h | s | 2.9K | 111 | Linus Torvalds | torvalds@linux-foundation.org | 1336352560 |  | vfs: don't force a big memset of stat data just to clear padding fields  Admittedly this is something that the compiler should be able to just do for us, but gcc just isn't that smart.  And trying to use a structure initializer (which would get us the right semantics) ends up resulting in gcc allocating stack space for _two_ 'struct stat', and then copying one into the other.  So do it by hand - just have a per-architecture macro that initializes the padding fields.  And if the architecture doesn't provide one, fall back to the old behavior of just doing the whole memset() first.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | apm.h | s | 1.7K | 67 | Ingo Molnar | mingo@elte.hu | 1233235011 |  | x86: move mach-default/*.h files to asm/  We are getting rid of subarchitecture support - move the hook files to asm/. (These are now stale and should be replaced with more explicit runtime mechanisms - but the transition is simpler this way.)  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | irq_vectors.h | s | 4.8K | 146 | Yinghai Lu | yinghai.lu@oracle.com | 1318500732 |  | x86/irq: Standardize on CONFIG_SPARSE_IRQ=y  Sparseirq got introduced in v2.6.28 and Thomas did a huge cleanup around v2.6.38 that eliminated basically all disadvantages of it.  So we can remove non-sparseirq support now and simplify our IRQ degrees of freedom a bit.  Suggested-and-acked-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Yinghai Lu <yinghai@kernel.org> Link: http://lkml.kernel.org/r/4E95E21D.6090200@oracle.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | inst.h | s | 4.1K | 221 | Huang Ying | ying.huang@intel.com | 1269437877 |  | crypto: aesni-intel - Fix another CTR build failure with gas 2.16.1  The previous AES-NI CTR optimization compiling failure gas 2.16.1 fix introduces another compiling failure by itself. This patch fixes that.  Reported-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | shmbuf.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | checksum_32.h | s | 4.8K | 169 | Samuel Thibault | samuel.thibault@ens-lyon.org | 1254438672 |  | x86: fix csum_ipv6_magic asm memory clobber  Just like ip_fast_csum, the assembly snippet in csum_ipv6_magic needs a memory clobber, as it is only passed the address of the buffer, not a memory reference to the buffer itself.  This caused failures in Hurd's pfinetv4 when we tried to compile it with gcc-4.3 (bogus checksums).  Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Acked-by: "David S. Miller" <davem@davemloft.net> Cc: Andi Kleen <andi@firstfloor.org> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | uaccess.h | s | 17K | 522 | Arun Sharma | asharma@fb.com | 1338995281 |  | perf/x86: Check if user fp is valid  Signed-off-by: Arun Sharma <asharma@fb.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: linux-kernel@vger.kernel.org Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1334961696-19580-4-git-send-email-asharma@fb.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | olpc_ofw.h | s | 1.1K | 25 | Daniel Drake | dsd@laptop.org | 1300223843 |  | x86, olpc: Use device tree for platform identification  Make OLPC fully depend on device tree, and use it to identify the OLPC platform details. Some nodes are exposed as platform devices where we plan to use device tree for device probing.  Signed-off-by: Daniel Drake <dsd@laptop.org> Acked-by: Grant Likely <grant.likely@secretlab.ca> LKML-Reference: <20110313151017.C255F9D401E@zog.reactivated.net> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
d | visws |  | 4 items |  | Thomas Gleixner | tglx@linutronix.de | 1266624749 |  | x86: Move pci init function to x86_init  The PCI initialization in pci_subsys_init() is a mess. pci_numaq_init, pci_acpi_init, pci_visws_init and pci_legacy_init are called and each implementation checks and eventually modifies the global variable pcibios_scanned.  x86_init functions allow us to do this more elegant. The pci.init function pointer is preset to pci_legacy_init. numaq, acpi and visws can modify the pointer in their early setup functions. The functions return 0 when they did the full initialization including bus scan. A non zero return value indicates that pci_legacy_init needs to be called either because the selected function failed or wants the generic bus scan in pci_legacy_init to happen (e.g. visws).  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> LKML-Reference: <43F901BD926A4E43B106BF17856F07559FB80CFE@orsmsx508.amr.corp.intel.com> Acked-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-off-by: Jacob Pan <jacob.jun.pan@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | switch_to.h | s | 4.6K | 118 | David Howells | dhowells@redhat.com | 1332954672 |  | Disintegrate asm/system.h for X86  Disintegrate asm/system.h for X86.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> cc: x86@kernel.org
f | vsyscall.h | s | 803B | 28 | Andy Lutomirski | luto@mit.edu | 1313022406 |  | x86-64: Rework vsyscall emulation and add vsyscall= parameter  There are three choices:  vsyscall=native: Vsyscalls are native code that issues the corresponding syscalls.  vsyscall=emulate (default): Vsyscalls are emulated by instruction fault traps, tested in the bad_area path.  The actual contents of the vsyscall page is the same as the vsyscall=native case except that it's marked NX.  This way programs that make assumptions about what the code in the page does will not be confused when they read that code.  vsyscall=none: Trying to execute a vsyscall will segfault.  Signed-off-by: Andy Lutomirski <luto@mit.edu> Link: http://lkml.kernel.org/r/8449fb3abf89851fd6b2260972666a6f82542284.1312988155.git.luto@mit.edu Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | swiotlb.h | s | 670B | 28 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1282860809 |  | x86, swiotlb: Simplify SWIOTLB pci_swiotlb_detect routine.  In 'pci_swiotlb_detect' we used to do two different things:  a). If user provided 'iommu=soft' or 'swiotlb=force' we      would set swiotlb=1 and return 1 (and forcing pci-dma.c      to call pci_swiotlb_init() immediately).  b). If 4GB or more would be detected and if user did not specify      iommu=off, we would set 'swiotlb=1' and return whatever 'a)'      figured out.  We simplify this by splitting a) and b) in two different routines.  CC: Fujita Tomonori <fujita.tomonori@lab.ntt.co.jp> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> LKML-Reference: <1282845485-8991-5-git-send-email-konrad.wilk@oracle.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | mmx.h | s | 298B | 10 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | vga.h | s | 570B | 20 | Matthew Garrett | mjg@redhat.com | 1335257418 |  | efifb: Implement vga_default_device() (v2)  EFI doesn't typically make use of the legacy VGA ROM, but it may still be configured to pass that through to a given video device. This may lead to an inaccurate choice of default video device. Add support to efifb to pick out the correct active video device.  v2: fix if->ifdef  Signed-off-by: Matthew Garrett <mjg@redhat.com> Acked-by: hpa@zytor.com Cc: matt.fleming@intel.com Signed-off-by: Dave Airlie <airlied@redhat.com>
f | ptrace-abi.h | s | 1.8K | 73 | Lucas De Marchi | lucas.de.marchi@gmail.com | 1300441170 |  | x86: Fix common misspellings  They were generated by 'codespell' and then manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi> Cc: trivial@kernel.org LKML-Reference: <1300389856-1099-3-git-send-email-lucas.demarchi@profusion.mobi> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mman.h | s | 170B | 5 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | string_64.h | s | 1.8K | 58 | Vegard Nossum | vegard.nossum@gmail.com | 1245062402 |  | x86: add hooks for kmemcheck  The hooks that we modify are: - Page fault handler (to handle kmemcheck faults) - Debug exception handler (to hide pages after single-stepping   the instruction that caused the page fault)  Also redefine memset() to use the optimized version if kmemcheck is enabled.  (Thanks to Pekka Enberg for minimizing the impact on the page fault handler.)  As kmemcheck doesn't handle MMX/SSE instructions (yet), we also disable the optimized xor code, and rely instead on the generic C implementation in order to avoid false-positive warnings.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>  [whitespace fixlet] Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi> Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | signal.h | s | 5.5K | 210 | Arnd Bergmann | arnd@arndb.de | 1244746912 |  | asm-generic: rename termios.h, signal.h and mman.h  The existing asm-generic versions are incomplete and included by some architectures. New architectures should be able to use a generic version, so rename the existing files and change all users, which lets us add the new files.  Signed-off-by: Remis Lima Baima <remis.developer@googlemail.com> Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | posix_types_32.h | s | 702B | 18 | Al Viro | viro@zeniv.linux.org.uk | 1338426290 |  | bury __kernel_nlink_t, make internal nlink_t consistent  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | numa_64.h | s | 138B | 4 | Tejun Heo | tj@kernel.org | 1304338733 |  | x86, NUMA: Move NUMA init logic from numa_64.c to numa.c  Move the generic 64bit NUMA init machinery from numa_64.c to numa.c.  * node_data[], numa_mem_info and numa_distance * numa_add_memblk[_to](), numa_remove_memblk[_from]() * numa_set_distance() and friends * numa_init() and all the numa_meminfo handling helpers called from it * dummy_numa_init() * memory_add_physaddr_to_nid()  A new function x86_numa_init() is added and the content of numa_64.c::initmem_init() is moved into it.  initmem_init() now simply calls x86_numa_init().  Constants and numa_off declaration are moved from numa_{32||64}.h to numa.h.  This is code reorganization and doesn't involve any functional change.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: David Rientjes <rientjes@google.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | required-features.h | s | 2.3K | 76 | H. Peter Anvin | hpa@zytor.com | 1278548958 |  | x86, cpu: Support the features flags in new CPUID leaf 7  Intel has defined CPUID leaf 7 as the next set of feature flags (see the AVX specification, version 007).  Add support for this new feature flags word.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> LKML-Reference: <tip-*@vger.kernel.org>
f | rtc.h | s | 29B | 1 | Al Viro | viro@zeniv.linux.org.uk | 1224741320 |  | x86, um: ... and asm-x86 move  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | irq_remapping.h | s | 3.5K | 92 | Suresh Siddha | suresh.b.siddha@intel.com | 1336468649 |  | irq_remap: Fix compiler warning with CONFIG_IRQ_REMAP=y  Fix the below compiler warning:  arch/x86/include/asm/irq_remapping.h:72:19: warning: ‘struct IO_APIC_route_entry’ declared inside parameter list [enabled by default]  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Cc: joro@8bytes.org Cc: iommu@lists.linux-foundation.org Cc: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1336460934-23592-1-git-send-email-suresh.b.siddha@intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | kgdb.h | s | 2.0K | 83 | Jan Kiszka | jan.kiszka@siemens.com | 1332446835 |  | kgdb: x86: Return all segment registers also in 64-bit mode  Even if the content is always 0, gdb expects us to return also ds, es, fs, and gs while in x86-64 mode. Do this to avoid ugly errors on "info registers".  [jason.wessel@windriver.com: adjust NUMREGBYTES for two new regs] Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com> Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
f | emergency-restart.h | s | 381B | 16 | H. Peter Anvin | hpa@zytor.com | 1226449188 |  | x86: attempt reboot via port CF9 if we have standard PCI ports  Impact: Changes reboot behavior.  If port CF9 seems to be safe to touch, attempt it before trying the keyboard controller.  Port CF9 is not available on all chipsets (a significant but decreasing number of modern chipsets don't implement it), but port CF9 itself should in general be safe to poke (no ill effects if unimplemented) on any system which has PCI Configuration Method #1 or #2, as it falls inside the PCI configuration port range in both cases.  No chipset without PCI is known to have port CF9, either, although an explicit "pci=bios" would mean we miss this and therefore don't use port CF9.  An explicit "reboot=pci" can be used to force the use of port CF9.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | a.out.h | s | 693B | 17 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | msgbuf.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | iommu.h | s | 320B | 10 | Alex Williamson | alex.williamson@redhat.com | 1321356151 |  | iommu: Add option to group multi-function devices  The option iommu=group_mf indicates the that the iommu driver should expose all functions of a multi-function PCI device as the same iommu_device_group.  This is useful for disallowing individual functions being exposed as independent devices to userspace as there are often hidden dependencies.  Virtual functions are not affected by this option.  Signed-off-by: Alex Williamson <alex.williamson@redhat.com> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | sockios.h | s | 33B | 1 | Arnd Bergmann | arnd@arndb.de | 1245361203 |  | x86: remove all now-duplicate header files  All files that have been made identical to the asm-generic version in the previous patches can now be removed, guaranteeing that this does not introduce semantic changes.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> LKML-Reference: <cover.1245354003.git.arnd@arndb.de> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pat.h | s | 645B | 19 | Venkatesh Pallipadi | venkatesh.pallipadi@intel.com | 1251326470 |  | x86, pat: New i/f for driver to request memtype for IO regions  Add new routines to request memtype for IO regions. This will currently be a backend for io_mapping_* routines. But, it can also be made available to drivers directly in future, in case it is needed.  reserve interface reserves the memory, makes sure we have a compatible memory type available and keeps the identity map in sync when needed.  Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com> Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | spinlock.h | s | 6.2K | 201 | Richard Weinberger | richard@nod.at | 1333126919 |  | x86: spinlock.h: Remove REG_PTR_MODE  REG_PTR_MODE has no users at all.  Signed-off-by: Richard Weinberger <richard@nod.at> Link: http://lkml.kernel.org/r/1333064283-3109-1-git-send-email-richard@nod.at Acked-by: Acked-by: Jan Beulich <jbeulich@suse.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | sys_ia32.h | s | 3.3K | 71 | H. Peter Anvin | hpa@zytor.com | 1329771125 |  | x86: Add #ifdef CONFIG_COMPAT to <asm/sys_ia32.h>  Unfortunately a lot of the compat types are guarded with CONFIG_COMPAT or the equivalent, so add a similar guard to <asm/sys_ia32.h> to avoid compilation failures when CONFIG_COMPAT=n.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mmzone_64.h | s | 391B | 12 | KAMEZAWA Hiroyuki | kamezawa.hiroyu@jp.fujitsu.com | 1309209189 |  | Fix node_start/end_pfn() definition for mm/page_cgroup.c  commit 21a3c96 uses node_start/end_pfn(nid) for detection start/end of nodes. But, it's not defined in linux/mmzone.h but defined in /arch/???/include/mmzone.h which is included only under CONFIG_NEED_MULTIPLE_NODES=y.  Then, we see   mm/page_cgroup.c: In function 'page_cgroup_init':   mm/page_cgroup.c:308: error: implicit declaration of function 'node_start_pfn'   mm/page_cgroup.c:309: error: implicit declaration of function 'node_end_pfn'  So, fixiing page_cgroup.c is an idea...  But node_start_pfn()/node_end_pfn() is a very generic macro and should be implemented in the same manner for all archs. (m32r has different implementation...)  This patch removes definitions of node_start/end_pfn() in each archs and defines a unified one in linux/mmzone.h. It's not under CONFIG_NEED_MULTIPLE_NODES, now.  A result of macro expansion is here (mm/page_cgroup.c)  for !NUMA  start_pfn = ((&contig_page_data)->node_start_pfn);   end_pfn = ({ pg_data_t *__pgdat = (&contig_page_data); __pgdat->node_start_pfn + __pgdat->node_spanned_pages;});  for NUMA (x86-64)   start_pfn = ((node_data[nid])->node_start_pfn);   end_pfn = ({ pg_data_t *__pgdat = (node_data[nid]); __pgdat->node_start_pfn + __pgdat->node_spanned_pages;});  Changelog:  - fixed to avoid using "nid" twice in node_end_pfn() macro.  Reported-and-acked-by: Randy Dunlap <randy.dunlap@oracle.com> Reported-and-tested-by: Ingo Molnar <mingo@elte.hu> Acked-by: Mel Gorman <mgorman@suse.de> Signed-off-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | shmparam.h | s | 154B | 4 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | sembuf.h | s | 699B | 22 | H. Peter Anvin | hpa@zytor.com | 1224741323 |  | x86: Fix ASM_X86__ header guards  Change header guards named "ASM_X86__*" to "_ASM_X86_*" since:  a. the double underscore is ugly and pointless. b. no leading underscore violates namespace constraints.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | byteorder.h | s | 137B | 4 | Harvey Harrison | harvey.harrison@gmail.com | 1231991810 |  | byteorder: make swab.h include asm/swab.h like a regular header  Add swab.h to kbuild.asm and remove the individual entries from each arch, mark as unifdef as some arches have some kernel-only bits inside.  Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
