f | hypercall.h | s | 16K | 528 | Linus Torvalds | torvalds@linux-foundation.org | 1320639305 |  | Merge branch 'upstream/xen-settime' of git://git.kernel.org/pub/scm/linux/kernel/git/jeremy/xen  * 'upstream/xen-settime' of git://git.kernel.org/pub/scm/linux/kernel/git/jeremy/xen:   xen/dom0: set wallclock time in Xen   xen: add dom0_op hypercall   xen/acpi: Domain0 acpi parser related platform hypercall
f | pci.h | s | 2.2K | 77 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1310404770 |  | xen/pci: Squash pci_xen_initial_domain and xen_setup_pirqs together.  Since they are only called once and the rest of the pci_xen_* functions follow the same pattern of setup.  Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | hypervisor.h | s | 2.4K | 65 | Sheng Yang | sheng@linux.intel.com | 1294412630 |  | xen: HVM X2APIC support  This patch is similiar to Gleb Natapov's patch for KVM, which enable the hypervisor to emulate x2apic feature for the guest. By this way, the emulation of lapic would be simpler with x2apic interface(MSR), and faster.  [v2: Re-organized 'xen_hvm_need_lapic' per Ian Campbell suggestion]  Acked-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Sheng Yang <sheng@linux.intel.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | trace_types.h | s | 441B | 15 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1311029006 |  | xen/trace: add multicall tracing  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>
f | interface.h | s | 6.0K | 161 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1331401484 |  | xen/enlighten: Expose MWAIT and MWAIT_LEAF if hypervisor OKs it.  For the hypervisor to take advantage of the MWAIT support it needs to extract from the ACPI _CST the register address. But the hypervisor does not have the support to parse DSDT so it relies on the initial domain (dom0) to parse the ACPI Power Management information and push it up to the hypervisor. The pushing of the data is done by the processor_harveset_xen module which parses the information that the ACPI parser has graciously exposed in 'struct acpi_processor'.  For the ACPI parser to also expose the Cx states for MWAIT, we need to expose the MWAIT capability (leaf 1). Furthermore we also need to expose the MWAIT_LEAF capability (leaf 5) for cstate.c to properly function.  The hypervisor could expose these flags when it traps the XEN_EMULATE_PREFIX operations, but it can't do it since it needs to be backwards compatible. Instead we choose to use the native CPUID to figure out if the MWAIT capability exists and use the XEN_SET_PDC query hypercall to figure out if the hypervisor wants us to expose the MWAIT_LEAF capability or not.  Note: The XEN_SET_PDC query was implemented in c/s 23783: "ACPI: add _PDC input override mechanism".  With this in place, instead of  C3 ACPI IOPORT 415 we get now  C3:ACPI FFH INTEL MWAIT 0x20  Note: The cpu_idle which would be calling the mwait variants for idling never gets set b/c we set the default pm_idle to be the hypercall variant.  Acked-by: Jan Beulich <JBeulich@suse.com> [v2: Fix missing header file include and #ifdef] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | events.h | s | 374B | 15 | Lin Ming | mlin@ss.pku.edu.cn | 1336419197 |  | xen: implement IRQ_WORK_VECTOR handler  Signed-off-by: Lin Ming <mlin@ss.pku.edu.cn> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | interface_32.h | s | 2.9K | 85 | Ian Campbell | ian.campbell@citrix.com | 1289602806 |  | xen: implement XENMEM_machphys_mapping  This hypercall allows Xen to specify a non-default location for the machine to physical mapping. This capability is used when running a 32 bit domain 0 on a 64 bit hypervisor to shrink the hypervisor hole to exactly the size required.  [ Impact: add Xen hypercall definitions ]  Signed-off-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
f | swiotlb-xen.h | s | 407B | 12 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1280245862 |  | pci-swiotlb-xen: Add glue code to setup dma_ops utilizing xen_swiotlb_* functions.  We add the glue code that sets up a dma_ops structure with the xen_swiotlb_* functions. The code turns on xen_swiotlb flag when it detects it is running under Xen and it is either in privileged mode or the iommu=soft flag was passed in.  It also disables the bare-metal SWIOTLB if the Xen-SWIOTLB has been enabled.  Note: The Xen-SWIOTLB is only built when CONFIG_XEN is enabled.  Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Acked-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Cc: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Cc: Albert Herranz <albert_herranz@yahoo.es> Cc: Ian Campbell <Ian.Campbell@citrix.com>
f | page.h | s | 6.3K | 176 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1333746186 |  | xen/p2m: An early bootup variant of set_phys_to_machine  During early bootup we can't use alloc_page, so to allocate leaf pages in the P2M we need to use extend_brk. For that we are utilizing the early_alloc_p2m and early_alloc_p2m_middle functions to do the job for us. This function follows the same logic as set_phys_to_machine.  Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | interface_64.h | s | 4.5K | 129 | Ian Campbell | ian.campbell@citrix.com | 1289602806 |  | xen: implement XENMEM_machphys_mapping  This hypercall allows Xen to specify a non-default location for the machine to physical mapping. This capability is used when running a 32 bit domain 0 on a 64 bit hypervisor to shrink the hypervisor hole to exactly the size required.  [ Impact: add Xen hypercall definitions ]  Signed-off-by: Ian Campbell <ian.campbell@citrix.com> Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
