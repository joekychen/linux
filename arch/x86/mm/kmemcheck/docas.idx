f | Makefile | g | 64B |  | Vegard Nossum | vegard.nossum@gmail.com | 1245073762 |  | kmemcheck: add opcode self-testing at boot  We've had some troubles in the past with weird instructions. This patch adds a self-test framework which can be used to verify that a certain set of opcodes are decoded correctly. Of course, the opcodes which are not tested can still give the wrong results.  In short, this is just a safeguard to catch unintentional changes in the opcode decoder. It does not mean that errors can't still occur!  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegard.nossum@gmail.com>
f | pte.c | s | 319B | 16 | Vegard Nossum | vegard.nossum@gmail.com | 1244900250 |  | kmemcheck: add the kmemcheck core  General description: kmemcheck is a patch to the linux kernel that detects use of uninitialized memory. It does this by trapping every read and write to memory that was allocated dynamically (e.g. using kmalloc()). If a memory address is read that has not previously been written to, a message is printed to the kernel log.  Thanks to Andi Kleen for the set_memory_4k() solution.  Andrew Morton suggested documenting the shadow member of struct page.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>  [export kmemcheck_mark_initialized] [build fix for setup_max_cpus] Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | error.h | s | 352B | 9 | Vegard Nossum | vegard.nossum@gmail.com | 1244900250 |  | kmemcheck: add the kmemcheck core  General description: kmemcheck is a patch to the linux kernel that detects use of uninitialized memory. It does this by trapping every read and write to memory that was allocated dynamically (e.g. using kmalloc()). If a memory address is read that has not previously been written to, a message is printed to the kernel log.  Thanks to Andi Kleen for the set_memory_4k() solution.  Andrew Morton suggested documenting the shadow member of struct page.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>  [export kmemcheck_mark_initialized] [build fix for setup_max_cpus] Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | selftest.h | s | 122B | 4 | Vegard Nossum | vegard.nossum@gmail.com | 1245073762 |  | kmemcheck: add opcode self-testing at boot  We've had some troubles in the past with weird instructions. This patch adds a self-test framework which can be used to verify that a certain set of opcodes are decoded correctly. Of course, the opcodes which are not tested can still give the wrong results.  In short, this is just a safeguard to catch unintentional changes in the opcode decoder. It does not mean that errors can't still occur!  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegard.nossum@gmail.com>
f | error.c | s | 5.2K | 184 | Masami Hiramatsu | masami.hiramatsu.pt@hitachi.com | 1308106131 |  | x86: Swap save_stack_trace_regs parameters  Swap the 1st and 2nd parameters of save_stack_trace_regs() as same as the parameters of save_stack_trace_tsk().  Signed-off-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: yrl.pp-manager.tt@hitachi.com Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Namhyung Kim <namhyung@gmail.com> Link: http://lkml.kernel.org/r/20110608070921.17777.31103.stgit@fedora15 Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
f | selftest.c | s | 1.6K | 53 | Paul Gortmaker | paul.gortmaker@windriver.com | 1330553708 |  | bug.h: add include of it to various implicit C users  With bug.h currently living right in linux/kernel.h there are files that use BUG_ON and friends but are not including the header explicitly.  Fix them up so we can remove the presence in kernel.h file.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | shadow.c | s | 3.7K | 140 | Catalin Marinas | catalin.marinas@arm.com | 1266435548 |  | kmemcheck: Test the full object in kmemcheck_is_obj_initialized()  This is a fix for bug #14845 (bugzilla.kernel.org). The update_checksum() function in mm/kmemleak.c calls kmemcheck_is_obj_initialised() before scanning an object. When KMEMCHECK_PARTIAL_OK is enabled, this function returns true. However, the crc32_le() reads smaller intervals (32-bit) for which kmemleak_is_obj_initialised() may be false leading to a kmemcheck warning.  Note that kmemcheck_is_obj_initialized() is currently only used by kmemleak before scanning a memory location.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Christian Casteyde <casteyde.christian@free.fr> Cc: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
f | shadow.h | s | 524B | 14 | Catalin Marinas | catalin.marinas@arm.com | 1266435548 |  | kmemcheck: Test the full object in kmemcheck_is_obj_initialized()  This is a fix for bug #14845 (bugzilla.kernel.org). The update_checksum() function in mm/kmemleak.c calls kmemcheck_is_obj_initialised() before scanning an object. When KMEMCHECK_PARTIAL_OK is enabled, this function returns true. However, the crc32_le() reads smaller intervals (32-bit) for which kmemleak_is_obj_initialised() may be false leading to a kmemcheck warning.  Note that kmemcheck_is_obj_initialized() is currently only used by kmemleak before scanning a memory location.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Christian Casteyde <casteyde.christian@free.fr> Cc: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
f | kmemcheck.c | s | 14K | 538 | Frederic Weisbecker | fweisbec@gmail.com | 1287081816 |  | x86: Barf when vmalloc and kmemcheck faults happen in NMI  In x86, faults exit by executing the iret instruction, which then reenables NMIs if we faulted in NMI context. Then if a fault happens in NMI, another NMI can nest after the fault exits.  But we don't yet support nested NMIs because we have only one NMI stack. To prevent from that, check that vmalloc and kmemcheck faults don't happen in this context. Most of the other kernel faults in NMIs can be more easily spotted by finding explicit copy_from,to_user() calls on review.  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: H. Peter Anvin <hpa@zytor.com> Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
f | opcode.c | s | 1.9K | 91 | Julia Lawall | julia@diku.dk | 1283152768 |  | x86, kmemcheck: Remove double test  The opcodes 0x2e and 0x3e are tested for in the first Group 2 line as well.  The sematic match that finds this problem is as follows: (http://coccinelle.lip6.fr/)  // <smpl> @expression@ expression E; @@  ( * E   |||| ... |||| E || * E   && ... && E ) // </smpl>  Signed-off-by: Julia Lawall <julia@diku.dk> Reviewed-by: Pekka Enberg <penberg@cs.helsinki.fi> Cc: Vegard Nossum <vegardno@ifi.uio.no> LKML-Reference: <1283010066-20935-5-git-send-email-julia@diku.dk> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | pte.h | s | 190B | 6 | Vegard Nossum | vegard.nossum@gmail.com | 1244900250 |  | kmemcheck: add the kmemcheck core  General description: kmemcheck is a patch to the linux kernel that detects use of uninitialized memory. It does this by trapping every read and write to memory that was allocated dynamically (e.g. using kmalloc()). If a memory address is read that has not previously been written to, a message is printed to the kernel log.  Thanks to Andi Kleen for the set_memory_4k() solution.  Andrew Morton suggested documenting the shadow member of struct page.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>  [export kmemcheck_mark_initialized] [build fix for setup_max_cpus] Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
f | opcode.h | s | 254B | 6 | Vegard Nossum | vegard.nossum@gmail.com | 1244900250 |  | kmemcheck: add the kmemcheck core  General description: kmemcheck is a patch to the linux kernel that detects use of uninitialized memory. It does this by trapping every read and write to memory that was allocated dynamically (e.g. using kmalloc()). If a memory address is read that has not previously been written to, a message is printed to the kernel log.  Thanks to Andi Kleen for the set_memory_4k() solution.  Andrew Morton suggested documenting the shadow member of struct page.  Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no> Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>  [export kmemcheck_mark_initialized] [build fix for setup_max_cpus] Signed-off-by: Ingo Molnar <mingo@elte.hu>  [rebased for mainline inclusion] Signed-off-by: Vegard Nossum <vegardno@ifi.uio.no>
