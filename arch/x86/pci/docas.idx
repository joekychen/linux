f | mrst.c | s | 8.9K | 264 | Alan Cox | alan@linux.intel.com | 1330029207 |  | x86/mrst/pci: avoid SoC fixups on non-SoC platforms  The PCI fixups get executed based upon whether they are linked in. We need to avoid executing them if we boot a dual SoC/PC type kernel on a PC class system.  Signed-off-by: Alan Cox <alan@linux.intel.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | ce4100.c | s | 9.5K | 279 | Jan Beulich | JBeulich@suse.com | 1318608328 |  | x86: constify PCI raw ops structures  As with any other such change, the goal is to prevent inadvertent writes to these structures (assuming DEBUG_RODATA is enabled), and to separate data (possibly frequently) written to from such never getting modified.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jan Beulich <jbeulich@novell.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | mmconfig_64.c | s | 2.8K | 110 | Jan Beulich | JBeulich@suse.com | 1318608328 |  | x86: constify PCI raw ops structures  As with any other such change, the goal is to prevent inadvertent writes to these structures (assuming DEBUG_RODATA is enabled), and to separate data (possibly frequently) written to from such never getting modified.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jan Beulich <jbeulich@novell.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | init.c | s | 1005B | 36 | Thomas Gleixner | tglx@linutronix.de | 1267154783 |  | x86, olpc: Use pci subarch init for OLPC  Replace the #ifdef'ed OLPC-specific init functions by a conditional x86_init function.  If the function returns 0 we leave pci_arch_init, otherwise we continue.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Cc: Andres Salomon <dilinger@collabora.co.uk> LKML-Reference: <43F901BD926A4E43B106BF17856F0755A318CE89@orsmsx508.amr.corp.intel.com> Signed-off-by: Jacob Pan <jacob.jun.pan@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | common.c | s | 16K | 672 | Bjorn Helgaas | bhelgaas@google.com | 1336404207 |  | Merge branch 'topic/stratus' into next
f | Makefile | g | 731B |  | Alessandro Rubini | rubini@gnudd.com | 1334254230 |  | x86, platform: Initial support for sta2x11 I/O hub  The "ConneXt" sta2x11 I/O Hub is a bridge from PCIe to AMBA, and is used as main chipset in some Atom boards.  The set of peripherals it exports live in an AMBA bus internal to the chip, so a custom remapping of addresses is needed. This is implemented by fixup calls for the PCI deivices, based on CONFIG_X86_DEV_DMA_OPS and CONFIG_X86_DMA_REMAP .  Signed-off-by: Alessandro Rubini <rubini@gnudd.com> Link: http://lkml.kernel.org/r/ddca670ca8180e52d49b3fe642742ddd23ab2cb2.1333560789.git.rubini@gnudd.com Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com> Cc: Alan Cox <alan@linux.intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | visws.c | s | 2.5K | 73 | Ralf Baechle | ralf@linux-mips.org | 1311348366 |  | PCI: Make the struct pci_dev * argument of pci_fixup_irqs const.  Aside of the usual motivation for constification,  this function has a history of being abused a hook for interrupt and other fixups so I turned this function const ages ago in the MIPS code but it should be done treewide.  Due to function pointer passing in varous places a few other functions had to be constified as well.  Signed-off-by: Ralf Baechle <ralf@linux-mips.org> To: Anton Vorontsov <avorontsov@mvista.com> To: Chris Metcalf <cmetcalf@tilera.com> To: Colin Cross <ccross@android.com> Acked-by: "David S. Miller" <davem@davemloft.net> To: Eric Miao <eric.y.miao@gmail.com> To: Erik Gilling <konkers@android.com> Acked-by: Guan Xuetao <gxt@mprc.pku.edu.cn> To: "H. Peter Anvin" <hpa@zytor.com> To: Imre Kaloz <kaloz@openwrt.org> To: Ingo Molnar <mingo@redhat.com> To: Ivan Kokshaysky <ink@jurassic.park.msu.ru> To: Jesse Barnes <jbarnes@virtuousgeek.org> To: Krzysztof Halasa <khc@pm.waw.pl> To: Lennert Buytenhek <kernel@wantstofly.org> To: Matt Turner <mattst88@gmail.com> To: Nicolas Pitre <nico@fluxnic.net> To: Olof Johansson <olof@lixom.net> Acked-by: Paul Mundt <lethal@linux-sh.org> To: Richard Henderson <rth@twiddle.net> To: Russell King <linux@arm.linux.org.uk> To: Thomas Gleixner <tglx@linutronix.de> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: linux-alpha@vger.kernel.org Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Cc: linux-mips@linux-mips.org Cc: linux-pci@vger.kernel.org Cc: linux-sh@vger.kernel.org Cc: linux-tegra@vger.kernel.org Cc: sparclinux@vger.kernel.org Cc: x86@kernel.org Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | early.c | s | 2.3K | 93 | Alex Chiang | achiang@hp.com | 1259105119 |  | x86/PCI: remove early PCI pr_debug statements  commit db635adc turned -DDEBUG for x86/pci on when CONFIG_PCI_DEBUG is set. In general, I agree with that change.  However, it exposes a bunch of very low level PCI debugging in the early x86 path, such as:  	0 reading 2 from a: ffff 	1 reading 2 from a: ffff 	2 reading 2 from a: ffff 	3 reading 2 from a: 300 	3 reading 2 from 0: 1002 	3 reading 2 from 2: 515e  These statements add a lot of noise to the boot and aren't likely to be necessary even when handling random upstream bug reports.  [In contrast, statements such as these:  	pci 0000:02:04.0: found [14e4:164a] class 000200 header type 00 	pci 0000:02:04.0: reg 10: [mem 0xf8000000-0xf9ffffff 64bit] 	pci 0000:02:04.0: reg 30: [mem 0x00000000-0x0001ffff pref]  are indeed useful when remote debugging users' machines]  Remove the noisy printks and save electrons everywhere.  Cc: Bjorn Helgaas <bjorn.helgaas@hp.com> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Andi Kleen <andi@firstfloor.org> Cc: Ingo Molnar <mingo@elte.hu> Signed-off-by: Alex Chiang <achiang@hp.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | xen.c | s | 14K | 483 | Stefano Stabellini | stefano.stabellini@eu.citrix.com | 1337623896 |  | xen: do not map the same GSI twice in PVHVM guests.  PV on HVM guests map GSIs into event channels. At restore time the event channels are resumed by restore_pirqs.  Device drivers might try to register the same GSI again through ACPI at restore time, but the GSI has already been mapped and bound by restore_pirqs. This patch detects these situations and avoids  mapping the same GSI multiple times.  Without this patch we get: (XEN) irq.c:2235: dom4: pirq 23 or emuirq 28 already mapped and waste a pirq.  CC: stable@kernel.org Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | i386.c | s | 10K | 340 | Bjorn Helgaas | bhelgaas@google.com | 1337122869 |  | x86/PCI: only check for spinlock being held in SMP kernels  spin_is_locked() is always false on UP kernels: spin_lock_irqsave() does no locking, so we can't tell whether the lock is held or not.  Therefore, this warning is only valid for SMP kernels.  CC: Myron Stowe <myron.stowe@redhat.com> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | mmconfig-shared.c | s | 15K | 539 | Jack Steiner | steiner@sgi.com | 1307109603 |  | x66, UV: Enable 64-bit ACPI MFCG support for SGI UV2 platform  Enable 64-bit ACPI MFCG support for SGI UV2 platform. The check is similar to the check on UV1. UV2 has a different oem_id string.  Signed-off-by: Jack Steiner <steiner@sgi.com> Link: http://lkml.kernel.org/r/20110602195943.GA27079@sgi.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | bus_numa.h | s | 670B | 25 | Yinghai Lu | yinghai@kernel.org | 1335819163 |  | x86/PCI: dynamically allocate pci_root_info for native host bridge drivers  This dynamically allocates struct pci_root_info instead of using a static array.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | numaq_32.c | s | 3.6K | 137 | Bjorn Helgaas | bhelgaas@google.com | 1325880673 |  | x86/PCI: use pci_scan_bus() instead of pci_scan_bus_parented()  This doesn't change any functionality, but it makes a subsequent patch slightly simpler.  pci_scan_bus(NULL, ...) and pci_scan_bus_parented() are identical except that pci_scan_bus() also calls pci_bus_add_devices():    pci_scan_bus_parented     pci_create_bus     pci_scan_child_bus    pci_scan_bus     pci_create_bus     pci_scan_child_bus     pci_bus_add_devices  All callers of pcibios_scan_root() call pci_bus_add_devices() explicitly, and we don't pass a parent device, so we might as well use pci_scan_bus().  Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | legacy.c | s | 1.6K | 63 | Bjorn Helgaas | bhelgaas@google.com | 1325880673 |  | x86/PCI: use pci_scan_bus() instead of pci_scan_bus_parented()  This doesn't change any functionality, but it makes a subsequent patch slightly simpler.  pci_scan_bus(NULL, ...) and pci_scan_bus_parented() are identical except that pci_scan_bus() also calls pci_bus_add_devices():    pci_scan_bus_parented     pci_create_bus     pci_scan_child_bus    pci_scan_bus     pci_create_bus     pci_scan_child_bus     pci_bus_add_devices  All callers of pcibios_scan_root() call pci_bus_add_devices() explicitly, and we don't pass a parent device, so we might as well use pci_scan_bus().  Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | broadcom_bus.c | s | 3.2K | 101 | Yinghai Lu | yinghai@kernel.org | 1335819163 |  | x86/PCI: dynamically allocate pci_root_info for native host bridge drivers  This dynamically allocates struct pci_root_info instead of using a static array.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | bus_numa.c | s | 2.8K | 100 | Yinghai Lu | yinghai@kernel.org | 1335819163 |  | x86/PCI: dynamically allocate pci_root_info for native host bridge drivers  This dynamically allocates struct pci_root_info instead of using a static array.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | acpi.c | s | 12K | 440 | Wei Yang | weiyang@linux.vnet.ibm.com | 1336409937 |  | resources: add resource_overlaps()  Add resource_overlaps(), which returns true if two resources overlap at all.  Use this to replace the complicated check in coalesce_windows().  Signed-Off-By: Wei Yang <weiyang@linux.vnet.ibm.com> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | amd_bus.c | s | 9.4K | 341 | Yinghai Lu | yinghai@kernel.org | 1335914718 |  | x86/PCI: fix unused variable warning in amd_bus.c  Fix this warning:    arch/x86/pci/amd_bus.c: In function 'early_fill_mp_bus_info':   arch/x86/pci/amd_bus.c:56:6: warning: unused variable 'j' [-Wunused-variable]  introduced by commit d28e5ac2a07e ("x86/PCI: dynamically allocate pci_root_info for native host bridge drivers").  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | irq.c | s | 32K | 1120 | Seth Heasley | seth.heasley@intel.com | 1305067416 |  | x86/PCI: irq and pci_ids patch for Intel Panther Point DeviceIDs  This patch adds the LPC Controller DeviceIDs for the Intel Panther Point PCH.  Acked-by: Jean Delvare <khali@linux-fr.org> Signed-off-by: Seth Heasley <seth.heasley@intel.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | mmconfig_32.c | s | 2.9K | 110 | Jan Beulich | JBeulich@suse.com | 1318608328 |  | x86: constify PCI raw ops structures  As with any other such change, the goal is to prevent inadvertent writes to these structures (assuming DEBUG_RODATA is enabled), and to separate data (possibly frequently) written to from such never getting modified.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jan Beulich <jbeulich@novell.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | fixup.c | s | 17K | 485 | Linus Torvalds | torvalds@linux-foundation.org | 1337888574 |  | Merge branch 'drm-core-next' of git://people.freedesktop.org/~airlied/linux  Pull main drm updates from Dave Airlie:  "This is the main merge window request for the drm.    It's big, but jam packed will lots of features and of course 0   regressions.  (okay maybe there'll be one).    Highlights:     - new KMS drivers for server GPU chipsets: ast, mgag200 and cirrus      (qemu only).  These drivers use the generic modesetting drivers.     - initial prime/dma-buf support for i915, nouveau, radeon, udl and      exynos     - switcheroo audio support: so GPUs with HDMI can turn off the sound      driver without crashing stuff.     - There are some patches drifting outside drivers/gpu into x86 and      EFI for better handling of multiple video adapters in Apple Macs,      they've got correct acks except one trivial fixup.     - Core: 	edid parser has better DMT and reduced blanking support, 	crtc properties, 	plane properties,     - Drivers: 	exynos: add 2D core accel support, prime support, hdmi features 	intel: more Haswell support, initial Valleyview support, more 	    hdmi infoframe fixes, update MAINTAINERS for Daniel, lots of 	    cleanups and fixes 	radeon: more HDMI audio support, improved GPU lockup recovery 	    support, remove nested mutexes, less memory copying on PCIE, fix 	    bus master enable race (kexec), improved fence handling 	gma500: cleanups, 1080p support, acpi fixes 	nouveau: better nva3 memory reclocking, kepler accel (needs 	    external firmware rip), async buffer moves on nv84+ hw.    I've some more dma-buf patches that rely on the dma-buf merge for vmap   stuff, and I've a few fixes building up, but I'd decided I'd better   get rid of the main pull sooner rather than later, so the audio guys   are also unblocked."  Fix up trivial conflict due to some duplicated changes in drivers/gpu/drm/i915/intel_ringbuffer.c  * 'drm-core-next' of git://people.freedesktop.org/~airlied/linux: (605 commits)   drm/nouveau/nvd9: Fix GPIO initialisation sequence.   drm/nouveau: Unregister switcheroo client on exit   drm/nouveau: Check dsm on switcheroo unregister   drm/nouveau: fix a minor annoyance in an output string   drm/nouveau: turn a BUG into a WARN   drm/nv50: decode PGRAPH DATA_ERROR = 0x24   drm/nouveau/disp: fix dithering not being enabled on some eDP macbooks   drm/nvd9/copy: initialise copy engine, seems to work like nvc0   drm/nvc0/ttm: use copy engines for async buffer moves   drm/nva3/ttm: use copy engine for async buffer moves   drm/nv98/ttm: add in a (disabled) crypto engine buffer copy method   drm/nv84/ttm: use crypto engine for async buffer copies   drm/nouveau/ttm: untangle code to support accelerated buffer moves   drm/nouveau/fbcon: use fence for sync, rather than notifier   drm/nv98/crypt: non-stub implementation of the engine hooks   drm/nouveau/fifo: turn all fifo modules into engine modules   drm/nv50/graph: remove ability to do interrupt-driven context switching   drm/nv50: remove manual context unload on context destruction   drm/nv50: remove execution engine context saves on suspend   drm/nv50/fifo: use hardware channel kickoff functionality   ...
f | direct.c | s | 6.4K | 250 | Jan Beulich | JBeulich@suse.com | 1318608328 |  | x86: constify PCI raw ops structures  As with any other such change, the goal is to prevent inadvertent writes to these structures (assuming DEBUG_RODATA is enabled), and to separate data (possibly frequently) written to from such never getting modified.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jan Beulich <jbeulich@novell.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | olpc.c | s | 9.4K | 274 | Jan Beulich | JBeulich@suse.com | 1318608328 |  | x86: constify PCI raw ops structures  As with any other such change, the goal is to prevent inadvertent writes to these structures (assuming DEBUG_RODATA is enabled), and to separate data (possibly frequently) written to from such never getting modified.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jan Beulich <jbeulich@novell.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | sta2x11-fixup.c | s | 10K | 309 | Alessandro Rubini | rubini@gnudd.com | 1334254230 |  | x86, platform: Initial support for sta2x11 I/O hub  The "ConneXt" sta2x11 I/O Hub is a bridge from PCIe to AMBA, and is used as main chipset in some Atom boards.  The set of peripherals it exports live in an AMBA bus internal to the chip, so a custom remapping of addresses is needed. This is implemented by fixup calls for the PCI deivices, based on CONFIG_X86_DEV_DMA_OPS and CONFIG_X86_DMA_REMAP .  Signed-off-by: Alessandro Rubini <rubini@gnudd.com> Link: http://lkml.kernel.org/r/ddca670ca8180e52d49b3fe642742ddd23ab2cb2.1333560789.git.rubini@gnudd.com Acked-by: Giancarlo Asnaghi <giancarlo.asnaghi@st.com> Cc: Alan Cox <alan@linux.intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pcbios.c | s | 10K | 404 | Wang YanQing | udknight@gmail.com | 1323440527 |  | typo fixes: aera -> area, exntension -> extension  One printk and one comment typo fix.  Signed-off-by: Wang YanQing <udknight@gmail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
