d | tools |  | 2 items |  | Jordan Justen | jordan.l.justen@intel.com | 1339087953 |  | x86, efi stub: Add .reloc section back into image  Some UEFI firmware will not load a .efi with a .reloc section with a size of 0.  Therefore, we create a .efi image with 4 main areas and 3 sections. 1. PE/COFF file header 2. .setup section (covers all setup code following the first sector) 3. .reloc section (contains 1 dummy reloc entry, created in build.c) 4. .text section (covers the remaining kernel image)  To make room for the new .setup section data, the header bugger_off_msg had to be shortened.  Reported-by: Henrik Rydberg <rydberg@euromail.se> Signed-off-by: Jordan Justen <jordan.l.justen@intel.com> Link: http://lkml.kernel.org/r/1339085121-12760-1-git-send-email-jordan.l.justen@intel.com Tested-by: Lee G Rosenbaum <lee.g.rosenbaum@intel.com> Tested-by: Henrik Rydberg <rydberg@euromail.se> Cc: Matt Fleming <matt.fleming@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | string.c | s | 2.7K | 126 | Matt Fleming | matt.fleming@intel.com | 1323728770 |  | x86, efi: EFI boot stub support  There is currently a large divide between kernel development and the development of EFI boot loaders. The idea behind this patch is to give the kernel developers full control over the EFI boot process. As H. Peter Anvin put it,  "The 'kernel carries its own stub' approach been very successful in dealing with BIOS, and would make a lot of sense to me for EFI as well."  This patch introduces an EFI boot stub that allows an x86 bzImage to be loaded and executed by EFI firmware. The bzImage appears to the firmware as an EFI application. Luckily there are enough free bits within the bzImage header so that it can masquerade as an EFI application, thereby coercing the EFI firmware into loading it and jumping to its entry point. The beauty of this masquerading approach is that both BIOS and EFI boot loaders can still load and run the same bzImage, thereby allowing a single kernel image to work in any boot environment.  The EFI boot stub supports multiple initrds, but they must exist on the same partition as the bzImage. Command-line arguments for the kernel can be appended after the bzImage name when run from the EFI shell, e.g.  Shell> bzImage console=ttyS0 root=/dev/sdb initrd=initrd.img  v7:  - Fix checkpatch warnings.  v6:   - Try to allocate initrd memory just below hdr->inird_addr_max.  v5:   - load_options_size is UTF-16, which needs dividing by 2 to convert    to the corresponding ASCII size.  v4:   - Don't read more than image->load_options_size  v3:   - Fix following warnings when compiling CONFIG_EFI_STUB=n     arch/x86/boot/tools/build.c: In function ‘main’:    arch/x86/boot/tools/build.c:138:24: warning: unused variable ‘pe_header’    arch/x86/boot/tools/build.c:138:15: warning: unused variable ‘file_sz’   - As reported by Matthew Garrett, some Apple machines have GOPs that    don't have hardware attached. We need to weed these out by    searching for ones that handle the PCIIO protocol.   - Don't allocate memory if no initrds are on cmdline  - Don't trust image->load_options_size  Maarten Lankhorst noted:  - Don't strip first argument when booted from efibootmgr  - Don't allocate too much memory for cmdline  - Don't update cmdline_size, the kernel considers it read-only  - Don't accept '\n' for initrd names  v2:   - File alignment was too large, was 8192 should be 512. Reported by    Maarten Lankhorst on LKML.  - Added UGA support for graphics  - Use VIDEO_TYPE_EFI instead of hard-coded number.  - Move linelength assignment until after we've assigned depth  - Dynamically fill out AddressOfEntryPoint in tools/build.c  - Don't use magic number for GDT/TSS stuff. Requested by Andi Kleen  - The bzImage may need to be relocated as it may have been loaded at    a high address address by the firmware. This was required to get my    macbook booting because the firmware loaded it at 0x7cxxxxxx, which    triggers this error in decompress_kernel(),  	if (heap > ((-__PAGE_OFFSET-(128<<20)-1) & 0x7fffffff)) 		error("Destination address too large");  Cc: Mike Waychison <mikew@google.com> Cc: Matthew Garrett <mjg@redhat.com> Tested-by: Henrik Rydberg <rydberg@euromail.se> Signed-off-by: Matt Fleming <matt.fleming@intel.com> Link: http://lkml.kernel.org/r/1321383097.2657.9.camel@mfleming-mobl1.ger.corp.intel.com Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | video-vga.c | s | 5.7K | 237 | Andi Kleen | andi@firstfloor.org | 1276208669 |  | x86, setup: Set ax register in boot vga query  Catch missing conversion to the register structure "glove box" scheme.  Found by gcc 4.6's new warnings.  Signed-off-by: Andi Kleen <ak@linux.intel.com> LKML-Reference: <20100610111040.F1781B1A2B@basil.firstfloor.org> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | setup.ld | g | 1.1K |  | Ingo Molnar | mingo@elte.hu | 1255670326 |  | x86: Document linker script ASSERT() quirk  Older binutils breaks if ASSERT() is used without a sink for the output.  For example 2.14.90.0.6 is known to be broken, the link fails with:    LD      .tmp_vmlinux1   ld:arch/x86/kernel/vmlinux.lds:678: parse error  Document this quirk in all three files that use it.    See:    http://marc.info/?l=linux-kbuild&m=124930110427870&w=2   See[2]: d2ba8b2 ("x86: Fix assert syntax in vmlinux.lds.S")  Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Roland McGrath <roland@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Sam Ravnborg <sam@ravnborg.org> LKML-Reference: <4AD6523D.5030909@zytor.com> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | Makefile | g | 6.6K |  | H. Peter Anvin | hpa@zytor.com | 1332445371 |  | x86, boot: Correct CFLAGS for hostprogs  This is a partial revert of commit:     d40f833 "Restrict CFLAGS for hostprogs"  The endian-manipulation macros in tools/include need <linux/types.h>, but the hostprogs in arch/x86/boot need several headers from the kernel build tree, which means we have to add the kernel headers to the include path.  This picks up <linux/types.h> from the kernel tree, which gives a warning.  Since this use of <linux/types.h> is intentional, add -D__EXPORTED_HEADERS__ to the command line to silence the warning.  A better way to fix this would be to always install the exported kernel headers into $(objtree)/usr/include as a standard part of the kernel build, but that is a lot more involved.  Reported-by: Linus Torvalds <torvalds@linux-foundation.org> Acked-by: Matt Fleming <matt.fleming@intel.com> Link: http://lkml.kernel.org/r/1330436245-24875-5-git-send-email-matt@console-pimps.org Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | video.h | s | 3.2K | 98 | H. Peter Anvin | hpa@zytor.com | 1246039351 |  | x86, setup: remove obsolete pre-Kconfig CONFIG_VIDEO_ variables  There were a set of pre-Kconfig configuration variables defined in the video code.  There is absolutely no evidence that they have been tweaked by anybody in modern history, so just get rid of them and hope nobody notices.  If someone does complain, these should be made real Kconfig variables.  Reported-by: Robert P. J. Day <rpjday@crashcourse.ca> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | pm.c | s | 3.0K | 110 | H. Peter Anvin | hpa@zytor.com | 1236794400 |  | x86: remove zImage support  Impact: obsolete feature removal  The zImage kernel format has been functionally unused for a very long time.  It is just barely possible to build a modern kernel that still fits within the zImage size limit, but it is highly unlikely that anyone ever uses it.  Furthermore, although it is still supported by most bootloaders, it has been at best poorly tested (or not tested at all); some bootloaders are even known to not support zImage at all and not having even noticed.  Also remove some really obsolete constants that no longer have any meaning.  LKML-Reference: <49B703D4.1000008@zytor.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | mca.c | s | 927B | 30 | H. Peter Anvin | hpa@linux.intel.com | 1239318491 |  | x86, setup: "glove box" BIOS interrupts in the MCA code  Impact: BIOS proofing  "Glove box" off BIOS interrupts in the MCA code.  LKML-Reference: <49DE7F79.4030106@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
f | pmjump.S | g | 1.7K |  | H. Peter Anvin | hpa@linux.intel.com | 1237328766 |  | x86, setup: move 32-bit code to .text32  Impact: cleanup  The setup code is mostly 16-bit code, but there is a small stub of 32-bit code at the end.  Move the 32-bit code to a separate segment, .text32, to avoid scrambling the disassembly.  Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | install.sh | s | 1.4K | 50 | Sam Ravnborg | sam@ravnborg.org | 1253441894 |  | kbuild: use INSTALLKERNEL to select customized installkernel script  Replace the use of CROSS_COMPILE to select a customized installkernel script with the possibility to set INSTALLKERNEL to select a custom installkernel script when running make:      make INSTALLKERNEL=arm-installkernel install  With this patch we are now more consistent across different architectures - they did not all support use of CROSS_COMPILE.  The use of CROSS_COMPILE was a hack as this really belongs to gcc/binutils and the installkernel script does not change just because we change toolchain.  The use of CROSS_COMPILE caused troubles with an upcoming patch that saves CROSS_COMPILE when a kernel is built - it would no longer be installable. [Thanks to Peter Z. for this hint]  This patch undos what Ian did in commit:    0f8e2d62fa04441cd12c08ce521e84e5bd3f8a46   ("use ${CROSS_COMPILE}installkernel in arch/*/boot/install.sh")  The patch has been lightly tested on x86 only - but all changes looks obvious.  Acked-by: Peter Zijlstra <peterz@infradead.org> Acked-by: Mike Frysinger <vapier@gentoo.org> [blackfin] Acked-by: Russell King <linux@arm.linux.org.uk> [arm] Acked-by: Paul Mundt <lethal@linux-sh.org> [sh] Acked-by: "H. Peter Anvin" <hpa@zytor.com> [x86] Cc: Ian Campbell <icampbell@arcom.com> Cc: Tony Luck <tony.luck@intel.com> [ia64] Cc: Fenghua Yu <fenghua.yu@intel.com> [ia64] Cc: Hirokazu Takata <takata@linux-m32r.org> [m32r] Cc: Geert Uytterhoeven <geert@linux-m68k.org> [m68k] Cc: Kyle McMartin <kyle@mcmartin.ca> [parisc] Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> [powerpc] Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> [s390] Cc: Thomas Gleixner <tglx@linutronix.de> [x86] Cc: Ingo Molnar <mingo@redhat.com> [x86] Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
f | edd.c | s | 4.1K | 143 | H. Peter Anvin | hpa@linux.intel.com | 1239318491 |  | x86, setup: "glove box" BIOS interrupts in the EDD code  Impact: BIOS proofing  "Glove box" off BIOS interrupts in the EDD code.  LKML-Reference: <49DE7F79.4030106@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | video-mode.c | s | 3.8K | 143 | Pavel Machek | pavel@suse.cz | 1208446897 |  | x86: move suspend wakeup code to C  Move wakeup code to .c, so that video mode setting code can be shared between boot and wakeup. Remove nasty assembly code in 64-bit case by re-using trampoline code. Stack setup was fixed to clear high 16bits of %esp, maybe that fixes some machines.  .c code sharing and morse code was done H. Peter Anvin, Sam Ravnborg reviewed kbuild related stuff, and it seems okay to him. Rafael did some cleanups.  [rjw: * Made the patch stop breaking compilation on x86-32 * Added arch/x86/kernel/acpi/sleep.h * Got rid of compiler warnings in arch/x86/kernel/acpi/sleep.c * Fixed 32-bit compilation on x86-64 systems * Added include/asm-x86/trampoline.h and fixed the non-SMP   compilation on 64-bit x86 * Removed arch/x86/kernel/acpi/sleep_32.c which was not used * Fixed some breakage caused by the integration of smpboot.c done   under us in the meantime]  Signed-off-by: Pavel Machek <pavel@suse.cz> Signed-off-by: H. Peter Anvin <hpa@zytor.com> Reviewed-by: Sam Ravnborg <sam@ravnborg.org> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | header.S | g | 11K |  | Jordan Justen | jordan.l.justen@intel.com | 1339087953 |  | x86, efi stub: Add .reloc section back into image  Some UEFI firmware will not load a .efi with a .reloc section with a size of 0.  Therefore, we create a .efi image with 4 main areas and 3 sections. 1. PE/COFF file header 2. .setup section (covers all setup code following the first sector) 3. .reloc section (contains 1 dummy reloc entry, created in build.c) 4. .text section (covers the remaining kernel image)  To make room for the new .setup section data, the header bugger_off_msg had to be shortened.  Reported-by: Henrik Rydberg <rydberg@euromail.se> Signed-off-by: Jordan Justen <jordan.l.justen@intel.com> Link: http://lkml.kernel.org/r/1339085121-12760-1-git-send-email-jordan.l.justen@intel.com Tested-by: Lee G Rosenbaum <lee.g.rosenbaum@intel.com> Tested-by: Henrik Rydberg <rydberg@euromail.se> Cc: Matt Fleming <matt.fleming@intel.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | boot.h | s | 8.1K | 316 | He Chunhui | hchunhui@mail.ustc.edu.cn | 1328040354 |  | x86, boot: Fix port argument to inl() function  "u32 port" in inl() should be "u16 port".  [ hpa: it's a bug, but it doesn't produce incorrect code, so no need   to put this into urgent or stable. ]  Signed-off-by: He Chunhui <hchunhui@mail.ustc.edu.cn> Link: http://lkml.kernel.org/r/32892299.2931391328028508117.JavaMail.coremail@mailweb Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | memory.c | s | 3.3K | 110 | H. Peter Anvin | hpa@linux.intel.com | 1303768357 |  | x86, setup: When probing memory with e801, use ax/bx as a pair  When we use BIOS function e801 to probe memory, we should use ax/bx (or cx/dx) as a pair, not mix and match.  This was a typo during the translation from assembly code, and breaks at least one set of machines in the field (which return cx = dx = 0).  Reported-and-tested-by: Chris Samuel <chris@csamuel.org> Fix-proposed-by: Thomas Meyer <thomas@m3y3r.de> Link: http://lkml.kernel.org/r/1303566747.12067.10.camel@localhost.localdomain
f | bitops.h | s | 1.1K | 36 | WANG Cong | xiyou.wangcong@gmail.com | 1208625594 |  | x86: remove pointless comments  Remove old comments that include the old arch/i386 directory.  Signed-off-by: WANG Cong <xiyou.wangcong@gmail.com> Acked-by: H. Peter Anvin <hpa@zytor.com> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | video-bios.c | s | 2.8K | 101 | Akinobu Mita | akinobu.mita@gmail.com | 1246737392 |  | x86: fix usage of bios intcall()  Some intcall() misuses the input biosregs as output in cf06de7b9cdd3efee7a59dced1977b3c21d43732  This fixes the problem vga=ask boot option doesn't show enough modes.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> LKML-Reference: <20090701021307.GA3127@localhost.localdomain> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | vesa.h | s | 1.9K | 61 | Peter Korsgaard | jacmet@sunsite.dk | 1204904354 |  | x86-boot: don't request VBE2 information  The new x86 setup code (4fd06960f120) broke booting on an old P3/500MHz with an onboard Voodoo3 of mine. After debugging it, it turned out to be caused by the fact that the vesa probing now asks for VBE2 data.  Disassembing the video BIOS shows that it overflows the vesa_general_info structure when VBE2 data is requested because the source addresses for the information strings which get strcpy'ed to the buffer lie outside the 32K BIOS code (and hence contain long sequences of 0xff's).  E.G.:  get_vbe_controller_info: 00002A9C  60                pushaw 00002A9D  1E                push ds 00002A9E  0E                push cs 00002A9F  1F                pop ds 00002AA0  2BC9              sub cx,cx 00002AA2  6626813D56424532  cmp dword [es:di],0x32454256 ; "VBE2" 00002AAA  7501              jnz .1 00002AAC  41                inc cx .1: 00002AAD  51                push cx 00002AAE  B91400            mov cx,0x14 00002AB1  BED47F            mov si, controller_header 00002AB4  57                push di 00002AB5  F3A4              rep movsb ; copy vbe1.2 header  00002AB7  B9EC00            mov cx,0xec 00002ABA  2AC0              sub al,al 00002ABC  F3AA              rep stosb ; zero pad remainder  00002ABE  5F                pop di 00002ABF  E8EB0D            call word get_memory 00002AC2  C1E002            shl ax,0x2 00002AC5  26894512          mov [es:di+0x12],ax ; total memory 00002AC9  26C745040003      mov word [es:di+0x4],0x300 ; VBE version 00002ACF  268C4D08          mov [es:di+0x8],cs 00002AD3  268C4D10          mov [es:di+0x10],cs 00002AD7  59                pop cx 00002AD8  E361              jcxz .done ; VBE2 requested? 00002ADA  8D9D0001          lea bx,[di+0x100] 00002ADE  53                push bx 00002ADF  87DF              xchg bx,di ; di now points to 2nd half 00002AE1  26C747140001      mov word [es:bx+0x14],0x100 ; sw rev  00002AE7  26897F06          mov [es:bx+0x6],di		; oem string 00002AEB  268C4708          mov [es:bx+0x8],es 00002AEF  BE5280            mov si,0x8052 ; oem string 00002AF2  E87A1B            call word strcpy  00002AF5  26897F0E          mov [es:bx+0xe],di ; video mode list 00002AF9  268C4710          mov [es:bx+0x10],es 00002AFD  B91E00            mov cx,0x1e 00002B00  BEE87F            mov si,vidmodes 00002B03  F3A5              rep movsw  00002B05  26897F16          mov [es:bx+0x16],di ; oem vendor 00002B09  268C4718          mov [es:bx+0x18],es 00002B0D  BE2480            mov si,0x8024 ; oem vendor 00002B10  E85C1B            call word strcpy  00002B13  26897F1A          mov [es:bx+0x1a],di ; oem product 00002B17  268C471C          mov [es:bx+0x1c],es 00002B1B  BE3880            mov si,0x8038 ; oem product 00002B1E  E84E1B            call word strcpy  00002B21  26897F1E          mov [es:bx+0x1e],di ; oem product rev 00002B25  268C4720          mov [es:bx+0x20],es 00002B29  BE4580            mov si,0x8045 ; oem product rev 00002B2C  E8401B            call word strcpy  00002B2F  58                pop ax 00002B30  B90001            mov cx,0x100 00002B33  2BCF              sub cx,di 00002B35  03C8              add cx,ax 00002B37  2AC0              sub al,al 00002B39  F3AA              rep stosb ; zero pad .done: 00002B3B  1F                pop ds 00002B3C  61                popaw 00002B3D  B84F00            mov ax,0x4f 00002B40  C3                ret  (The full BIOS can be found at http://peter.korsgaard.com/vgabios.bin if interested).  The old setup code didn't ask for VBE2 info, and the new code doesn't actually do anything with the extra information, so the fix is to simply not request it. Other BIOS'es might have the same problem.  Signed-off-by: Peter Korsgaard <jacmet@sunsite.dk> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | mtools.conf.in | g | 330B |  | Thomas Gleixner | tglx@linutronix.de | 1192094205 |  | i386: move boot  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | regs.c | s | 843B | 26 | H. Peter Anvin | hpa@linux.intel.com | 1239318491 |  | x86, setup: "glove box" BIOS calls -- infrastructure  Impact: new interfaces (not yet used)  For all the platforms out there, there is an infinite number of buggy BIOSes.  This adds infrastructure to treat BIOS interrupts more like toxic waste and "glove box" them -- we switch out the register set, perform the BIOS interrupt, and then restore the previous state.  LKML-Reference: <49DE7F79.4030106@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: Pavel Machek <pavel@ucw.cz> Cc: Rafael J. Wysocki <rjw@sisk.pl>
f | video.c | s | 7.1K | 278 | H. Peter Anvin | hpa@zytor.com | 1266460326 |  | x86, setup: When restoring the screen, update boot_params.screen_info  When we restore the screen content after a mode change, we return the cursor to its former position.  However, we need to also update boot_params.screen_info accordingly, so that the decompression code knows where on the screen the cursor is.  Just in case the video BIOS does something extra screwy, read the cursor position back from the BIOS instead of relying on it doing the right thing.  While we're at it, make sure we cap the cursor position to the new screen coordinates.  Reported-by: Wim Osterholt <wim@djo.tudelft.nl> Bugzilla-Reference: http://bugzilla.kernel.org/show_bug.cgi?id=15329 Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | a20.c | s | 3.5K | 131 | H. Peter Anvin | hpa@linux.intel.com | 1239318491 |  | x86, setup: "glove box" BIOS interrupts in the core boot code  Impact: BIOS proofing  "Glove box" off BIOS interrupts in the core boot code.  LKML-Reference: <49DE7F79.4030106@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | printf.c | s | 6.0K | 275 | Yinghai Lu | yinghai@kernel.org | 1280789516 |  | x86, setup: reorganize the early console setup  Separate early_serial_console from tty.c  This allows for reuse of early_serial_console.c/string.c/printf.c/cmdline.c in boot/compressed/.  -v2: according to hpa, don't include string.c etc -v3: compressed/misc.c must have early_serial_base as static, so move it back to tty.c      for setup code  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <4C568D2B.205@kernel.org> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | copy.S | g | 1.3K |  | Cyrill Gorcunov | gorcunov@gmail.com | 1235059980 |  | x86: copy.S - use GLOBAL,ENDPROC macros  Impact: cleanup  Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
d | compressed |  | 15 items |  | Matt Fleming | matt.fleming@intel.com | 1338567086 |  | x86, efi; Add EFI boot stub console support  We need a way of printing useful messages to the user, for example when we fail to open an initrd file, instead of just hanging the machine without giving the user any indication of what went wrong. So sprinkle some error messages throughout the EFI boot stub code to make it easier for users to diagnose/report problems.  Reported-by: Keshav P R <the.ridikulus.rat@gmail.com> Cc: Matthew Garrett <mjg@redhat.com> Signed-off-by: Matt Fleming <matt.fleming@intel.com> Link: http://lkml.kernel.org/r/1331907517-3985-3-git-send-email-matt@console-pimps.org Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | version.c | s | 620B | 18 | Sam Ravnborg | sam@ravnborg.org | 1260619695 |  | kbuild: move utsrelease.h to include/generated  Fix up all users of utsrelease.h  Signed-off-by: Sam Ravnborg <sam@ravnborg.org> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | cpucheck.c | s | 5.9K | 210 | H. Peter Anvin | hpa@zytor.com | 1220656424 |  | x86: boot: stub out unimplemented CPU feature words  The CPU feature detection code in the boot code is somewhat minimal, and doesn't include all possible CPUID words.  In particular, it doesn't contain the code for CPU feature words 2 (Transmeta), 3 (Linux-specific), 5 (VIA), or 7 (scattered).  Zero them out, so we can still set those bits as known at compile time; in particular, this allows creating a Linux-specific NOPL flag and have it required (and therefore resolvable at compile time) in 64-bit mode.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | cpu.c | s | 1.7K | 74 | H. Peter Anvin | hpa@zytor.com | 1221602966 |  | x86 setup: handle more than 8 CPU flag words  Checkin e38e05a85828dac23540cd007df5f20985388afc added a 9th CPU flag word, but didn't adjust the boot code to match.  This patch adds the necessary boot code support.  Note: due to a typo in an #if statement, it didn't trigger the #error this was supposed to do.  Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | tty.c | s | 2.4K | 107 | Yinghai Lu | yinghai@kernel.org | 1280789516 |  | x86, setup: reorganize the early console setup  Separate early_serial_console from tty.c  This allows for reuse of early_serial_console.c/string.c/printf.c/cmdline.c in boot/compressed/.  -v2: according to hpa, don't include string.c etc -v3: compressed/misc.c must have early_serial_base as static, so move it back to tty.c      for setup code  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <4C568D2B.205@kernel.org> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | bioscall.S | g | 1.5K |  | H. Peter Anvin | hpa@zytor.com | 1245199652 |  | x86, boot: use .code16gcc instead of .code16  Use .code16gcc to compile arch/x86/boot/bioscall.S rather than .code16, since some older versions of binutils can't generate 32-bit addressing expressions (67 prefixes) in .code16 mode, only in .code16gcc mode.  Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | cmdline.c | s | 3.3K | 136 | Yinghai Lu | yinghai@kernel.org | 1280789516 |  | x86, setup: reorganize the early console setup  Separate early_serial_console from tty.c  This allows for reuse of early_serial_console.c/string.c/printf.c/cmdline.c in boot/compressed/.  -v2: according to hpa, don't include string.c etc -v3: compressed/misc.c must have early_serial_base as static, so move it back to tty.c      for setup code  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <4C568D2B.205@kernel.org> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | code16gcc.h | s | 388B | 14 | Thomas Gleixner | tglx@linutronix.de | 1192094205 |  | i386: move boot  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | main.c | s | 4.3K | 149 | Joshua Cov | joshuacov@googlemail.com | 1336511981 |  | keyboard: Use BIOS Keyboard variable to set Numlock  The PC BIOS does provide a NUMLOCK flag containing the desired state of this LED. This patch sets the current state according to the data in the bios.  [ hpa: fixed __weak declaration without definition, changed "inline"   to "static inline" ]  Signed-Off-By: Joshua Cov <joshuacov@googlemail.com> Link: http://lkml.kernel.org/r/CAKL7Q7rvq87TNS1T_Km8fW_5OzS%2BSbYazLXKxW-6ztOxo3zorg@mail.gmail.com Acked-by: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | video-vesa.c | s | 6.7K | 228 | Linus Torvalds | torvalds@linux-foundation.org | 1252940507 |  | Merge branch 'x86-setup-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip  * 'x86-setup-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip:   x86, e820: Guard against array overflowed in __e820_add_region()   x86, setup: remove obsolete pre-Kconfig CONFIG_VIDEO_ variables
f | mkcpustr.c | s | 1.2K | 42 | Frans Pop | elendil@planet.nl | 1265561271 |  | x86: Remove trailing spaces in messages  Signed-off-by: Frans Pop <elendil@planet.nl> Cc: Avi Kivity <avi@redhat.com> Cc: x86@kernel.org LKML-Reference: <1265478443-31072-10-git-send-email-elendil@planet.nl> [ Left out the KVM bits. ] Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | ctype.h | s | 289B | 15 | H. Peter Anvin | hpa@zytor.com | 1280808440 |  | x86, setup: move isdigit.h to ctype.h, header files on top.  It is a subset of <ctype.h> functionality, so name it ctype.h.  Also, reorganize header files so #include statements are clustered near the top as they should be.  Signed-off-by: H. Peter Anvin <hpa@zytor.com> LKML-Reference: <4C5752F2.8030206@kernel.org>
f | early_serial_console.c | s | 3.4K | 120 | Yinghai Lu | yinghai@kernel.org | 1285089513 |  | x86, setup: Fix earlyprintk=serial,0x3f8,115200  earlyprintk can take and I/O port, so we need to handle this case in the setup code too, otherwise 0x3f8 will be treated as a baud rate.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> LKML-Reference: <4C7B05A6.4010801@kernel.org> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | apm.c | s | 1.9K | 59 | H. Peter Anvin | hpa@linux.intel.com | 1239318491 |  | x86, setup: "glove box" BIOS interrupts in the APM code  Impact: BIOS proofing  "Glove box" off BIOS interrupts in the APM code.  LKML-Reference: <49DE7F79.4030106@zytor.com> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com> Cc: Stephen Rothwell <sfr@canb.auug.org.au>
