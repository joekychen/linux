d | include |  | 1 items |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1333402885 |  | avr32: fix build failures from mis-naming of atmel_nand.h  Commit bf4289cba02b ("ATMEL: fix nand ecc support") indicated that it wanted to "Move platform data to a common header include/linux/platform_data/atmel_nand.h" and the new header even had re-include protectors with:      #ifndef __ATMEL_NAND_H__  However, the file that was added was simply called atmel.h and this caused avr32 defconfig to fail with:    In file included from arch/avr32/boards/atstk1000/setup.c:22:   arch/avr32/mach-at32ap/include/mach/board.h:10:44: error: linux/platform_data/atmel_nand.h: No such file or directory   In file included from arch/avr32/boards/atstk1000/setup.c:22:   arch/avr32/mach-at32ap/include/mach/board.h:121: warning: 'struct atmel_nand_data' declared inside parameter list   arch/avr32/mach-at32ap/include/mach/board.h:121: warning: its scope is only this definition or declaration, which is probably not what you want   make[2]: *** [arch/avr32/boards/atstk1000/setup.o] Error 1  It seems the scope of the file contents will expand beyond just nand, so ignore the original intention, and fix up the users who reference the bad name with the _nand suffix.  CC: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com> CC: David Woodhouse <dwmw2@infradead.org> Acked-by: Hans-Christian Egtvedt <egtvedt@samfundet.no> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hsmc.c | s | 6.3K | 228 | Joe Perches | joe@perches.com | 1307710536 |  | treewide: Convert uses of struct resource to resource_size(ptr)  Several fixes as well where the +1 was missing.  Done via coccinelle scripts like:  @@ struct resource *ptr; @@  - ptr->end - ptr->start + 1 + resource_size(ptr)  and some grep and typing.  Mostly uncompiled, no cross-compilers.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | Makefile | g | 265B |  | Haavard Skinnemoen | haavard.skinnemoen@atmel.com | 1218192241 |  | avr32: Clean up HMATRIX code  Introduce a few helper functions for HMATRIX configuration and clean up the register definitions. Also add definitions for the HMATRIX master and slave IDs on the AT32AP700x chips.  Also make the definitions in hmatrix.h available to board code by moving it to <mach/hmatrix.h>  Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | pm.c | s | 5.5K | 193 | Lionel Debroux | lionel_debroux@yahoo.fr | 1289913242 |  | suspend: constify platform_suspend_ops  While at it, fix two checkpatch errors. Several non-const struct instances constified by this patch were added after the introduction of platform_suspend_ops in checkpatch.pl's list of "should be const" structs (79404849e90a41ea2109bd0e2f7c7164b0c4ce73).  Patch against mainline. Inspired by hunks of the grsecurity patch, updated for newer kernels.  Signed-off-by: Lionel Debroux <lionel_debroux@yahoo.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | intc.c | s | 4.1K | 162 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103859 |  | avr32: add export.h to arch/avr32 for EXPORT_SYMBOL/THIS_MODULE  Add it in where the module.h implicit presence was doing the job before.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | clock.c | s | 6.3K | 242 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103859 |  | avr32: add export.h to arch/avr32 for EXPORT_SYMBOL/THIS_MODULE  Add it in where the module.h implicit presence was doing the job before.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | intc.h | s | 13K | 324 | Haavard Skinnemoen | hskinnemoen@atmel.com | 1161833193 |  | [PATCH] AVR32: Use __raw MMIO access for internal peripherals  The read[bwl] and write[bwl] functions are meant for accessing PCI devices. How this is achieved on AVR32 is unknown, as there are no systems with a PCI bridge available yet.  On-chip peripheral access, however, should not depend on how we end up implementing PCI access, so using __raw_read[bwl]/__raw_write[bwl] is the right thing to do for on-chip peripherals. This patch converts the drivers for the static memory controller, interrupt controller, PIO controller and system manager to use __raw MMIO access.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | sdramc.h | s | 2.6K | 68 | Haavard Skinnemoen | hskinnemoen@atmel.com | 1214989501 |  | avr32: Power Management support ("standby" and "mem" modes)  Implement Standby support. In this mode, we'll suspend all drivers, put the SDRAM in self-refresh mode and switch off the HSB bus ("frozen" mode.)  Implement Suspend-to-mem support. In this mode, we suspend all drivers, put the SDRAM into self-refresh mode and switch off all internal clocks except the 32 kHz oscillator ("stop" mode.)  The lowest-level suspend code runs from a small portion of SRAM allocated at startup time. This gets rid of a small potential race with the SDRAM where we might try to enter self-refresh mode in the middle of an icache burst. We also relocate all interrupt and exception handlers to SRAM during the small window when we enter and exit the low-power modes.  We don't need to do any special tricks to start and stop the PLL. The main clock is automatically gated by hardware until the PLL is stable.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com>
f | at32ap700x.c | s | 53K | 1989 | Linus Torvalds | torvalds@linux-foundation.org | 1333060497 |  | Merge branch 'next' of git://git.infradead.org/users/vkoul/slave-dma  Pull slave-dmaengine update from Vinod Koul:  "This includes the cookie cleanup by Russell, the addition of context   parameter for dmaengine APIs, more arm dmaengine driver cleanup by   moving code to dmaengine, this time for imx by Javier and pl330 by   Boojin along with the usual driver fixes."  Fix up some fairly trivial conflicts with various other cleanups.  * 'next' of git://git.infradead.org/users/vkoul/slave-dma: (67 commits)   dmaengine: imx: fix the build failure on x86_64   dmaengine: i.MX: Fix merge of cookie branch.   dmaengine: i.MX: Add support for interleaved transfers.   dmaengine: imx-dma: use 'dev_dbg' and 'dev_warn' for messages.   dmaengine: imx-dma: remove 'imx_dmav1_baseaddr' and 'dma_clk'.   dmaengine: imx-dma: remove unused arg of imxdma_sg_next.   dmaengine: imx-dma: remove internal structure.   dmaengine: imx-dma: remove 'resbytes' field of 'internal' structure.   dmaengine: imx-dma: remove 'in_use' field of 'internal' structure.   dmaengine: imx-dma: remove sg member from internal structure.   dmaengine: imx-dma: remove 'imxdma_setup_sg_hw' function.   dmaengine: imx-dma: remove 'imxdma_config_channel_hw' function.   dmaengine: imx-dma: remove 'imxdma_setup_mem2mem_hw' function.   dmaengine: imx-dma: remove dma_mode member of internal structure.   dmaengine: imx-dma: remove data member from internal structure.   dmaengine: imx-dma: merge old dma-v1.c with imx-dma.c   dmaengine: at_hdmac: add slave config operation   dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic   dmaengine/dma_slave: introduce inline wrappers   dma: imx-sdma: Treat firmware messages as warnings instead of erros   ...
f | cpufreq.c | s | 3.1K | 101 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for AVR32  Disintegrate asm/system.h for AVR32.  This has not been compiled at all.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Haavard Skinnemoen <hskinnemoen@gmail.com>
f | clock.h | s | 1.1K | 31 | Alex Raimondi | mailinglist@miromico.ch | 1231167124 |  | avr32: Hammerhead board support  The Hammerhead platform is built around a AVR32 32-bit microcontroller from Atmel.  It offers versatile peripherals, such as ethernet, usb device, usb host etc.  The board also incooperates a power supply and is a Power over Ethernet (PoE) Powered Device (PD).  Additonally, a Cyclone III FPGA from Altera is integrated on the board. The FPGA is mapped into the 32-bit AVR memory bus. The FPGA offers two DDR2 SDRAM interfaces, which will cover even the most exceptional need of memory bandwidth. Together with the onboard video decoder the board is ready for video processing.  This patch does include the basic support for the fpga device driver, but not the device driver itself.  Signed-off-by: Alex Raimondi <mailinglist@miromico.ch> Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | pio.h | s | 6.4K | 146 | Hans-Christian Egtvedt | hans-christian.egtvedt@atmel.com | 1215157685 |  | avr32: Fix typo of IFSR in a comment in the PIO header file  Signed-off-by: Hans-Christian Egtvedt <hans-christian.egtvedt@atmel.com> Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | extint.c | s | 6.0K | 228 | Joe Perches | joe@perches.com | 1307710536 |  | treewide: Convert uses of struct resource to resource_size(ptr)  Several fixes as well where the +1 was missing.  Done via coccinelle scripts like:  @@ struct resource *ptr; @@  - ptr->end - ptr->start + 1 + resource_size(ptr)  and some grep and typing.  Mostly uncompiled, no cross-compilers.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | pdc.c | s | 1.0K | 40 | Uwe Kleine-König | ukleinek@strlen.de | 1222069863 |  | avr32: Use platform_driver_probe for pdc platform driver  The probe function of the pdc platform driver lives in the init section and so a pdc device that is created after the init section is discarded probably results in an oops.  Even if this cannot happen, using platform_driver_probe is cleaner.  (If this can happen and should be supported the probe function must live in the devinit section instead.)  Signed-off-by: Uwe Kleine-König <ukleinek@strlen.de> Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | pm.h | s | 3.0K | 103 | Haavard Skinnemoen | haavard.skinnemoen@atmel.com | 1218192134 |  | avr32: Add MMIO address definitions for certain controllers  Hardcoded MMIO base addresses are used a few places throughout the platform code. Move these into the chip-specific header file so that adding support for new chips becomes a bit easier.  Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | hsmc.h | s | 3.7K | 114 | Haavard Skinnemoen | hskinnemoen@atmel.com | 1161833193 |  | [PATCH] AVR32: Use __raw MMIO access for internal peripherals  The read[bwl] and write[bwl] functions are meant for accessing PCI devices. How this is achieved on AVR32 is unknown, as there are no systems with a PCI bridge available yet.  On-chip peripheral access, however, should not depend on how we end up implementing PCI access, so using __raw_read[bwl]/__raw_write[bwl] is the right thing to do for on-chip peripherals. This patch converts the drivers for the static memory controller, interrupt controller, PIO controller and system manager to use __raw MMIO access.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | pio.c | s | 10K | 372 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103859 |  | avr32: add export.h to arch/avr32 for EXPORT_SYMBOL/THIS_MODULE  Add it in where the module.h implicit presence was doing the job before.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | pm-at32ap700x.S | g | 4.7K |  | Ben Hutchings | ben@decadent.org.uk | 1302702409 |  | avr32: Fix .size directive for cpu_enter_idle  gas used to accept (and ignore?) .size directives which referred to undefined symbols, as this does.  In binutils 2.21 these are treated as errors.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Hans-Christian Egtvedt <hans-christian.egtvedt@atmel.com>
f | Kconfig | g | 695B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1201246301 |  | [AVR32] Add support for AT32AP7001 and AT32AP7002  These are derivatives of the AT32AP7000 chip, which means that most of the code stays the same. Rename a few files, functions, definitions and config symbols to reflect that they apply to all AP700x chips, and exclude some platform devices from chips where they aren't present.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com>
f | hmatrix.c | s | 2.3K | 77 | Haavard Skinnemoen | haavard.skinnemoen@atmel.com | 1218192241 |  | avr32: Clean up HMATRIX code  Introduce a few helper functions for HMATRIX configuration and clean up the register definitions. Also add definitions for the HMATRIX master and slave IDs on the AT32AP700x chips.  Also make the definitions in hmatrix.h available to board code by moving it to <mach/hmatrix.h>  Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
