f | clear_user.S | g | 1.2K |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | Makefile | g | 374B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1161833193 |  | [PATCH] AVR32: Implement and export __raw_{read,write}s[bwl]  Implement __raw_readsb and __raw_writesb. Export __raw_reads[bwl] and __raw_writes[bwl] for use by modules.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | __avr32_lsr64.S | g | 559B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | __avr32_asr64.S | g | 560B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | strnlen_user.S | g | 1.2K |  | Ben Nizette | bn@niasdigital.com | 1232094717 |  | avr32: Fix out-of-range rcalls in large kernels  Replace handcoded rcall instructions with the call pseudo-instruction. For kernels too far over 1MB the rcall instruction can't reach and linking will fail.  We already call the final linker with --relax which converts call pseudo-instructions to the right things anyway.  This fixes  arch/avr32/kernel/built-in.o: In function `syscall_exit_work': (.ex.text+0x198): relocation truncated to fit: R_AVR32_22H_PCREL against symbol `schedule' defined in .sched.text section in kernel/built-in.o arch/avr32/kernel/built-in.o: In function `fault_exit_work': (.ex.text+0x3b6): relocation truncated to fit: R_AVR32_22H_PCREL against symbol `schedule' defined in .sched.text section in kernel/built-in.o  But I'm still left with  arch/avr32/kernel/built-in.o:(.fixup+0x2): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+45a arch/avr32/kernel/built-in.o:(.fixup+0x8): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+8ea arch/avr32/kernel/built-in.o:(.fixup+0xe): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+abe arch/avr32/kernel/built-in.o:(.fixup+0x14): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+ac8 arch/avr32/kernel/built-in.o:(.fixup+0x1a): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+ad2 arch/avr32/kernel/built-in.o:(.fixup+0x20): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+adc arch/avr32/kernel/built-in.o:(.fixup+0x26): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+ae6 arch/avr32/kernel/built-in.o:(.fixup+0x2c): relocation truncated to fit: R_AVR32_22H_PCREL against `.text'+af0 arch/avr32/kernel/built-in.o:(.fixup+0x32): additional relocation overflows omitted from the output  These are caused by a similar problem with 'rjmp' instructions. Unfortunately, there's no easy fix for these at the moment since we don't have a arbitrary-range 'jmp' instruction similar to 'call'.  Signed-off-by: Ben Nizette <bn@niasdigital.com> Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | io-readsb.S | g | 760B |  | Haavard Skinnemoen | haavard.skinnemoen@atmel.com | 1214572070 |  | avr32: Fix wrong I/O access size in __raw_readsb  __raw_readsb() should always use byte accesses, never halfword accesses, to I/O memory.  Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | io-readsl.S | g | 542B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | io-writesw.S | g | 644B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | memcpy.S | g | 1.2K |  | Sebastian Andrzej Siewior | bigeasy@breakpoint.cc | 1248691048 |  | avr32/lib: fix unaligned memcpy where len < 4  in case of memcpy(p, unaligned, 1..3) we get 1..3 as the return value instead of p  Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc> Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>
f | findbit.S | g | 3.2K |  | Akinobu Mita | akinobu.mita@gmail.com | 1300934771 |  | asm-generic: rename generic little-endian bitops functions  As a preparation for providing little-endian bitops for all architectures, This renames generic implementation of little-endian bitops.  (remove "generic_" prefix and postfix "_le")  s/generic_find_next_le_bit/find_next_bit_le/ s/generic_find_next_zero_le_bit/find_next_zero_bit_le/ s/generic_find_first_zero_le_bit/find_first_zero_bit_le/ s/generic___test_and_set_le_bit/__test_and_set_bit_le/ s/generic___test_and_clear_le_bit/__test_and_clear_bit_le/ s/generic_test_le_bit/test_bit_le/ s/generic___set_le_bit/__set_bit_le/ s/generic___clear_le_bit/__clear_bit_le/ s/generic_test_and_set_le_bit/test_and_set_bit_le/ s/generic_test_and_clear_le_bit/test_and_clear_bit_le/  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Hans-Christian Egtvedt <hans-christian.egtvedt@atmel.com> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Roman Zippel <zippel@linux-m68k.org> Cc: Andreas Schwab <schwab@linux-m68k.org> Cc: Greg Ungerer <gerg@uclinux.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Paul Mackerras <paulus@samba.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | delay.c | s | 1.3K | 48 | Andrew Morton | akpm@linux-foundation.org | 1202323262 |  | read_current_timer() cleanups  - All implementations can be __devinit  - The function prototypes were in asm/timex.h but they all must be the same,   so create a single declaration in linux/timex.h.  - uninline the sparc64 version to match the other architectures  - Don't bother #defining ARCH_HAS_READ_CURRENT_TIMER to a particular value.  [ezk@cs.sunysb.edu: fix build] Cc: "David S. Miller" <davem@davemloft.net> Cc: Haavard Skinnemoen <hskinnemoen@atmel.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Andi Kleen <ak@suse.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | memset.S | g | 1.2K |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | csum_partial.S | g | 892B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | csum_partial_copy_generic.S | g | 1.7K |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | strncpy_from_user.S | g | 1.2K |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | __avr32_lsl64.S | g | 559B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | io-readsw.S | g | 789B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | io-writesl.S | g | 405B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | copy_user.S | g | 2.2K |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1159285734 |  | [PATCH] avr32 architecture  This adds support for the Atmel AVR32 architecture as well as the AT32AP7000 CPU and the AT32STK1000 development board.  AVR32 is a new high-performance 32-bit RISC microprocessor core, designed for cost-sensitive embedded applications, with particular emphasis on low power consumption and high code density.  The AVR32 architecture is not binary compatible with earlier 8-bit AVR architectures.  The AVR32 architecture, including the instruction set, is described by the AVR32 Architecture Manual, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32000.pdf  The Atmel AT32AP7000 is the first CPU implementing the AVR32 architecture.  It features a 7-stage pipeline, 16KB instruction and data caches and a full Memory Management Unit.  It also comes with a large set of integrated peripherals, many of which are shared with the AT91 ARM-based controllers from Atmel.  Full data sheet is available from  http://www.atmel.com/dyn/resources/prod_documents/doc32003.pdf  while the CPU core implementation including caches and MMU is documented by the AVR32 AP Technical Reference, available from  http://www.atmel.com/dyn/resources/prod_documents/doc32001.pdf  Information about the AT32STK1000 development board can be found at  http://www.atmel.com/dyn/products/tools_card.asp?tool_id=3918  including a BSP CD image with an earlier version of this patch, development tools (binaries and source/patches) and a root filesystem image suitable for booting from SD card.  Alternatively, there's a preliminary "getting started" guide available at http://avr32linux.org/twiki/bin/view/Main/GettingStarted which provides links to the sources and patches you will need in order to set up a cross-compiling environment for avr32-linux.  This patch, as well as the other patches included with the BSP and the toolchain patches, is actively supported by Atmel Corporation.  [dmccr@us.ibm.com: Fix more pxx_page macro locations] [bunk@stusta.de: fix `make defconfig'] Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: Dave McCracken <dmccr@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | io-writesb.S | g | 808B |  | Haavard Skinnemoen | hskinnemoen@atmel.com | 1161833193 |  | [PATCH] AVR32: Implement and export __raw_{read,write}s[bwl]  Implement __raw_readsb and __raw_writesb. Export __raw_reads[bwl] and __raw_writes[bwl] for use by modules.  Signed-off-by: Haavard Skinnemoen <hskinnemoen@atmel.com> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
