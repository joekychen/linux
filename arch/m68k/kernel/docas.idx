f | Makefile | g | 619B |  | Thomas Gleixner | tglx@linutronix.de | 1336215623 |  | m68k: Use generic init_task  Same code. Use the generic version.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Link: http://lkml.kernel.org/r/20120503085034.816195285@linutronix.de
f | time.c | s | 2.6K | 92 | Greg Ungerer | gerg@uclinux.org | 1339466306 |  | m68k: fix inclusion of arch_gettimeoffset for non-MMU 68k classic CPU types  When building for non-MMU based classic 68k CPU types (like the 68328 for example) you get a compilation error:    CC      arch/m68k/kernel/time.o arch/m68k/kernel/time.c:91:5: error: redefinition of ‘arch_gettimeoffset’ include/linux/time.h:145:19: note: previous definition of ‘arch_gettimeoffset’ was here  The arch_gettimeoffset() code is included when building for these CPU types, but it shouldn't be. Those machine types do not have CONFIG_ARCH_USES_GETTIMEOFFSET set.  The fix is simply to conditionally include the arch_gettimeoffset() code on that same config setting that specifies its use or not.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | vectors.c | s | 3.8K | 122 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for M68K  Disintegrate asm/system.h for M68K.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Greg Ungerer <gerg@uclinux.org> cc: linux-m68k@lists.linux-m68k.org
f | vmlinux-sun3.lds | g | 1.1K |  | Greg Ungerer | gerg@uclinux.org | 1324727277 |  | m68k: print memory layout info in boot log  Output a table of the kernel memory regions at boot time. This is taken directly from the ARM architecture code that does this. The table looks like this:  Virtual kernel memory layout:     vector  : 0x00000000 - 0x00000400   (   0 KiB)     kmap    : 0xd0000000 - 0xe0000000   ( 256 MiB)     vmalloc : 0xc0000000 - 0xcfffffff   ( 255 MiB)     lowmem  : 0x00000000 - 0x02000000   (  32 MiB)       .init : 0x00128000 - 0x00134000   (  48 KiB)       .text : 0x00020000 - 0x00118d54   ( 996 KiB)       .data : 0x00118d60 - 0x00126000   (  53 KiB)       .bss  : 0x00134000 - 0x001413e0   (  53 KiB)  This has been very useful while debugging the ColdFire virtual memory support code. But in general I think it is nice to know extacly where the kernel has layed everything out on boot.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | asm-offsets.c | s | 3.8K | 91 | Greg Ungerer | gerg@uclinux.org | 1324727276 |  | m68k: remove thread_info struct from thread struct  Currently on m68k we have a comeplete thread_info structure stored inside of the thread_struct, and we also have it in the initial part of the kernel stack. Mostly the code currently uses the one inside of the thread_struct, only using the "task" pointer from the stack based one.  This is wasteful and confusing, we should only have the single instance of thread_info inside the stack page. And this is the norm for all other architectures.  This change makes m68k handle thread_info consistently on both MMU enabled and non-MMU setups.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | m68k_ksyms.c | s | 1.0K | 28 | Greg Ungerer | gerg@uclinux.org | 1324727277 |  | m68k: handle presence of 64bit mul/div instructions cleanly  The traditional 68000 processors and the newer reduced instruction set ColdFire processors do not support the 32*32->64 multiply or the 64/32->32 divide instructions. This is not a difference based on the presence of a hardware MMU or not.  Create a new config symbol to mark that a CPU type doesn't support the longer multiply/divide instructions. Use this then as a basis for using the fast 64bit based divide (in div64.h) and for linking in the extra libgcc functions that may be required (mulsi3, divsi3, etc).  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | vmlinux-std.lds | g | 1.2K |  | Greg Ungerer | gerg@uclinux.org | 1324727277 |  | m68k: print memory layout info in boot log  Output a table of the kernel memory regions at boot time. This is taken directly from the ARM architecture code that does this. The table looks like this:  Virtual kernel memory layout:     vector  : 0x00000000 - 0x00000400   (   0 KiB)     kmap    : 0xd0000000 - 0xe0000000   ( 256 MiB)     vmalloc : 0xc0000000 - 0xcfffffff   ( 255 MiB)     lowmem  : 0x00000000 - 0x02000000   (  32 MiB)       .init : 0x00128000 - 0x00134000   (  48 KiB)       .text : 0x00020000 - 0x00118d54   ( 996 KiB)       .data : 0x00118d60 - 0x00126000   (  53 KiB)       .bss  : 0x00134000 - 0x001413e0   (  53 KiB)  This has been very useful while debugging the ColdFire virtual memory support code. But in general I think it is nice to know extacly where the kernel has layed everything out on boot.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | head.S | g | 88K |  | Finn Thain | fthain@telegraphics.com.au | 1323543165 |  | m68k/mac: early console  Revive the old mac_serial_print() routine as mac_early_print(). mac_serial_print() did not function because it did not use the right offsets for its stack arguments. Fix this and make compilation conditional on CONFIG_EARLY_PRINTK instead of the obscure MAC_SERIAL_DEBUG macro.  Give mac_early_print() a new string length parameter to fit the early console API.  Send output to the framebuffer as well as serial ports.  Change the line rate to 38400 baud to match the default for the real (pmac_zilog) serial console.  Signed-off-by: Finn Thain <fthain@telegraphics.com.au> Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | ptrace.c | s | 7.4K | 273 | Greg Ungerer | gerg@uclinux.org | 1339466309 |  | m68k: make syscall_trace_enter/leave exist for non-MMU classic m68k types  The assembler entry code calls directly to the syscall_trace_enter() and syscall_trace_leave() functions. But currently they are conditionaly compiled out for the non-MMU classic m68k CPU types (so 68328 for example), resulting in a link error:        LD      vmlinux     arch/m68k/platform/68328/built-in.o: In function `do_trace':     (.text+0x1c): undefined reference to `syscall_trace_enter'     arch/m68k/platform/68328/built-in.o: In function `do_trace':     (.text+0x4c): undefined reference to `syscall_trace_leave'  Change the conditional check that includes these functions to be true for the !defined(CONFIG_MMU) case as well.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | vmlinux.lds.S | g | 258B |  | Greg Ungerer | gerg@uclinux.org | 1325204444 |  | m68k: use non-MMU linker script for ColdFire MMU builds  Use the non-MMU linker script for ColdFire builds when we are building for MMU enabled. The image layout is correct for loading on existing ColdFire dev boards. The only addition required to the current non-MMU linker script is to add support for the fixup section.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org> Acked-by: Matt Waddel <mwaddel@yahoo.com> Acked-by: Kurt Mahan <kmahan@xmission.com>
f | traps.c | s | 30K | 1086 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for M68K  Disintegrate asm/system.h for M68K.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Greg Ungerer <gerg@uclinux.org> cc: linux-m68k@lists.linux-m68k.org
f | dma.c | s | 3.7K | 135 | Greg Ungerer | gerg@uclinux.org | 1337512976 |  | m68k: merge the MMU and non-MMU versions of the arch dma code  The majority of the m68k architecture dma code is the same, so merge the current separated files dma_no.c and dma_mm.c back into a single dma.c  The main alloc and free routines are a little different, so we keep a single #ifdef based on CONFIG_MMU for them. All the other support functions are now identical.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | setup_no.c | s | 8.9K | 279 | Greg Ungerer | gerg@uclinux.org | 1330904584 |  | m68knommu: modify timer init code to make it consistent with m68k code  With a few small changes we can make the m68knommu timer init code the same as the m68k code. By using the mach_sched_init function pointer and reworking the current timer initializers to keep track of the common m68k timer_interrupt() handler we end up with almost identical code for m68knommu.  This will allow us to more easily merge the mmu and non-mmu m68k time.c in future patches.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | entry_no.S | g | 2.5K |  | Greg Ungerer | gerg@uclinux.org | 1325204424 |  | m68k: set register a2 to current if MMU enabled on ColdFire  Virtual memory m68k systems build with register a2 dedicated to being the current proc pointer (non-MMU don't do this). Add code to the ColdFire interrupt and exception processing to set this on entry, and at context switch time. We use the same GET_CURRENT() macro that MMU enabled code uses - modifying it so that the assembler is ColdFire clean.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Matt Waddel <mwaddel@yahoo.com> Acked-by: Kurt Mahan <kmahan@xmission.com> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org>
f | setup_mm.c | s | 12K | 495 | Greg Ungerer | gerg@uclinux.org | 1325204447 |  | m68k: add ColdFire FPU support for the V4e ColdFire CPUs  The V4e ColdFire CPU family also has an integrated FPU (as well as the MMU). So add code to support this hardware along side the existing m68k FPU code.  The ColdFire FPU is of course different to all previous 68k FP units. It is close in operation to the 68060, but not completely compatible. The biggest issue to deal with is that the ColdFire FPU multi-move instructions are different. It does not support multi-moving the FP control registers, and the multi-move of the FP data registers uses a different instruction mnemonic.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Matt Waddel <mwaddel@yahoo.com> Acked-by: Kurt Mahan <kmahan@xmission.com>
f | module.lds | s | 91B | 7 | Roman Zippel | zippel@linux-m68k.org | 1180623493 |  | m68k: runtime patching infrastructure  Add the basic infrastructure to allow runtime patching of kernel and modules to optimize a few functions with parameters, which are only calculated once during bootup and are otherwise constant.  Use this for the conversion between virtual and physical addresses.  Signed-off-by: Roman Zippel <zippel@linux-m68k.org> Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | irq.c | s | 854B | 32 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for M68K  Disintegrate asm/system.h for M68K.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Greg Ungerer <gerg@uclinux.org> cc: linux-m68k@lists.linux-m68k.org
f | setup.c | s | 75B | 5 | Greg Ungerer | gerg@uclinux.org | 1301025913 |  | m68k: merge m68k and m68knommu arch directories  There is a lot of common code that could be shared between the m68k and m68knommu arch branches. It makes sense to merge the two branches into a single directory structure so that we can more easily share that common code.  This is a brute force merge, based on a script from Stephen King <sfking@fdwdc.com>, which was originally written by Arnd Bergmann <arnd@arndb.de>.  > The script was inspired by the script Sam Ravnborg used to merge the > includes from m68knommu. For those files common to both arches but > differing in content, the m68k version of the file is renamed to > <file>_mm.<ext> and the m68knommu version of the file is moved into the > corresponding m68k directory and renamed <file>_no.<ext> and a small > wrapper file <file>.<ext> is used to select between the two version. Files > that are common to both but don't differ are removed from the m68knommu > tree and files and directories that are unique to the m68knommu tree are > moved to the m68k tree. Finally, the arch/m68knommu tree is removed. > > To select between the the versions of the files, the wrapper uses > > #ifdef CONFIG_MMU > #include <file>_mm.<ext> > #else > #include <file>_no.<ext> > #endif  On top of this file merge I have done a simplistic merge of m68k and m68knommu Kconfig, which primarily attempts to keep existing options and menus in place. Other than a handful of options being moved it produces identical .config outputs on m68k and m68knommu targets I tested it on.  With this in place there is now quite a bit of scope for merge cleanups in future patches.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | module.c | s | 3.3K | 116 | Greg Ungerer | gerg@uclinux.org | 1311556840 |  | m68k: merge the non-mmu and mmu versions of module.c  The non-mmu and mmu versions of the module loader module.c are nearly identical. Merge them back to a single module.c. There is a little bit of re-ordering of the struct and enum definitions in module.h to keep the ifdefery to a minimum.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | sys_m68k.c | s | 13K | 537 | Greg Ungerer | gerg@uclinux.org | 1306214241 |  | m68k: merge the mmu and non-mmu versions of sys_m68k.c  There is a lot of common code in the sys_m68k.c files. The mmu and non-mmu versions can easily be merged into a single file.  There is really only 2 functions that differ in the 2 cases. A single ifdef on CONFIG_MMU can take care of this. Alternatively we could break those 2 functions out and maintain sys_m68k_no.c and sys_m68k_mm.c with just this code in it (Makefile could then just build the right one). Does anyone have strong feelings on which way they want this done?  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | vmlinux-nommu.lds | g | 1.4K |  | Greg Ungerer | gerg@uclinux.org | 1330904583 |  | m68knommu: clean up linker script  There is a lot of years of collected cruft in the m68knommu linker script. Clean it all up and use the well defined linker script support macros.  Support is maintained for building both ROM/FLASH based and RAM based setups. No major changes to section layouts, though the rodata section is now lumped in with the read/write data section.  Signed-off-by: Greg Ungerer <gerg@uclinux.org>
f | entry_mm.S | g | 9.0K |  | Al Viro | viro@zeniv.linux.org.uk | 1337659187 |  | m68k: add TIF_NOTIFY_RESUME and handle it.  TIF_NOTIFY_RESUME added (as bit 5).  That way nommu glue needs no changes at all; mmu one needs just to replace jmi do_signal_return to jne do_signal_return There we have flags shifted up, until bit 6 (SIGPENDING) is in MSBit; instead of checking that MSBit is set (jmi) we check that MSBit or something below it is set (jne); bits 0..4 are never set, so that's precisely "bit 6 or bit 5 is set".  Usual handling of NOTIFY_RESUME/SIGPENDING is done in do_notify_resume(); glue calls it instead of do_signal().  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | syscalltable.S | g | 9.0K |  | Geert Uytterhoeven | geert@linux-m68k.org | 1323200278 |  | m68k: Wire up process_vm_{read,write}v  Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Acked-by: Greg Ungerer <gerg@uclinux.org>
f | sun3-head.S | g | 2.0K |  | Geert Uytterhoeven | geert@linux-m68k.org | 1240960038 |  | m68k: arch/m68k/kernel/sun3-head.S needs <linux/init.h>  Fix this:    arch/m68k/kernel/sun3-head.S: Assembler messages:   arch/m68k/kernel/sun3-head.S:32: Error: Unknown operator -- statement `__head' ignored  Introduced by commit 6f335cab0431d5df4995bcd4fd952d4c746d5a86 ("m68k: convert to use __HEAD and HEAD_TEXT macros."), which started using __HEAD without adding the appropriate include.  Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | signal.c | s | 30K | 1040 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | process.c | s | 8.6K | 328 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for M68K  Disintegrate asm/system.h for M68K.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Greg Ungerer <gerg@uclinux.org> cc: linux-m68k@lists.linux-m68k.org
f | ints.c | s | 4.1K | 149 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for M68K  Disintegrate asm/system.h for M68K.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Greg Ungerer <gerg@uclinux.org> cc: linux-m68k@lists.linux-m68k.org
f | entry.S | g | 110B |  | Greg Ungerer | gerg@uclinux.org | 1325204441 |  | m68k: use non-MMU entry.S code when compiling for ColdFire CPU  No matter whether we are configured for non-MMU or MMU enabled if we are compiling for ColdFire CPU we always use the entry_no.S code.  Signed-off-by: Greg Ungerer <gerg@uclinux.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org> Acked-by: Matt Waddel <mwaddel@yahoo.com> Acked-by: Kurt Mahan <kmahan@xmission.com>
