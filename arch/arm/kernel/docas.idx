f | entry-common.S | g | 14K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1338326035 |  | Merge branch 'for-arm' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal.git into for-linus  Conflicts: 	arch/arm/kernel/ptrace.c
f | sched_clock.c | s | 4.3K | 155 | Russell King | rmk+kernel@arm.linux.org.uk | 1332581933 |  | ARM: sync sched_clock() state on suspend  Ensure that the software state for sched_clock() is updated at the point of suspend so that we avoid losing ticks since the last update.  This prevents the platform dependent possibility that sched_clock() may appear to go backwards across a suspend/resume cycle.  Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | kprobes-thumb.c | s | 47K | 1244 | Rabin Vincent | rabin.vincent@stericsson.com | 1339683104 |  | ARM: 7423/1: kprobes: run t32_simulate_ldr_literal() without insn slot  t32_simulate_ldr_literal() can be run without an instruction slot, so it should be using DECODE_SIMULATEX instead of DECODE_EMULATEX.  Acked-by: Jon Medhurst <tixy@yxit.co.uk> Signed-off-by: Rabin Vincent <rabin.vincent@stericsson.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | compat.h | s | 322B | 10 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1278513516 |  | ARM: deprecate support for old way to pass kernel parameters  This was deprecated in 2001 and announced to live on for 5 years.  For now provide a kernel parameter for those who still need it.  Acked-by: Eric Miao <eric.miao@canonical.com> Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
f | Makefile | g | 2.6K |  | Linus Torvalds | torvalds@linux-foundation.org | 1337654637 |  | Merge branch 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull smp hotplug cleanups from Thomas Gleixner:  "This series is merily a cleanup of code copied around in arch/* and   not changing any of the real cpu hotplug horrors yet.  I wish I'd had   something more substantial for 3.5, but I underestimated the lurking   horror..."  Fix up trivial conflicts in arch/{arm,sparc,x86}/Kconfig and arch/sparc/include/asm/thread_info_32.h  * 'smp-hotplug-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (79 commits)   um: Remove leftover declaration of alloc_task_struct_node()   task_allocator: Use config switches instead of magic defines   sparc: Use common threadinfo allocator   score: Use common threadinfo allocator   sh-use-common-threadinfo-allocator   mn10300: Use common threadinfo allocator   powerpc: Use common threadinfo allocator   mips: Use common threadinfo allocator   hexagon: Use common threadinfo allocator   m32r: Use common threadinfo allocator   frv: Use common threadinfo allocator   cris: Use common threadinfo allocator   x86: Use common threadinfo allocator   c6x: Use common threadinfo allocator   fork: Provide kmemcache based thread_info allocator   tile: Use common threadinfo allocator   fork: Provide weak arch_release_[task_struct||thread_info] functions   fork: Move thread info gfp flags to header   fork: Remove the weak insanity   sh: Remove cpu_idle_wait()   ...
f | entry-armv.S | g | 27K |  | Will Deacon | will.deacon@arm.com | 1339860625 |  | ARM: 7425/1: extable: ensure fixup entries are 4-byte aligned  Fixup entries in the kernel exception tables should be 4-byte aligned since we return directly to them when handling a faulting instruction in the kernel.  This patch adds the missing align directives to the fixup entries.  Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | opcodes.c | s | 2.2K | 66 | Leif Lindholm | leif.lindholm@arm.com | 1323766322 |  | ARM: 7206/1: Add generic ARM instruction set condition code checks.  This patch breaks the ARM condition checking code out of nwfpe/fpopcode.{ch} into a standalone file for opcode operations. It also modifies the code somewhat for coding style adherence, and adds some temporary variables for increased readability.  Signed-off-by: Leif Lindholm <leif.lindholm@arm.com> Reviewed-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cpuidle.c | s | 515B | 18 | Robert Lee | rob.lee@linaro.org | 1332309580 |  | cpuidle: Add common time keeping and irq enabling  Make necessary changes to implement time keeping and irq enabling in the core cpuidle code.  This will allow the removal of these functionalities from various platform cpuidle implementations whose timekeeping and irq enabling follows the form in this common code.  Signed-off-by: Robert Lee <rob.lee@linaro.org> Tested-by: Jean Pihet <j-pihet@ti.com> Tested-by: Amit Daniel <amit.kachhap@linaro.org> Tested-by: Robert Lee <rob.lee@linaro.org> Reviewed-by: Kevin Hilman <khilman@ti.com> Reviewed-by: Daniel Lezcano <daniel.lezcano@linaro.org> Reviewed-by: Deepthi Dharwar <deepthi@linux.vnet.ibm.com> Acked-by: Jean Pihet <j-pihet@ti.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | time.c | s | 3.8K | 158 | Marc Zyngier | Marc.Zyngier@arm.com | 1336298961 |  | ARM: 7413/1: move read_{boot,persistent}_clock to the architecture level  At the moment, read_persistent_clock is implemented at the platform level, which makes it impossible to compile these platforms in a single kernel.  Implement these two functions at the architecture level, and provide a thin registration interface for both read_boot_clock and read_persistent_clock. The two affected platforms (OMAP and Tegra) are converted at the same time.  Reported-by: Jeff Ohlstein <johlstei@codeaurora.org> Tested-by: Stephen Warren <swarren@wwwdotorg.org> Tested-by: Tony Lindgren <tony@atomide.com> Signed-off-by: Marc Zyngier <marc.zyngier@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | pmu.c | s | 830B | 31 | Will Deacon | will.deacon@arm.com | 1321438002 |  | ARM: PMU: re-export release_pmu symbol to modules  Commit b0e89590 ("ARM: PMU: move CPU PMU platform device handling and init into perf") inadvertently removed the EXPORT_SYMBOL_GPL on release_pmu, so out-of-tree modules can no longer play nice with perf, even if they tried in the first place.  This patch re-exports the symbol.  Reported-by: Jon Medhurst (Tixy) <jon.medhurst@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | relocate_kernel.S | g | 1.3K |  | Will Deacon | will.deacon@arm.com | 1314524381 |  | ARM: 7065/1: kexec: ensure new kernel is entered in ARM state  Commit 540b5738 ("ARM: 6999/1: head, zImage: Always Enter the kernel in ARM state") mandates that the kernel should be entered in ARM state.  If a Thumb-2 kernel kexecs a new kernel image, we need to ensure that we change state when branching to the new code. This patch replaces a mov pc, lr with a bx lr on Thumb-2 kernels so that we transition to ARM state if need be.  Reviewed-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | xscale-cp0.c | s | 3.9K | 147 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103848 |  | arm: remove several unnecessary module.h include instances  Building these files does not reveal a hidden need for any of these.  Since module.h brings in the whole kitchen sink, it just needlessly adds 30k+ lines to the cpp burden.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | perf_event_xscale.c | s | 20K | 744 | Robert Richter | robert.richter@amd.com | 1336569792 |  | perf: Pass last sampling period to perf_sample_data_init()  We always need to pass the last sample period to perf_sample_data_init(), otherwise the event distribution will be wrong. Thus, modifiyng the function interface with the required period as argument. So basically a pattern like this:          perf_sample_data_init(&data, ~0ULL);         data.period = event->hw.last_period;  will now be like that:          perf_sample_data_init(&data, ~0ULL, event->hw.last_period);  Avoids unininitialized data.period and simplifies code.  Signed-off-by: Robert Richter <robert.richter@amd.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1333390758-10893-3-git-send-email-robert.richter@amd.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | head.S | g | 15K |  | Nicolas Pitre | nicolas.pitre@linaro.org | 1336147006 |  | ARM: 7363/1: DEBUG_LL: limit early mapping to the minimum  There is just no point mapping up to 512MB for a serial port. Using a single 1MB entry is way sufficient for all users. This will create less interference for the following debugging patch.  Signed-off-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | topology.c | s | 3.7K | 126 | Vincent Guittot | vincent.guittot@linaro.org | 1322697321 |  | ARM: 7182/1: ARM cpu topology: fix warning  kernel/sched.c:7354:2: warning: initialization from incompatible pointer type  Align cpu_coregroup_mask prototype interface with sched_domain_mask_f typedef use int cpu instead of unsigned int cpu  Cc: <stable@vger.kernel.org> Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | atags.h | s | 132B | 5 | Richard Purdie | rpurdie@rpsys.net | 1202131263 |  | [ARM] 4736/1: Export atags to userspace and allow kexec to use customised atags  Currently, the atags used by kexec are fixed to the ones originally used to boot the kernel. This is less than ideal as changing the commandline, initrd and other options would be a useful feature.  This patch exports the atags used for the current kernel to userspace through an "atags" file in procfs. The presence of the file is controlled by its own Kconfig option and cleans up several ifdef blocks into a separate file. The tags for the new kernel are assumed to be at a fixed location before the kernel image itself. The location of the tags used to boot the original kernel is unimportant and no longer saved.  Based on a patch from Uli Luckas <u.luckas@road.de>  Signed-off-by: Richard Purdie <rpurdie@rpsys.net> Acked-by: Uli Luckas <u.luckas@road.de> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | bios32.c | s | 15K | 534 | Russell King | rmk+kernel@arm.linux.org.uk | 1337178252 |  | ARM: PCI: remove per-pci_hw list of buses  No one uses the per-hw list of buses, so get rid of this.  Instead, build the list locally.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | perf_event_v7.c | s | 36K | 1200 | Robert Richter | robert.richter@amd.com | 1336569792 |  | perf: Pass last sampling period to perf_sample_data_init()  We always need to pass the last sample period to perf_sample_data_init(), otherwise the event distribution will be wrong. Thus, modifiyng the function interface with the required period as argument. So basically a pattern like this:          perf_sample_data_init(&data, ~0ULL);         data.period = event->hw.last_period;  will now be like that:          perf_sample_data_init(&data, ~0ULL, event->hw.last_period);  Avoids unininitialized data.period and simplifies code.  Signed-off-by: Robert Richter <robert.richter@amd.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1333390758-10893-3-git-send-email-robert.richter@amd.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | thumbee.c | s | 2.0K | 68 | Jonathan Austin | Jonathan.Austin@arm.com | 1335379766 |  | ARM: 7385/1: ThumbEE: Use cpuid macros to read ID_PFR0 for ThumbEE  The ThumbEE probe code uses inline assembly to read ID_PFR0 in order to detect whether ThumbEE is implemented by the processor.  This patch replaces the inline asm with the read_cpuid_ext macro.  Reviewed-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Jonathan Austin <jonathan.austin@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | asm-offsets.c | s | 5.8K | 146 | Barry Song | Baohua.Song@csr.com | 1318839111 |  | ARM: 7114/1: cache-l2x0: add resume entry for l2 in secure mode  we save the l2x0 registers at the first initialization, and platform codes can get them to restore l2x0 status after wakeup.  Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com> Signed-off-by: Barry Song <Baohua.Song@csr.com> Reviewed-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | suspend.c | s | 1.6K | 50 | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: suspend: use idmap_pgd instead of suspend_pgd  The ARM CPU suspend code requires cpu_resume_mmu to be identity mapped in order to re-enable the MMU when coming out of suspend. Currently, this is accomplished by maintaining a suspend_pgd with the relevant mapping put in place at init time.  This patch replaces the use of suspend_pgd with the new idmap_pgd. cpu_resume_mmu is placed in the .idmap.text section so that it is included in the identity map.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Acked-by: Dave Martin <dave.martin@linaro.org> Tested-by: Lorenzo Pieralisi <Lorenzo.Pieralisi@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | return_address.c | s | 1.6K | 56 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103849 |  | arm: convert core files from module.h to export.h  Many of the core ARM kernel files are not modules, but just including module.h for exporting symbols.  Now these files can use the lighter footprint export.h for this role.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | smp_tlb.c | s | 2.8K | 108 | Gilad Ben-Yossef | gilad@benyossef.com | 1332980075 |  | smp: introduce a generic on_each_cpu_mask() function  We have lots of infrastructure in place to partition multi-core systems such that we have a group of CPUs that are dedicated to specific task: cgroups, scheduler and interrupt affinity, and cpuisol= boot parameter. Still, kernel code will at times interrupt all CPUs in the system via IPIs for various needs.  These IPIs are useful and cannot be avoided altogether, but in certain cases it is possible to interrupt only specific CPUs that have useful work to do and not the entire system.  This patch set, inspired by discussions with Peter Zijlstra and Frederic Weisbecker when testing the nohz task patch set, is a first stab at trying to explore doing this by locating the places where such global IPI calls are being made and turning the global IPI into an IPI for a specific group of CPUs.  The purpose of the patch set is to get feedback if this is the right way to go for dealing with this issue and indeed, if the issue is even worth dealing with at all.  Based on the feedback from this patch set I plan to offer further patches that address similar issue in other code paths.  This patch creates an on_each_cpu_mask() and on_each_cpu_cond() infrastructure API (the former derived from existing arch specific versions in Tile and Arm) and uses them to turn several global IPI invocation to per CPU group invocations.  Core kernel:  on_each_cpu_mask() calls a function on processors specified by cpumask, which may or may not include the local processor.  You must not call this function with disabled interrupts or from a hardware interrupt handler or from a bottom half handler.  arch/arm:  Note that the generic version is a little different then the Arm one:  1. It has the mask as first parameter 2. It calls the function on the calling CPU with interrupts disabled,    but this should be OK since the function is called on the other CPUs    with interrupts disabled anyway.  arch/tile:  The API is the same as the tile private one, but the generic version also calls the function on the with interrupts disabled in UP case  This is OK since the function is called on the other CPUs with interrupts disabled.  Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com> Reviewed-by: Christoph Lameter <cl@linux.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Pekka Enberg <penberg@kernel.org> Cc: Matt Mackall <mpm@selenic.com> Cc: Rik van Riel <riel@redhat.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Sasha Levin <levinsasha928@gmail.com> Cc: Mel Gorman <mel@csn.ul.ie> Cc: Alexander Viro <viro@zeniv.linux.org.uk> Cc: Avi Kivity <avi@redhat.com> Acked-by: Michal Nazarewicz <mina86@mina86.org> Cc: Kosaki Motohiro <kosaki.motohiro@gmail.com> Cc: Milton Miller <miltonm@bga.com> Cc: Russell King <linux@arm.linux.org.uk> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | dma.c | s | 5.7K | 245 | Thomas Gleixner | tglx@linutronix.de | 1315905134 |  | locking, ARM: Annotate low level hw locks as raw  Annotate the low level hardware locks which must not be preempted.  In mainline this change documents the low level nature of the lock - otherwise there's no functional difference. Lockdep and Sparse checking will work as usual.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | kprobes-test.h | s | 11K | 369 | Jon Medhurst | jon.medhurst@linaro.org | 1322344733 |  | ARM: 7174/1: Fix build error in kprobes test code on Thumb2 kernels  When compiling kprobes-test-thumb.c an error like below may occur:  /tmp/ccKcuJcG.s:19179: Error: offset out of range  This is caused by the compiler underestimating the size of the inline assembler instructions containing ".space 0x1000" and failing to spill the literal pool in time to prevent the generation of PC relative load instruction with invalid offsets.  The fix implemented by this patch is to replace a single large .space directive by a number of 4 byte .space's. This requires splitting the macros which generate test cases for branch instructions into two forms: one with, and one without support for inserting extra code between branch and target.  Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Jon Medhurst <jon.medhurst@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | fiq.c | s | 3.1K | 126 | Russell King | rmk+kernel@arm.linux.org.uk | 1332955801 |  | ARM: move CP15 definitions to separate header file  Avoid namespace conflicts with drivers over the CP15 definitions by moving CP15 related prototypes and definitions to a private header file.  Acked-by: Stephen Warren <swarren@nvidia.com> Tested-by: Stephen Warren <swarren@nvidia.com> [Tegra] Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: H Hartley Sweeten <hsweeten@visionengravers.com> [EP93xx] Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: David Howells <dhowells@redhat.com>
f | tcm.h | s | 429B | 16 | Linus Walleij | linus.walleij@stericsson.com | 1253049065 |  | ARM: 5580/2: ARM TCM (Tightly-Coupled Memory) support v3  This adds the TCM interface to Linux, when active, it will detect and report TCM memories and sizes early in boot if present, introduce generic TCM memory handling, provide a generic TCM memory pool and select TCM memory for the U300 platform.  See the Documentation/arm/tcm.txt for documentation.  Signed-off-by: Linus Walleij <linus.walleij@stericsson.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | arthur.c | s | 2.2K | 80 | Adrian Bunk | bunk@kernel.org | 1211061316 |  | [ARM] arm/kernel/arthur.c: add MODULE_LICENSE  This patch adds the missing MODULE_LICENSE("GPL").  Signed-off-by: Adrian Bunk <bunk@kernel.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | traps.c | s | 20K | 701 | Russell King | rmk+kernel@arm.linux.org.uk | 1338326035 |  | Merge branch 'for-arm' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal.git into for-linus  Conflicts: 	arch/arm/kernel/ptrace.c
f | vmlinux.lds.S | g | 6.1K |  | David Brown | davidb@codeaurora.org | 1340402058 |  | ARM: 7428/1: Prevent KALLSYM size mismatch on ARM.  ARM builds seem to be plagued by an occasional build error:      Inconsistent kallsyms data     This is a bug - please report about it     Try "make KALLSYMS_EXTRA_PASS=1" as a workaround  The problem has to do with alignment of some sections by the linker. The kallsyms data is built in two passes by first linking the kernel without it, and then linking the kernel again with the symbols included.  Normally, this just shifts the symbols, without changing their order, and the compression used by the kallsyms gives the same result.  On non SMP, the per CPU data is empty.  Depending on the where the alignment ends up, it can come out as either:     +-------------------+    || last text segment ||    +-------------------+    /* padding */    +-------------------+     <- L1_CACHE_BYTES alignemnt    || per cpu (empty)   ||    +-------------------+ __per_cpu_end:    /* padding */ __data_loc:    +-------------------+     <- THREAD_SIZE alignment    || data              ||    +-------------------+  or     +-------------------+    || last text segment ||    +-------------------+    /* padding */    +-------------------+     <- L1_CACHE_BYTES alignemnt    || per cpu (empty)   ||    +-------------------+ __per_cpu_end:    /* no padding */ __data_loc:    +-------------------+     <- THREAD_SIZE alignment    || data              ||    +-------------------+  if the alignment satisfies both.  Because symbols that have the same address are sorted by 'nm -n', the second case will be in a different order than the first case.  This changes the compression, changing the size of the kallsym data, causing the build failure.  The KALLSYMS_EXTRA_PASS=1 workaround usually works, but it is still possible to have the alignment change between the second and third pass.  It's probably even possible for it to never reach a fixedpoint.  The problem only occurs on non-SMP, when the per-cpu data is empty, and when the data segment has alignment (and immediately follows the text segments).  Fix this by only including the per_cpu section on SMP, when it is not empty.  Signed-off-by: David Brown <davidb@codeaurora.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | etm.c | s | 13K | 509 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103850 |  | arm: fix implicit module.h users by adding it to arch/arm as required.  These files will fail to compile if we dont clean them up in advance and have them include the appropriate headers they need.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | kgdb.c | s | 6.2K | 219 | Rabin Vincent | rabin@rab.in | 1288376080 |  | kgdb,arm: fix register dump  DBG_MAX_REG_NUM incorrectly had the number of indices in the GDB regs array rather than the number of registers, leading to an oops when the "rd" command is used in KDB.  Cc: stable@kernel.org Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
f | arch_timer.c | s | 7.9K | 282 | Marc Zyngier | marc.zyngier@arm.com | 1335530365 |  | ARM: architected timers: remove support for non DT platforms  All mainline platforms using the ARM architected timers are DT only. As such, remove the ad-hoc support that is not longer needed anymore.  Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
f | kprobes-common.c | s | 14K | 484 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | armksyms.c | s | 3.8K | 144 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | compat.c | s | 6.5K | 195 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1278513516 |  | ARM: deprecate support for old way to pass kernel parameters  This was deprecated in 2001 and announced to live on for 5 years.  For now provide a kernel parameter for those who still need it.  Acked-by: Eric Miao <eric.miao@canonical.com> Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
f | ptrace.c | s | 22K | 810 | Russell King | rmk+kernel@arm.linux.org.uk | 1338326035 |  | Merge branch 'for-arm' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/signal.git into for-linus  Conflicts: 	arch/arm/kernel/ptrace.c
f | smp_twd.c | s | 7.4K | 277 | Russell King | rmk+kernel@arm.linux.org.uk | 1334860510 |  | Revert "ARM: 7359/2: smp_twd: Only wait for reprogramming on active cpus"  This reverts commit 9f85550347f51c79a917b2aec04c90691c11e20a.  Peter Zijlstra says: || Argh, how did that ever make it upstream, please drop. || || Russell, please make that go away upstream. || || Like I said, this is both completely the wrong way to solve, and you're || so not paying attention, see: || ||   5fbd036b552f633abb394a319f7c62a5c86a9cd7 ||   2baab4e90495ebc9826c93f79d74d6e60a828d24 ||   e3831edd59edf57ca11fc289f08961b20baf5146 || || What's even worse: || || git describe --contains 9f85550347f51c79a917b2aec04c90691c11e20a --match "v*" || v3.4-rc3~1^2~3 || || that nonsense got merged long after those other commits.  Linus Walleij says: || My bad, was because the initial patch was submitted march 9th before || these fixes were merged: || http://marc.info/?l=linux-arm-kernel&m=133159655513844&w=2 || || It was pending for a while in Russell's patch tracker and I || rebased it to -rc2 without paying enough attention to recent || related scheduler fixes ... lesson learned.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | sys_arm.c | s | 3.4K | 121 | Tim Bird | tim.bird@am.sony.com | 1336222441 |  | ARM: 7410/1: Add extra clobber registers for assembly in kernel_execve  The inline assembly in kernel_execve() uses r8 and r9.  Since this code sequence does not return, it usually doesn't matter if the register clobber list is accurate.  However, I saw a case where a particular version of gcc used r8 as an intermediate for the value eventually passed to r9.  Because r8 is used in the inline assembly, and not mentioned in the clobber list, r9 was set to an incorrect value.  This resulted in a kernel panic on execution of the first user-space program in the system.  r9 is used in ret_to_user as the thread_info pointer, and if it's wrong, bad things happen.  Cc: <stable@vger.kernel.org> Signed-off-by: Tim Bird <tim.bird@am.sony.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | kprobes-test-thumb.c | s | 43K | 1000 | Jon Medhurst | jon.medhurst@linaro.org | 1322344733 |  | ARM: 7174/1: Fix build error in kprobes test code on Thumb2 kernels  When compiling kprobes-test-thumb.c an error like below may occur:  /tmp/ccKcuJcG.s:19179: Error: offset out of range  This is caused by the compiler underestimating the size of the inline assembler instructions containing ".space 0x1000" and failing to spill the literal pool in time to prevent the generation of PC relative load instruction with invalid offsets.  The fix implemented by this patch is to replace a single large .space directive by a number of 4 byte .space's. This requires splitting the macros which generate test cases for branch instructions into two forms: one with, and one without support for inserting extra code between branch and target.  Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Jon Medhurst <jon.medhurst@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | perf_event.c | s | 20K | 710 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | leds.c | s | 2.5K | 102 | Kay Sievers | kay.sievers@vrfy.org | 1324511577 |  | arm: leds: convert sysdev_class to a regular subsystem  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Cc: Russell King <linux@arm.linux.org.uk> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | unwind.c | s | 12K | 420 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1323986539 |  | ARM: unwinder: fix bisection to find origin in .idx section  The bisection implemented in unwind_find_origin() stopped to early.  If there is only a single entry left to check the original code just took the end point as origin which might be wrong.  This was introduced in commit de66a979012d ("ARM: 7187/1: fix unwinding for XIP kernels").  Reported-and-tested-by: Nick Bowler <nbowler@elliptictech.com> Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | kprobes.h | s | 12K | 349 | Jon Medhurst | tixy@yxit.co.uk | 1316542663 |  | ARM: kprobes: Add exports for test code  The test code will be using kprobes' internal decoding tables so we need to export these for when then the tests are compiled as a module.  Signed-off-by: Jon Medhurst <tixy@yxit.co.uk> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org>
f | kprobes.c | s | 16K | 544 | Linus Torvalds | torvalds@linux-foundation.org | 1333382004 |  | 
f | elf.c | s | 2.3K | 78 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | machine_kexec.c | s | 3.5K | 108 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | crash_dump.c | s | 1.5K | 51 | Olaf Hering | olaf@aepfle.de | 1300934839 |  | crash_dump: export is_kdump_kernel to modules, consolidate elfcorehdr_addr, setup_elfcorehdr and saved_max_pfn  The Xen PV drivers in a crashed HVM guest can not connect to the dom0 backend drivers because both frontend and backend drivers are still in connected state.  To run the connection reset function only in case of a crashdump, the is_kdump_kernel() function needs to be available for the PV driver modules.  Consolidate elfcorehdr_addr, setup_elfcorehdr and saved_max_pfn into kernel/crash_dump.c Also export elfcorehdr_addr to make is_kdump_kernel() usable for modules.  Leave 'elfcorehdr' as early_param().  This changes powerpc from __setup() to early_param().  It adds an address range check from x86 also on ia64 and powerpc.  [akpm@linux-foundation.org: additional #includes] [akpm@linux-foundation.org: remove elfcorehdr_addr export] [akpm@linux-foundation.org: fix for Tejun's mm/nobootmem.c changes] Signed-off-by: Olaf Hering <olaf@aepfle.de> Cc: Russell King <rmk@arm.linux.org.uk> Cc: "Luck, Tony" <tony.luck@intel.com> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Johannes Weiner <hannes@cmpxchg.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sleep.S | g | 2.8K |  | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | smp_scu.c | s | 2.1K | 76 | Will Deacon | will.deacon@arm.com | 1335630697 |  | ARM: 7347/1: SCU: use cpu_logical_map for per-CPU low power mode  scu_power_mode changes the power mode for the current CPU, which it determines from smp_processor_id(). However, this assumes that the physical CPU number is equal to Linux's logical CPU number and if this is not true, we will power off the wrong CPU.  This patch uses cpu_logical_map to translate the logical CPU number into a physical one in scu_power_mode.  Reported-by: Lorenzo Pieralisi <Lorenzo.Pieralisi@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | iwmmxt.S | g | 8.0K |  | Lennert Buytenhek | buytenh@wantstofly.org | 1313028626 |  | ARM: pxa: fix logic error in PJ4 iWMMXt handling  This got added in:  	commit ef6c84454f8567d4968c210d7d194fb711ed3739 	Author: Haojian Zhuang <haojian.zhuang@marvell.com> 	Date:   Wed Nov 24 11:54:25 2010 +0800  	    ARM: pxa: add iwmmx support for PJ4  which does:  -       mrc     p15, 0, r2, c15, c1, 0 -       orr     r2, r2, #0x3                    @ enable access to CP0 and CP1 -       mcr     p15, 0, r2, c15, c1, 0 +       @ enable access to CP0 and CP1 +       XSC(mrc p15, 0, r2, c15, c1, 0) +       XSC(orr r2, r2, #0x3) +       XSC(mcr p15, 0, r2, c15, c1, 0)  but then later does:  -       mrc     p15, 0, r4, c15, c1, 0 -       orr     r4, r4, #0x3                    @ enable access to CP0 and CP1 -       mcr     p15, 0, r4, c15, c1, 0 +       @ enable access to CP0 and CP1 +       XSC(mrc p15, 0, r4, c15, c1, 0) +       XSC(orr r4, r4, #0xf) +       XSC(mcr p15, 0, r4, c15, c1, 0)  Signed-off-by: Lennert Buytenhek <buytenh@laptop.org> Acked-by Haojian <haojian.zhuang@gmail.com> Signed-off-by: Eric Miao <eric.y.miao@gmail.com>
f | jump_label.c | s | 802B | 31 | Rabin Vincent | rabin@rab.in | 1332581936 |  | ARM: 7334/1: add jump label support  Add the arch-specific code to support jump labels for ARM and Thumb-2.  This code will only be activated on compilers that are capable of building it.  It has been tested with GCC 4.6 patched with the patch from GCC bug 48637.  Cc: Jason Baron <jbaron@redhat.com> Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | irq.c | s | 4.9K | 169 | Will Deacon | will.deacon@arm.com | 1335607291 |  | ARM: 7406/1: hotplug: copy the affinity mask when forcefully migrating IRQs  When a CPU is hotplugged off, we migrate any IRQs currently affine to it away and onto another online CPU by calling the irq_set_affinity function of the relevant interrupt controller chip. This function returns either IRQ_SET_MASK_OK or IRQ_SET_MASK_OK_NOCOPY, to indicate whether irq_data.affinity was updated.  If we are forcefully migrating an interrupt (because the affinity mask no longer identifies any online CPUs) then we should update the IRQ affinity mask to reflect the new CPU set. Failure to do so can potentially leave /proc/irq/n/smp_affinity identifying only offline CPUs, which may confuse userspace IRQ balancing daemons.  This patch updates migrate_one_irq to copy the affinity mask when the interrupt chip returns IRQ_SET_MASK_OK after forcefully changing the affinity of an interrupt.  Cc: stable@vger.kernel.org Reported-by: Leif Lindholm <leif.lindholm@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | hw_breakpoint.c | s | 25K | 886 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | stacktrace.c | s | 3.3K | 112 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103849 |  | arm: convert core files from module.h to export.h  Many of the core ARM kernel files are not modules, but just including module.h for exporting symbols.  Now these files can use the lighter footprint export.h for this role.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | patch.h | s | 163B | 5 | Rabin Vincent | rabin@rab.in | 1332581935 |  | ARM: 7332/1: extract out code patch function from kprobes  Extract out the code patching code from kprobes so that it can be used from the jump label code.  Additionally, the separated code:   - Uses the IS_ENABLED() macros instead of the #ifdefs for THUMB2    support   - Unifies the two separate functions in kprobes, providing one function    that uses stop_machine() internally, and one that can be called from    stop_machine() directly   - Patches the text on all CPUs only on processors requiring software    broadcasting of cache operations  Acked-by: Jon Medhurst <tixy@yxit.co.uk> Tested-by: Jon Medhurst <tixy@yxit.co.uk> Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | debug.S | g | 3.3K |  | Linus Torvalds | torvalds@linux-foundation.org | 1333069330 |  | 
f | kprobes-arm.c | s | 36K | 852 | Jon Medhurst (Tixy) | tixy@yxit.co.uk | 1322697294 |  | ARM: 7181/1: Restrict kprobes probing SWP instructions to ARMv5 and below  The SWP instruction is deprecated on ARMv6 and with ARMv7 it will be UNDEFINED when CONFIG_SWP_EMULATE is selected. In this case, probing a SWP instruction will cause an oops when the kprobes emulation code executes an undefined instruction.  As the SWP instruction should be rare or non-existent in kernels for ARMv6 and later, we can simply avoid these problems by not allowing probing of these.  Reported-by: Leif Lindholm <leif.lindholm@arm.com> Tested-by: Leif Lindholm <leif.lindholm@arm.com> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Jon Medhurst <tixy@yxit.co.uk> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | module.c | s | 9.3K | 302 | Catalin Marinas | catalin.marinas@arm.com | 1314109833 |  | ARM: 7059/1: LPAE: Use PMD_(SHIFT||SIZE||MASK) instead of PGDIR_*  PGDIR_SHIFT and PMD_SHIFT for the classic 2-level page table format have the same value (21). This patch converts the PGDIR_* uses in the kernel to the PMD_* equivalent so that LPAE builds can reuse the same code.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | fiqasm.S | g | 1.2K |  | Dave Martin | dave.martin@linaro.org | 1306402266 |  | ARM: 6938/1: fiq: Refactor {get,set}_fiq_regs() for Thumb-2   * To remove the risk of inconvenient register allocation decisions    by the compiler, these functions are separated out as pure    assembler.   * The apcs frame manipulation code is not applicable for Thumb-2    (and also not easily compatible).  Since it's not essential to    have a full frame on these leaf assembler functions, the frame    manipulation is removed, in the interests of simplicity.   * Split up ldm/stm instructions to be compatible with Thumb-2,    as well as avoiding instruction forms deprecated on >= ARMv7.  Signed-off-by: Dave Martin <dave.martin@linaro.org> Reviewed-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | swp_emulate.c | s | 7.1K | 239 | Leif Lindholm | leif.lindholm@arm.com | 1323766323 |  | ARM: 7208/1: Add condition code checking to SWP emulation handler.  This patch fixes two separate issues with the SWP emulation handler: 1: Certain processors implementing ARMv7-A can (legally) take an    undef exception even when the condition code would have meant that    the instruction should not have been executed. 2: Opcodes with all flags set (condition code = 0xf) have been reused    in recent, and not-so-recent, versions of the ARM architecture to    implement unconditional extensions to the instruction set. The    existing code would still have processed any undefs triggered by    executing an opcode with such a value.  This patch uses the new generic ARM instruction set condition code checks to implement proper handling of these situations.  Signed-off-by: Leif Lindholm <leif.lindholm@arm.com> Reviewed-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | entry-header.S | g | 4.4K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1311372547 |  | Merge branch 'devel-stable' into for-next  Conflicts: 	arch/arm/kernel/entry-armv.S
f | sys_oabi-compat.c | s | 11K | 413 | Eric W. Biederman | ebiederm@xmission.com | 1337116115 |  | userns: Convert stat to return values mapped from kuids and kgids  - Store uids and gids with kuid_t and kgid_t in struct kstat - Convert uid and gids to userspace usable values with   from_kuid and from_kgid  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | dma-isa.c | s | 5.0K | 187 | Russell King | rmk+kernel@arm.linux.org.uk | 1261679648 |  | ARM: dma-isa: request cascade channel after registering it  We can't request the cascade channel before it's been registered, so move it afterwards.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | setup.c | s | 26K | 967 | Linus Torvalds | torvalds@linux-foundation.org | 1338063241 |  | 
f | insn.c | s | 1.3K | 50 | Russell King | rmk+kernel@arm.linux.org.uk | 1333104706 |  | ARM: fix missing bug.h include in arch/arm/kernel/insn.c  arch/arm/kernel/insn.c: In function '__arm_gen_branch_thumb2': arch/arm/kernel/insn.c:13: error: implicit declaration of function 'WARN_ON_ONCE'  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | kprobes-test-arm.c | s | 57K | 1176 | Jon Medhurst (Tixy) | tixy@yxit.co.uk | 1322697294 |  | ARM: 7181/1: Restrict kprobes probing SWP instructions to ARMv5 and below  The SWP instruction is deprecated on ARMv6 and with ARMv7 it will be UNDEFINED when CONFIG_SWP_EMULATE is selected. In this case, probing a SWP instruction will cause an oops when the kprobes emulation code executes an undefined instruction.  As the SWP instruction should be rare or non-existent in kernels for ARMv6 and later, we can simply avoid these problems by not allowing probing of these.  Reported-by: Leif Lindholm <leif.lindholm@arm.com> Tested-by: Leif Lindholm <leif.lindholm@arm.com> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Jon Medhurst <tixy@yxit.co.uk> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | head-common.S | g | 5.1K |  | Grant Likely | grant.likely@secretlab.ca | 1305119552 |  | arm/dt: Make __vet_atags also accept a dtb image  The dtb is passed to the kernel via register r2, which is the same method that is used to pass an atags pointer.  This patch modifies __vet_atags to not clear r2 when it encounters a dtb image.  v2: fixed bugs pointed out by Nicolas Pitre  Tested-by: Tony Lindgren <tony@atomide.com> Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
f | smp.c | s | 12K | 482 | Anton Vorontsov | anton.vorontsov@linaro.org | 1338511769 |  | arm: use clear_tasks_mm_cpumask()  Checking for process->mm is not enough because process' main thread may exit or detach its mm via use_mm(), but other threads may still have a valid mm.  To fix this we would need to use find_lock_task_mm(), which would walk up all threads and returns an appropriate task (with task lock held).  clear_tasks_mm_cpumask() has this issue fixed, so let's use it.  Suggested-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org> Cc: Russell King <rmk@arm.linux.org.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | pj4-cp0.c | s | 1.9K | 75 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103848 |  | arm: remove several unnecessary module.h include instances  Building these files does not reveal a hidden need for any of these.  Since module.h brings in the whole kitchen sink, it just needlessly adds 30k+ lines to the cpp burden.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | atags.c | s | 1.6K | 63 | Uwe Kleine-König | Uwe.Kleine-Koenig@digi.com | 1212136429 |  | clean up atags exporting code  This gets rid of two static variables (one of them being __initdata) and a static function.  Signed-off-by: Uwe Kleine-König <Uwe.Kleine-Koenig@digi.com> Acked-by: Uli Luckas <u.luckas@road.de>
f | patch.c | s | 1.6K | 60 | Rabin Vincent | rabin@rab.in | 1332581935 |  | ARM: 7332/1: extract out code patch function from kprobes  Extract out the code patching code from kprobes so that it can be used from the jump label code.  Additionally, the separated code:   - Uses the IS_ENABLED() macros instead of the #ifdefs for THUMB2    support   - Unifies the two separate functions in kprobes, providing one function    that uses stop_machine() internally, and one that can be called from    stop_machine() directly   - Patches the text on all CPUs only on processors requiring software    broadcasting of cache operations  Acked-by: Jon Medhurst <tixy@yxit.co.uk> Tested-by: Jon Medhurst <tixy@yxit.co.uk> Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | process.c | s | 12K | 456 | Thomas Gleixner | tglx@linutronix.de | 1336473306 |  | arm: Remove unused cpu_idle_wait()  cpuidle uses a generic function now. Remove the unused code.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Russell King <linux@arm.linux.org.uk> Link: http://lkml.kernel.org/r/20120507175652.260797846@linutronix.de
f | insn.h | s | 563B | 24 | Rabin Vincent | rabin@rab.in | 1332581936 |  | ARM: 7334/1: add jump label support  Add the arch-specific code to support jump labels for ARM and Thumb-2.  This code will only be activated on compilers that are capable of building it.  It has been tested with GCC 4.6 patched with the patch from GCC bug 48637.  Cc: Jason Baron <jbaron@redhat.com> Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | head-nommu.S | g | 2.3K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1332955801 |  | ARM: move CP15 definitions to separate header file  Avoid namespace conflicts with drivers over the CP15 definitions by moving CP15 related prototypes and definitions to a private header file.  Acked-by: Stephen Warren <swarren@nvidia.com> Tested-by: Stephen Warren <swarren@nvidia.com> [Tegra] Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: H Hartley Sweeten <hsweeten@visionengravers.com> [EP93xx] Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: David Howells <dhowells@redhat.com>
f | isa.c | s | 1.6K | 64 | Eric W. Biederman | ebiederm@xmission.com | 1258562260 |  | sysctl: Drop & in front of every proc_handler.  For consistency drop & in front of every proc_handler.  Explicity taking the address is unnecessary and it prevents optimizations like stubbing the proc_handlers to NULL.  Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Joe Perches <joe@perches.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | tcm.c | s | 8.1K | 302 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | devtree.c | s | 3.5K | 114 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103849 |  | arm: convert core files from module.h to export.h  Many of the core ARM kernel files are not modules, but just including module.h for exporting symbols.  Now these files can use the lighter footprint export.h for this role.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | io.c | s | 905B | 46 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103849 |  | arm: convert core files from module.h to export.h  Many of the core ARM kernel files are not modules, but just including module.h for exporting symbols.  Now these files can use the lighter footprint export.h for this role.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | early_printk.c | s | 1.1K | 48 | Catalin Marinas | catalin.marinas@arm.com | 1260352938 |  | ARM: Add an earlyprintk debug console  This patch allows an earlyprintk console if CONFIG_DEBUG_LL is enabled, using the printch asm function.  The patch is based on the original work by Sascha Hauer.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Cc: Sascha Hauer <s.hauer@pengutronix.de> Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Acked-by: Pavel Machek <pavel@ucw.cz>
f | signal.c | s | 17K | 545 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | perf_event_v6.c | s | 20K | 662 | Robert Richter | robert.richter@amd.com | 1336569792 |  | perf: Pass last sampling period to perf_sample_data_init()  We always need to pass the last sample period to perf_sample_data_init(), otherwise the event distribution will be wrong. Thus, modifiyng the function interface with the required period as argument. So basically a pattern like this:          perf_sample_data_init(&data, ~0ULL);         data.period = event->hw.last_period;  will now be like that:          perf_sample_data_init(&data, ~0ULL, event->hw.last_period);  Avoids unininitialized data.period and simplifies code.  Signed-off-by: Robert Richter <robert.richter@amd.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1333390758-10893-3-git-send-email-robert.richter@amd.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | ftrace.c | s | 5.4K | 194 | Rabin Vincent | rabin@rab.in | 1332581935 |  | ARM: 7331/1: extract out insn generation code from ftrace  Extract out the instruction generation code so that it can be used for jump labels too.  Signed-off-by: Rabin Vincent <rabin@rab.in> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | signal.h | s | 388B | 11 | Al Viro | viro@zeniv.linux.org.uk | 1337625584 |  | arm: remove unused restart trampoline  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | calls.S | g | 10K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1321549080 |  | ARM: wire up process_vm_writev and process_vm_readv syscalls  These two syscalls were introduced during the last merge window. Add the entries into the ARM call tables for them.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | kprobes-test.c | s | 41K | 1418 | Leif Lindholm | leif.lindholm@arm.com | 1323766323 |  | ARM: 7209/1: Use generic ARM instruction set condition code checks for kprobes.  This patch changes the kprobes implementation to use the generic ARM instruction set condition code checks, rather than a dedicated implementation.  Signed-off-by: Leif Lindholm <leif.lindholm@arm.com> Acked-by: Jon Medhurst <tixy@yxit.co.uk> Reviewed-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
