f | hardware.h | s | 1022B | 31 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1336563401 |  | ARM: davinci: implement DEBUG_LL port choice  Apart from the necessity to do this change for multi-platform kernels the previous logic depended on the zImage decompressor to write the physical and virtual address to a magic memory location. If the decompressor is unused or not correctly configured for the current machid, the addruart macro was an infinite loop. Moreover debugging the early zImage code was not possible either.  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> [nsekhar@ti.com: add braces in _DEBUG_LL_ENTRY() macro to fix checkpatch error. Fix debug port choice config dependency for traditional DaVincis. Modify debug port config names and add help text.] Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | mmc.h | s | 751B | 28 | Ido Yariv | ido@wizery.com | 1316255003 |  | mmc: davinci: Add support for set_power callback  Some devices connected to the MMC bus are power controlled by external means. For instance, an SDIO device may be powered down/up by an external gpio line.  In order to avoid toggling power from within the MMC host driver, add a set_power callback function, which will be called by set_ios upon powering down/up.  Signed-off-by: Ido Yariv <ido@wizery.com> CC: Chris Ball <cjb@laptop.org> Acked-by: Chris Ball <cjb@laptop.org> Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | keyscan.h | s | 1.2K | 36 | Miguel Aguilar | miguel.aguilar@ridgerun.com | 1262765831 |  | Input: davinci_keyscan - add device_enable method to platform data  Add a function pointer in the platform data of the DaVinci Keyscan driver called device_enable, in order to perform board specific actions when the device is initialized, like setup the PINMUX configuration.  Signed-off-by: Miguel Aguilar <miguel.aguilar@ridgerun.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com> Signed-off-by: Dmitry Torokhov <dtor@mail.ru>
f | aemif.h | s | 780B | 30 | Sekhar Nori | nsekhar@ti.com | 1285339226 |  | davinci: add support for aemif timing configuration  This patch adds support to configure the AEMIF interface with supplied timing values.  Since this capability is useful both from NOR and NAND flashes, it is provided as a new interface and in a file of its own.  AEMIF timing configuration is required in cases:  1) Where the AEMIF clock rate can change at runtime (a side    affect of cpu frequency change).  2) Where U-Boot does not support NAND/NOR but supports other    media like SPI Flash or MMC/SD and thus does not care about    setting up the AEMIF timing for kernel to use.  3) Where U-Boot just hasn't configured the timing values and    cannot be upgraded because the box is already in the field.  Since there is now a header file for AEMIF interface, the common (non-NAND specific) defines for AEMIF registers have been moved from nand.h into the newly created aemif.h  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Acked-by: Kevin Hilman <khilman@deeprootsystems.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | dm365.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1330354522 |  | ARM: davinci: add back dummy header files  The mach/dm365.h and mach/dm646xh headers are currently being included in some device drivers. The removal of those includes is already merged in some subsystem trees, but adding the dummy files ensures that this branch can be built standalone.  Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | serial.h | s | 1.3K | 38 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1336563401 |  | ARM: davinci: implement DEBUG_LL port choice  Apart from the necessity to do this change for multi-platform kernels the previous logic depended on the zImage decompressor to write the physical and virtual address to a magic memory location. If the decompressor is unused or not correctly configured for the current machid, the addruart macro was an infinite loop. Moreover debugging the early zImage code was not possible either.  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> [nsekhar@ti.com: add braces in _DEBUG_LL_ENTRY() macro to fix checkpatch error. Fix debug port choice config dependency for traditional DaVincis. Modify debug port config names and add help text.] Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | edma.h | s | 9.0K | 238 | Heiko Schocher | hs@denx.de | 1328210535 |  | ARM: davinci: map default_queue to edma channels  Default queue is expected to be a low-priority queue. This way, long transfers on the default queue started by the codec engine will not cause audio defects.  Signed-off-by: Heiko Schocher <hs@denx.de> Signed-off-by: Juha Kuikka <juha.kuikka@gmail.com> Reported-by: Juha Kuikka <juha.kuikka@gmail.com> Acked-by: Rajashekhara, Sudhakar <sudhakar.raj@ti.com> Cc: linux-mmc@vger.kernel.org Cc: davinci-linux-open-source@linux.davincidsp.com Cc: linux-arm-kernel@lists.infradead.org Cc: Rajashekhara, Sudhakar <sudhakar.raj@ti.com> Cc: Ido Yariv <ido@wizery.com> Cc: Sekhar Nori <nsekhar@ti.com> Cc: Wolfgang Denk <wd@denx.de> Cc: Sergei Shtylyov <sshtylyov@mvista.com> Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | asp.h | s | 3.9K | 117 | Sekhar Nori | nsekhar@ti.com | 1279616240 |  | ASoC: davinci: let platform data define edma queue numbers  Currently the EDMA queue to be used by for servicing ASP through internal RAM is fixed to EDMAQ_0 and that to service internal RAM from external RAM is fixed to EDMAQ_1.  This may not be the desirable configuration on all platforms. For example, on DM365, queue 0 has large fifo size and is more suitable for video transfers. Having audio and video transfers on the same queue may lead to starvation on audio side.  platform data as defined currently passes a queue number to the driver but that remains unused inside the driver.  Fix this by defining one queue each for ASP and RAM transfers in the platform data and using it inside the driver.  Since EDMAQ_0 maps to 0, thats the queue that will be used if the asp queue number is not initialized. None of the platforms currently utilize ping-pong transfers through internal RAM so that functionality remains unchanged too.  This patch has been tested on DM644x and OMAP-L138 EVMs.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Acked-by: Liam Girdwood <lrg@slimlogic.co.uk> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | entry-macro.S | g | 1.1K |  | Rob Herring | rob.herring@calxeda.com | 1331091279 |  | ARM: davinci: remove unneeded mach/io.h include  entry-macro.S doesn't actually need mach/io.h, so remove it.  Signed-off-by: Rob Herring <rob.herring@calxeda.com> Cc: Sekhar Nori <nsekhar@ti.com> Cc: Kevin Hilman <khilman@ti.com>
f | da8xx.h | s | 4.8K | 118 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1334780430 |  | ARM: davinci: mark spi_board_info arguments as const  spi_board_info is not modified in any of the spi registeration functions and passed along as-is to the generic SPI layer.  Mark spi_board_info arguments as const to signal this.  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> [nsekhar@ti.com: extended for dm365 and dm355] Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | psc.h | s | 7.8K | 244 | Murali Karicheri | m-karicheri2@ti.com | 1334779948 |  | ARM: davinci: fix incorrect pdctl next bit position  The PDCTL NEXT bit is incorrectly set to bit 1 instead of bit 0. This patch fixes this issue  Signed-off-by: Murali Karicheri <m-karicheri2@ti.com> Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | usb.h | s | 2.0K | 51 | Sergei Shtylyov | sshtylyov@ru.mvista.com | 1259173293 |  | DaVinci: rename setup_usb() to davinci_setup_usb()  Rename setup_usb() into davinci_setup_usb().  While at it:  - move its declaration from <mach/common.h> to more fitting <mach/usb.h>; - teach it to handle values of the 'mA' parameter greater than 510 and thus   pass 1000 instead of 500 for the power switches capable of sourcing over 1 A; - teach it to handle odd values of the 'potpgt_ms' parameter...  Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | nand.h | s | 2.6K | 77 | Brian Norris | computersforpeace@gmail.com | 1315742516 |  | mtd: nand: rename NAND_USE_FLASH_BBT  Recall the recently added prefix requirements:  * "NAND_" for flags in nand.h, used in nand_chip.options  * "NAND_BBT_" for flags in bbm.h, used in nand_chip.bbt_options         or in nand_bbt_descr.options  Thus, I am changing NAND_USE_FLASH_BBT to NAND_BBT_USE_FLASH.  Again, this flag is found in bbm.h and so should NOT be used in the "nand_chip.options" field.  Signed-off-by: Brian Norris <computersforpeace@gmail.com> Signed-off-by: Artem Bityutskiy <Artem.Bityutskiy@nokia.com>
f | spi.h | s | 3.1K | 82 | Michael Williamson | michael.williamson@criticallink.com | 1298933609 |  | davinci: spi: move event queue parameter to platform data  For DMA operation, the davinci spi driver needs an event queue number. Currently, this number is passed as a IORESOURCE_DMA.  This is not correct, as the event queue is not a DMA channel.  Pass the event queue via the platform data structure instead.  On dm355 and dm365, move the eventq assignment for spi0 out of resources array and into platform data.  Signed-off-by: Michael Williamson <michael.williamson@criticallink.com> Acked-by: Sekhar Nori <nsekhar@ti.com> Acked-by: Grant Likely <grant.likely@secretlab.ca> Signed-off-by: Kevin Hilman <khilman@ti.com>
f | clock.h | s | 565B | 18 | Kevin Hilman | khilman@deeprootsystems.com | 1240504260 |  | davinci: major rework of clock, PLL, PSC infrastructure  This is a significant rework of the low-level clock, PLL and Power Sleep Controller (PSC) implementation for the DaVinci family.  The primary goal is to have better modeling if the hardware clocks and features with the aim of DVFS functionality.  Highlights: - model PLLs and all PLL-derived clocks - model parent/child relationships of PLLs and clocks - convert to new clkdev layer - view clock frequency and refcount via /proc/davinci_clocks  Special thanks to significant contributions and testing by David Brownell.  Cc: David Brownell <dbrownell@users.sourceforge.net> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | gpio-davinci.h | s | 2.6K | 77 | Linus Walleij | linus.walleij@linaro.org | 1314000776 |  | ARM: 7040/1: mach-davinci: break out GPIO driver specifics  The <mach/gpio.h> file is included from upper directories and deal with generic GPIO and gpiolib stuff. Break out the platform and driver specific defines and functions into its own header file.  Cc: Sekhar Nori <nsekhar@ti.com> Cc: Kevin Hilman <khilman@ti.com> Signed-off-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | dm646x.h | s | 32B | 1 | Arnd Bergmann | arnd@arndb.de | 1330354522 |  | ARM: davinci: add back dummy header files  The mach/dm365.h and mach/dm646xh headers are currently being included in some device drivers. The removal of those includes is already merged in some subsystem trees, but adding the dummy files ensures that this branch can be built standalone.  Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | cp_intc.h | s | 2.2K | 53 | Cyril Chemparathy | cyril@ti.com | 1273770328 |  | Davinci: aintc/cpintc - use ioremap()  This patch implements the following:   - interrupt initialization uses ioremap() instead of passing a virtual address    via davinci_soc_info.   - machine definitions directly point to cp_intc_init() or davinci_irq_init()   - davinci_intc_type and davinci_intc_base now get initialized in controller    specific init functions instead of davinci_common_init()   - minor fix in davinci_irq_init() to use intc_irq_num instead of    DAVINCI_N_AINTC_IRQ  Signed-off-by: Cyril Chemparathy <cyril@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | cpuidle.h | s | 450B | 16 | Sekhar Nori | nsekhar@ti.com | 1265318978 |  | davinci: cpuidle: move mapping of DDR2 controller registers out of driver  When suspend is supported, both cpuidle and suspend code need to work on DDR2 registers. Instead of mapping the DDR2 registers twice, do it once outside of cpuidle driver and let cpuidle driver get the virtual base address of DDR2 registers.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | pm.h | s | 2.0K | 51 | Sekhar Nori | nsekhar@ti.com | 1265318995 |  | davinci: add power management support  This patch adds core power management (suspend-to-RAM) support for DaVinci SoCs.  The code depends on the the "deepsleep" feature to suspend the SoC and saves power by gating the input clock.  The wakeup can be based on an external event as supported by the SoC.  Assembly code (in sleep.S) is added to aid gating DDR2 clocks. Code doing this work should not be accessing DDR2. The assembly code is relocated to SRAM by the code in pm.c  The support has been validated on DA850/OMAP-L138 only though the code is (hopefully) generic enough that other SoCs supporting deepsleep feature simply requires SoC specific code to start using this driver.  Note that all the device drivers don't support suspend/resume still and are being worked on.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | uncompress.h | s | 2.4K | 82 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1336563401 |  | ARM: davinci: implement DEBUG_LL port choice  Apart from the necessity to do this change for multi-platform kernels the previous logic depended on the zImage decompressor to write the physical and virtual address to a magic memory location. If the decompressor is unused or not correctly configured for the current machid, the addruart macro was an infinite loop. Moreover debugging the early zImage code was not possible either.  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> [nsekhar@ti.com: add braces in _DEBUG_LL_ENTRY() macro to fix checkpatch error. Fix debug port choice config dependency for traditional DaVincis. Modify debug port config names and add help text.] Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | cputype.h | s | 2.5K | 81 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | irqs.h | s | 15K | 485 | Cyril Chemparathy | cyril@ti.com | 1273183325 |  | Davinci: tnetv107x IRQ definitions  IRQ numbers as defined for tnetv107x cp_intc.  Signed-off-by: Cyril Chemparathy <cyril@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | cdce949.h | s | 482B | 15 | Nageswari Srinivasan | nageswari@ti.com | 1265318998 |  | davinci: add support for CDCE949 clock synthesizer  This patch adds support for TI's CDCE949 - a clock synthesizer with 4 PLLs and 9 outputs.  It is used on DM6467 EVM. On the EVM, it generates clocks required for VPIF, TSIF and Audio modules.  This patch adds it as part of the DaVinci clock framework.  Testing: The various frequency outputs on Y1 have been tested using a out-of-tree VPIF video driver supporting HD video. The register values for Y5 frequency outputs have been derived from TSIF driver sources in MontaVista LSP kernel, but actual output has not been tested for lack of TSIF driver which actually works on the latest kernel.  Signed-off-by: Nageswari Srinivasan <nageswari@ti.com> Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | gpio.h | s | 2.4K | 74 | Linus Walleij | linus.walleij@linaro.org | 1320520187 |  | ARM: 7142/1: davinci: mark GPIO implementation complex  When breaking apart the DaVinci GPIO files I accidentally marked it non-complex while it is indeed complex.  Reported-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | debug-macro.S | g | 1.7K |  | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1336563401 |  | ARM: davinci: implement DEBUG_LL port choice  Apart from the necessity to do this change for multi-platform kernels the previous logic depended on the zImage decompressor to write the physical and virtual address to a magic memory location. If the decompressor is unused or not correctly configured for the current machid, the addruart macro was an infinite loop. Moreover debugging the early zImage code was not possible either.  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> [nsekhar@ti.com: add braces in _DEBUG_LL_ENTRY() macro to fix checkpatch error. Fix debug port choice config dependency for traditional DaVincis. Modify debug port config names and add help text.] Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | tnetv107x.h | s | 1.9K | 49 | Sekhar Nori | nsekhar@ti.com | 1325768229 |  | ARM: 7190/1: restart: davinci: use new restart hook  Rather than using DaVinci specific davinci_soc_info based restart hook, use the restart hook available in the machine descriptor instead.  Tested on DM365 and AM18x EVMs.  v2: Changed to use restart hook in machine descriptor per Russell's comment.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cpufreq.h | s | 806B | 23 | Sekhar Nori | nsekhar@ti.com | 1259173297 |  | davinci: DA850/OMAP-L138: avoid using separate initcall for initializing regulator  Using a device_initcall() for initializing the voltage regulator on DA850 is not such a good idea because it gets called for all platforms - even those who do not have a regulator implemented. This leads to a big fat warning message during boot-up when regulator cannot be found.  Instead, tie initialization of voltage regulator to cpufreq init. Define a platform specific init call which in case of DA850 gets used for initializing the regulator. On other future platforms it can be used for other purposes.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | i2c.h | s | 862B | 22 | Jiri Kosina | jkosina@suse.cz | 1268063737 |  | Merge branch 'for-next' into for-linus  Conflicts: 	Documentation/filesystems/proc.txt 	arch/arm/mach-u300/include/mach/debug-macro.S 	drivers/net/qlge/qlge_ethtool.c 	drivers/net/qlge/qlge_main.c 	drivers/net/typhoon.c
f | time.h | s | 950B | 29 | Mark A. Greer | mgreer@mvista.com | 1243351231 |  | davinci: Add watchdog base address flexibility  The watchdog code currently hardcodes the base address of the timer its using.  To support new SoCs, make it support timers at any address.  Use the soc_info structure to do this.  Signed-off-by: Mark A. Greer <mgreer@mvista.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | timex.h | s | 759B | 20 | Sekhar Nori | nsekhar@ti.com | 1265318981 |  | davinci: explain CLOCK_TICK_RATE of 27MHz in include/mach/timex.h  Leave a comment explaining the constant value of 27Mhz used in include/mach/timex.h for all DaVinci platforms. Many of the platforms actually run at 24MHz timer frequency (Eg. EVMs of DM355, DM365 and OMAP-L1).  The comment also serves as a porting alert.  Signed-off-by: Sekhar Nori <nsekhar@ti.com> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
f | ddr2.h | s | 136B | 4 | Nicolas Pitre | nicolas.pitre@linaro.org | 1318524587 |  | ARM: mach-davinci: remove mach/memory.h  Move some DDR2 related defines into a private <mach/ddr2.h> beforehand.  Signed-off-by: Nicolas Pitre <nicolas.pitre@linaro.org>
f | common.h | s | 2.7K | 95 | Shawn Guo | shawn.guo@linaro.org | 1336198801 |  | ARM: davinci: use machine specific hook for late init  Cc: Kevin Hilman <khilman@ti.com> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: Sekhar Nori <nsekhar@ti.com>
f | mux.h | s | 20K | 1148 | Ido Yariv | ido@wizery.com | 1316255002 |  | ARM: davinci: DA850: Add GPIO pinmux configuration for wl1271  The wl1271 daughter board makes use of a few GPIOs: GPIO6_9 is used for powering down/up the WLAN functionality. GPIO6_10 is used as an input IRQ line from the WLAN chip.  Add the required pinmux configuration for these GPIOs.  Signed-off-by: Ido Yariv <ido@wizery.com> Signed-off-by: Sekhar Nori <nsekhar@ti.com>
f | sram.h | s | 852B | 24 | David Brownell | dbrownell@users.sourceforge.net | 1243549093 |  | davinci: add SRAM allocator  Provide a generic SRAM allocator using genalloc, and vaguely modeled after what AVR32 uses.  This builds on top of the static CPU mapping set up in the previous patch, and returns DMA mappings as requested (if possible).  Compared to its OMAP cousin, there's no current support for (currently non-existent) DaVinci power management code running in SRAM; and this has ways to deallocate, instead of being allocate-only.  The initial user of this should probably be the audio code, because EDMA from DDR is subject to various dropouts on at least DM355 and DM6446 chips.  Signed-off-by: David Brownell <dbrownell@users.sourceforge.net> Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
