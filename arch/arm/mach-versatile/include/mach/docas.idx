f | io.h | s | 939B | 24 | Arnd Bergmann | arnd@arndb.de | 1339897295 |  | arm: versatile: fix and enable PCI I/O space  With commit 4d5fc58dbe34b (ARM: remove bunch of now unused mach/io.h files), the I/O space setup was completely broken on versatile. This patch fixes that and prepares for further I/O space clean-up.  I/O space handling on the versatile platform is currently broken in multiple ways. Most importantly, the ports do not get mapped into the virtual address space at all.  Also, there is some amount of confusion between PCI I/O space and other statically mapped MMIO registers in the platform code:  * The __io_address() macro that is used to access the   platform register maps to the same __io macro that gets   used for I/O space.  * The IO_SPACE_LIMIT is set to a value that is much larger   than the total available space.  * The I/O resource of the PCI bus is set to the physical   address of the mapping, which is way outside of the   actual I/O space limit as well as the address range that   gets decoded by traditional PCI cards.  * No attempt is made to stay outside of the ISA port range   that some device drivers try access.  * No resource gets requested as a child of ioport_resource,   but an IORESOURCE_IO type mapping gets requested   as a child of iomem_resource.  This patch attempts to correct all of the above. This makes it possible to use virtio-pci based virtual devices as well as actual PCI cards including those with legacy ISA port ranges like VGA.  Some of the issues seem to be duplicated on other platforms.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> [rob: update to 3.5-rc2 and io.h cleanup related changes] Signed-off-by: Rob Herring <rob.herring@calxeda.com> Tested-by: Robert Schwebel <r.schwebel@pengutronix.de> Signed-off-by: Olof Johansson <olof@lixom.net>
f | hardware.h | s | 1.4K | 34 | Arnd Bergmann | arnd@arndb.de | 1339897295 |  | arm: versatile: fix and enable PCI I/O space  With commit 4d5fc58dbe34b (ARM: remove bunch of now unused mach/io.h files), the I/O space setup was completely broken on versatile. This patch fixes that and prepares for further I/O space clean-up.  I/O space handling on the versatile platform is currently broken in multiple ways. Most importantly, the ports do not get mapped into the virtual address space at all.  Also, there is some amount of confusion between PCI I/O space and other statically mapped MMIO registers in the platform code:  * The __io_address() macro that is used to access the   platform register maps to the same __io macro that gets   used for I/O space.  * The IO_SPACE_LIMIT is set to a value that is much larger   than the total available space.  * The I/O resource of the PCI bus is set to the physical   address of the mapping, which is way outside of the   actual I/O space limit as well as the address range that   gets decoded by traditional PCI cards.  * No attempt is made to stay outside of the ISA port range   that some device drivers try access.  * No resource gets requested as a child of ioport_resource,   but an IORESOURCE_IO type mapping gets requested   as a child of iomem_resource.  This patch attempts to correct all of the above. This makes it possible to use virtio-pci based virtual devices as well as actual PCI cards including those with legacy ISA port ranges like VGA.  Some of the issues seem to be duplicated on other platforms.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> [rob: update to 3.5-rc2 and io.h cleanup related changes] Signed-off-by: Rob Herring <rob.herring@calxeda.com> Tested-by: Robert Schwebel <r.schwebel@pengutronix.de> Signed-off-by: Olof Johansson <olof@lixom.net>
f | platform.h | s | 18K | 365 | Russell King | rmk+kernel@arm.linux.org.uk | 1272789335 |  | ARM: Realview/Versatile/Integrator: remove unused definitions from platform.h  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | uncompress.h | s | 1.3K | 42 | Russell King | rmk@dyn-67.arm.linux.org.uk | 1218099348 |  | [ARM] Move include/asm-arm/arch-* to arch/arm/*/include/mach  This just leaves include/asm-arm/plat-* to deal with.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | gpio.h | s | 12B | 1 | Russell King | rmk+kernel@arm.linux.org.uk | 1313135659 |  | ARM: gpio: make trivial GPIOLIB implementation the default  Rather than marking the mach/gpio.h header files which want to use the trivial GPIOLIB implementation, mark those which do not want to use it instead.  This means that by default, you get the trivial implementation and only have to do something extra if you need to.  This should encourage the use of the trivial default implementation.  As an additional bonus, several gpio.h header files become empty.  Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: Jamie Iles <jamie@jamieiles.com> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | debug-macro.S | g | 612B |  | Nicolas Pitre | nicolas.pitre@linaro.org | 1317046285 |  | ARM: add an extra temp register to the low level debugging addruart macro  Some platforms (like OMAP not to name it) are doing rather complicated hacks just to determine the base UART address to use.  Let's give their addruart macro some slack by providing an extra work register which will allow for much needed cleanups.  This is basically a no-op as this commit is only adding the extra argument to the macro but no one is using it yet.  Signed-off-by: nicolas Pitre <nicolas.pitre@linaro.org> Reviewed-by: Kevin Hilman <khilman@ti.com>
f | irqs.h | s | 5.4K | 127 | Russell King | rmk@dyn-67.arm.linux.org.uk | 1246878134 |  | [ARM] versatile: add PL061 gpiolib support  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | timex.h | s | 903B | 22 | Russell King | rmk@dyn-67.arm.linux.org.uk | 1218099348 |  | [ARM] Move include/asm-arm/arch-* to arch/arm/*/include/mach  This just leaves include/asm-arm/plat-* to deal with.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | clkdev.h | s | 288B | 12 | Russell King | rmk+kernel@arm.linux.org.uk | 1272789338 |  | ARM: Indirect round/set_rate operations through clk structure  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
