f | proc-arm1026.S | g | 10K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm920.S | g | 11K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | abort-ev4t.S | g | 846B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | pabort-legacy.S | g | 402B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600570 |  | ARM: entry: prefetch abort: tail-call the main prefetch abort handler  Tail-call the main C prefetch abort handler code from the per-CPU helper code.  Also note that the helper function becomes ABI compliant in terms of the registers preserved.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | init.c | s | 19K | 654 | Marek Szyprowski | m.szyprowski@samsung.com | 1339417847 |  | ARM: mm: fix type of the arm_dma_limit global variable  arm_dma_limit stores physical address of maximal address accessible by DMA, so the phys_addr_t type makes much more sense for it instead of u32. This patch fixes the following build warning:  arch/arm/mm/init.c:380: warning: comparison of distinct pointer types lacks a cast  Reported-by: Russell King <linux@arm.linux.org.uk> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
f | vmregion.h | s | 829B | 25 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605583 |  | ARM: dma-mapping: add support for IOMMU mapper  This patch add a complete implementation of DMA-mapping API for devices which have IOMMU support.  This implementation tries to optimize dma address space usage by remapping all possible physical memory chunks into a single dma address space chunk.  DMA address space is managed on top of the bitmap stored in the dma_iommu_mapping structure stored in device->archdata. Platform setup code has to initialize parameters of the dma address space (base address, size, allocation precision order) with arm_iommu_create_mapping() function. To reduce the size of the bitmap, all allocations are aligned to the specified order of base 4 KiB pages.  dma_alloc_* functions allocate physical memory in chunks, each with alloc_pages() function to avoid failing if the physical memory gets fragmented. In worst case the allocated buffer is composed of 4 KiB page chunks.  dma_map_sg() function minimizes the total number of dma address space chunks by merging of physical memory chunks into one larger dma address space chunk. If requested chunk (scatter list entry) boundaries match physical page boundaries, most calls to dma_map_sg() requests will result in creating only one chunk in dma address space.  dma_map_page() simply creates a mapping for the given page(s) in the dma address space.  All dma functions also perform required cache operation like their counterparts from the arm linear physical memory mapping version.  This patch contains code and fixes kindly provided by: - Krishna Reddy <vdumpa@nvidia.com>, - Andrzej Pietrasiewicz <andrzej.p@samsung.com>, - Hiroshi DOYU <hdoyu@nvidia.com>  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Tested-By: Subash Patel <subash.ramaswamy@linaro.org>
f | flush.c | s | 8.7K | 300 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | fault-armv.c | s | 6.7K | 237 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103848 |  | arm: remove several unnecessary module.h include instances  Building these files does not reveal a hidden need for any of these.  Since module.h brings in the whole kitchen sink, it just needlessly adds 30k+ lines to the cpp burden.  There are probably lots more, but ARM files of mach-* and plat-* don't get coverage via a simple yesconfig build.  They will have to be cleaned up and tested via using their respective configs.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | proc-mohawk.S | g | 11K |  | Linus Torvalds | torvalds@linux-foundation.org | 1337704861 |  | 
f | proc-feroceon.S | g | 15K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-fa526.S | g | 5.2K |  | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | Makefile | g | 3.3K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1336193450 |  | ARM: Remove support for ARMv3 ARM610 and ARM710 CPUs  This patch removes support for ARMv3 CPUs, which haven't worked properly for quite some time (see the FIXME comment in arch/arm/mm/fault.c).  The only V3 parts left is the cache model for ARMv3, which is needed for some odd reason by ARM740T CPUs, and being able to build with -march=armv3, which is required for the RiscPC platform due to its bus structure.  Acked-by: Will Deacon <will.deacon@arm.com> Acked-by: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cache-v6.S | g | 7.8K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-sa110.S | g | 5.3K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | cache-xsc3l2.c | s | 4.9K | 179 | Russell King | rmk+kernel@arm.linux.org.uk | 1332955801 |  | ARM: move CP15 definitions to separate header file  Avoid namespace conflicts with drivers over the CP15 definitions by moving CP15 related prototypes and definitions to a private header file.  Acked-by: Stephen Warren <swarren@nvidia.com> Tested-by: Stephen Warren <swarren@nvidia.com> [Tegra] Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: H Hartley Sweeten <hsweeten@visionengravers.com> [EP93xx] Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: David Howells <dhowells@redhat.com>
f | copypage-feroceon.c | s | 3.1K | 106 | Cong Wang | amwang@redhat.com | 1332251294 |  | arm: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | proc-arm946.S | g | 10K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | vmregion.c | s | 4.8K | 176 | Russell King | rmk+kernel@arm.linux.org.uk | 1327314237 |  | ARM: add dma coherent region reporting via procfs  Add a new seqfile for reporting coherent DMA allocations.  This contains the address range, size and the function which was used to allocate each region, allowing these allocations to be viewed in much the same way as /proc/vmallocinfo.  The DMA coherent region has limited space, so this allows allocation failures to be viewed, as well as finding out how much space is being used.  Make sure this file is only readable by root - same as vmallocinfo - to prevent information leakage.  Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | pabort-v6.S | g | 417B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600570 |  | ARM: entry: prefetch abort: tail-call the main prefetch abort handler  Tail-call the main C prefetch abort handler code from the per-CPU helper code.  Also note that the helper function becomes ABI compliant in terms of the registers preserved.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cache-v4wb.S | g | 6.1K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | nommu.c | s | 2.5K | 89 | Will Deacon | will.deacon@arm.com | 1334322342 |  | ARM: 7383/1: nommu: populate vectors page from paging_init  Commit 94e5a85b ("ARM: earlier initialization of vectors page") made it the responsibility of paging_init to initialise the vectors page.  This patch adds a call to early_trap_init for the !CONFIG_MMU case, placing the vectors at CONFIG_VECTORS_BASE.  Cc: Jonathan Austin <jonathan.austin@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | iomap.c | s | 859B | 36 | Bjorn Helgaas | bhelgaas@google.com | 1330053536 |  | arm/PCI: remove arch pci_flags definition  The PCI core provides a pci_flags definition (currently __weak), so drop the arm definition in favor of that.  We EXPORT_SYMBOL(pci_flags) as arm did previously.  I'm dubious about this: no other architecture exports it, and I didn't see any modules in the tree that reference it.  CC: Rob Herring <rob.herring@calxeda.com> CC: Russell King <linux@arm.linux.org.uk> CC: linux-arm-kernel@lists.infradead.org Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | proc-arm925.S | g | 13K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copypage-v4wt.c | s | 2.3K | 83 | Cong Wang | amwang@redhat.com | 1332251294 |  | arm: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | context.c | s | 3.9K | 150 | Catalin Marinas | catalin.marinas@arm.com | 1334672977 |  | ARM: Remove current_mm per-cpu variable  The current_mm variable was used to store the new mm between the switch_mm() and switch_to() calls where an IPI to reset the context could have set the wrong mm. Since the interrupts are disabled during context switch, there is no need for this variable, current->active_mm already points to the current mm when interrupts are re-enabled.  Reviewed-by: Will Deacon <will.deacon@arm.com> Tested-by: Will Deacon <will.deacon@arm.com> Reviewed-by: Frank Rowand <frank.rowand@am.sony.com> Tested-by: Marc Zyngier <Marc.Zyngier@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | mmap.c | s | 7.8K | 278 | Rob Herring | rob.herring@calxeda.com | 1323170125 |  | ARM: 7169/1: topdown mmap support  Similar to other architectures, this adds topdown mmap support in user process address space allocation policy. This allows mmap sizes greater than 2GB. This support is largely copied from MIPS and the generic implementations.  The address space randomization is moved into arch_pick_mmap_layout.  Tested on V-Express with ubuntu and a mmap test from here: https://bugs.launchpad.net/bugs/861296  Signed-off-by: Rob Herring <rob.herring@calxeda.com> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm740.S | g | 3.8K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | cache-feroceon-l2.c | s | 8.1K | 295 | Russell King | rmk+kernel@arm.linux.org.uk | 1332955801 |  | ARM: move CP15 definitions to separate header file  Avoid namespace conflicts with drivers over the CP15 definitions by moving CP15 related prototypes and definitions to a private header file.  Acked-by: Stephen Warren <swarren@nvidia.com> Tested-by: Stephen Warren <swarren@nvidia.com> [Tegra] Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: H Hartley Sweeten <hsweeten@visionengravers.com> [EP93xx] Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: David Howells <dhowells@redhat.com>
f | proc-sa1100.S | g | 6.8K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | abort-nommu.S | g | 459B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copypage-v4wb.c | s | 2.8K | 90 | Cong Wang | amwang@redhat.com | 1332251294 |  | arm: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | fsr-2level.c | s | 3.8K | 77 | Catalin Marinas | catalin.marinas@arm.com | 1323340237 |  | ARM: LPAE: Move the FSR definitions to separate files  The FSR structure is different with LPAE and this patch moves the classic MMU specific definition to a separate fsr-2level.c file that is included in fault.c. It also moves the fsr_fs and FSR bits to the fault.h file.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | cache-tauros2.c | s | 6.8K | 244 | Chao Xie | chao.xie@marvell.com | 1336362228 |  | ARM: cache: tauros2: add disable and resume callback  For the SOC chips using tauros2 cache, will need disable and resume tauros2 cache for SOC suspend/resume.  Signed-off-by: Chao Xie <chao.xie@marvell.com> Signed-off-by: Haojian Zhuang <haojian.zhuang@gmail.com>
f | copypage-v6.c | s | 3.5K | 115 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | copypage-xscale.c | s | 3.6K | 121 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | proc-xscale.S | g | 18K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | copypage-v4mc.c | s | 3.4K | 101 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | abort-ev5tj.S | g | 938B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copypage-xsc3.c | s | 2.8K | 108 | Cong Wang | amwang@redhat.com | 1332251294 |  | arm: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | extable.c | s | 312B | 13 | Russell King | rmk@dyn-67.arm.linux.org.uk | 1220697355 |  | [ARM] Convert asm/uaccess.h to linux/uaccess.h  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | pabort-v7.S | g | 444B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600570 |  | ARM: entry: prefetch abort: tail-call the main prefetch abort handler  Tail-call the main C prefetch abort handler code from the per-CPU helper code.  Also note that the helper function becomes ABI compliant in terms of the registers preserved.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-xsc3.S | g | 13K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | abort-ev6.S | g | 1.3K |  | Will Deacon | will.deacon@arm.com | 1335187312 |  | ARM: 7396/1: errata: only handle ARM erratum #326103 on affected cores  Erratum #326103 ("FSR write bit incorrect on a SWP to read-only memory") only affects the ARM 1136 core prior to r1p0. The workaround disassembles the faulting instruction to determine whether it was a read or write access on all v6 cores.  An issue has been reported on the ARM 11MPCore whereby loading the faulting instruction may happen in parallel with that page being unmapped, resulting in a deadlock due to the lack of TLB broadcasting in hardware:  http://lists.infradead.org/pipermail/linux-arm-kernel/2012-March/091561.html  This patch limits the workaround so that it is only used on affected cores, which are known to be UP only. Other v6 cores can rely on the FSR to indicate the access type correctly.  Cc: stable@vger.kernel.org Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | tlb-v4wbi.S | g | 1.7K |  | Dave Martin | dave.martin@linaro.org | 1310049072 |  | ARM: mm: tlb-v4wbi: Use the new processor struct macros  Signed-off-by: Dave Martin <dave.martin@linaro.org>
f | mmu.c | s | 32K | 1080 | Nicolas Pitre | nicolas.pitre@linaro.org | 1341148895 |  | ARM: 7438/1: fill possible PMD empty section gaps  On ARM with the 2-level page table format, a PMD entry is represented by two consecutive section entries covering 2MB of virtual space.  However, static mappings always were allowed to use separate 1MB section entries.  This means in practice that a static mapping may create half populated PMDs via create_mapping().  Since commit 0536bdf33f (ARM: move iotable mappings within the vmalloc region) those static mappings are located in the vmalloc area. We must ensure no such half populated PMDs are accessible once vmalloc() or ioremap() start looking at the vmalloc area for nearby free virtual address ranges, or various things leading to a kernel crash will happen.  Signed-off-by: Nicolas Pitre <nico@linaro.org> Reported-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Tested-by: "R, Sricharan" <r.sricharan@ti.com> Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Cc: stable@vger.kernel.org Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | alignment.c | s | 25K | 851 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | ioremap.c | s | 10K | 336 | Linus Torvalds | torvalds@linux-foundation.org | 1333069330 |  | 
f | proc-arm7tdmi.S | g | 3.1K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | abort-ev7.S | g | 1.1K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cache-v4wt.S | g | 4.6K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm720.S | g | 5.9K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | tlb-v4.S | g | 1.5K |  | Dave Martin | dave.martin@linaro.org | 1310049072 |  | ARM: mm: tlb-v4: Use the new processor struct macros  Signed-off-by: Dave Martin <dave.martin@linaro.org>
f | proc-arm926.S | g | 12K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cache-v3.S | g | 3.0K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm9tdmi.S | g | 2.3K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | fsr-3level.c | s | 3.4K | 67 | Catalin Marinas | catalin.marinas@arm.com | 1323340240 |  | ARM: LPAE: Add fault handling support  The DFSR and IFSR register format is different when LPAE is enabled. In addition, DFSR and IFSR have similar definitions for the fault type. This modifies the fault code to correctly handle the new format.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | cache-l2x0.c | s | 14K | 494 | Will Deacon | will.deacon@arm.com | 1335187312 |  | ARM: 7398/1: l2x0: only write to debug registers on PL310  PL310 errata #588369 and #727915 require writes to the debug registers of the cache controller to work around known problems. Writing these registers on L220 may cause deadlock, so ensure that we only perform this operation when we identify a PL310 at probe time.  Cc: stable@vger.kernel.org Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm922.S | g | 10K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | cache-fa.S | g | 6.0K |  | Dave Martin | dave.martin@linaro.org | 1310049065 |  | ARM: mm: cache-fa: Use the new processor struct macros  Signed-off-by: Dave Martin <dave.martin@linaro.org>
f | proc-v7-3level.S | g | 4.4K |  | Catalin Marinas | catalin.marinas@arm.com | 1323340239 |  | ARM: LPAE: MMU setup for the 3-level page table format  This patch adds the MMU initialisation for the LPAE page table format. The swapper_pg_dir size with LPAE is 5 rather than 4 pages. A new proc-v7-3level.S file contains the TTB initialisation, context switch and PTE setting code with the LPAE. The TTBRx split is based on the PAGE_OFFSET with TTBR1 used for the kernel mappings. The 36-bit mappings (supersections) and a few other memory types in mmu.c are conditionally compiled.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | proc-v7.S | g | 10K |  | Jonathan Austin | Jonathan.Austin@arm.com | 1334523631 |  | ARM: 7384/1: ThumbEE: Disable userspace TEEHBR access for !CONFIG_ARM_THUMBEE  Currently when ThumbEE is not enabled (!CONFIG_ARM_THUMBEE) the ThumbEE register states are not saved/restored at context switch. The default state of the ThumbEE Ctrl register (TEECR) allows userspace accesses to the ThumbEE Base Handler register (TEEHBR). This can cause unexpected behaviour when people use ThumbEE on !CONFIG_ARM_THUMBEE kernels, as well as allowing covert communication - eg between userspace tasks running inside chroot jails.  This patch sets up TEECR in order to prevent user-space access to TEEHBR when !CONFIG_ARM_THUMBEE. In this case, tasks are sent SIGILL if they try to access TEEHBR.  Cc: stable@vger.kernel.org Reviewed-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Jonathan Austin <jonathan.austin@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | highmem.c | s | 3.1K | 118 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | cache-v7.S | g | 8.8K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copypage-fa.c | s | 2.3K | 81 | Cong Wang | amwang@redhat.com | 1332251294 |  | arm: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | mm.h | s | 1.8K | 58 | Marek Szyprowski | m.szyprowski@samsung.com | 1339417847 |  | ARM: mm: fix type of the arm_dma_limit global variable  arm_dma_limit stores physical address of maximal address accessible by DMA, so the phys_addr_t type makes much more sense for it instead of u32. This patch fixes the following build warning:  arch/arm/mm/init.c:380: warning: comparison of distinct pointer types lacks a cast  Reported-by: Russell King <linux@arm.linux.org.uk> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
f | Kconfig | g | 22K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1336193450 |  | ARM: Remove support for ARMv3 ARM610 and ARM710 CPUs  This patch removes support for ARMv3 CPUs, which haven't worked properly for quite some time (see the FIXME comment in arch/arm/mm/fault.c).  The only V3 parts left is the cache model for ARMv3, which is needed for some odd reason by ARM740T CPUs, and being able to build with -march=armv3, which is required for the RiscPC platform due to its bus structure.  Acked-by: Will Deacon <will.deacon@arm.com> Acked-by: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | idmap.c | s | 2.8K | 94 | David Howells | dhowells@redhat.com | 1332955801 |  | Disintegrate asm/system.h for ARM  Disintegrate asm/system.h for ARM.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Russell King <linux@arm.linux.org.uk> cc: linux-arm-kernel@lists.infradead.org
f | cache-v4.S | g | 3.1K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm940.S | g | 9.4K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-v6.S | g | 8.1K |  | Will Deacon | will.deacon@arm.com | 1323180254 |  | ARM: proc-*.S: place cpu_reset functions into .idmap.text section  The CPU reset functions disable the MMU and therefore must be executed with an identity mapping in place.  This patch places the CPU reset functions into the .idmap.text section, causing the idmap code to include them as part of the identity mapping.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | tlb-fa.S | g | 1.8K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1311372547 |  | Merge branch 'devel-stable' into for-next  Conflicts: 	arch/arm/kernel/entry-armv.S
f | abort-ev4.S | g | 783B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm1020.S | g | 12K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm1020e.S | g | 11K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-arm1022.S | g | 11K |  | Will Deacon | will.deacon@arm.com | 1335953569 |  | ARM: 7408/1: cacheflush: return error to userspace when flushing syscall fails  The cacheflush syscall can fail for two reasons:  (1) The arguments are invalid (nonsensical address range or no VMA)  (2) The region generates a translation fault on a VIPT or PIPT cache  This patch allows do_cache_op to return an error code to userspace in the case of the above. The various coherent_user_range implementations are modified to return 0 in the case of VIVT caches or -EFAULT in the case of an abort on v6/v7 cores.  Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | tlb-v6.S | g | 2.6K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1311372547 |  | Merge branch 'devel-stable' into for-next  Conflicts: 	arch/arm/kernel/entry-armv.S
f | abort-macro.S | g | 1.1K |  | Janusz Krzysztofik | jkrzyszt@tis.icnet.pl | 1315694396 |  | ARM: 7088/1: entry: fix wrong parameter name used in do_thumb_abort  Commit be020f8618ca, "ARM: entry: abort-macro: specify registers to be used for macros", while replacing register numbers with macro parameter names, mismatched the name used for r1. For me, this resulted in user space built for EABI with -march=armv4t -mtune=arm920t -mthumb-interwork -mthumb broken on my OMAP1510 based Amstrad Delta (old ABI and no thumb still worked for me though).  Fix this by using correct parameter name fsr instead of mismatched psr, used by callers for another purpose.  Signed-off-by: Janusz Krzysztofik <jkrzyszt@tis.icnet.pl> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | tlb-v7.S | g | 2.3K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1311372547 |  | Merge branch 'devel-stable' into for-next  Conflicts: 	arch/arm/kernel/entry-armv.S
f | abort-lv4t.S | g | 6.3K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600572 |  | ARM: entry: data abort: ensure r5 is preserved by abort functions  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-syms.c | s | 1.2K | 46 | Russell King | rmk+kernel@arm.linux.org.uk | 1260802402 |  | ARM: add size argument to __cpuc_flush_dcache_page  ... and rename the function since it no longer operates on just pages.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | fault.c | s | 14K | 526 | Russell King | rmk+kernel@arm.linux.org.uk | 1337609733 |  | Merge branch 'v3-removal' into for-linus  Conflicts: 	arch/arm/boot/compressed/head.S
f | pgd.c | s | 3.3K | 137 | Russell King | rmk+kernel@arm.linux.org.uk | 1332955801 |  | ARM: move CP15 definitions to separate header file  Avoid namespace conflicts with drivers over the CP15 definitions by moving CP15 related prototypes and definitions to a private header file.  Acked-by: Stephen Warren <swarren@nvidia.com> Tested-by: Stephen Warren <swarren@nvidia.com> [Tegra] Acked-by: H Hartley Sweeten <hsweeten@visionengravers.com> Tested-by: H Hartley Sweeten <hsweeten@visionengravers.com> [EP93xx] Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: David Howells <dhowells@redhat.com>
f | abort-ev5t.S | g | 861B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1309600571 |  | ARM: entry: data abort: tail-call the main data abort handler  Tail-call the main C data abort handler code from the per-CPU helper code.  Update the comments in the code wrt the new calling and return register state.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | proc-macros.S | g | 7.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1323340239 |  | ARM: LPAE: MMU setup for the 3-level page table format  This patch adds the MMU initialisation for the LPAE page table format. The swapper_pg_dir size with LPAE is 5 rather than 4 pages. A new proc-v7-3level.S file contains the TTB initialisation, context switch and PTE setting code with the LPAE. The TTBRx split is based on the PAGE_OFFSET with TTBR1 used for the kernel mappings. The 36-bit mappings (supersections) and a few other memory types in mmu.c are conditionally compiled.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | proc-v7-2level.S | g | 4.2K |  | Catalin Marinas | catalin.marinas@arm.com | 1334672972 |  | ARM: Remove __ARCH_WANT_INTERRUPTS_ON_CTXSW on ASID-capable CPUs  Since the ASIDs must be unique to an mm across all the CPUs in a system, the __new_context() function needs to broadcast a context reset event to all the CPUs during ASID allocation if a roll-over occurred. Such IPIs cannot be issued with interrupts disabled and ARM had to define __ARCH_WANT_INTERRUPTS_ON_CTXSW.  This patch changes the check_context() function to check_and_switch_context() called from switch_mm(). In case of ASID-capable CPUs (ARMv6 onwards), if a new ASID is needed and the interrupts are disabled, it defers the __new_context() and cpu_switch_mm() calls to the post-lock switch hook where the interrupts are enabled. Setting the reserved TTBR0 was also moved to check_and_switch_context() from cpu_v7_switch_mm().  Reviewed-by: Will Deacon <will.deacon@arm.com> Tested-by: Will Deacon <will.deacon@arm.com> Reviewed-by: Frank Rowand <frank.rowand@am.sony.com> Tested-by: Marc Zyngier <Marc.Zyngier@arm.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | dma-mapping.c | s | 43K | 1424 | Marek Szyprowski | m.szyprowski@samsung.com | 1340612332 |  | ARM: dma-mapping: fix buffer chunk allocation order  IOMMU-aware dma_alloc_attrs() implementation allocates buffers in power-of-two chunks to improve performance and take advantage of large page mappings provided by some IOMMU hardware. However current code, due to a subtle bug, allocated those chunks in the smallest-to-largest order, what completely killed all the advantages of using larger than page chunks. If a 4KiB chunk has been mapped as a first chunk, the consecutive chunks are not aligned correctly to the power-of-two which match their size and IOMMU drivers were not able to use internal mappings of size other than the 4KiB (largest common denominator of alignment and chunk size).  This patch fixes this issue by changing to the correct largest-to-smallest chunk size allocation sequence.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
f | fault.h | s | 650B | 24 | Catalin Marinas | catalin.marinas@arm.com | 1323340240 |  | ARM: LPAE: Add fault handling support  The DFSR and IFSR register format is different when LPAE is enabled. In addition, DFSR and IFSR have similar definitions for the fault type. This modifies the fault code to correctly handle the new format.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | tlb-v4wb.S | g | 1.9K |  | Dave Martin | dave.martin@linaro.org | 1310049072 |  | ARM: mm: tlb-v4wb: Use the new processor struct macros  Signed-off-by: Dave Martin <dave.martin@linaro.org>
