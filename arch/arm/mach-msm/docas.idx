f | board-msm8x60.c | s | 4.2K | 145 | Olof Johansson | olof@lixom.net | 1336722596 |  | Merge branch 'clean/late_initcall_v2' of git://git.linaro.org/people/shawnguo/linux-2.6 into staging/cleanup  By Shawn Guo via Shawn Guo * 'clean/late_initcall_v2' of git://git.linaro.org/people/shawnguo/linux-2.6:   ARM: ux500: use machine specific hook for late init   ARM: tegra: use machine specific hook for late init   ARM: shmobile: use machine specific hook for late init   ARM: sa1100: use machine specific hook for late init   ARM: s3c64xx: use machine specific hook for late init   ARM: prima2: use machine specific hook for late init   ARM: pnx4008: use machine specific hook for late init   ARM: omap2: use machine specific hook for late init   ARM: omap1: use machine specific hook for late init   ARM: msm: use machine specific hook for late init   ARM: imx: use machine specific hook for late init   ARM: exynos: use machine specific hook for late init   ARM: ep93xx: use machine specific hook for late init   ARM: davinci: use machine specific hook for late init   ARM: provide a late_initcall hook for platform initialization
f | board-msm8960.c | s | 3.2K | 104 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | proc_comm.c | s | 3.1K | 107 | David Brown | davidb@codeaurora.org | 1334337797 |  | ARM: msm: Fix section mismatches in proc_comm.c  The change     commit 4416e9eb0b4859b3d28016c5fd0a609bdcbc8a2a     Author: Gregory Bean <gbean@codeaurora.org>     Date:   Wed Jul 28 10:22:12 2010 -0700          arm: msm: Fix section mismatch in smd.c.  fixes a section mismatch between the board file and the smd driver's probe function, however, it misses the additional mismatches between the probe function and some routines it calls.  Fix these up as well.  Signed-off-by: David Brown <davidb@codeaurora.org>
f | gpiomux-v2.c | s | 965B | 24 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | Makefile | g | 1.3K |  | Marc Zyngier | marc.zyngier@arm.com | 1320771508 |  | ARM: msm: fix compilation flags for MSM_SCM  CONFIG_MSM_SCM uses the smc instruction, which with some toolchains requires a ".arch_extension" directive.  Cc: David Brown <davidb@codeaurora.org> Signed-off-by: Marc Zyngier <marc.zyngier@arm.com> Signed-off-by: David Brown <davidb@codeaurora.org>
f | gpiomux.h | s | 3.2K | 91 | David Brown | davidb@codeaurora.org | 1312199880 |  | msm: gpiomux: Move public API to public header  The gpiomux.h header contains some SOC ifdefs.  However, the API that is actually used by the GPIO driver only uses two functions that are general.  Move these general definitions into a public header file.  Change-Id: Ia5df8af87dba268225598d56908e523bcfc24ef6 Signed-off-by: David Brown <davidb@codeaurora.org> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org>
f | devices-msm7x00.c | s | 9.7K | 401 | Sahitya Tummala | stummala@codeaurora.org | 1319658217 |  | msm: mmc: Remove "pio_irq" resource  On some targets, MCI_IRQ_MASK1 is not routed to the MSM in which case only "cmd_irq" must be used even for PIO. With this change, all the targets will use only "cmd_irq" for both CMD and PIO.  Signed-off-by: Sahitya Tummala <stummala@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org> Signed-off-by: Chris Ball <cjb@laptop.org>
f | gpiomux.c | s | 2.6K | 80 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | board-halibut.c | s | 2.5K | 95 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | hotplug.c | s | 1.9K | 81 | Will Deacon | will.deacon@arm.com | 1327314005 |  | ARM: 7293/1: logical_cpu_map: decouple CPU mapping from SMP  It turns out that the logical CPU mapping is useful even when !CONFIG_SMP for manipulation of devices like interrupt and power controllers when running a UP kernel on a CPU other than 0. This can happen when kexecing a UP image from an SMP kernel.  In the future, multi-cluster systems running AMP configurations will require something similar for mapping cluster IDs, so it makes sense to decouple this logic in preparation for this support.  Acked-by: Yang Bai <hamo.by@gmail.com> Acked-by: Marc Zyngier <marc.zyngier@arm.com> Reported-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | gpiomux-8x50.c | s | 1.7K | 48 | Sahitya Tummala | stummala@codeaurora.org | 1295657882 |  | msm: 8x50: Add initial support for SDCC  Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
f | clock-debug.c | s | 3.0K | 105 | Stephen Boyd | sboyd@codeaurora.org | 1298925605 |  | msm: clock: Remove references to clk_ops_pcom  Not all devices use proc_comm and determining if a clock is local vs. remote is fragile when done by comparing clk_ops pointers. Instead, implement an is_local() function for all clk_ops to determine if the clock is local. Doing this allows us to remove the last references to clk_ops_pcom from clock.c and compile it for targets with CONFIG_MSM_PROC_COMM=n.  We don't need to set the clk_ops at runtime until 7x30 local clock detection comes in. Right now it's just complicating things so just set the ops pointer statically.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | board-msm7x30.c | s | 4.1K | 140 | Linus Torvalds | torvalds@linux-foundation.org | 1338063241 |  | 
d | include |  | 1 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1338063241 |  | 
f | devices-qsd8x50.c | s | 8.3K | 318 | Sahitya Tummala | stummala@codeaurora.org | 1319658217 |  | msm: mmc: Remove "pio_irq" resource  On some targets, MCI_IRQ_MASK1 is not routed to the MSM in which case only "cmd_irq" must be used even for PIO. With this change, all the targets will use only "cmd_irq" for both CMD and PIO.  Signed-off-by: Sahitya Tummala <stummala@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org> Signed-off-by: Chris Ball <cjb@laptop.org>
f | gpiomux-v1.h | s | 1.8K | 61 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | scm-boot.h | s | 775B | 19 | David Brown | davidb@codeaurora.org | 1298925605 |  | msm: Use explicit GPLv2 licenses  Replace a BSD-style license in Code Aurora Forum authored files with an explicit GPLv2.  Signed-off-by: David Brown <davidb@codeaurora.org>
f | clock.c | s | 4.4K | 159 | Jean Pihet | j-pihet@ti.com | 1314279303 |  | PM QoS: Move and rename the implementation files  The PM QoS implementation files are better named kernel/power/qos.c and include/linux/pm_qos.h.  The PM QoS support is compiled under the CONFIG_PM option.  Signed-off-by: Jean Pihet <j-pihet@ti.com> Acked-by: markgross <markgross@thegnar.org> Reviewed-by: Kevin Hilman <khilman@ti.com> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | clock-pcom.c | s | 3.1K | 121 | Stephen Boyd | sboyd@codeaurora.org | 1298925605 |  | msm: clock: Remove references to clk_ops_pcom  Not all devices use proc_comm and determining if a clock is local vs. remote is fragile when done by comparing clk_ops pointers. Instead, implement an is_local() function for all clk_ops to determine if the clock is local. Doing this allows us to remove the last references to clk_ops_pcom from clock.c and compile it for targets with CONFIG_MSM_PROC_COMM=n.  We don't need to set the clk_ops at runtime until 7x30 local clock detection comes in. Right now it's just complicating things so just set the ops pointer statically.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | dma.c | s | 8.5K | 240 | Daniel Walker | dwalker@codeaurora.org | 1275952593 |  | msm: dma: add completion.h header  At some point this was exposed (not sure how),  linux-2.6/arch/arm/mach-msm/dma.c:92: error: field 'complete' has incomplete type linux-2.6/arch/arm/mach-msm/dma.c: In function 'dmov_exec_cmdptr_complete_func': linux-2.6/arch/arm/mach-msm/dma.c:108: error: implicit declaration of function 'complete' linux-2.6/arch/arm/mach-msm/dma.c: In function 'msm_dmov_exec_cmd': linux-2.6/arch/arm/mach-msm/dma.c:120: error: implicit declaration of function 'init_completion' linux-2.6/arch/arm/mach-msm/dma.c:123: error: implicit declaration of function 'wait_for_completion'  and the fix is just to add the header.  Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | board-qsd8x50.c | s | 5.2K | 183 | Linus Torvalds | torvalds@linux-foundation.org | 1338063241 |  | 
f | devices-iommu.c | s | 19K | 813 | Joerg Roedel | joerg.roedel@amd.com | 1323166654 |  | iommu/msm: Fix compile error in mach-msm/devices-iommu.c  Fix compile error due to missing <linux/module.h> include.  Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | last_radio_log.c | s | 2.1K | 69 | Arnd Bergmann | arnd@arndb.de | 1287150807 |  | llseek: automatically add .llseek fop  All file_operations should get a .llseek operation so we can make nonseekable_open the default for future file operations without a .llseek pointer.  The three cases that we can automatically detect are no_llseek, seq_lseek and default_llseek. For cases where we can we can automatically prove that the file offset is always ignored, we use noop_llseek, which maintains the current behavior of not returning an error from a seek.  New drivers should normally not use noop_llseek but instead use no_llseek and call nonseekable_open at open time.  Existing drivers can be converted to do the same when the maintainer knows for certain that no user code relies on calling seek on the device file.  The generated code is often incorrectly indented and right now contains comments that clarify for each added line why a specific variant was chosen. In the version that gets submitted upstream, the comments will be gone and I will manually fix the indentation, because there does not seem to be a way to do that using coccinelle.  Some amount of new code is currently sitting in linux-next that should get the same modifications, which I will do at the end of the merge window.  Many thanks to Julia Lawall for helping me learn to write a semantic patch that does all this.  ===== begin semantic patch ===== // This adds an llseek= method to all file operations, // as a preparation for making no_llseek the default. // // The rules are // - use no_llseek explicitly if we do nonseekable_open // - use seq_lseek for sequential files // - use default_llseek if we know we access f_pos // - use noop_llseek if we know we don't access f_pos, //   but we still want to allow users to call lseek // @ open1 exists @ identifier nested_open; @@ nested_open(...) { <+... nonseekable_open(...) ...+> }  @ open exists@ identifier open_f; identifier i, f; identifier open1.nested_open; @@ int open_f(struct inode *i, struct file *f) { <+... ( nonseekable_open(...) || nested_open(...) ) ...+> }  @ read disable optional_qualifier exists @ identifier read_f; identifier f, p, s, off; type ssize_t, size_t, loff_t; expression E; identifier func; @@ ssize_t read_f(struct file *f, char *p, size_t s, loff_t *off) { <+... (    *off = E ||    *off += E ||    func(..., off, ...) ||    E = *off ) ...+> }  @ read_no_fpos disable optional_qualifier exists @ identifier read_f; identifier f, p, s, off; type ssize_t, size_t, loff_t; @@ ssize_t read_f(struct file *f, char *p, size_t s, loff_t *off) { ... when != off }  @ write @ identifier write_f; identifier f, p, s, off; type ssize_t, size_t, loff_t; expression E; identifier func; @@ ssize_t write_f(struct file *f, const char *p, size_t s, loff_t *off) { <+... (   *off = E ||   *off += E ||   func(..., off, ...) ||   E = *off ) ...+> }  @ write_no_fpos @ identifier write_f; identifier f, p, s, off; type ssize_t, size_t, loff_t; @@ ssize_t write_f(struct file *f, const char *p, size_t s, loff_t *off) { ... when != off }  @ fops0 @ identifier fops; @@ struct file_operations fops = {  ... };  @ has_llseek depends on fops0 @ identifier fops0.fops; identifier llseek_f; @@ struct file_operations fops = { ...  .llseek = llseek_f, ... };  @ has_read depends on fops0 @ identifier fops0.fops; identifier read_f; @@ struct file_operations fops = { ...  .read = read_f, ... };  @ has_write depends on fops0 @ identifier fops0.fops; identifier write_f; @@ struct file_operations fops = { ...  .write = write_f, ... };  @ has_open depends on fops0 @ identifier fops0.fops; identifier open_f; @@ struct file_operations fops = { ...  .open = open_f, ... };  // use no_llseek if we call nonseekable_open //////////////////////////////////////////// @ nonseekable1 depends on !has_llseek && has_open @ identifier fops0.fops; identifier nso ~= "nonseekable_open"; @@ struct file_operations fops = { ...  .open = nso, ... +.llseek = no_llseek, /* nonseekable */ };  @ nonseekable2 depends on !has_llseek @ identifier fops0.fops; identifier open.open_f; @@ struct file_operations fops = { ...  .open = open_f, ... +.llseek = no_llseek, /* open uses nonseekable */ };  // use seq_lseek for sequential files ///////////////////////////////////// @ seq depends on !has_llseek @ identifier fops0.fops; identifier sr ~= "seq_read"; @@ struct file_operations fops = { ...  .read = sr, ... +.llseek = seq_lseek, /* we have seq_read */ };  // use default_llseek if there is a readdir /////////////////////////////////////////// @ fops1 depends on !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier readdir_e; @@ // any other fop is used that changes pos struct file_operations fops = { ... .readdir = readdir_e, ... +.llseek = default_llseek, /* readdir is present */ };  // use default_llseek if at least one of read/write touches f_pos ///////////////////////////////////////////////////////////////// @ fops2 depends on !fops1 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier read.read_f; @@ // read fops use offset struct file_operations fops = { ... .read = read_f, ... +.llseek = default_llseek, /* read accesses f_pos */ };  @ fops3 depends on !fops1 && !fops2 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier write.write_f; @@ // write fops use offset struct file_operations fops = { ... .write = write_f, ... +	.llseek = default_llseek, /* write accesses f_pos */ };  // Use noop_llseek if neither read nor write accesses f_pos ///////////////////////////////////////////////////////////  @ fops4 depends on !fops1 && !fops2 && !fops3 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier read_no_fpos.read_f; identifier write_no_fpos.write_f; @@ // write fops use offset struct file_operations fops = { ...  .write = write_f,  .read = read_f, ... +.llseek = noop_llseek, /* read and write both use no f_pos */ };  @ depends on has_write && !has_read && !fops1 && !fops2 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier write_no_fpos.write_f; @@ struct file_operations fops = { ... .write = write_f, ... +.llseek = noop_llseek, /* write uses no f_pos */ };  @ depends on has_read && !has_write && !fops1 && !fops2 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; identifier read_no_fpos.read_f; @@ struct file_operations fops = { ... .read = read_f, ... +.llseek = noop_llseek, /* read uses no f_pos */ };  @ depends on !has_read && !has_write && !fops1 && !fops2 && !has_llseek && !nonseekable1 && !nonseekable2 && !seq @ identifier fops0.fops; @@ struct file_operations fops = { ... +.llseek = noop_llseek, /* no read or write fn */ }; ===== End semantic patch =====  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Cc: Julia Lawall <julia@diku.dk> Cc: Christoph Hellwig <hch@infradead.org>
f | gpiomux-v1.c | s | 1.2K | 31 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | board-trout-panel.c | s | 9.4K | 261 | Daniel Walker | dwalker@fifo99.com | 1334337796 |  | arm: msm: trout: fix compile failure  Fixes the following warnings,  arch/arm/mach-msm/board-trout.c: In function 'trout_init': arch/arm/mach-msm/board-trout.c:71: error: 'system_rev' undeclared (first use in this function) arch/arm/mach-msm/board-trout.c:71: error: (Each undeclared identifier is reported only once arch/arm/mach-msm/board-trout.c:71: error: for each function it appears in.)  and  arch/arm/mach-msm/board-trout-panel.c: In function 'trout_init_panel': arch/arm/mach-msm/board-trout-panel.c:267: error: 'system_rev' undeclared (first use in this function) arch/arm/mach-msm/board-trout-panel.c:267: error: (Each undeclared identifier is reported only once arch/arm/mach-msm/board-trout-panel.c:267: error: for each function it appears in.)  This came in with the following commit 9f97da78bf018206fb623cd351d454af2f105fe0 which removes asm/system.h  Signed-off-by: Daniel Walker <dwalker@fifo99.com> cc: David Howells <dhowells@redhat.com> cc: Bryan Huntsman <bryanh@codeaurora.org> cc: linux-arm-msm@vger.kernel.org cc: linux-arm-kernel@lists.infradead.org Signed-off-by: David Brown <davidb@codeaurora.org>
f | devices-msm7x30.c | s | 6.4K | 191 | Stephen Boyd | sboyd@codeaurora.org | 1298925617 |  | msm: clock: Migrate to clkdev  Migrating to clkdev has several advantages:   * Less code in mach-msm/clock.c   * A more robust clk_get() implementation   * clk_add_alias() support   * clk_get_sys() support  In general, this will help board authors setup clock aliases and break the dependency on device pointers in the clock tables.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | clock.h | s | 2.1K | 63 | Stephen Boyd | sboyd@codeaurora.org | 1298925617 |  | msm: clock: Migrate to clkdev  Migrating to clkdev has several advantages:   * Less code in mach-msm/clock.c   * A more robust clk_get() implementation   * clk_add_alias() support   * clk_get_sys() support  In general, this will help board authors setup clock aliases and break the dependency on device pointers in the clock tables.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | scm-boot.c | s | 1.1K | 35 | Stepan Moskovchenko | stepanm@codeaurora.org | 1294444483 |  | msm: scm-boot: Support for setting cold/warm boot addresses  Add support for setting the cold boot address of core 1 and the warm boot addresses of cores 0 and 1 using a secure domain call.  Signed-off-by: Stepan Moskovchenko <stepanm@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | board-trout.c | s | 2.6K | 95 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | board-sapphire.c | s | 2.9K | 102 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | headsmp.S | g | 930B |  | Rob Herring | rob.herring@calxeda.com | 1326724562 |  | ARM: msm: Add missing ENDPROC to headsmp.S  Once the ENDPROC is in place, BSYM() in not longer necessary to get correct pointer to msm_secondary_startup().  Signed-off-by: Rob Herring <rob.herring@calxeda.com> Cc: David Brown <davidb@codeaurora.org> Cc: Daniel Walker <dwalker@fifo99.com>
f | irq-vic.c | s | 10K | 315 | Thomas Gleixner | tglx@linutronix.de | 1301402878 |  | arm: Fold irq_set_chip/irq_set_handler  Use irq_set_chip_and_handler() instead. Converted with coccinelle.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | irq.c | s | 4.7K | 129 | Thomas Gleixner | tglx@linutronix.de | 1301402878 |  | arm: Fold irq_set_chip/irq_set_handler  Use irq_set_chip_and_handler() instead. Converted with coccinelle.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | scm.h | s | 854B | 20 | David Brown | davidb@codeaurora.org | 1298925605 |  | msm: Use explicit GPLv2 licenses  Replace a BSD-style license in Code Aurora Forum authored files with an explicit GPLv2.  Signed-off-by: David Brown <davidb@codeaurora.org>
f | board-trout-gpio.c | s | 6.1K | 202 | Thomas Gleixner | tglx@linutronix.de | 1301402878 |  | arm: Fold irq_set_chip/irq_set_handler  Use irq_set_chip_and_handler() instead. Converted with coccinelle.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | clock-pcom.h | s | 4.7K | 132 | Stephen Boyd | sboyd@codeaurora.org | 1298925617 |  | msm: clock: Migrate to clkdev  Migrating to clkdev has several advantages:   * Less code in mach-msm/clock.c   * A more robust clk_get() implementation   * clk_add_alias() support   * clk_get_sys() support  In general, this will help board authors setup clock aliases and break the dependency on device pointers in the clock tables.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | timer.c | s | 6.9K | 216 | Linus Torvalds | torvalds@linux-foundation.org | 1333065228 |  | Merge branch 'for-linus' of git://git.linaro.org/people/rmk/linux-arm  Pull more ARM updates from Russell King.  This got a fair number of conflicts with the <asm/system.h> split, but also with some other sparse-irq and header file include cleanups.  They all looked pretty trivial, though.  * 'for-linus' of git://git.linaro.org/people/rmk/linux-arm: (59 commits)   ARM: fix Kconfig warning for HAVE_BPF_JIT   ARM: 7361/1: provide XIP_VIRT_ADDR for no-MMU builds   ARM: 7349/1: integrator: convert to sparse irqs   ARM: 7259/3: net: JIT compiler for packet filters   ARM: 7334/1: add jump label support   ARM: 7333/2: jump label: detect %c support for ARM   ARM: 7338/1: add support for early console output via semihosting   ARM: use set_current_blocked() and block_sigmask()   ARM: exec: remove redundant set_fs(USER_DS)   ARM: 7332/1: extract out code patch function from kprobes   ARM: 7331/1: extract out insn generation code from ftrace   ARM: 7330/1: ftrace: use canonical Thumb-2 wide instruction format   ARM: 7351/1: ftrace: remove useless memory checks   ARM: 7316/1: kexec: EOI active and mask all interrupts in kexec crash path   ARM: Versatile Express: add NO_IOPORT   ARM: get rid of asm/irq.h in asm/prom.h   ARM: 7319/1: Print debug info for SIGBUS in user faults   ARM: 7318/1: gic: refactor irq_start assignment   ARM: 7317/1: irq: avoid NULL check in for_each_irq_desc loop   ARM: 7315/1: perf: add support for the Cortex-A7 PMU   ...
f | sirc.c | s | 4.2K | 141 | Thomas Gleixner | tglx@linutronix.de | 1301402878 |  | arm: Fold irq_set_chip/irq_set_handler  Use irq_set_chip_and_handler() instead. Converted with coccinelle.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | board-mahimahi.c | s | 2.2K | 76 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | board-trout-mmc.c | s | 4.5K | 149 | Russell King | rmk+kernel@arm.linux.org.uk | 1312810061 |  | ARM: gpio: convert includes of mach/gpio.h and asm/gpio.h to linux/gpio.h  Convert arch/arm includes of mach/gpio.h and asm/gpio.h to linux/gpio.h before we start consolidating the individual platform implementations of the gpio header files.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | scm.c | s | 7.0K | 267 | Stephen Boyd | sboyd@codeaurora.org | 1336759717 |  | ARM: msm: fix compilation flags for MSM_SCM (part 2)  eca55f4 (ARM: msm: fix compilation flags for MSM_SCM, 2011-11-08) added the correct assembler directive for the first smc instance but missed the second instance in scm_get_version(). Add it so we can compile this file with newer binutils.  Cc: Marc Zyngier <marc.zyngier@arm.com> Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | devices.h | s | 1.8K | 43 | Stephen Boyd | sboyd@codeaurora.org | 1298925617 |  | msm: clock: Migrate to clkdev  Migrating to clkdev has several advantages:   * Less code in mach-msm/clock.c   * A more robust clk_get() implementation   * clk_add_alias() support   * clk_get_sys() support  In general, this will help board authors setup clock aliases and break the dependency on device pointers in the clock tables.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | proc_comm.h | s | 7.1K | 240 | Daniel Walker | c_dwalke@quicinc.com | 1273681173 |  | arm: msm: smd: fix SMD modem processor sync condition  When booting up we need to wait for the modem processor to partially boot. This is because the modem processor does resource allocation for us. If we don't wait the modem won't honor our requests and we end up crashing or in an unknown state. This change just formalizes the waiting process.  Signed-off-by: Daniel Walker <c_dwalke@quicinc.com>
f | smd_private.h | s | 9.8K | 354 | Daniel Walker | dwalker@codeaurora.org | 1273681144 |  | arm: msm: smd: msm7x30 a2m clean up  This moves the msm_a2m_int() function into the header, and does a small macro clean up to be more inline with Linux norms. No functional changes.  Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | Kconfig | g | 3.0K |  | Linus Torvalds | torvalds@linux-foundation.org | 1326147663 |  | 
f | board-msm7x27.c | s | 4.2K | 150 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | smd.c | s | 21K | 849 | David Brown | davidb@codeaurora.org | 1289939036 |  | msm: smd: Reduce driver log chatter  The MSM smd driver logs numerous messages during startup that are useful for debug purposes.  Change some of these to pr_debug() to match their purpose, and remove others that aren't really useful.  Cc: Brian Swetland <swetland@google.com> Cc: Arve Hjønnevåg <arve@android.com> Signed-off-by: David Brown <davidb@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | gpiomux-v2.h | s | 1.7K | 55 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | smd_debug.c | s | 7.6K | 259 | Shawn Guo | shawn.guo@linaro.org | 1336480577 |  | ARM: msm: use machine specific hook for late init  Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | acpuclock-arm11.c | s | 14K | 456 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | vreg.c | s | 4.5K | 186 | David Brown | davidb@codeaurora.org | 1325876877 |  | ARM: msm: vreg is a module and so needs module.h  The MSM7201 vreg appears to have gotten missed in the module.h cleanup.  Signed-off-by: David Brown <davidb@codeaurora.org>
f | acpuclock.h | s | 1.0K | 27 | Daniel Walker | dwalker@codeaurora.org | 1273680860 |  | arm: msm: add cpu frequency controls  This adds acpuclock-arm11.c from Google. This provides control over the cpu frequency for arm11 cpu's.  This has shared authorship between Google, and Qualcomm. Most of it was written by Mike Chan at Google.  Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | io.c | s | 5.0K | 171 | Rob Herring | rob.herring@calxeda.com | 1331090597 |  | ARM: msm: use runtime ioremap hook  Convert msm platforms to use run-time ioremap hook instead of the compile time hook.  According to David Brown, only the msm7201 needed the ioremap hook.  Signed-off-by: Rob Herring <rob.herring@calxeda.com> Tested-by: David Brown <davidb@codeaurora.org> Acked-by: David Brown <davidb@codeaurora.org> Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org>
f | clock-7x30.h | s | 3.4K | 144 | Stephen Boyd | sboyd@codeaurora.org | 1298925617 |  | msm: clock: Migrate to clkdev  Migrating to clkdev has several advantages:   * Less code in mach-msm/clock.c   * A more robust clk_get() implementation   * clk_add_alias() support   * clk_get_sys() support  In general, this will help board authors setup clock aliases and break the dependency on device pointers in the clock tables.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
f | board-trout.h | s | 6.8K | 128 | Pavel Machek | pavel@ucw.cz | 1276633183 |  | Add GPIO support for HTC Dream.  Signed-off-by: Pavel Machek <pavel@ucw.cz> [dwalker@codeaurora.org: renamed to trout, checkpatch cleanup] Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | idle.c | s | 1.5K | 41 | Nicolas Pitre | nicolas.pitre@linaro.org | 1327103715 |  | ARM: mach-msm: hook special idle handlers to arm_pm_idle  Signed-off-by: Nicolas Pitre <nicolas.pitre@linaro.org> Acked-by: David Brown <davidb@codeaurora.org>
f | platsmp.c | s | 4.3K | 146 | Will Deacon | will.deacon@arm.com | 1327314005 |  | ARM: 7293/1: logical_cpu_map: decouple CPU mapping from SMP  It turns out that the logical CPU mapping is useful even when !CONFIG_SMP for manipulation of devices like interrupt and power controllers when running a UP kernel on a CPU other than 0. This can happen when kexecing a UP image from an SMP kernel.  In the future, multi-cluster systems running AMP configurations will require something similar for mapping cluster IDs, so it makes sense to decouple this logic in preparation for this support.  Acked-by: Yang Bai <hamo.by@gmail.com> Acked-by: Marc Zyngier <marc.zyngier@arm.com> Reported-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | Makefile.boot | g | 86B |  | Sascha Hauer | s.hauer@pengutronix.de | 1318839160 |  | ARM: 7022/1: allow to detect conflicting zreladdrs  Boards used to specify zreladdr in their Makefile.boot with zreladdr-y := x, so conflicting zreladdrs were silently overwritten. This patch changes this to zreladdr-y += x, so that we end up with multiple words in zreladdr in such a case. We can detect this later and complain if necessary.  Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | gpiomux-8x60.c | s | 835B | 18 | Gregory Bean | gbean@codeaurora.org | 1286380875 |  | msm: add gpiomux api for gpio multiplex & configuration.  Add the 'gpiomux' api, which addresses the following shortcomings of existing tlmm api:  - gpio power-collapse, which is managed by a peripheral processor on   other targets, must be managed by the application processor on the 8x60. - The enable/disable flag of the legacy gpio_tlmm_config api   is not applicable on the 8x60, and causes confusion. - The gpio 'direction' bits are meaningless for all func_sel   configurations except for generic-gpio mode (func_sel 0), in which   case the gpio_direction_* functions should be used.  Having these   bits in the tlmm api leads to confusion and misuse of the gpiolib   api, and they have been removed in gpiomux. - The functional api of the legacy system ran contrary to the typical   use-case, which is a single massive configuration at boot.  Rather   than forcing hundreds of 'config' function calls, the new api   allows data to be configured with a single table.  gpiomux_get and gpiomux_put are meant to be called automatically when gpio_request and gpio_free are called, giving automatic gpiomux/tlmm control to those drivers/lines with simple power profiles - in the simplest cases, an entry in the gpiomux table and the correct usage of gpiolib is all that is required to get proper gpio power control.  Signed-off-by: Gregory Bean <gbean@codeaurora.org> Signed-off-by: Daniel Walker <dwalker@codeaurora.org>
f | devices-msm8960.c | s | 2.2K | 76 | Stepan Moskovchenko | stepanm@codeaurora.org | 1296246441 |  | msm: serial: Add MSM8960 serial support  Add the device definitions and platform data to support the console serial port on MSM8960 Simulator and RUMI3 targets.  Signed-off-by: Stepan Moskovchenko <stepanm@codeaurora.org> Signed-off-by: David Brown <davidb@codeaurora.org>
