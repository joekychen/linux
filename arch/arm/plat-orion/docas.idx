f | gpio.c | s | 12K | 410 | Arnaud Patard (Rtp) | arnaud.patard@rtp-net.org | 1337051534 |  | orion/kirkwood: create a generic function for gpio led blinking  dns323 and (at least) iconnect platforms are using hw led blinking, so, instead of having 2 identicals .gpio_blink_set gpio-led hooks, move dns323 code into gpio.c  Signed-off-by: Arnaud Patard <arnaud.patard@rtp-net.org> Tested-By: Adam Baker <linux@baker-net.org.uk> Signed-off-by: Jason Cooper <jason@lakedaemon.net>
f | common.c | s | 24K | 817 | Andrew Lunn | andrew@lunn.ch | 1340493561 |  | ARM: Orion: Fix Virtual/Physical mixup with watchdog  The orion watchdog is expecting to be passed the physcial address of the hardware, and will ioremap() it to give a virtual address it will use as the base address for the hardware. However, when creating the platform resource record, a virtual address was being used.  Add the necassary #define's so we can pass the physical address as expected.  Tested on Kirkwood and Orion5x.  Cc: stable <stable@vger.kernel.org> Signed-off-by: Andrew Lunn <andrew@lunn.ch> Signed-off-by: Olof Johansson <olof@lixom.net>
f | time.c | s | 5.2K | 191 | Marc Zyngier | Marc.Zyngier@arm.com | 1324249226 |  | ARM: 7205/2: sched_clock: allow sched_clock to be selected at runtime  sched_clock() is yet another blocker on the road to the single image. This patch implements an idea by Russell King:  http://www.spinics.net/lists/linux-omap/msg49561.html  Instead of asking the platform to implement both sched_clock() itself and the rollover callback, simply register a read() function, and let the ARM code care about sched_clock() itself, the conversion to ns and the rollover. sched_clock() uses this read() function as an indirection to the platform code. If the platform doesn't provide a read(), the code falls back to the jiffy counter (just like the default sched_clock).  This allow some simplifications and possibly some footprint gain when multiple platforms are compiled in. Among the drawbacks, the removal of the *_fixed_sched_clock optimization which could negatively impact some platforms (sa1100, tegra, versatile and omap).  Tested on 11MPCore, OMAP4 and Tegra.  Cc: Imre Kaloz <kaloz@openwrt.org> Cc: Eric Miao <eric.y.miao@gmail.com> Cc: Colin Cross <ccross@android.com> Cc: Erik Gilling <konkers@android.com> Cc: Olof Johansson <olof@lixom.net> Cc: Sascha Hauer <kernel@pengutronix.de> Cc: Alessandro Rubini <rubini@unipv.it> Cc: STEricsson <STEricsson_nomadik_linux@list.st.com> Cc: Lennert Buytenhek <kernel@wantstofly.org> Cc: Ben Dooks <ben-linux@fluff.org> Tested-by: Jamie Iles <jamie@jamieiles.com> Tested-by: Tony Lindgren <tony@atomide.com> Tested-by: Kyungmin Park <kyungmin.park@samsung.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Nicolas Pitre <nico@linaro.org> Acked-by: Krzysztof Halasa <khc@pm.waw.pl> Acked-by: Kukjin Kim <kgene.kim@samsung.com> Signed-off-by: Marc Zyngier <marc.zyngier@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | Makefile | g | 157B |  | Andrew Lunn | andrew@lunn.ch | 1323819980 |  | ARM: Orion: Consolidate the address map setup  Compile tested on Dove, orion5x, mv78xx0. Boot tested on Kirkwood.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Michael Walle <michael@walle.cc> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Nicolas Pitre <nico@fluxnic.net>
d | include |  | 1 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1338061349 |  | 
f | pcie.c | s | 7.1K | 241 | Andrew Lunn | andrew@lunn.ch | 1336520044 |  | ARM: Kirkwood: Replace clock gating  Add a varient of the basic clk-gate code. This variant calls a function before gating the clock off. This function is used to disable the SATA or PCIe PHY.  Now that all the drivers prepare and enable there clk as needed, there is no need for the common code to keep track of which clocks need gating on. Let the common clock framework turn off clocks which are not used.  Buy using the added clk varient, when the clk framework turns off SATA or PCIe clocks, we also disabled SATA and PCIe PHYs which were not needed.  The function kirkwood_pcie_id() can now be called outside of __init code, so remove this property for it, and functions it calls.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Jamie Lentin <jm@lentin.co.uk> Signed-off-by: Mike Turquette <mturquette@linaro.org>
f | addr-map.c | s | 3.9K | 147 | Andrew Lunn | andrew@lunn.ch | 1323820015 |  | ARM: Orion: Get address map from plat-orion instead of via platform_data  Use an getter function in plat-orion/addr-map.c to get the address map structure, rather than pass it to drivers in the platform_data structures. When the drivers are built for none orion platforms, a dummy function is provided instead which returns NULL.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Michael Walle <michael@walle.cc> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Nicolas Pitre <nico@fluxnic.net>
f | mpp.c | s | 1.9K | 66 | Andrew Lunn | andrew@lunn.ch | 1328832991 |  | ARM: orion: Fix Orion5x GPIO regression from MPP cleanup  Patchset "ARM: orion: Refactor the MPP code common in the orion platform" broke at least Orion5x based platforms. These platforms have pins configured as GPIO when the selector is not 0x0. However the common code assumes the selector is always 0x0 for a GPIO lines. It then ignores the GPIO bits in the MPP definitions, resulting in that Orion5x machines cannot correctly configure there GPIO lines.  The Fix removes the assumption that the selector is always 0x0. In order that none GPIO configurations are correctly blocked, Kirkwood and mv78xx0 MPP definitions are corrected to only set the GPIO bits for GPIO configurations.  This third version, which does not contain any whitespace changes, and is rebased on v3.3-rc2.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Olof Johansson <olof@lixom.net>
f | irq.c | s | 905B | 30 | Thomas Gleixner | tglx@linutronix.de | 1305570894 |  | arm: orion: Use generic irq chip  The core interrupt chip is a straight forward conversion. The gpio chip is implemented with two instances of the irq_chip_type which can be switched with the irq_set_type function. That allows us to use the generic callbacks and avoids the conditionals in them.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: Nicolas Pitre <nico@fluxnic.net>
