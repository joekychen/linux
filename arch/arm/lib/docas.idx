f | Makefile | g | 1.2K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1336193450 |  | ARM: Remove support for ARMv3 ARM610 and ARM710 CPUs  This patch removes support for ARMv3 CPUs, which haven't worked properly for quite some time (see the FIXME comment in arch/arm/mm/fault.c).  The only V3 parts left is the cache model for ARMv3, which is needed for some odd reason by ARM740T CPUs, and being able to build with -march=armv3, which is required for the RiscPC platform due to its bus structure.  Acked-by: Will Deacon <will.deacon@arm.com> Acked-by: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | testclearbit.S | g | 417B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | clear_user.S | g | 1.3K |  | Catalin Marinas | catalin.marinas@arm.com | 1273311926 |  | ARM: 6110/1: Fix Thumb-2 kernel builds when UACCESS_WITH_MEMCPY is enabled  The patch adds the ENDPROC declarations for the __copy_to_user_std and __clear_user_std functions. Without these, the compiler generates BXL to ARM when compiling the kernel in Thumb-2 mode.  Reported-by: Kyungmin Park <kmpark@infradead.org> Tested-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Acked-by: Nicolas Pitre <nico@fluxnic.net> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | ucmpdi2.S | g | 778B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | lib1funcs.S | g | 8.0K |  | Laura Abbott | lauraa@codeaurora.org | 1306533413 |  | ARM: 6945/1: Add unwinding support for division functions  The software division functions never had unwinding annotations added. Currently, when a division by zero occurs the backtrace shown will stop at Ldiv0 or some completely unrelated function. Add unwinding annotations in hopes of getting a more useful backtrace when a division by zero occurs.  Signed-off-by: Laura Abbott <lauraa@codeaurora.org> Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-acorn.S | g | 637B |  | Russell King | rmk@dyn-67.arm.linux.org.uk | 1142978750 |  | [ARM] Remove unnecessary asm/hardware.h includes  asm/hardware.h is not required for the majority of processor support files, ioremap support, mm initialisation, acorn IO support, nor the debug code (which picks up its machine specific includes via debug-macros.S)  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-readsl.S | g | 1.5K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | muldi3.S | g | 897B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | uaccess_with_memcpy.c | s | 5.3K | 197 | Arnd Bergmann | arnd@arndb.de | 1317563072 |  | ARM: include linux/highmem.h in uaccess functions  When highpte support is enabled, this is required to build the kernel.  Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | memzero.S | g | 2.8K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copy_template.S | g | 5.9K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | strchr.S | g | 554B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | getuser.S | g | 1.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1327489660 |  | ARM: 7301/1: Rename the T() macro to TUSER() to avoid namespace conflicts  This macro is used to generate unprivileged accesses (LDRT/STRT) to user space.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | csumpartialcopyuser.S | g | 1.9K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1280143096 |  | ARM: Fix csum_partial_copy_from_user()  Using the parent functions frame pointer to access our arguments is completely wrong, whether or not we're building with frame pointers or not.  What we should be using is the stack pointer to get at the word above the registers we stacked ourselves.  Reported-by: Bosko Radivojevic <bosko.radivojevic@gmail.com> Tested-by: Bosko Radivojevic <bosko.radivojevic@gmail.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copy_from_user.S | g | 2.0K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1271835921 |  | ARM: fix build error in arch/arm/kernel/process.c  /tmp/ccJ3ssZW.s: Assembler messages: /tmp/ccJ3ssZW.s:1952: Error: can't resolve `.text' {.text section} - `.LFB1077'  This is caused because:  	.section .data 	.section .text 	.section .text 	.previous  does not return us to the .text section, but the .data section; this makes use of .previous dangerous if the ordering of previous sections is not known.  Fix up the other users of .previous; .pushsection and .popsection are a safer pairing to use than .section and .previous.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | strnlen_user.S | g | 907B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1271835921 |  | ARM: fix build error in arch/arm/kernel/process.c  /tmp/ccJ3ssZW.s: Assembler messages: /tmp/ccJ3ssZW.s:1952: Error: can't resolve `.text' {.text section} - `.LFB1077'  This is caused because:  	.section .data 	.section .text 	.section .text 	.previous  does not return us to the .text section, but the .data section; this makes use of .previous dangerous if the ordering of previous sections is not known.  Fix up the other users of .previous; .pushsection and .popsection are a safer pairing to use than .section and .previous.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | memmove.S | g | 4.0K |  | Catalin Marinas | catalin.marinas@arm.com | 1269880413 |  | ARM: 6006/1: ARM: Use the correct NOP size in memmove for Thumb-2 kernel builds  When compiling the kernel to Thumb-2, using a 16-bit NOP in the memmove() implementation causes the preceding ADD PC instruction to branch incorrectly in the middle of a 32-bit LDR or STR instruction. The memmove() code is now similar to the memcpy() template.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | ashrdi3.S | g | 1.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | io-readsb.S | g | 2.4K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-readsw-armv4.S | g | 2.3K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | bitops.h | s | 1.9K | 92 | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | clearbit.S | g | 394B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | memcpy.S | g | 1.3K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | floppydma.S | g | 736B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | setbit.S | g | 376B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copy_to_user.S | g | 2.0K |  | Catalin Marinas | catalin.marinas@arm.com | 1273311926 |  | ARM: 6110/1: Fix Thumb-2 kernel builds when UACCESS_WITH_MEMCPY is enabled  The patch adds the ENDPROC declarations for the __copy_to_user_std and __clear_user_std functions. Without these, the compiler generates BXL to ARM when compiling the kernel in Thumb-2 mode.  Reported-by: Kyungmin Park <kmpark@infradead.org> Tested-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Acked-by: Nicolas Pitre <nico@fluxnic.net> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | div64.S | g | 4.0K |  | Laura Abbott | lauraa@codeaurora.org | 1318839222 |  | ARM: 7125/1: Add unwinding annotations for 64bit division functions  The 64bit division functions never had unwinding annotations added. This prevents a backtrace from being printed within the function and if a division by 0 occurs. Add the annotations.  Signed-off-by: Laura Abbott <lauraa@codeaurora.org> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Acked-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | csumpartial.S | g | 3.1K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | testchangebit.S | g | 415B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | findbit.S | g | 4.8K |  | James Jones | jajones@nvidia.com | 1290629866 |  | ARM: 6482/2: Fix find_next_zero_bit and related assembly  The find_next_bit, find_first_bit, find_next_zero_bit and find_first_zero_bit functions were not properly clamping to the maxbit argument at the bit level. They were instead only checking maxbit at the byte level. To fix this, add a compare and a conditional move instruction to the end of the common bit-within-the- byte code used by all the functions and be sure not to clobber the maxbit argument before it is used.  Cc: <stable@kernel.org> Reviewed-by: Nicolas Pitre <nicolas.pitre@linaro.org> Tested-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: James Jones <jajones@nvidia.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | lshrdi3.S | g | 1.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | csumipv6.S | g | 696B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | strncpy_from_user.S | g | 981B |  | Russell King | rmk+kernel@arm.linux.org.uk | 1271835921 |  | ARM: fix build error in arch/arm/kernel/process.c  /tmp/ccJ3ssZW.s: Assembler messages: /tmp/ccJ3ssZW.s:1952: Error: can't resolve `.text' {.text section} - `.LFB1077'  This is caused because:  	.section .data 	.section .text 	.section .text 	.previous  does not return us to the .text section, but the .data section; this makes use of .previous dangerous if the ordering of previous sections is not known.  Fix up the other users of .previous; .pushsection and .popsection are a safer pairing to use than .section and .previous.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | memset.S | g | 2.4K |  | Russell King | rmk@dyn-67.arm.linux.org.uk | 1227789479 |  | [ARM] remove memzero()  As suggested by Andrew Morton, remove memzero() - it's not supported on other architectures so use of it is a potential build breaking bug. Since the compiler optimizes memset(x,0,n) to __memzero() perfectly well, we don't miss out on the underlying benefits of memzero().  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | ecard.S | g | 1023B |  | Rob Herring | rob.herring@calxeda.com | 1310487567 |  | ARM: remove unnecessary mach/hardware.h includes  Remove some includes of mach/hardware.h which are not needed. hardware.h will be removed completely for tegra and cns3xxx in follow on patch.  Signed-off-by: Rob Herring <rob.herring@calxeda.com> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Reviewed-by: Arnd Bergmann <arnd@arndb.de>
f | ashldi3.S | g | 1.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | changebit.S | g | 396B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | copy_page.S | g | 1.3K |  | Kirill A. Shutemov | kirill@shutemov.name | 1253048822 |  | ARM: 5701/1: ARM: copy_page.S: take into account the size of the cache line  Optimized version of copy_page() was written with assumption that cache line size is 32 bytes. On Cortex-A8 cache line size is 64 bytes.  This patch tries to generalize copy_page() to work with any cache line size if cache line size is multiple of 16 and page size is multiple of two cache line size.  After this optimization we've got ~25% speedup on OMAP3(tested in userspace).  There is test for kernelspace which trigger copy-on-write after fork():   #include <stdlib.h>  #include <string.h>  #include <unistd.h>   #define BUF_SIZE (10000*4096)  #define NFORK 200   int main(int argc, char **argv)  {          char *buf = malloc(BUF_SIZE);          int i;           memset(buf, 0, BUF_SIZE);           for(i = 0; i < NFORK; i++) {                  if (fork()) {                          wait(NULL);                  } else {                          int j;                           for(j = 0; j < BUF_SIZE; j+= 4096)                                  buf[j] = (j & 0xFF) + 1;                          break;                  }          }           free(buf);          return 0;  }  Before optimization this test takes ~66 seconds, after optimization takes ~56 seconds.  Signed-off-by: Siarhei Siamashka <siarhei.siamashka@nokia.com> Signed-off-by: Kirill A. Shutemov <kirill@shutemov.name> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-writesb.S | g | 1.6K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-shark.c | s | 351B | 13 | Alexander Schulz | alex@shark-linux.de | 1121530638 |  | [PATCH] ARM: 2815/1: Shark: new defconfig, fixes with __io and serial ports  Patch from Alexander Schulz  This patch brings a new default config file for the shark and fixes a compilation issue with io addressing and a runtime problem with the serial ports, where I corrected a wrong regshift value. These are all shark specific files so I hope it is ok to put them in one patch.  Signed-off-by: Alexander Schulz <alex@shark-linux.de> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | testsetbit.S | g | 413B |  | Will Deacon | will.deacon@arm.com | 1322344733 |  | ARM: 7171/1: unwind: add unwind directives to bitops assembly macros  The bitops functions (e.g. _test_and_set_bit) on ARM do not have unwind annotations and therefore the kernel cannot backtrace out of them on a fatal error (for example, NULL pointer dereference).  This patch annotates the bitops assembly macros with UNWIND annotations so that we can produce a meaningful backtrace on error. Callers of the macros are modified to pass their function name as a macro parameter, enforcing that the macros are used as standalone function implementations.  Acked-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | backtrace.S | g | 3.7K |  | Laura Abbott | lauraa@codeaurora.org | 1318839161 |  | ARM: 7068/1: process: change from __backtrace to dump_stack in show_regs  Currently, show_regs calls __backtrace which does nothing if CONFIG_FRAME_POINTER is not set. Switch to dump_stack which handles both CONFIG_FRAME_POINTER and CONFIG_ARM_UNWIND correctly.  __backtrace is now superseded by dump_stack in general and show_regs was the last caller so remove __backtrace as well.  Signed-off-by: Laura Abbott <lauraa@codeaurora.org> Acked-by: Nicolas Pitre <nicolas.pitre@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-writesw-armv4.S | g | 1.7K |  | Catalin Marinas | catalin.marinas@arm.com | 1248435177 |  | Thumb-2: Implement the unified arch/arm/lib functions  This patch adds the ARM/Thumb-2 unified support for the arch/arm/lib/* files.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
f | strrchr.S | g | 533B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | csumpartialcopy.S | g | 1.1K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267195 |  | [ARM] 5231/1: Do not save the frame pointer in the csum_partial_copy_* functions  Since the other assembly functions do not seem to save the frame pointer onto the stack, this patch changes the csum_partial_copy_* functions to behave in the same way.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | memchr.S | g | 523B |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | io-writesl.S | g | 1.2K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | call_with_stack.S | g | 1.2K |  | Will Deacon | will.deacon@arm.com | 1323706055 |  | ARM: lib: add call_with_stack function for safely changing stack  When disabling the MMU, it is necessary to take out a 1:1 identity map of the reset code so that it can safely be executed with and without the MMU active. To avoid the situation where the physical address of the reset code aliases with the virtual address of the active stack (which cannot be included in the 1:1 mapping), it is desirable to change to a new stack at a location which is less likely to alias.  This code adds a new lib function, call_with_stack:  	void call_with_stack(void (*fn)(void *), void *arg, void *sp);  which changes the stack to point at the sp parameter, before invoking fn(arg) with the new stack selected.  Reviewed-by: Nicolas Pitre <nicolas.pitre@linaro.org> Reviewed-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Dave Martin <dave.martin@linaro.org> Signed-off-by: Will Deacon <will.deacon@arm.com>
f | putuser.S | g | 2.0K |  | Catalin Marinas | catalin.marinas@arm.com | 1327489660 |  | ARM: 7301/1: Rename the T() macro to TUSER() to avoid namespace conflicts  This macro is used to generate unprivileged accesses (LDRT/STRT) to user space.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Acked-by: Nicolas Pitre <nico@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | delay.S | g | 1.3K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1294703759 |  | ARM: udelay: prevent math rounding resulting in short udelays  We perform the microseconds to loops calculation using a number of multiplies and shift rights.  Each shift right rounds down the resulting value, which can result in delays shorter than requested. Ensure that we always round up.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | csumpartialcopygeneric.S | g | 6.7K |  | Catalin Marinas | catalin.marinas@arm.com | 1220267194 |  | [ARM] 5227/1: Add the ENDPROC declarations to the .S files  This declaration specifies the "function" type and size for various assembly functions, mainly needed for generating the correct branch instructions in Thumb-2.  Signed-off-by: Catalin Marinas <catalin.marinas@arm.com> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
