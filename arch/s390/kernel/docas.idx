f | early.c | s | 11K | 413 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1337785612 |  | s390/kexec: Move early_pgm_check_handler() to text section  The early_pgm_check_handler() function is also used after the init phase in s390_reset_system(). Therefore it must not be in the init section.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dis.c | s | 50K | 1561 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | sclp.S | g | 7.9K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | audit.h | s | 394B | 12 | Heiko Carstens | heiko.carstens@de.ibm.com | 1192198386 |  | [S390] Get rid of a bunch of sparse warnings again.  Also removes a bunch of ^L in drivers/s390/cio/cmf.c  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | Makefile | g | 1.9K |  | Thomas Gleixner | tglx@linutronix.de | 1336215625 |  | s390: Use generic init_task  Same code. Use the generic version. The special Makefile treatment is pointless anyway as init_task.o contains only data which is handled by the linker script. So no point on being treated like head text.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com> Link: http://lkml.kernel.org/r/20120503085035.271439530@linutronix.de
f | perf_cpum_cf.c | s | 17K | 580 | Hendrik Brueckner | brueckner@linux.vnet.ibm.com | 1337785612 |  | s390/irq: split irq stats for cpu-measurement alert facilities  CPU-measurement alerts are generated for different CPU-measurement facilities, for example, the sampling and counter facilities. Split the irq stats according to available facilities.  Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | time.c | s | 45K | 1576 | Heiko Carstens | heiko.carstens@de.ibm.com | 1331481569 |  | [S390] irq: external interrupt code passing  The external interrupt handlers have a parameter called ext_int_code. Besides the name this paramter does not only contain the ext_int_code but in addition also the "cpu address" (POP) which caused the external interrupt. To make the code a bit more obvious pass a struct instead so the called function can easily distinguish between external interrupt code and cpu address. The cpu address field however is named "subcode" since some external interrupt sources do not pass a cpu address but a different parameter (or none at all).  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | head64.S | g | 3.0K |  | Martin Schwidefsky | schwidefsky@de.ibm.com | 1319984204 |  | [S390] smp: external call vs. emergency signal  Use a sigp sense running to decide which signal processor order to use for an ipi. If the target cpu is running use external call, if the target cpu is not running use emergency signal.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | head.S | g | 11K |  | Heiko Carstens | heiko.carstens@de.ibm.com | 1337172160 |  | s390/ipl: remove builtin tape ipl code  Remove the builtin tape ipl code. If somebody really wants to create a tape which can be ipl'ed from, then this can be achieved by using zipl. zipl can write an ipl record to a tape device and aftwards the kernel image must be written to tape. The steps are described in the "Linux on System z - Device Drivers, Features, and Commands" book (SC33-8411).  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | topology.c | s | 9.9K | 408 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1331481568 |  | [S390] rework smp code  Define struct pcpu and merge some of the NR_CPUS arrays into it, including __cpu_logical_map, current_set and smp_cpu_state. Split smp related functions to those operating on physical cpus and the functions operating on a logical cpu number. Make the functions for physical cpus use a pointer to a struct pcpu. This hides the knowledge about cpu addresses in smp.c, entry[64].S and swsusp_asm64.S, thus remove the sigp.h header.  The PSW restart mechanism is used to start secondary cpus, calling a function on an online cpu, calling a function on the ipl cpu, and for the nmi signal. Replace the different assembler functions with a single function restart_int_handler. The new entry point calls a function whose pointer is stored in the lowcore of the target cpu and it can wait for the source cpu to stop. This covers all existing use cases.  Overall the code is now simpler and there are ~380 lines less code.  Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | mcount64.S | g | 1.2K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | relocate_kernel.S | g | 2.9K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | asm-offsets.c | s | 8.8K | 159 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | debug.c | s | 35K | 1365 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1331481569 |  | [S390] kernel: Add z/VM LGR detection  Currently the following mechanisms are available to move active Linux on System z instances between machines: * z/VM 6.2 SSI (Single System Image) * Suspend/resume For moving Linux instances in this patch the term LGR (Linux Guest Relocation) is used. Because such an operation is critical, it should be detectable from Linux. With this patch for both, a live system and a kernel dump, the information about LGRs is accessible. To identify a guest, stsi and stfle data is used. A new function lgr_info_log() compares the current data (lgr_info_cur) with the last recorded one (lgr_info_last). In case the two data sets differ, lgr_info_cur is logged to the "lgr" s390dbf.  The following trigger points call lgr_info_log(): * panic * die * kdump * LGR timer * PSW restart * QDIO recovery * resume  This patch also changes the s390dbf hex_ascii view. Now only printable ASCII characters are shown.  Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | nmi.c | s | 9.7K | 351 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1331481568 |  | [S390] rework idle code  Whenever the cpu loads an enabled wait PSW it will appear as idle to the underlying host system. The code in default_idle calls vtime_stop_cpu which does the necessary voodoo to get the cpu time accounting right. The udelay code just loads an enabled wait PSW. To correct this rework the vtime_stop_cpu/vtime_start_cpu logic and move the difficult parts to entry[64].S, vtime_stop_cpu can now be called from anywhere and vtime_start_cpu is gone. The correction of the cpu time during wakeup from an enabled wait PSW is done with a critical section in entry[64].S. As vtime_start_cpu is gone, s390_idle_check can be removed as well.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | mem_detect.c | s | 3.7K | 130 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1324981629 |  | [S390] Rework create_mem_hole() function  This patch makes the create_mem_hole() function more readable and fixes some minor bugs (e.g. off-by-one problems).  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ipl.c | s | 50K | 1765 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1338361489 |  | s390/kernel: Introduce memcpy_absolute() function  This patch introduces the new function memcpy_absolute() that allows to copy memory using absolute addressing. This means that the prefix swap does not apply when this function is used.  With this patch also all s390 kernel code that accesses absolute zero now uses the new memcpy_absolute() function. The old and less generic copy_to_absolute_zero() function is removed.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | lgr.c | s | 4.5K | 179 | Heiko Carstens | h.carstens@de.ibm.com | 1333093272 |  | [S390] Fix build errors (fallout from system.h disintegration)  Signed-off-by: Heiko Carstens <h.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | suspend.c | s | 5.1K | 163 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | compat_audit.c | s | 673B | 38 | Heiko Carstens | heiko.carstens@de.ibm.com | 1192198386 |  | [S390] Get rid of a bunch of sparse warnings again.  Also removes a bunch of ^L in drivers/s390/cio/cmf.c  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | swsusp_asm64.S | g | 7.1K |  | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1331481569 |  | [S390] kernel: Add z/VM LGR detection  Currently the following mechanisms are available to move active Linux on System z instances between machines: * z/VM 6.2 SSI (Single System Image) * Suspend/resume For moving Linux instances in this patch the term LGR (Linux Guest Relocation) is used. Because such an operation is critical, it should be detectable from Linux. With this patch for both, a live system and a kernel dump, the information about LGRs is accessible. To identify a guest, stsi and stfle data is used. A new function lgr_info_log() compares the current data (lgr_info_cur) with the last recorded one (lgr_info_last). In case the two data sets differ, lgr_info_cur is logged to the "lgr" s390dbf.  The following trigger points call lgr_info_log(): * panic * die * kdump * LGR timer * PSW restart * QDIO recovery * resume  This patch also changes the s390dbf hex_ascii view. Now only printable ASCII characters are shown.  Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | vmlinux.lds.S | g | 1.8K |  | Christian Borntraeger | borntraeger@de.ibm.com | 1326906221 |  | [S390] cleanup entry point definition  The vmlinux file for s390 contains a currently unused entry point, which is specified in two different locations: the linker script and the makefile. As it happens both definitions are different and the linker file is broken (_start does not exist) and the makefile specifies an entry point which makes no sense (the SALIPL loader entry point).  So lets get rid of one definition (the makefile) and use the entry point of all other ipl methods (0x10000 -> startup) to be consistent.  Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | reipl64.S | g | 4.8K |  | Martin Schwidefsky | schwidefsky@de.ibm.com | 1324981632 |  | [S390] entry[64].S improvements  Another round of cleanup for entry[64].S, in particular the program check handler looks more reasonable now. The code size for the 31 bit kernel has been reduced by 616 byte and by 528 byte for the 64 bit version. Even better the code is a bit faster as well.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | compat_exec_domain.c | s | 741B | 25 | Heiko Carstens | heiko.carstens@de.ibm.com | 1170706607 |  | [S390] Get rid of a lot of sparse warnings.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | compat_signal.c | s | 16K | 512 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | entry64.S | g | 27K |  | Martin Schwidefsky | schwidefsky@de.ibm.com | 1337172166 |  | s390: fix race on TIF_MCCK_PENDING  There is a small race window in the __switch_to code in regard to the transfer of the TIF_MCCK_PENDING bit from the previous to the next task. The bit is transferred before the task struct pointer and the thread-info pointer for the next task has been stored to lowcore. If a machine check sets the TIF_MCCK_PENDING bit between the transfer code and the store of current/thread_info the bit is still set for the previous task. And if the previous task has terminated it can get lost. The effect is that a pending CRW is not retrieved until the next machine checks sets TIF_MCCK_PENDING. To fix this reorder __switch_to to first store the task struct and thread-info pointer and then do the transfer of the bit.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | traps.c | s | 18K | 603 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | ebcdic.c | s | 17K | 389 | Heiko Carstens | heiko.carstens@de.ibm.com | 1170706607 |  | [S390] Get rid of a lot of sparse warnings.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | vdso.c | s | 8.2K | 287 | Linus Torvalds | torvalds@linux-foundation.org | 1332975501 |  | 
f | compat_linux.h | s | 7.0K | 202 | David Howells | dhowells@redhat.com | 1281743593 |  | Mark arguments to certain syscalls as being const  Mark arguments to certain system calls as being const where they should be but aren't.  The list includes:   (*) The filename arguments of various stat syscalls, execve(), various utimes      syscalls and some mount syscalls.   (*) The filename arguments of some syscall helpers relating to the above.   (*) The buffer argument of various write syscalls.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ptrace.c | s | 33K | 1105 | Will Drewry | wad@chromium.org | 1334715890 |  | seccomp: ignore secure_computing return values  This change is inspired by   https://lkml.org/lkml/2012/4/16/14 which fixes the build warnings for arches that don't support CONFIG_HAVE_ARCH_SECCOMP_FILTER.  In particular, there is no requirement for the return value of secure_computing() to be checked unless the architecture supports seccomp filter.  Instead of silencing the warnings with (void) a new static inline is added to encode the expected behavior in a compiler and human friendly way.  v2: - cleans things up with a static inline     - removes sfr's signed-off-by since it is a different approach v1: - matches sfr's original change  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Kees Cook <keescook@chromium.org> Signed-off-by: James Morris <james.l.morris@oracle.com>
f | diag.c | s | 1.5K | 72 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1305040423 |  | [S390] replace diag10() with diag10_range() function  Currently the diag10() function can only release one page. For exploiters that have to call diag10 on a contiguous memory region this is suboptimal. This patch replaces the diag10() function with diag10_range() that is able to release multiple pages. In addition to that the new function now allows to release memory with addresses higher than 2047 MiB. This was due to a restriction of the diagnose implementation under z/VM prior to release 5.2.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | perf_event.c | s | 2.9K | 106 | Heiko Carstens | h.carstens@de.ibm.com | 1333093272 |  | [S390] Fix build errors (fallout from system.h disintegration)  Signed-off-by: Heiko Carstens <h.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | syscalls.S | g | 20K |  | Heiko Carstens | heiko.carstens@de.ibm.com | 1321265948 |  | [S390] wire up process_vm syscalls  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
d | vdso64 |  | 8 items |  | Heiko Carstens | heiko.carstens@de.ibm.com | 1337172161 |  | s390: add various .gitignore files.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | audit.c | s | 1.6K | 69 | Heiko Carstens | heiko.carstens@de.ibm.com | 1192198386 |  | [S390] Get rid of a bunch of sparse warnings again.  Also removes a bunch of ^L in drivers/s390/cio/cmf.c  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | compat_wrapper.S | g | 42K |  | Linus Torvalds | torvalds@linux-foundation.org | 1329873860 |  | sys_poll: fix incorrect type for 'timeout' parameter  The 'poll()' system call timeout parameter is supposed to be 'int', not 'long'.  Now, the reason this matters is that right now 32-bit compat mode is broken on at least x86-64, because the 32-bit code just calls 'sys_poll()' directly on x86-64, and the 32-bit argument will have been zero-extended, turning a signed 'int' into a large unsigned 'long' value.  We could just introduce a 'compat_sys_poll()' function for this, and that may eventually be what we have to do, but since the actual standard poll() semantics is *supposed* to be 'int', and since at least on x86-64 glibc sign-extends the argument before invocing the system call (so nobody can actually use a 64-bit timeout value in user space _anyway_, even in 64-bit binaries), the simpler solution would seem to be to just fix the definition of the system call to match what it should have been from the very start.  If it turns out that somebody somehow circumvents the user-level libc 64-bit sign extension and actually uses a large unsigned 64-bit timeout despite that not being how poll() is supposed to work, we will need to do the compat_sys_poll() approach.  Reported-by: Thomas Meyer <thomas@m3y3r.de> Acked-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mcount.S | g | 1.3K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | crash_dump.c | s | 10K | 391 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1331481569 |  | [S390] kernel: Add OS info memory interface  In order to allow kdump based stand-alone dump, some information has to be passed from the old kernel to the new dump kernel. This is done via a the struct "os_info" that contains the following fields:  * crashkernel base and size  * reipl block  * vmcoreinfo  * init function A pointer to os_info is stored at a well known storage location and the whole structure as well as all fields are secured with checksums.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | bitmap.c | s | 1.7K | 49 | Heiko Carstens | heiko.carstens@de.ibm.com | 1238077451 |  | [S390] move EXPORT_SYMBOLs to definitions  Move all EXPORT_SYMBOLs to their corresponding definitions.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | machine_kexec.c | s | 5.2K | 207 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1337785611 |  | s390/kdump: Use real mode for PSW restart and kexec  Currently the PSW restart handler and kexec are executed in real mode with DAT=off. For kexec/kdump the function setup_regs() is called that uses the per-cpu variable "crash_notes". Because there are situations when the per-cpu implementation uses vmalloc memory, calling setup_regs() in real mode can cause a program check interrupt.  To fix that problem this patch changes the following:  * Ensure that diag308_reset() does not change PSW bits to real mode * Enable DAT in __do_restart() after we switched to an online CPU * Enable DAT in __machine_kexec() after we switched to the IPL CPU * Call setup_regs() before we switch to real mode and call purgatory  Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | vtime.c | s | 12K | 427 | Heiko Carstens | heiko.carstens@de.ibm.com | 1331481569 |  | [S390] irq: external interrupt code passing  The external interrupt handlers have a parameter called ext_int_code. Besides the name this paramter does not only contain the ext_int_code but in addition also the "cpu address" (POP) which caused the external interrupt. To make the code a bit more obvious pass a struct instead so the called function can easily distinguish between external interrupt code and cpu address. The cpu address field however is named "subcode" since some external interrupt sources do not pass a cpu address but a different parameter (or none at all).  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | kprobes.c | s | 18K | 589 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1319984206 |  | [S390] sparse: fix sparse static warnings  Make functions and data static to avoid sparse warnings.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | relocate_kernel64.S | g | 3.0K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | irq.c | s | 7.1K | 249 | Hendrik Brueckner | brueckner@linux.vnet.ibm.com | 1337785612 |  | s390/irq: split irq stats for cpu-measurement alert facilities  CPU-measurement alerts are generated for different CPU-measurement facilities, for example, the sampling and counter facilities. Split the irq stats according to available facilities.  Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | head31.S | g | 3.0K |  | Martin Schwidefsky | schwidefsky@de.ibm.com | 1319984204 |  | [S390] smp: external call vs. emergency signal  Use a sigp sense running to decide which signal processor order to use for an ipi. If the target cpu is running use external call, if the target cpu is not running use emergency signal.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | jump_label.c | s | 1.3K | 57 | Jeremy Fitzhardinge | jeremy.fitzhardinge@citrix.com | 1319568877 |  | s390/jump-label: add arch_jump_label_transform_static()  This allows jump-label entries to be cheaply updated on code which is not yet live.  Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com> Acked-by: Jason Baron <jbaron@redhat.com> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Jan Glauber <jang@linux.vnet.ibm.com>
f | stacktrace.c | s | 2.5K | 91 | Heiko Carstens | heiko.carstens@de.ibm.com | 1216308129 |  | [S390] Fix stacktrace compile bug.  Add missing module.h include to fix this:    CC      arch/s390/kernel/stacktrace.o arch/s390/kernel/stacktrace.c:84: warning: data definition has no type or storage class arch/s390/kernel/stacktrace.c:84: warning: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/s390/kernel/stacktrace.c:84: warning: parameter names (without types) in function declaration arch/s390/kernel/stacktrace.c:97: warning: data definition has no type or storage class arch/s390/kernel/stacktrace.c:97: warning: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/s390/kernel/stacktrace.c:97: warning: parameter names (without types) in function declaration  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | reipl.S | g | 2.5K |  | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1319984202 |  | [S390] kdump backend code  This patch provides the architecture specific part of the s390 kdump support.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
d | vdso32 |  | 8 items |  | Heiko Carstens | heiko.carstens@de.ibm.com | 1337172161 |  | s390: add various .gitignore files.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | module.c | s | 12K | 377 | Jonas Bonn | jonas@southpole.se | 1311510964 |  | modules: make arch's use default loader hooks  This patch removes all the module loader hook implementations in the architecture specific code where the functionality is the same as that now provided by the recently added default hooks.  Signed-off-by: Jonas Bonn <jonas@southpole.se> Acked-by: Mike Frysinger <vapier@gentoo.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org> Tested-by: Michal Simek <monstr@monstr.eu> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | s390_ksyms.c | s | 224B | 9 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1311497301 |  | [S390] move sie code to entry.S  The entry to / exit from sie has subtle dependencies to the first level interrupt handler. Move the sie assembler code to entry64.S and replace the SIE_HOOK callback with a test and the new _TIF_SIE bit. In addition this patch fixes several problems in regard to the check for the_TIF_EXIT_SIE bits. The old code checked the TIF bits before executing the interrupt handler and it only modified the instruction address if it pointed directly to the sie instruction. In both cases it could miss a TIF bit that normally would cause an exit from the guest and would reenter the guest context.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | setup.c | s | 28K | 973 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1338361489 |  | s390/kernel: Introduce memcpy_absolute() function  This patch introduces the new function memcpy_absolute() that allows to copy memory using absolute addressing. This means that the prefix swap does not apply when this function is used.  With this patch also all s390 kernel code that accesses absolute zero now uses the new memcpy_absolute() function. The old and less generic copy_to_absolute_zero() function is removed.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | base.S | g | 4.1K |  | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1337785611 |  | s390/kdump: Use real mode for PSW restart and kexec  Currently the PSW restart handler and kexec are executed in real mode with DAT=off. For kexec/kdump the function setup_regs() is called that uses the per-cpu variable "crash_notes". Because there are situations when the per-cpu implementation uses vmalloc memory, calling setup_regs() in real mode can cause a program check interrupt.  To fix that problem this patch changes the following:  * Ensure that diag308_reset() does not change PSW bits to real mode * Enable DAT in __do_restart() after we switched to an online CPU * Enable DAT in __machine_kexec() after we switched to the IPL CPU * Call setup_regs() before we switch to real mode and call purgatory  Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | sysinfo.c | s | 12K | 394 | Heiko Carstens | heiko.carstens@de.ibm.com | 1338361650 |  | s390/cpu: remove cpu "capabilities" sysfs attribute  It has been a big mistage to add the capabilities attribute to the cpus in sysfs: First the attribute only contains the cpu capability of primary cpus, which however is not necessarily (or better: unlikely) the type of cpu the kernel runs on, which is typically an IFL. In addition all information that is necessary is available in /proc/sysinfo already. So this attribute partially duplicated informations. So programs should look into the sysinfo file to retrieve all informations they are interested in.  Since with this kernel release also the powersavings cpu attributes are removed this seems to be a good opportunity to remove another broken interface.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | compat_ptrace.h | s | 2.1K | 57 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1294228051 |  | [S390] ptrace cleanup  Overhaul program event recording and the code dealing with the ptrace user space interface.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | smp.c | s | 26K | 964 | Heiko Carstens | heiko.carstens@de.ibm.com | 1338361650 |  | s390/cpu: remove cpu "capabilities" sysfs attribute  It has been a big mistage to add the capabilities attribute to the cpus in sysfs: First the attribute only contains the cpu capability of primary cpus, which however is not necessarily (or better: unlikely) the type of cpu the kernel runs on, which is typically an IFL. In addition all information that is necessary is available in /proc/sysinfo already. So this attribute partially duplicated informations. So programs should look into the sysinfo file to retrieve all informations they are interested in.  Since with this kernel release also the powersavings cpu attributes are removed this seems to be a good opportunity to remove another broken interface.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | entry.h | s | 2.6K | 64 | Al Viro | viro@zeniv.linux.org.uk | 1338569929 |  | pull clearing RESTORE_SIGMASK into block_sigmask()  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | head_kdump.S | g | 2.6K |  | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1337785610 |  | s390/kernel: Remove OS info init function call and diag 308 for kdump  Because of a design change for stand-alone kdump the function that was done by the OS info init function is moved to the boot loader code. This has two implications that are implemented by this patch: a) The OS info init function is no longer called by the kernel b) The diag 308 subcode 1 reset is no longer done by the kdump boot code.    This is necessary because otherwise the operation that is done now    by the boot loader would be reversed. For the normal kexec based    kdump mechansim the reset is already done by the kdump trigger code    (e.g. panic or PSW restart).  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | sys_s390.c | s | 4.1K | 135 | Heiko Carstens | heiko.carstens@de.ibm.com | 1324981633 |  | [S390] ipc: call generic sys_ipc demultiplexer  Call generic IPC demultiplexer instead of having a nearly identical s390 variant. Also make sure that native and compat handling now have the same behaviour.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | compat_linux.c | s | 16K | 593 | Eric W. Biederman | ebiederm@xmission.com | 1337116115 |  | userns: Convert stat to return values mapped from kuids and kgids  - Store uids and gids with kuid_t and kgid_t in struct kstat - Convert uid and gids to userspace usable values with   from_kuid and from_kgid  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | process.c | s | 9.0K | 318 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | entry.S | s | 26K | 906 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1337172166 |  | s390: fix race on TIF_MCCK_PENDING  There is a small race window in the __switch_to code in regard to the transfer of the TIF_MCCK_PENDING bit from the previous to the next task. The bit is transferred before the task struct pointer and the thread-info pointer for the next task has been stored to lowcore. If a machine check sets the TIF_MCCK_PENDING bit between the transfer code and the store of current/thread_info the bit is still set for the previous task. And if the previous task has terminated it can get lost. The effect is that a pending CRW is not retrieved until the next machine checks sets TIF_MCCK_PENDING. To fix this reorder __switch_to to first store the task struct and thread-info pointer and then do the transfer of the bit.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | cpcmd.c | s | 3.0K | 113 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for S390  Disintegrate asm/system.h for S390.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-s390@vger.kernel.org
f | signal.c | s | 13K | 409 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | processor.c | s | 2.1K | 84 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1319984175 |  | [S390] avoid warning in show_cpuinfo  The .start function and indirectly the .next function of the show_cpuinfo sequential operation uses NR_CPUS as limit instead of nr_cpu_ids. This can cause warnings like this:  WARNING: at /usr/src/linux/include/linux/cpumask.h:107 Process lscpu (pid: 575, task: 000000007deb4338, ksp: 000000007794f588) Krnl PSW : 0704000180000000 0000000000106db4 (show_cpuinfo+0x108/0x234)            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:0 CC:0 PM:0 EA:3 Krnl GPRS: 0000000000000003 0000000000791988 000000000071b478 0000000000000004            0000000000000001 0000000000000000 000000007d139500 0000000000000400            0000000000000000 000000000070e24c 000000007d48d600 0000000000000005            000000007d48d600 00000000004dfa10 0000000000106cf8 000000007794fcc0 Krnl Code: 0000000000106da8: 95001000           cli     0(%r1),0            0000000000106dac: a774ffac           brc     7,106d04            0000000000106db0: a7f40001           brc     15,106db2           >0000000000106db4: 92011000           mvi     0(%r1),1            0000000000106db8: a7f4ffa6           brc     15,106d04            0000000000106dbc: c0e5000065b4       brasl   %r14,113924            0000000000106dc2: c09000303a45       larl    %r9,70e24c            0000000000106dc8: c020001eefd4       larl    %r2,4e4d70  Replacing NR_CPUS with nr_cpu_ids fixes it.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ftrace.c | s | 5.2K | 176 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1294228051 |  | [S390] cleanup ftrace backend functions  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | crash.c | s | 267B | 14 | Heiko Carstens | heiko.carstens@de.ibm.com | 1170706607 |  | [S390] Get rid of a lot of sparse warnings.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | os_info.c | s | 3.9K | 151 | Michael Holzheu | holzheu@linux.vnet.ibm.com | 1338361489 |  | s390/kernel: Introduce memcpy_absolute() function  This patch introduces the new function memcpy_absolute() that allows to copy memory using absolute addressing. This means that the prefix swap does not apply when this function is used.  With this patch also all s390 kernel code that accesses absolute zero now uses the new memcpy_absolute() function. The old and less generic copy_to_absolute_zero() function is removed.  Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
