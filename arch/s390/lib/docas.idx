f | Makefile | g | 243B |  | Heiko Carstens | heiko.carstens@de.ibm.com | 1268047529 |  | [S390] uaccess: make sure copy_from_user_overflow is builtin  If there is no in kernel image caller modules will suffer:  ERROR: "copy_from_user_overflow" [net/core/pktgen.ko] undefined! ERROR: "copy_from_user_overflow" [net/can/can-raw.ko] undefined! ERROR: "copy_from_user_overflow" [fs/cifs/cifs.ko] undefined!  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | spinlock.c | s | 4.5K | 197 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1331481568 |  | [S390] rework smp code  Define struct pcpu and merge some of the NR_CPUS arrays into it, including __cpu_logical_map, current_set and smp_cpu_state. Split smp related functions to those operating on physical cpus and the functions operating on a logical cpu number. Make the functions for physical cpus use a pointer to a struct pcpu. This hides the knowledge about cpu addresses in smp.c, entry[64].S and swsusp_asm64.S, thus remove the sigp.h header.  The PSW restart mechanism is used to start secondary cpus, calling a function on an online cpu, calling a function on the ipl cpu, and for the nmi signal. Replace the different assembler functions with a single function restart_int_handler. The new entry point calls a function whose pointer is stored in the lowcore of the target cpu and it can wait for the source cpu to stop. This covers all existing use cases.  Overall the code is now simpler and there are ~380 lines less code.  Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | qrnnd.S | g | 2.0K |  | Jan Glauber | jang@linux.vnet.ibm.com | 1311497301 |  | [S390] fix s390 assembler code alignments  The alignment is missing for various global symbols in s390 assembly code. With a recent gcc and an instruction like stgrl this can lead to a specification exception if the instruction uses such a mis-aligned address.  Specify the alignment explicitely and while add it define __ALIGN for s390 and use the ENTRY define to save some lines of code.  Signed-off-by: Jan Glauber <jang@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | string.c | s | 8.7K | 353 | Heiko Carstens | heiko.carstens@de.ibm.com | 1238077464 |  | [S390] use compiler builtin versions of strlen/strcpy/strcat  Use builtin variants if gcc 4 or newer is used to compile the kernel. Generates better code than the asm variants.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | delay.c | s | 2.8K | 119 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1331481568 |  | [S390] rework idle code  Whenever the cpu loads an enabled wait PSW it will appear as idle to the underlying host system. The code in default_idle calls vtime_stop_cpu which does the necessary voodoo to get the cpu time accounting right. The udelay code just loads an enabled wait PSW. To correct this rework the vtime_stop_cpu/vtime_start_cpu logic and move the difficult parts to entry[64].S, vtime_stop_cpu can now be called from anywhere and vtime_start_cpu is gone. The correction of the cpu time during wakeup from an enabled wait PSW is done with a critical section in entry[64].S. As vtime_start_cpu is gone, s390_idle_check can be removed as well.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | uaccess_std.c | s | 7.9K | 297 | Heiko Carstens | heiko.carstens@de.ibm.com | 1337847010 |  | s390/headers: replace __s390x__ with CONFIG_64BIT where possible  Replace __s390x__ with CONFIG_64BIT in all places that are not exported to userspace or guarded with #ifdef __KERNEL__.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | uaccess_mvcos.c | s | 5.9K | 209 | Heiko Carstens | heiko.carstens@de.ibm.com | 1337847010 |  | s390/headers: replace __s390x__ with CONFIG_64BIT where possible  Replace __s390x__ with CONFIG_64BIT in all places that are not exported to userspace or guarded with #ifdef __KERNEL__.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | usercopy.c | s | 170B | 7 | Heiko Carstens | heiko.carstens@de.ibm.com | 1267220249 |  | [S390] uaccess: implement strict user copy checks  Same as on x86 and sparc, besides the fact that enabling the option will just emit compile time warnings instead of errors. Keeps allyesconfig kernels compiling.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | uaccess.h | s | 852B | 19 | Michel Lespinasse | walken@google.com | 1299842611 |  | futex: Sanitize futex ops argument types  Change futex_atomic_op_inuser and futex_atomic_cmpxchg_inatomic prototypes to use u32 types for the futex as this is the data type the futex core code uses all over the place.  Signed-off-by: Michel Lespinasse <walken@google.com> Cc: Darren Hart <darren@dvhart.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Matt Turner <mattst88@gmail.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: David Howells <dhowells@redhat.com> Cc: Tony Luck <tony.luck@intel.com> Cc: Michal Simek <monstr@monstr.eu> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: "James E.J. Bottomley" <jejb@parisc-linux.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> LKML-Reference: <20110311025058.GD26122@google.com> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | uaccess_pt.c | s | 9.8K | 369 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1319984206 |  | [S390] sparse: fix sparse warnings with __user pointers  Use __force to quiet sparse warnings about user address space.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | div64.c | s | 3.8K | 139 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1237379292 |  | [S390] __div64_31 broken for CONFIG_MARCH_G5  The implementation of __div64_31 for G5 machines is broken. The comments in __div64_31 are correct, only the code does not do what the comments say. The part "If the remainder has overflown subtract base and increase the quotient" is only partially realized, the base is subtracted correctly but the quotient is only increased if the dividend had the last bit set. Using the correct instruction fixes the problem.  Cc: stable@kernel.org Reported-by: Frans Pop <elendil@planet.nl> Tested-by: Frans Pop <elendil@planet.nl> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ucmpdi2.c | s | 474B | 23 | Heiko Carstens | heiko.carstens@de.ibm.com | 1246977473 |  | [S390] add __ucmpdi2() helper function  Provide __ucmpdi2() helper function on 31 bit so we don't run again and again in compile errors like this one:  kernel/built-in.o: In function `T.689': perf_counter.c:(.text+0x56c86): undefined reference to `__ucmpdi2'  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
