f | process_32.c | s | 8.1K | 283 | Linus Torvalds | torvalds@linux-foundation.org | 1337795947 |  | Merge branch 'x86-fpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip  Pull fpu state cleanups from Ingo Molnar:  "This tree streamlines further aspects of FPU handling by eliminating   the prepare_to_copy() complication and moving that logic to   arch_dup_task_struct().    It also fixes the FPU dumps in threaded core dumps, removes and old   (and now invalid) assumption plus micro-optimizes the exit path by   avoiding an FPU save for dead tasks."  Fixed up trivial add-add conflict in arch/sh/kernel/process.c that came in because we now do the FPU handling in arch_dup_task_struct() rather than the legacy (and now gone) prepare_to_copy().  * 'x86-fpu-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:   x86, fpu: drop the fpu state during thread exit   x86, xsave: remove thread_has_fpu() bug check in __sanitize_i387_state()   coredump: ensure the fpu state is flushed for proper multi-threaded core dump   fork: move the real prepare_to_copy() users to arch_dup_task_struct()
f | syscalls_64.S | g | 10K |  | Paul Mundt | lethal@linux-sh.org | 1332919220 |  | sh: Avoid exporting unimplemented syscalls.  Now that userspace is making use of kernel-provided sanitized headers for working out supported interfaces, we need to be a bit more diligent with matching the syscall definitions with their actual wiring/support state.  In theory it shouldn't hurt anything since sys_ni_syscall will ultimately do the right thing, but there's also not much need to lie about legacy x86 syscalls that we've never supported.  This tightens things up a bit for uClibc at least.  Suggested-by: Carmelo Amoroso <carmelo.amoroso@st.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | Makefile | g | 1.6K |  | Thomas Gleixner | tglx@linutronix.de | 1336215625 |  | sh: Use generic init_task  Same code. Use the generic version. The special Makefile treatment is pointless anyway as init_task.o contains only data which is handled by the linker script. So no point on being treated like head text.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Acked-by: Paul Mundt <lethal@linux-sh.org> Link: http://lkml.kernel.org/r/20120503085035.398257169@linutronix.de
f | entry-common.S | g | 7.9K |  | Paul Mundt | lethal@linux-sh.org | 1326180637 |  | sh: Ensure IRQs are enabled across do_notify_resume().  do_notify_resume() can trigger the freezer via the try_to_freeze() path (both explicitly through a redundant call in do_signal() or via get_signal_to_deliver()). That IRQs were disabled across this callsite became apparent with the might_sleep() introduction in try_to_freeze() by Tejun in a0acae0e886d44bd5ce6d2f173c1ace0fcf0d9f6, resulting in:  	BUG: sleeping function called from invalid context at include/linux/freezer.h:45 	in_atomic(): 0, irqs_disabled(): 1, pid: 819, name: ntpd 	no locks held by ntpd/819. 	Stack: (0x9c81be80 to 0x9c81c000) 	...  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | topology.c | s | 1.8K | 68 | Rusty Russell | rusty@rustcorp.com.au | 1330057305 |  | arch/sh: remove references to cpu_*_map.  This has been obsolescent for a while; time for the final push.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Cc: Paul Mundt <lethal@linux-sh.org> Cc: linux-sh@vger.kernel.org Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | time.c | s | 2.6K | 96 | Paul Mundt | lethal@linux-sh.org | 1321601160 |  | sh: hwblk: Kill off remaining bits of hwblk API.  Now that everything has been migrated, kill off the remaining infrastructure bits.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | relocate_kernel.S | g | 4.1K |  | Magnus Damm | damm@igel.co.jp | 1237370263 |  | sh: add kexec jump support  Add kexec jump support to the SuperH architecture.  Similar to the x86 implementation, with the following exceptions:  - Instead of separating the assembly code flow into two parts for regular kexec and kexec jump we use a single code path. In the assembly snippet regular kexec is just kexec jump that never comes back.  - Instead of using a swap page when moving data between pages the page copy assembly routine has been modified to exchange the data between the pages using registers.  - We walk the page list twice in machine_kexec() to do and undo physical to virtual address conversion.  Signed-off-by: Magnus Damm <damm@igel.co.jp> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | debugtraps.S | g | 1.1K |  | Paul Mundt | lethal@linux-sh.org | 1261453454 |  | sh: kgdb: Rework breakpoint handling on top of notifier chain.  This kills off kgdb's breakpoint handler and ties in to the notifier chain instead.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ptrace_32.c | s | 12K | 467 | Will Drewry | wad@chromium.org | 1334715890 |  | seccomp: ignore secure_computing return values  This change is inspired by   https://lkml.org/lkml/2012/4/16/14 which fixes the build warnings for arches that don't support CONFIG_HAVE_ARCH_SECCOMP_FILTER.  In particular, there is no requirement for the return value of secure_computing() to be checked unless the architecture supports seccomp filter.  Instead of silencing the warnings with (void) a new static inline is added to encode the expected behavior in a compiler and human friendly way.  v2: - cleans things up with a static inline     - removes sfr's signed-off-by since it is a different approach v1: - matches sfr's original change  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Kees Cook <keescook@chromium.org> Signed-off-by: James Morris <james.l.morris@oracle.com>
f | asm-offsets.c | s | 2.6K | 56 | Magnus Damm | damm@opensource.se | 1256881125 |  | sh: Add R-standby sleep mode support  Add R-standby specific bits to the SuperH Mobile sleep code.  Signed-off-by: Magnus Damm <damm@opensource.se> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | dumpstack.c | s | 2.2K | 87 | Richard Weinberger | richard@nod.at | 1306129335 |  | sh: remove warning and warning_symbol from struct stacktrace_ops  Both warning and warning_symbol are nowhere used. Let's get rid of them.  Signed-off-by: Richard Weinberger <richard@nod.at> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | disassemble.c | s | 18K | 552 | Paul Mundt | lethal@linux-sh.org | 1229939029 |  | sh: Add a simple code dumper for SUPERH32 show_regs().  This implements a simple show_code() that is in turn plugged in to show_regs() to provide minimal code dumping at the end of the trace.  Built on top of a simple instruction disassembler derived from the binutils opcode table.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | return_address.c | s | 1.0K | 44 | Paul Mundt | lethal@linux-sh.org | 1274771800 |  | sh: handle early calls to return_address() when using dwarf unwinder.  The dwarf unwinder ties in to an early initcall, but it's possible that return_address() calls will be made prior to that. This implements some additional error handling in to the dwarf unwinder as well as an exit path in the return_address() case to bail out if the unwinder hasn't come up yet.  This fixes a NULL pointer deref in early boot when mempool_alloc() blows up on the not-yet-ready mempool via dwarf_unwind_stack().  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | sys_sh.c | s | 2.3K | 84 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1289984130 |  | sh: avoid to flush all cache in sys_cacheflush  Calling sys_cacheflush with ICACHE we can direclty flush the icache without invoking the flush_cache_all function.  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: Carmelo Amoroso <carmelo.amoroso@st.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ioport.c | s | 987B | 36 | Paul Mundt | lethal@linux-sh.org | 1288619344 |  | sh: machvec IO death.  This takes a bit of a sledgehammer to the machvec I/O routines. The iomem case requires no special casing and so can just be dropped outright. This only leaves the ioport casing for PCI and SuperIO mangling. With the SuperIO case going through the standard ioport mapping, it's possible to replace everything with generic routines.  With this done the standard I/O routines are tidied up and NO_IOPORT now gets default-enabled for the vast majority of boards.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | iomap.c | s | 3.2K | 143 | Paul Mundt | lethal@linux-sh.org | 1288619344 |  | sh: machvec IO death.  This takes a bit of a sledgehammer to the machvec I/O routines. The iomem case requires no special casing and so can just be dropped outright. This only leaves the ioport casing for PCI and SuperIO mangling. With the SuperIO case going through the standard ioport mapping, it's possible to replace everything with generic routines.  With this done the standard I/O routines are tidied up and NO_IOPORT now gets default-enabled for the vast majority of boards.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | kgdb.c | s | 10K | 325 | Paul Mundt | lethal@linux-sh.org | 1334035359 |  | sh: kgdb: Fix up NULL pointer deref by kgdb_nmicallback.  kgdb_nmicallback expects valid register state, so just fetch the register state with get_irq_regs() as on other platforms.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | vmlinux.lds.S | g | 1.7K |  | Simon Horman | horms@verge.net.au | 1319781823 |  | sh: kexec: Add PHYSICAL_START  Add PHYSICAL_START kernel configuration parameter to set the address at which the kernel should be loaded.  It has been observed on an sh7757lcr that simply modifying MEMORY_START does not achieve this goal for 32bit sh. This is due to MEMORY_OFFSET in arch/sh/kernel/vmlinux.lds.S bot being based on MEMORY_START on such systems.  Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | traps.c | s | 2.2K | 94 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | irq_64.c | s | 1.1K | 46 | Paul Mundt | lethal@linux-sh.org | 1288161291 |  | sh64: update for IRQ flag handling naming changes.  irq_32.c was updated for the new API, while irq_64.c was overlooked. This syncs them up and gets things building again.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | perf_event.c | s | 8.9K | 328 | Stephane Eranian | eranian@google.com | 1330955742 |  | perf: Disable PERF_SAMPLE_BRANCH_* when not supported  PERF_SAMPLE_BRANCH_* is disabled for:   - SW events (sw counters, tracepoints)  - HW breakpoints  - ALL but Intel x86 architecture  - AMD64 processors  Signed-off-by: Stephane Eranian <eranian@google.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1328826068-11713-10-git-send-email-eranian@google.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | sh_ksyms_32.c | s | 2.6K | 90 | Paul Mundt | lethal@linux-sh.org | 1256611879 |  | sh: Clean up more superfluous symbol exports.  Many of these symbols went away completely, or we just never cared about them in the first place. Trim the exports down to the essential set.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | dwarf.c | s | 29K | 1032 | Paul Mundt | lethal@linux-sh.org | 1274771800 |  | sh: handle early calls to return_address() when using dwarf unwinder.  The dwarf unwinder ties in to an early initcall, but it's possible that return_address() calls will be made prior to that. This implements some additional error handling in to the dwarf unwinder as well as an exit path in the return_address() case to bail out if the unwinder hasn't come up yet.  This fixes a NULL pointer deref in early boot when mempool_alloc() blows up on the not-yet-ready mempool via dwarf_unwind_stack().  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ptrace.c | s | 1012B | 31 | Paul Mundt | lethal@linux-sh.org | 1276496213 |  | sh: Add kprobe-based event tracer.  This follows the x86/ppc changes for kprobe-based event tracing on sh. While kprobes is only supported on 32-bit sh, we provide the API for HAVE_REGS_AND_STACK_ACCESS_API for both 32 and 64-bit.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
d | cpu |  | 15 items |  | Nobuhiro Iwamatsu | nobuhiro.iwamatsu.yj@renesas.com | 1340869534 |  | sh: Convert sh_clk_mstp32_register to sh_clk_mstp_register  sh_clk_mstp32_register is deprecated. This convert to sh_clk_mstp_register.  Signed-off-by: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
d | vsyscall |  | 8 items |  | Paul Mundt | lethal@linux-sh.org | 1333104146 |  | sh: vsyscall: Fix up .eh_frame generation.  Some improper formatting caused the .eh_frame generation to fail, resulting in gcc/g++ testsuite failures with regards to unwinding through the vDSO. Now that someone is actually working on this on the gcc side it's time to fix up the kernel side, too.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | crash_dump.c | s | 1.3K | 40 | Olaf Hering | olaf@aepfle.de | 1300934839 |  | crash_dump: export is_kdump_kernel to modules, consolidate elfcorehdr_addr, setup_elfcorehdr and saved_max_pfn  The Xen PV drivers in a crashed HVM guest can not connect to the dom0 backend drivers because both frontend and backend drivers are still in connected state.  To run the connection reset function only in case of a crashdump, the is_kdump_kernel() function needs to be available for the PV driver modules.  Consolidate elfcorehdr_addr, setup_elfcorehdr and saved_max_pfn into kernel/crash_dump.c Also export elfcorehdr_addr to make is_kdump_kernel() usable for modules.  Leave 'elfcorehdr' as early_param().  This changes powerpc from __setup() to early_param().  It adds an address range check from x86 also on ia64 and powerpc.  [akpm@linux-foundation.org: additional #includes] [akpm@linux-foundation.org: remove elfcorehdr_addr export] [akpm@linux-foundation.org: fix for Tejun's mm/nobootmem.c changes] Signed-off-by: Olaf Hering <olaf@aepfle.de> Cc: Russell King <rmk@arm.linux.org.uk> Cc: "Luck, Tony" <tony.luck@intel.com> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Johannes Weiner <hannes@cmpxchg.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sh_bios.c | s | 3.9K | 145 | Paul Mundt | lethal@linux-sh.org | 1263289372 |  | sh: sh_bios detection.  This adds some VBR sanity checks in the sh_bios code to ensure that the BIOS VBR is in range before blindly trapping in to it. This permits boards with varying boot loader configurations to always leave support for sh-bios enabled and it will just be disabled at run-time if not found.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | signal_32.c | s | 15K | 505 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | cpufreq.c | s | 5.0K | 159 | Paul Mundt | lethal@linux-sh.org | 1327664724 |  | sh: cpufreq: Wire up scaling_available_freqs support.  scaling_available_freqs is provided generically for drivers that are using frequency table based rounding. This will be optional for our case, but the generic code already takes that in to consideration, so we can simply wire it up outright.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | machine_kexec.c | s | 5.4K | 176 | Tejun Heo | tj@kernel.org | 1323368528 |  | memblock: s/memblock_analyze()/memblock_allow_resize()/ and update users  The only function of memblock_analyze() is now allowing resize of memblock region arrays.  Rename it to memblock_allow_resize() and update its users.  * The following users remain the same other than renaming.    arm/mm/init.c::arm_memblock_init()   microblaze/kernel/prom.c::early_init_devtree()   powerpc/kernel/prom.c::early_init_devtree()   openrisc/kernel/prom.c::early_init_devtree()   sh/mm/init.c::paging_init()   sparc/mm/init_64.c::paging_init()   unicore32/mm/init.c::uc32_memblock_init()  * In the following users, analyze was used to update total size which   is no longer necessary.    powerpc/kernel/machine_kexec.c::reserve_crashkernel()   powerpc/kernel/prom.c::early_init_devtree()   powerpc/mm/init_32.c::MMU_init()   powerpc/mm/tlb_nohash.c::__early_init_mmu()   powerpc/platforms/ps3/mm.c::ps3_mm_add_memory()   powerpc/platforms/embedded6xx/wii.c::wii_memory_fixups()   sh/kernel/machine_kexec.c::reserve_crashkernel()  * x86/kernel/e820.c::memblock_x86_fill() was directly setting   memblock_can_resize before populating memblock and calling analyze   afterwards.  Call memblock_allow_resize() before start populating.  memblock_can_resize is now static inside memblock.c.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Russell King <linux@arm.linux.org.uk> Cc: Michal Simek <monstr@monstr.eu> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | kprobes.c | s | 14K | 491 | Paul Mundt | lethal@linux-sh.org | 1276502770 |  | sh: kprobes SMP support.  Presently kprobes support relies on several saved opcode variables for saving and restoring state, without any specific locking. This is inherently racy on SMP, and given that we already use per-CPU variables for everything else, convert these over too.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | io_trapped.c | s | 6.4K | 249 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | irq.c | s | 6.5K | 235 | Paul Mundt | lethal@linux-sh.org | 1337590441 |  | sh: Kill off machvec IRQ hinting.  Everything is using sparseirq these days, so we have no need to arbitrarily size nr_irqs ahead of time. The legacy IRQ pre-allocation likewise has no meaning for us, so that's killed off too. We now depend on nr_irqs expansion by the generic hardirq layer instead.  It's also worth noting that the majority of boards had completely bogus values for their nr_irqs relative to their CPU and configurations, so this ends up correcting behaviour for quite a few platforms.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | hw_breakpoint.c | s | 8.6K | 354 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | dma-nommu.c | s | 1.9K | 68 | Andrzej Pietrasiewicz | andrzej.p@samsung.com | 1332945397 |  | SH: adapt for dma_map_ops changes  Adapt core SH architecture code for dma_map_ops changes: replace alloc/free_coherent with generic alloc/free methods.  Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Reviewed-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Paul Mundt <lethal@linux-sh.org>
f | module.c | s | 3.7K | 111 | Jonas Bonn | jonas@southpole.se | 1311510964 |  | modules: make arch's use default loader hooks  This patch removes all the module loader hook implementations in the architecture specific code where the functionality is the same as that now provided by the recently added default hooks.  Signed-off-by: Jonas Bonn <jonas@southpole.se> Acked-by: Mike Frysinger <vapier@gentoo.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org> Tested-by: Michal Simek <monstr@monstr.eu> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | machvec.c | s | 2.9K | 104 | Paul Mundt | lethal@linux-sh.org | 1337590441 |  | sh: Kill off machvec IRQ hinting.  Everything is using sparseirq these days, so we have no need to arbitrarily size nr_irqs ahead of time. The legacy IRQ pre-allocation likewise has no meaning for us, so that's killed off too. We now depend on nr_irqs expansion by the generic hardirq layer instead.  It's also worth noting that the majority of boards had completely bogus values for their nr_irqs relative to their CPU and configurations, so this ends up correcting behaviour for quite a few platforms.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | stacktrace.c | s | 2.1K | 76 | Richard Weinberger | richard@nod.at | 1306129335 |  | sh: remove warning and warning_symbol from struct stacktrace_ops  Both warning and warning_symbol are nowhere used. Let's get rid of them.  Signed-off-by: Richard Weinberger <richard@nod.at> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | swsusp.c | s | 851B | 32 | Magnus Damm | damm@igel.co.jp | 1236657340 |  | sh: hibernation support  Add Suspend-to-disk / swsusp / CONFIG_HIBERNATION support to the SuperH architecture.  To suspend, use "swapon /dev/sda2; echo disk > /sys/power/state" To resume, pass "resume=/dev/sda2" on the kernel command line.  The patch "pm: rework includes, remove arch ifdefs V2" is needed to allow the generic swsusp code to build properly.  Hibernation is not enabled with this patch though, a patch setting ARCH_HIBERNATION_POSSIBLE will be submitted later.  Signed-off-by: Magnus Damm <damm@igel.co.jp> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ptrace_64.c | s | 14K | 519 | Will Drewry | wad@chromium.org | 1334715890 |  | seccomp: ignore secure_computing return values  This change is inspired by   https://lkml.org/lkml/2012/4/16/14 which fixes the build warnings for arches that don't support CONFIG_HAVE_ARCH_SECCOMP_FILTER.  In particular, there is no requirement for the return value of secure_computing() to be checked unless the architecture supports seccomp filter.  Instead of silencing the warnings with (void) a new static inline is added to encode the expected behavior in a compiler and human friendly way.  v2: - cleans things up with a static inline     - removes sfr's signed-off-by since it is a different approach v1: - matches sfr's original change  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Kees Cook <keescook@chromium.org> Signed-off-by: James Morris <james.l.morris@oracle.com>
f | signal_64.c | s | 18K | 558 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | process_64.c | s | 15K | 484 | Paul Mundt | lethal@linux-sh.org | 1337839667 |  | sh64: Fix up fallout from generic init_task conversion.  In the generic init_task migration sh64 silently lost its fake_swapper_regs definition, resulting in link errors.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | traps_32.c | s | 21K | 793 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | setup.c | s | 7.9K | 266 | Tejun Heo | tj@kernel.org | 1323368528 |  | SuperH: Use HAVE_MEMBLOCK_NODE_MAP  sh doesn't access early_node_map[] directly and enabling HAVE_MEMBLOCK_NODE_MAP is trivial - replacing add_active_range() calls with memblock_set_node() and selecting HAVE_MEMBLOCK_NODE_MAP is enough.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: linux-sh@vger.kernel.org
f | irq_32.c | s | 1.1K | 52 | David Howells | dhowells@redhat.com | 1286456935 |  | Fix IRQ flag handling naming  Fix the IRQ flag handling naming.  In linux/irqflags.h under one configuration, it maps:  	local_irq_enable() -> raw_local_irq_enable() 	local_irq_disable() -> raw_local_irq_disable() 	local_irq_save() -> raw_local_irq_save() 	...  and under the other configuration, it maps:  	raw_local_irq_enable() -> local_irq_enable() 	raw_local_irq_disable() -> local_irq_disable() 	raw_local_irq_save() -> local_irq_save() 	...  This is quite confusing.  There should be one set of names expected of the arch, and this should be wrapped to give another set of names that are expected by users of this facility.  Change this to have the arch provide:  	flags = arch_local_save_flags() 	flags = arch_local_irq_save() 	arch_local_irq_restore(flags) 	arch_local_irq_disable() 	arch_local_irq_enable() 	arch_irqs_disabled_flags(flags) 	arch_irqs_disabled() 	arch_safe_halt()  Then linux/irqflags.h wraps these to provide:  	raw_local_save_flags(flags) 	raw_local_irq_save(flags) 	raw_local_irq_restore(flags) 	raw_local_irq_disable() 	raw_local_irq_enable() 	raw_irqs_disabled_flags(flags) 	raw_irqs_disabled() 	raw_safe_halt()  with type checking on the flags 'arguments', and then wraps those to provide:  	local_save_flags(flags) 	local_irq_save(flags) 	local_irq_restore(flags) 	local_irq_disable() 	local_irq_enable() 	irqs_disabled_flags(flags) 	irqs_disabled() 	safe_halt()  with tracing included if enabled.  The arch functions can now all be inline functions rather than some of them having to be macros.  Signed-off-by: David Howells <dhowells@redhat.com> [X86, FRV, MN10300] Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> [Tile] Signed-off-by: Michal Simek <monstr@monstr.eu> [Microblaze] Tested-by: Catalin Marinas <catalin.marinas@arm.com> [ARM] Acked-by: Thomas Gleixner <tglx@linutronix.de> Acked-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com> [AVR] Acked-by: Tony Luck <tony.luck@intel.com> [IA-64] Acked-by: Hirokazu Takata <takata@linux-m32r.org> [M32R] Acked-by: Greg Ungerer <gerg@uclinux.org> [M68K/M68KNOMMU] Acked-by: Ralf Baechle <ralf@linux-mips.org> [MIPS] Acked-by: Kyle McMartin <kyle@mcmartin.ca> [PA-RISC] Acked-by: Paul Mackerras <paulus@samba.org> [PowerPC] Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com> [S390] Acked-by: Chen Liqin <liqin.chen@sunplusct.com> [Score] Acked-by: Matt Fleming <matt@console-pimps.org> [SH] Acked-by: David S. Miller <davem@davemloft.net> [Sparc] Acked-by: Chris Zankel <chris@zankel.net> [Xtensa] Reviewed-by: Richard Henderson <rth@twiddle.net> [Alpha] Reviewed-by: Yoshinori Sato <ysato@users.sourceforge.jp> [H8300] Cc: starvik@axis.com [CRIS] Cc: jesper.nilsson@axis.com [CRIS] Cc: linux-cris-kernel@axis.com
f | sys_sh64.c | s | 1.5K | 49 | David Howells | dhowells@redhat.com | 1282093663 |  | Make do_execve() take a const filename pointer  Make do_execve() take a const filename pointer so that kernel_execve() compiles correctly on ARM:  arch/arm/kernel/sys_arm.c:88: warning: passing argument 1 of 'do_execve' discards qualifiers from pointer target type  This also requires the argv and envp arguments to be consted twice, once for the pointer array and once for the strings the array points to.  This is because do_execve() passes a pointer to the filename (now const) to copy_strings_kernel().  A simpler alternative would be to cast the filename pointer in do_execve() when it's passed to copy_strings_kernel().  do_execve() may not change any of the strings it is passed as part of the argv or envp lists as they are some of them in .rodata, so marking these strings as const should be fine.  Further kernel_execve() and sys_execve() need to be changed to match.  This has been test built on x86_64, frv, arm and mips.  Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Ralf Baechle <ralf@linux-mips.org> Acked-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | perf_callchain.c | s | 991B | 35 | Richard Weinberger | richard@nod.at | 1306129335 |  | sh: remove warning and warning_symbol from struct stacktrace_ops  Both warning and warning_symbol are nowhere used. Let's get rid of them.  Signed-off-by: Richard Weinberger <richard@nod.at> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | smp.c | s | 9.6K | 378 | Anton Vorontsov | anton.vorontsov@linaro.org | 1338511770 |  | sh: use clear_tasks_mm_cpumask()  Checking for process->mm is not enough because process' main thread may exit or detach its mm via use_mm(), but other threads may still have a valid mm.  To fix this we would need to use find_lock_task_mm(), which would walk up all threads and returns an appropriate task (with task lock held).  clear_tasks_mm_cpumask() has the issue fixed, so let's use it.  Suggested-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org> Cc: Paul Mundt <lethal@linux-sh.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | reboot.c | s | 1.7K | 85 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | localtimer.c | s | 1.5K | 58 | Paul Mundt | lethal@linux-sh.org | 1272276535 |  | sh: CPU hotplug support.  This adds preliminary support for CPU hotplug for SH SMP systems.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | sys_sh32.c | s | 2.2K | 79 | David Howells | dhowells@redhat.com | 1282093663 |  | Make do_execve() take a const filename pointer  Make do_execve() take a const filename pointer so that kernel_execve() compiles correctly on ARM:  arch/arm/kernel/sys_arm.c:88: warning: passing argument 1 of 'do_execve' discards qualifiers from pointer target type  This also requires the argv and envp arguments to be consted twice, once for the pointer array and once for the strings the array points to.  This is because do_execve() passes a pointer to the filename (now const) to copy_strings_kernel().  A simpler alternative would be to cast the filename pointer in do_execve() when it's passed to copy_strings_kernel().  do_execve() may not change any of the strings it is passed as part of the argv or envp lists as they are some of them in .rodata, so marking these strings as const should be fine.  Further kernel_execve() and sys_execve() need to be changed to match.  This has been test built on x86_64, frv, arm and mips.  Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Ralf Baechle <ralf@linux-mips.org> Acked-by: Russell King <rmk+kernel@arm.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | process.c | s | 1.7K | 65 | Paul Mundt | lethal@linux-sh.org | 1337832200 |  | sh: arch/sh/kernel/process.c needs asm/fpu.h for unlazy_fpu().  Linus tried to fix up sh fallout from the x86 fpu state cleanup merge and failed. Add the missing include to get it building again.    CC      arch/sh/kernel/process.o arch/sh/kernel/process.c: In function 'arch_dup_task_struct': arch/sh/kernel/process.c:23:2: error: implicit declaration of function 'unlazy_fpu'  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | head_32.S | g | 8.2K |  | Magnus Damm | damm@opensource.se | 1285807412 |  | sh: boot kernel with SR.BL set  Update the SH kernel to keep SR.BL set until the VBR register has been initialized. Useful to allow boot of the kernel even though exceptions are pending.  Without this patch there is a window of time when exceptions such as NMI are enabled but no exception handlers are installed.  This patch modifies both the zImage loader and the actual kernel to boot with BL=1, but the zImage loader is modfied in such a way that the init_sr value is unchanged to not break the zImage loader provided by kexec.  Tested on sh7724 Ecovec and on the SH4AL-DSP core included in sh7372.  Signed-off-by: Magnus Damm <damm@opensource.se> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | io.c | s | 2.6K | 105 | Paul Mundt | lethal@linux-sh.org | 1275463902 |  | sh: support for platforms without PIO.  This extends some of the existing special casing for HAS_IOPORT platforms and gets it to the point where platforms can begin to conditionally select it.  The major changes here are that the PIO routines themselves go away completely, including all of the machvec port mapping wrappers. With this in place it's possible for any non-machvec abusing platform to disable PIO completely. At present this is left as an opt-in until the abusers are the odd ones out instead of the majority.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | unwinder.c | s | 4.2K | 142 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sh_ksyms_64.c | s | 1.5K | 51 | Paul Mundt | lethal@linux-sh.org | 1339550917 |  | sh: use the new generic strnlen_user() function  This discards both the _32 and _64 versions in favour of the consolidated generic one.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | syscalls_32.S | g | 9.4K |  | Paul Mundt | lethal@linux-sh.org | 1332919220 |  | sh: Avoid exporting unimplemented syscalls.  Now that userspace is making use of kernel-provided sanitized headers for working out supported interfaces, we need to be a bit more diligent with matching the syscall definitions with their actual wiring/support state.  In theory it shouldn't hurt anything since sys_ni_syscall will ultimately do the right thing, but there's also not much need to lie about legacy x86 syscalls that we've never supported.  This tightens things up a bit for uClibc at least.  Suggested-by: Carmelo Amoroso <carmelo.amoroso@st.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | kdebugfs.c | s | 333B | 13 | Paul Mundt | lethal@linux-sh.org | 1285268666 |  | sh: provide generic arch_debugfs_dir.  While sh previously had its own debugfs root, there now exists a common arch_debugfs_dir prototype, so we switch everything over to that.  Presumably once more architectures start making use of this we'll be able to just kill off the stub kdebugfs wrapper.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | nmi_debug.c | s | 1.6K | 65 | Paul Mundt | lethal@linux-sh.org | 1251794312 |  | sh: nmi_debug support.  This implements support for NMI debugging that was shamelessly copied from the avr32 port. A bit of special magic is needed in the interrupt exception path given that the NMI exception handler is stubbed in to the regular exception handling table despite being reported in INTEVT. So we mangle the lookup and kick off an EXPEVT-style exception dispatch from the INTEVT path for exceptions that do_IRQ() has no chance of handling. As a result, we also drop the evt2irq() conversion from the do_IRQ() path and just do it in assembly.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | idle.c | s | 2.7K | 122 | Thomas Gleixner | tglx@linutronix.de | 1336473307 |  | sh: Remove cpu_idle_wait()  cpuidle uses generic kick_all_cpus_sync() now. Remove the unused code.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Paul Mundt <lethal@linux-sh.org> Link: http://lkml.kernel.org/r/20120507175652.461648208@linutronix.de
f | traps_64.c | s | 25K | 848 | Paul Mundt | lethal@linux-sh.org | 1334825540 |  | sh64: Kill off unused trap_no/error_code from thread_struct.  While the trap number and error code are passed around for debugging purposes, this occurs wholly independently of the thread struct values. These values were never part of the sigcontext ABI and are thus never passed anywhere, so we can just kill them off across the board.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | head_64.S | g | 9.3K |  | Paul Mundt | lethal@linux-sh.org | 1263277346 |  | sh64: Fix up early serial fixmap.  This was conditionalized on CONFIG_EARLY_PRINTK, which has subsequently gone away. Now that the serial driver always supports the early console, make sure we always establish the mapping.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ftrace.c | s | 10K | 335 | Mike Frysinger | vapier@gentoo.org | 1266408441 |  | tracing: Unify arch_syscall_addr() implementations  Most implementations of arch_syscall_addr() are the same, so create a default version in common code and move the one piece that differs (the syscall table) to asm/syscall.h.  New arch ports don't have to waste time copying & pasting this simple function.  The s390/sparc versions need to be different, so document why.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Acked-by: David S. Miller <davem@davemloft.net> Acked-by: Paul Mundt <lethal@linux-sh.org> Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Steven Rostedt <rostedt@goodmis.org> LKML-Reference: <1264498803-17278-1-git-send-email-vapier@gentoo.org> Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
