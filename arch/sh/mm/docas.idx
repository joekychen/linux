f | Makefile | g | 2.5K |  | Paul Mundt | lethal@linux-sh.org | 1336981567 |  | sh64: Fix up caller-save register settings for fast-path.  Now that the fast-path handler has been moved, we also need to update the Makefile to ensure that the same restrictions for caller-save registers are observed.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | init.c | s | 12K | 448 | Tejun Heo | tj@kernel.org | 1323368528 |  | memblock: s/memblock_analyze()/memblock_allow_resize()/ and update users  The only function of memblock_analyze() is now allowing resize of memblock region arrays.  Rename it to memblock_allow_resize() and update its users.  * The following users remain the same other than renaming.    arm/mm/init.c::arm_memblock_init()   microblaze/kernel/prom.c::early_init_devtree()   powerpc/kernel/prom.c::early_init_devtree()   openrisc/kernel/prom.c::early_init_devtree()   sh/mm/init.c::paging_init()   sparc/mm/init_64.c::paging_init()   unicore32/mm/init.c::uc32_memblock_init()  * In the following users, analyze was used to update total size which   is no longer necessary.    powerpc/kernel/machine_kexec.c::reserve_crashkernel()   powerpc/kernel/prom.c::early_init_devtree()   powerpc/mm/init_32.c::MMU_init()   powerpc/mm/tlb_nohash.c::__early_init_mmu()   powerpc/platforms/ps3/mm.c::ps3_mm_add_memory()   powerpc/platforms/embedded6xx/wii.c::wii_memory_fixups()   sh/kernel/machine_kexec.c::reserve_crashkernel()  * x86/kernel/e820.c::memblock_x86_fill() was directly setting   memblock_can_resize before populating memblock and calling analyze   afterwards.  Call memblock_allow_resize() before start populating.  memblock_can_resize is now static inside memblock.c.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Russell King <linux@arm.linux.org.uk> Cc: Michal Simek <monstr@monstr.eu> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | tlb-sh3.c | s | 2.2K | 83 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | uncached.c | s | 1.1K | 39 | Paul Mundt | lethal@linux-sh.org | 1288841544 |  | sh: nommu: use 32-bit phys mode.  The nommu code has regressed somewhat in that 29BIT gets set for the SH-2/2A configs regardless of the fact that they are really 32BIT sans MMU or PMB. This does a bit of tidying to get nommu properly selecting 32BIT as it was before.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | nommu.c | s | 1.6K | 87 | Paul Mundt | lethal@linux-sh.org | 1281937981 |  | sh: stub __flush_tlb_global() definition for nommu.  This fixes up the nommu build with a stub definition for __flush_tlb_global(), now used by the reboot code.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlb-sh5.c | s | 5.5K | 183 | Paul Mundt | lethal@linux-sh.org | 1336978348 |  | sh64: Migrate to __update_tlb() API.  Now that we have a method for finding out if we're handling an ITLB fault or not without passing it all the way down the chain, it's possible to use the __update_tlb() interface in place of a special __do_tlb_refill().  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | mmap.c | s | 6.1K | 218 | Al Viro | viro@zeniv.linux.org.uk | 1260531899 |  | fix broken aliasing checks for MAP_FIXED on sparc32, mips, arm and sh  We want addr - (pgoff << PAGE_SHIFT) consistently coloured...  Acked-by: Paul Mundt <lethal@linux-sh.org> Acked-by: Hugh Dickins <hugh.dickins@tiscali.co.uk> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | cache-sh3.c | s | 2.5K | 92 | Paul Mundt | lethal@linux-sh.org | 1264478320 |  | sh: Mass ctrl_in/outX to __raw_read/writeX conversion.  The old ctrl in/out routines are non-portable and unsuitable for cross-platform use. While drivers/sh has already been sanitized, there is still quite a lot of code that is not. This converts the arch/sh/ bits over, which permits us to flag the routines as deprecated whilst still building with -Werror for the architecture code, and to ensure that future users are not added.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlbex_64.c | s | 4.7K | 145 | Paul Mundt | lethal@linux-sh.org | 1336985209 |  | sh64: Set additional fault code values.  The SSR.MD status amongst other things are already made available, which can be used for encoding a more precise fault code value.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlb-pteaex.c | s | 2.7K | 89 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | ioremap_fixed.c | s | 2.6K | 115 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | gup.c | s | 6.6K | 239 | Paul Mundt | lethal@linux-sh.org | 1288165388 |  | sh: lockless get_user_pages_fast()  Implement get_user_pages_fast without locking in the fastpath on sh.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-sh5.c | s | 19K | 542 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1288640314 |  | tree-wide: fix comment/printk typos  "gadget", "through", "command", "maintain", "maintain", "controller", "address", "between", "initiali[zs]e", "instead", "function", "select", "already", "equal", "access", "management", "hierarchy", "registration", "interest", "relative", "memory", "offset", "already",  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | asids-debugfs.c | s | 1.8K | 64 | Paul Mundt | lethal@linux-sh.org | 1285268666 |  | sh: provide generic arch_debugfs_dir.  While sh previously had its own debugfs root, there now exists a common arch_debugfs_dir prototype, so we switch everything over to that.  Presumably once more architectures start making use of this we'll be able to just kill off the stub kdebugfs wrapper.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlb-urb.c | s | 2.0K | 75 | Matt Fleming | matt@console-pimps.org | 1269571036 |  | sh: update the TLB replacement counter for entry wiring.  Presently the TLB wiring code depends on MMUCR.URB for working out where to place the wired entry, but fails to take the replacment counter in to consideration. This fixes up the wiring logic and ensures that wired entries remain so.  Signed-off-by: Matt Fleming <matt@console-pimps.org> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | extable_32.c | s | 343B | 17 | Paul Mundt | lethal@linux-sh.org | 1201493924 |  | sh: Split out extable.c _32 and _64 variants.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-shx3.c | s | 1020B | 36 | Paul Mundt | lethal@linux-sh.org | 1271745443 |  | sh: Zero out aliases counter when using SH-X3 hardware assistance.  This zeroes out the number of cache aliases in the cache info descriptors when hardware alias avoidance is enabled. This cuts down on the amount of flushing taken care of by common code, and also permits coherency control to be disabled for the single CPU and 4k page size case.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-sh7705.c | s | 4.8K | 164 | Paul Mundt | lethal@linux-sh.org | 1291185591 |  | sh: Assume new page cache pages have dirty dcache lines.  This follows the ARM change c01778001a4f5ad9c62d882776235f3f31922fdd ("ARM: 6379/1: Assume new page cache pages have dirty D-cache") for the same rationale:      There are places in Linux where writes to newly allocated page     cache pages happen without a subsequent call to flush_dcache_page()     (several PIO drivers including USB HCD). This patch changes the     meaning of PG_arch_1 to be PG_dcache_clean and always flush the     D-cache for a newly mapped page in update_mmu_cache().  This addresses issues seen with executing binaries from MMC, in addition to some of the other HCDs that don't explicitly do cache management for their pipe-in buffers.  Requested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ioremap.c | s | 3.2K | 121 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | extable_64.c | s | 2.1K | 70 | Paul Mundt | lethal@linux-sh.org | 1201493938 |  | sh: comment tidying for sh64->sh migration.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlbflush_64.c | s | 3.5K | 139 | Paul Mundt | lethal@linux-sh.org | 1336978348 |  | sh64: Migrate to __update_tlb() API.  Now that we have a method for finding out if we're handling an ITLB fault or not without passing it all the way down the chain, it's possible to use the __update_tlb() interface in place of a special __do_tlb_refill().  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlbflush_32.c | s | 3.2K | 119 | Paul Mundt | lethal@linux-sh.org | 1278053049 |  | sh: Provide a global TLB flush for U/I-TLB clear.  This provides a sledgehammer approach for clearing the TLBs, only to be used in cases where we know we will never want to use the mappings again and have no interest in preserving state. This also destroys wired entries.  The primary use for this is when we are either entering or exiting the kernel completely, in the latter case as a precursor for CPU reset by MMU.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | tlb-debugfs.c | s | 3.8K | 145 | Paul Mundt | lethal@linux-sh.org | 1285268666 |  | sh: provide generic arch_debugfs_dir.  While sh previously had its own debugfs root, there now exists a common arch_debugfs_dir prototype, so we switch everything over to that.  Presumably once more architectures start making use of this we'll be able to just kill off the stub kdebugfs wrapper.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | alignment.c | s | 4.7K | 164 | Paul Mundt | lethal@linux-sh.org | 1309414206 |  | sh: use printk_ratelimited instead of printk_ratelimit  Follows the powerpc change, for much the same rationale.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | consistent.c | s | 3.6K | 133 | Andrzej Pietrasiewicz | andrzej.p@samsung.com | 1332945397 |  | SH: adapt for dma_map_ops changes  Adapt core SH architecture code for dma_map_ops changes: replace alloc/free_coherent with generic alloc/free methods.  Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Reviewed-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Paul Mundt <lethal@linux-sh.org>
f | pmb.c | s | 18K | 713 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | tlb-sh4.c | s | 2.5K | 92 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for SH  Disintegrate asm/system.h for SH.  Signed-off-by: David Howells <dhowells@redhat.com> cc: linux-sh@vger.kernel.org
f | cache-sh2.c | s | 2.2K | 78 | Paul Mundt | lethal@linux-sh.org | 1264478320 |  | sh: Mass ctrl_in/outX to __raw_read/writeX conversion.  The old ctrl in/out routines are non-portable and unsuitable for cross-platform use. While drivers/sh has already been sanitized, there is still quite a lot of code that is not. This converts the arch/sh/ bits over, which permits us to flag the routines as deprecated whilst still building with -Werror for the architecture code, and to ensure that future users are not added.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-sh4.c | s | 9.7K | 337 | Paul Mundt | lethal@linux-sh.org | 1333103397 |  | sh: fix up fallout from system.h disintegration.  Quite a bit of fallout all over the place, nothing terribly exciting.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache.c | s | 9.2K | 290 | Cong Wang | amwang@redhat.com | 1332251295 |  | sh: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | Kconfig | g | 6.7K |  | Tejun Heo | tj@kernel.org | 1323368529 |  | memblock: Kill early_node_map[]  Now all ARCH_POPULATES_NODE_MAP archs select HAVE_MEBLOCK_NODE_MAP - there's no user of early_node_map[] left.  Kill early_node_map[] and replace ARCH_POPULATES_NODE_MAP with HAVE_MEMBLOCK_NODE_MAP.  Also, relocate for_each_mem_pfn_range() and helper from mm.h to memblock.h as page_alloc.c would no longer host an alternative implementation.  This change is ultimately one to one mapping and shouldn't cause any observable difference; however, after the recent changes, there are some functions which now would fit memblock.c better than page_alloc.c and dependency on HAVE_MEMBLOCK_NODE_MAP instead of HAVE_MEMBLOCK doesn't make much sense on some of them.  Further cleanups for functions inside HAVE_MEMBLOCK_NODE_MAP in mm.h would be nice.  -v2: Fix compile bug introduced by mis-spelling  CONFIG_HAVE_MEMBLOCK_NODE_MAP to CONFIG_MEMBLOCK_HAVE_NODE_MAP in  mmzone.h.  Reported by Stephen Rothwell.  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Stephen Rothwell <sfr@canb.auug.org.au> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Yinghai Lu <yinghai@kernel.org> Cc: Tony Luck <tony.luck@intel.com> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Chen Liqin <liqin.chen@sunplusct.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: "H. Peter Anvin" <hpa@zytor.com>
f | pgtable.c | s | 1.3K | 47 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | flush-sh4.c | s | 2.6K | 98 | Paul Mundt | lethal@linux-sh.org | 1333103397 |  | sh: fix up fallout from system.h disintegration.  Quite a bit of fallout all over the place, nothing terribly exciting.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | kmap.c | s | 1.6K | 52 | Paul Mundt | lethal@linux-sh.org | 1291185591 |  | sh: Assume new page cache pages have dirty dcache lines.  This follows the ARM change c01778001a4f5ad9c62d882776235f3f31922fdd ("ARM: 6379/1: Assume new page cache pages have dirty D-cache") for the same rationale:      There are places in Linux where writes to newly allocated page     cache pages happen without a subsequent call to flush_dcache_page()     (several PIO drivers including USB HCD). This patch changes the     meaning of PG_arch_1 to be PG_dcache_clean and always flush the     D-cache for a newly mapped page in update_mmu_cache().  This addresses issues seen with executing binaries from MMC, in addition to some of the other HCDs that don't explicitly do cache management for their pipe-in buffers.  Requested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | hugetlbpage.c | s | 1.5K | 77 | Andrea Arcangeli | aarcange@redhat.com | 1294968760 |  | thp: pte alloc trans splitting  pte alloc routines must wait for split_huge_page if the pmd is not present and not null (i.e.  pmd_trans_splitting).  The additional branches are optimized away at compile time by pmd_trans_splitting if the config option is off.  However we must pass the vma down in order to know the anon_vma lock to wait for.  [akpm@linux-foundation.org: coding-style fixes] Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Acked-by: Rik van Riel <riel@redhat.com> Acked-by: Mel Gorman <mel@csn.ul.ie> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | tlbex_32.c | s | 1.9K | 69 | Paul Mundt | lethal@linux-sh.org | 1336977208 |  | sh: Enable shared page fault handler for _32/_64.  This moves the now generic _32 page fault handling code to a shared place and adapts the _64 implementation to make use of it.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | fault.c | s | 11K | 426 | Paul Mundt | lethal@linux-sh.org | 1337338876 |  | sh64: Fix up vmalloc fault range check.  With the previous attempt reverted this switches to conditionalizing the end address. Nominally VMALLOC_END, but extended for P3_ADDR_MAX in the store queue case.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-debugfs.c | s | 3.0K | 108 | Srinivas KANDAGATLA | srinivas.kandagatla@st.com | 1307331002 |  | sh: fix wrong icache/dcache address-array start addr in cache-debugfs.  This patch fixes a icache/dcache address-array start address while dumping its entires in debugfs. Perviously the code was attempting to remember the address in static variable, which is no more required for debugfs, as the function can be executed in one pass.  Without this patch the start address ends up in wrong place and the /sys/kernel/debug/sh/icache or dcache debugfs contents may not be correct.  Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@st.com> Cc: Stuart Menefy <stuart.menefy@st.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | numa.c | s | 2.3K | 61 | Yinghai Lu | yinghai@kernel.org | 1279091640 |  | lmb: rename to memblock  via following scripts        FILES=$(find * -type f || grep -vE 'oprofile||[^K]config')        sed -i \         -e 's/lmb/memblock/g' \         -e 's/LMB/MEMBLOCK/g' \         $FILES        for N in $(find . -name lmb.[ch]); do         M=$(echo $N || sed 's/lmb/memblock/g')         mv $N $M       done  and remove some wrong change like lmbench and dlmb etc.  also move memblock.c from lib/ to mm/  Suggested-by: Ingo Molnar <mingo@elte.hu> Acked-by: "H. Peter Anvin" <hpa@zytor.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | sram.c | s | 932B | 32 | Paul Mundt | lethal@linux-sh.org | 1333103397 |  | sh: fix up fallout from system.h disintegration.  Quite a bit of fallout all over the place, nothing terribly exciting.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | cache-sh2a.c | s | 4.6K | 157 | Phil Edworthy | phil.edworthy@renesas.com | 1330057306 |  | sh: Fix sh2a build error for CONFIG_CACHE_WRITETHROUGH  Signed-off-by: Phil Edworthy <phil.edworthy@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
