f | Makefile | g | 766B |  | matt mooney | mfm@muteddisk.com | 1285226298 |  | sh: change to new flag variable  Replace EXTRA_CFLAGS with ccflags-y.  Signed-off-by: matt mooney <mfm@muteddisk.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | div64-generic.c | s | 283B | 14 | Paul Mundt | lethal@linux-sh.org | 1220837704 |  | sh: fixup many sparse errors.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | memcpy-sh4.S | g | 15K |  | Hideo Saito | saito@densan.co.jp | 1210917307 |  | sh: Fix up optimized SH-4 memcpy on big endian.  Signed-off-by: Hideo Saito <saito@densan.co.jp> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | movmem.S | g | 5.3K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | delay.c | s | 1.0K | 46 | Stuart Menefy | stuart.menefy@st.com | 1297754645 |  | sh: Ensure ST40-300 BogoMIPS value is consistent  A strange variation was seen in the BogoMIPS figure for the ST40-300. This was eventually tracked down to sensitivity to the alignment of the loop. So add an align directive to ensure this doesn't occur.  Signed-off-by: Stuart Menefy <stuart.menefy@st.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | __clear_user.S | g | 1.7K |  | Paul Mundt | lethal@linux-sh.org | 1251780854 |  | Merge branch 'master' into sh/smp  Conflicts: 	arch/sh/mm/cache-sh4.c
f | memmove.S | g | 3.9K |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | udiv_qrnnd.S | g | 2.2K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | mcount.S | g | 5.6K |  | Paul Mundt | lethal@linux-sh.org | 1247314013 |  | sh: Fix up stack overflow check with ftrace disabled.  Presently the STACK_CHECK() code is called in to multiple times, although it's only necessary from the mcount entry. The code still attempts to treat the nop case as an ftrace path resulting in superfluous code flow for the case where ftrace is disabled. And finally, this also fixes up references to a few undefined symbols when FUNCTION_TRACER=n.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | div64.S | g | 547B |  | Paul Mundt | lethal@linux-sh.org | 1183687084 |  | sh: Correct __xdiv64_32/div64_32 return value size.  These should be returning a uint32_t, whereas they were erroneously returning a u64 before. As the register sizes are 32-bits, this doesn't really make a lot of sense.  Reported-by: Katsuya MATSUBARA <matsu@igel.co.jp> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ashrdi3.c | s | 499B | 23 | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | memcpy.S | g | 3.6K |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | memset.S | g | 828B |  | Toshinobu Sugioka | sugioka@itonet.co.jp | 1159333994 |  | sh: Fix a sign extension bug in memset().  Minor sign-extension bug in SH-specific memset()..  Signed-off-by: Toshinobu Sugioka <sugioka@itonet.co.jp> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | udivsi3_i4i-Os.S | g | 3.3K |  | Takashi YOSHII | yoshii.takashi@renesas.com | 1229939033 |  | sh: Add plain udivsi3 (not _i4*) for gcc-4.1 and lower.  We chan't share code for udivsi3 and udivsi3_i4, because they have a different clobber list. Copy udivsi3 from gcc-4.1.2.  As shown in arch/sh/lib/udivsi3.S (and -Os.S),    .global __udivsi3_i4i   .global __udivsi3_i4   .global __udivsi3 __udivsi3_i4i:   ...  Three symbols are sharing one code, which is actually udivsi3_i4i. But, this results unwanted code with gcc 4.1.  In gcc, these three are treated as pseudo instructions that have their own clobber list apart from the usual calling convention.  According to sh's machine description. The clobber list is as follows:   - udivsi3_i4i : t,r1,pr,mach,macl  - udivsi3_i4  : t,r0,r1,r4,r5,pr,dr0,dr2,dr4  - udivsi3     : t,r4,pr  The caller of udivsi3 will be left with a broken r1 and mac*.  gcc-4.1.x and older(at least to 3.4) generate udivsi3. ST's gcc-4.1.1 seems to be OK because it has _i4i.  Signed-off-by: Takashi YOSHII <yoshii.takashi@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | udivsi3_i4i.S | g | 10.0K |  | Takashi YOSHII | yoshii.takashi@renesas.com | 1229939033 |  | sh: Add plain udivsi3 (not _i4*) for gcc-4.1 and lower.  We chan't share code for udivsi3 and udivsi3_i4, because they have a different clobber list. Copy udivsi3 from gcc-4.1.2.  As shown in arch/sh/lib/udivsi3.S (and -Os.S),    .global __udivsi3_i4i   .global __udivsi3_i4   .global __udivsi3 __udivsi3_i4i:   ...  Three symbols are sharing one code, which is actually udivsi3_i4i. But, this results unwanted code with gcc 4.1.  In gcc, these three are treated as pseudo instructions that have their own clobber list apart from the usual calling convention.  According to sh's machine description. The clobber list is as follows:   - udivsi3_i4i : t,r1,pr,mach,macl  - udivsi3_i4  : t,r0,r1,r4,r5,pr,dr0,dr2,dr4  - udivsi3     : t,r4,pr  The caller of udivsi3 will be left with a broken r1 and mac*.  gcc-4.1.x and older(at least to 3.4) generate udivsi3. ST's gcc-4.1.1 seems to be OK because it has _i4i.  Signed-off-by: Takashi YOSHII <yoshii.takashi@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ashiftrt.S | g | 3.4K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ashlsi3.S | g | 3.7K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | lshrdi3.c | s | 477B | 21 | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ashrsi3.S | g | 3.7K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | ashldi3.c | s | 475B | 21 | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | libgcc.h | s | 383B | 20 | Andrea Gelmini | andrea.gelmini@gelma.net | 1267412249 |  | arch/sh/lib/libgcc.h: Checkpatch cleanup  arch/sh/lib/libgcc.h:21: ERROR: open brace '{' following union go on the same line  Signed-off-by: Andrea Gelmini <andrea.gelmini@gelma.net> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | udivsi3.S | g | 2.1K |  | Takashi YOSHII | yoshii.takashi@renesas.com | 1229939033 |  | sh: Add plain udivsi3 (not _i4*) for gcc-4.1 and lower.  We chan't share code for udivsi3 and udivsi3_i4, because they have a different clobber list. Copy udivsi3 from gcc-4.1.2.  As shown in arch/sh/lib/udivsi3.S (and -Os.S),    .global __udivsi3_i4i   .global __udivsi3_i4   .global __udivsi3 __udivsi3_i4i:   ...  Three symbols are sharing one code, which is actually udivsi3_i4i. But, this results unwanted code with gcc 4.1.  In gcc, these three are treated as pseudo instructions that have their own clobber list apart from the usual calling convention.  According to sh's machine description. The clobber list is as follows:   - udivsi3_i4i : t,r1,pr,mach,macl  - udivsi3_i4  : t,r0,r1,r4,r5,pr,dr0,dr2,dr4  - udivsi3     : t,r4,pr  The caller of udivsi3 will be left with a broken r1 and mac*.  gcc-4.1.x and older(at least to 3.4) generate udivsi3. ST's gcc-4.1.1 seems to be OK because it has _i4i.  Signed-off-by: Takashi YOSHII <yoshii.takashi@renesas.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | copy_page.S | g | 6.0K |  | Paul Mundt | lethal@linux-sh.org | 1252394588 |  | sh: Kill off dcache writeback from copy_page().  Now that the cache purging is handled manually by all copy_page() callers, we can kill off copy_page()'s on writeback. This optimizes the non-aliasing case.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | memset-sh4.S | g | 1.6K |  | Stuart Menefy | stuart.menefy@st.com | 1259047723 |  | sh: Optimised memset for SH4  Optimised version of memset for the SH4 which uses movca.l.  Signed-off-by: Stuart Menefy <stuart.menefy@st.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | io.c | s | 2.0K | 75 | Paul Mundt | lethal@linux-sh.org | 1222841547 |  | sh: Fix up the __raw_read/writeX() definitions.  These were doing largely bogus things and using the wrong typing for the address. Bring these in line with the ARM definitions.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | checksum.S | g | 7.3K |  | Stuart Menefy | stuart.menefy@st.com | 1233197762 |  | sh: Handle calling csum_partial with misaligned data  In rare circumstances csum_partial() can be called with data which is not 16 or 32 bit aligned. This is been observed with RPC calls for NFS file systems for example. Add support for handling this without resorting to the misaligned fixup code (which is why this hasn't been seen as a problem). This mimics the i386 version, which has had this support for some time.  Signed-off-by: Stuart Menefy <stuart.menefy@st.com> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | memchr.S | g | 373B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | lshrsi3.S | g | 3.7K |  | Paul Mundt | lethal@linux-sh.org | 1229938973 |  | sh: Migrate necessary libgcc bits in to arch/sh/lib for SUPERH32.  This moves in the necessary libgcc bits for SUPERH32 and drops the libgcc linking for the regular targets. This in turn allows us to rip out quite a few hacks both in sh_ksyms_32 and arch/sh/Makefile.  Signed-off-by: Paul Mundt <lethal@linux-sh.org>
f | strlen.S | g | 788B |  | Andrea Gelmini | andrea.gelmini@gelma.net | 1274656267 |  | arch/sh/lib/strlen.S: Checkpatch cleanup  arch/sh/lib/strlen.S:38: ERROR: trailing whitespace  Signed-off-by: Andrea Gelmini <andrea.gelmini@gelma.net> Signed-off-by: Paul Mundt <lethal@linux-sh.org>
