f | hash_utils_64.c | s | 34K | 1131 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | dma-noncoherent.c | s | 10K | 363 | Cong Wang | amwang@redhat.com | 1332251294 |  | powerpc: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | Makefile | g | 1.4K |  | Jimi Xenidis | jimix@pobox.com | 1322190687 |  | powerpc: Split ICSWX ACOP and PID processing  Some processors, like embedded, that already have a PID register that is managed by the system.  This patch separates the ACOP and PID processing into separate files so that the ACOP code can be shared.  Signed-off-by: Jimi Xenidis <jimix@pobox.com> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | mmap_64.c | s | 2.8K | 90 | Dan McGee | dpmcgee@gmail.com | 1322440929 |  | powerpc+sparc64/mm: Remove hack in mmap randomize layout  Since commit 8a0a9bd4db63bc45e301, this comment in mmap_rnd() does not hold true as the value returned by get_random_int() will in fact be  different every single call. Remove the comment and simplify the code back to its original desired form.  This reverts commit a5adc91a4b44b5d1 which is no longer necessary and also fixes the sparc code that copied this same adjustment.  Signed-off-by: Dan McGee <dpmcgee@gmail.com> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | tlb_hash32.c | s | 4.5K | 166 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103838 |  | powerpc: include export.h for files using EXPORT_SYMBOL/THIS_MODULE  Fix failures in powerpc associated with the previously allowed implicit module.h presence that now lead to things like this:  arch/powerpc/mm/mmu_context_hash32.c:76:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/powerpc/mm/tlb_hash32.c:48:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/kernel/pci_32.c:51:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/powerpc/kernel/iomap.c:36:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/platforms/44x/canyonlands.c:126:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/kvm/44x.c:168:59: error: 'THIS_MODULE' undeclared (first use in this function)  [with several contibutions from Stephen Rothwell <sfr@canb.auug.org.au>]  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | tlb_low_64e.S | g | 29K |  | Becky Bruce | beckyb@kernel.crashing.org | 1323235582 |  | powerpc: Add hugepage support to 64-bit tablewalk code for FSL_BOOK3E  Before hugetlb, at each level of the table, we test for !0 to determine if we have a valid table entry.  With hugetlb, this compare becomes:         < 0 is a normal entry         0 is an invalid entry         > 0 is huge  This works because the hugepage code pulls the top bit off the entry (which for non-huge entries always has the top bit set) as an indicator that we have a hugepage.  Signed-off-by: Becky Bruce <beckyb@kernel.crashing.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | init_64.c | s | 8.5K | 253 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | ppc_mmu_32.c | s | 8.3K | 251 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1280976968 |  | memblock: Remove rmo_size, burry it in arch/powerpc where it belongs  The RMA (RMO is a misnomer) is a concept specific to ppc64 (in fact server ppc64 though I hijack it on embedded ppc64 for similar purposes) and represents the area of memory that can be accessed in real mode (aka with MMU off), or on embedded, from the exception vectors (which is bolted in the TLB) which pretty much boils down to the same thing.  We take that out of the generic MEMBLOCK data structure and move it into arch/powerpc where it belongs, renaming it to "RMA" while at it.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | gup.c | s | 4.6K | 165 | Andrea Arcangeli | aarcange@redhat.com | 1320275217 |  | powerpc: remove superfluous PageTail checks on the pte gup_fast  This part of gup_fast doesn't seem capable of handling hugetlbfs ptes, those should be handled by gup_hugepd only, so these checks are superfluous.  Plus if this wasn't a noop, it would have oopsed because, the insistence of using the speculative refcounting would trigger a VM_BUG_ON if a tail page was encountered in the page_cache_get_speculative().  Signed-off-by: Andrea Arcangeli <aarcange@redhat.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Hugh Dickins <hughd@google.com> Cc: Johannes Weiner <jweiner@redhat.com> Cc: Rik van Riel <riel@redhat.com> Cc: Mel Gorman <mgorman@suse.de> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: David Gibson <david@gibson.dropbear.id.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | stab.c | s | 7.5K | 232 | Stephen Rothwell | sfr@canb.auug.org.au | 1332288971 |  | powerpc: Remove FW_FEATURE ISERIES from arch code  This is no longer selectable, so just remove all the dependent code.  Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | mmu_decl.h | s | 4.6K | 142 | Kumar Gala | galak@kernel.crashing.org | 1318393841 |  | powerpc/fsl-booke: Fix setup_initial_memory_limit to not blindly map  On FSL Book-E devices we support multiple large TLB sizes and so we can get into situations in which the initial 1G TLB size is too big and we're asked for a size that is not mappable by a single entry (like 512M).  The single entry is important because when we bring up secondary cores they need to ensure any data structure they need to access (eg PACA or stack) is always mapped.  So we really need to determine what size will actually be mapped by the first TLB entry to ensure we limit early memory references to that region.  We refactor the map_mem_in_cams() code to provider a helper function that we can utilize to determine the size of the first TLB entry while taking into account size and alignment constraints.  Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
f | slice.c | s | 20K | 621 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103844 |  | powerpc: various straight conversions from module.h --> export.h  All these files were including module.h just for the basic EXPORT_SYMBOL infrastructure.  We can shift them off to the export.h header which is a way smaller footprint and thus realize some compile time gains.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | pgtable_32.c | s | 10K | 391 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | mem.c | s | 16K | 532 | Cong Wang | amwang@redhat.com | 1332251294 |  | powerpc: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | hash_low_64.S | g | 25K |  | Matt Evans | matt@ozlabs.org | 1303877932 |  | powerpc: Free up some CPU feature bits by moving out MMU-related features  Some of the 64bit PPC CPU features are MMU-related, so this patch moves them to MMU_FTR_ bits.  All cpu_has_feature()-style tests are moved to mmu_has_feature(), and seven feature bits are freed as a result.  Signed-off-by: Matt Evans <matt@ozlabs.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | subpage-prot.c | s | 5.3K | 196 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | icswx.c | s | 7.9K | 251 | Jimi Xenidis | jimix@pobox.com | 1331100369 |  | powerpc/icswx: Fix race condition with IPI setting ACOP  There is a race where a thread causes a coprocessor type to be valid in its own ACOP _and_ in the current context, but it does not propagate to the ACOP register of other threads in time for them to use it.  The original code tries to solve this by sending an IPI to all threads on the system, which is heavy handed, but unfortunately still provides a window where the icswx is issued by other threads and the ACOP is not up to date.  This patch detects that the ACOP DSI fault was a "false positive" and syncs the ACOP and causes the icswx to be replayed.  Signed-off-by: Jimi Xenidis <jimix@pobox.com> Cc: Anton Blanchard <anton@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | 44x_mmu.c | s | 6.7K | 221 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | mmu_context_nohash.c | s | 12K | 396 | Anton Vorontsov | anton.vorontsov@linaro.org | 1338511769 |  | powerpc: use clear_tasks_mm_cpumask()  Current CPU hotplug code has some task->mm handling issues:  1. Working with task->mm w/o getting mm or grabing the task lock is    dangerous as ->mm might disappear (exit_mm() assigns NULL under    task_lock(), so tasklist lock is not enough).     We can't use get_task_mm()/mmput() pair as mmput() might sleep,    so we must take the task lock while handle its mm.  2. Checking for process->mm is not enough because process' main    thread may exit or detach its mm via use_mm(), but other threads    may still have a valid mm.     To fix this we would need to use find_lock_task_mm(), which would    walk up all threads and returns an appropriate task (with task    lock held).  clear_tasks_mm_cpumask() has all the issues fixed, so let's use it.  Suggested-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Anton Vorontsov <anton.vorontsov@linaro.org> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | slb.c | s | 9.9K | 281 | Stephen Rothwell | sfr@canb.auug.org.au | 1332288971 |  | powerpc: Remove FW_FEATURE ISERIES from arch code  This is no longer selectable, so just remove all the dependent code.  Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | icswx.h | s | 2.0K | 56 | Jimi Xenidis | jimix@pobox.com | 1331100369 |  | powerpc/icswx: Fix race condition with IPI setting ACOP  There is a race where a thread causes a coprocessor type to be valid in its own ACOP _and_ in the current context, but it does not propagate to the ACOP register of other threads in time for them to use it.  The original code tries to solve this by sending an IPI to all threads on the system, which is heavy handed, but unfortunately still provides a window where the icswx is issued by other threads and the ACOP is not up to date.  This patch detects that the ACOP DSI fault was a "false positive" and syncs the ACOP and causes the icswx to be replayed.  Signed-off-by: Jimi Xenidis <jimix@pobox.com> Cc: Anton Blanchard <anton@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | tlb_hash64.c | s | 6.6K | 203 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1306337956 |  | mm, powerpc: move the RCU page-table freeing into generic code  In case other architectures require RCU freed page-tables to implement gup_fast() and software filled hashes and similar things, provide the means to do so by moving the logic into generic code.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Requested-by: David Miller <davem@davemloft.net> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Russell King <rmk@arm.linux.org.uk> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Jeff Dike <jdike@addtoit.com> Cc: Richard Weinberger <richard@nod.at> Cc: Tony Luck <tony.luck@intel.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Hugh Dickins <hughd@google.com> Cc: Mel Gorman <mel@csn.ul.ie> Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Cc: Nick Piggin <npiggin@kernel.dk> Cc: Namhyung Kim <namhyung@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | 40x_mmu.c | s | 4.4K | 134 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1280976968 |  | memblock: Remove rmo_size, burry it in arch/powerpc where it belongs  The RMA (RMO is a misnomer) is a concept specific to ppc64 (in fact server ppc64 though I hijack it on embedded ppc64 for similar purposes) and represents the area of memory that can be accessed in real mode (aka with MMU off), or on embedded, from the exception vectors (which is bolted in the TLB) which pretty much boils down to the same thing.  We take that out of the generic MEMBLOCK data structure and move it into arch/powerpc where it belongs, renaming it to "RMA" while at it.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | icswx_pid.c | s | 1.8K | 73 | Jimi Xenidis | jimix@pobox.com | 1322190687 |  | powerpc: Split ICSWX ACOP and PID processing  Some processors, like embedded, that already have a PID register that is managed by the system.  This patch separates the ACOP and PID processing into separate files so that the ACOP code can be shared.  Signed-off-by: Jimi Xenidis <jimix@pobox.com> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | init_32.c | s | 5.6K | 186 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | hugetlbpage-book3e.c | s | 2.8K | 101 | Becky Bruce | beckyb@kernel.crashing.org | 1323235584 |  | powerpc/book3e: Change hugetlb preload to take vma argument  This avoids an extra find_vma() and is less error-prone.  Signed-off-by: Becky Bruce <beckyb@kernel.crashing.org> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | mmu_context_hash64.c | s | 2.7K | 99 | Jimi Xenidis | jimix@pobox.com | 1322190687 |  | powerpc: Split ICSWX ACOP and PID processing  Some processors, like embedded, that already have a PID register that is managed by the system.  This patch separates the ACOP and PID processing into separate files so that the ACOP code can be shared.  Signed-off-by: Jimi Xenidis <jimix@pobox.com> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | hash_low_32.S | g | 19K |  | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1250727147 |  | powerpc: Use names rather than numbers for SPRGs (v2)  The kernel uses SPRG registers for various purposes, typically in low level assembly code as scratch registers or to hold per-cpu global infos such as the PACA or the current thread_info pointer.  We want to be able to easily shuffle the usage of those registers as some implementations have specific constraints realted to some of them, for example, some have userspace readable aliases, etc.. and the current choice isn't always the best.  This patch should not change any code generation, and replaces the usage of SPRN_SPRGn everywhere in the kernel with a named replacement and adds documentation next to the definition of the names as to what those are used for on each processor family.  The only parts that still use the original numbers are bits of KVM or suspend/resume code that just blindly needs to save/restore all the SPRGs.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | pgtable_64.c | s | 8.2K | 287 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
f | hash_native_64.c | s | 13K | 479 | Paul Mackerras | paulus@samba.org | 1310465819 |  | KVM: PPC: book3s_hv: Add support for PPC970-family processors  This adds support for running KVM guests in supervisor mode on those PPC970 processors that have a usable hypervisor mode.  Unfortunately, Apple G5 machines have supervisor mode disabled (MSR[HV] is forced to 1), but the YDL PowerStation does have a usable hypervisor mode.  There are several differences between the PPC970 and POWER7 in how guests are managed.  These differences are accommodated using the CPU_FTR_ARCH_201 (PPC970) and CPU_FTR_ARCH_206 (POWER7) CPU feature bits.  Notably, on PPC970:  * The LPCR, LPID or RMOR registers don't exist, and the functions of   those registers are provided by bits in HID4 and one bit in HID0.  * External interrupts can be directed to the hypervisor, but unlike   POWER7 they are masked by MSR[EE] in non-hypervisor modes and use   SRR0/1 not HSRR0/1.  * There is no virtual RMA (VRMA) mode; the guest must use an RMO   (real mode offset) area.  * The TLB entries are not tagged with the LPID, so it is necessary to   flush the whole TLB on partition switch.  Furthermore, when switching   partitions we have to ensure that no other CPU is executing the tlbie   or tlbsync instructions in either the old or the new partition,   otherwise undefined behaviour can occur.  * The PMU has 8 counters (PMC registers) rather than 6.  * The DSCR, PURR, SPURR, AMR, AMOR, UAMOR registers don't exist.  * The SLB has 64 entries rather than 32.  * There is no mediated external interrupt facility, so if we switch to   a guest that has a virtual external interrupt pending but the guest   has MSR[EE] = 0, we have to arrange to have an interrupt pending for   it so that we can get control back once it re-enables interrupts.  We   do that by sending ourselves an IPI with smp_send_reschedule after   hard-disabling interrupts.  Signed-off-by: Paul Mackerras <paulus@samba.org> Signed-off-by: Alexander Graf <agraf@suse.de>
f | tlb_nohash_low.S | g | 9.2K |  | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1296647942 |  | powerpc/476: Workaround for PLB6 hang  The 476FP core may hang if an instruction fetch happens during an msync following a tlbsync.  This workaround makes sure that enough instruction cache lines are pre-fetched before executing the msync.  (sync and msync are the same to the compiler.)  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com> Signed-off-by: Josh Boyer <jwboyer@linux.vnet.ibm.com>
f | highmem.c | s | 2.2K | 74 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1288227785 |  | mm: fix race in kunmap_atomic()  Christoph reported a nice splat which illustrated a race in the new stack based kmap_atomic implementation.  The problem is that we pop our stack slot before we're completely done resetting its state -- in particular clearing the PTE (sometimes that's CONFIG_DEBUG_HIGHMEM).  If an interrupt happens before we actually clear the PTE used for the last slot, that interrupt can reuse the slot in a dirty state, which triggers a BUG in kmap_atomic().  Fix this by introducing kmap_atomic_idx() which reports the current slot index without actually releasing it and use that to find the PTE and delay the _pop() until after we're completely done.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Reported-by: Christoph Hellwig <hch@infradead.org> Acked-by: Rik van Riel <riel@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hugetlbpage.c | s | 21K | 781 | Paul Gortmaker | paul.gortmaker@windriver.com | 1336434679 |  | powerpc: fix compile fail in hugetlb cmdline parsing  Commit 9fb48c744ba6a4bf58b666f4e6fdac3008ea1bd4      "params: add 3rd arg to option handler callback signature"  added an extra arg to the function, but didn't catch all the use cases needing it, causing this compile fail in mpc85xx_defconfig:   arch/powerpc/mm/hugetlbpage.c:316:4: error: passing argument 7 of  'parse_args' from incompatible pointer type [-Werror]   include/linux/moduleparam.h:317:12: note: expected 	 'int (*)(char *, char *, const char *)' but argument is of type 	 'int (*)(char *, char *)'  This function has no need to printk out the "doing" value, so just add the arg as an "unused".  Cc: Rusty Russell <rusty@rustcorp.com.au> Cc: Jim Cromie <jim.cromie@gmail.com> Cc: Jason Baron <jbaron@redhat.com> Cc: Becky Bruce <beckyb@kernel.crashing.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | fsl_booke_mmu.c | s | 6.5K | 205 | Kumar Gala | galak@kernel.crashing.org | 1331831539 |  | powerpc/fsl-booke: Fixup calc_cam_sz to support MMU v2  The registers that describe size supported by TLB are different on MMU v2 as well as we support power of two page sizes.  For now we continue to assume that FSL variable size array supports all page sizes up to the maximum one reported in TLB1PS.  Signed-off-by: Kumar Gala <galak@kernel.crashing.org>
f | slb_low.S | g | 7.6K |  | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1331250899 |  | powerpc: Remove legacy iSeries bits from assembly files  This removes the various bits of assembly in the kernel entry, exception handling and SLB management code that were specific to running under the legacy iSeries hypervisor which is no longer supported.  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | pgtable.c | s | 6.7K | 211 | Becky Bruce | beckyb@kernel.crashing.org | 1316474380 |  | powerpc: Hugetlb for BookE  Enable hugepages on Freescale BookE processors.  This allows the kernel to use huge TLB entries to map pages, which can greatly reduce the number of TLB misses and the amount of TLB thrashing experienced by applications with large memory footprints.  Care should be taken when using this on FSL processors, as the number of large TLB entries supported by the core is low (16-64) on current processors.  The supported set of hugepage sizes include 4m, 16m, 64m, 256m, and 1g. Page sizes larger than the max zone size are called "gigantic" pages and must be allocated on the command line (and cannot be deallocated).  This is currently only fully implemented for Freescale 32-bit BookE processors, but there is some infrastructure in the code for 64-bit BooKE.  Signed-off-by: Becky Bruce <beckyb@kernel.crashing.org> Signed-off-by: David Gibson <david@gibson.dropbear.id.au> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | numa.c | s | 36K | 1277 | Michael Neuling | mikey@neuling.org | 1340944535 |  | powerpc: Fix uninitialised error in numa.c  chroma_defconfig currently gives me this with gcc 4.6:   arch/powerpc/mm/numa.c:638:13: error: 'dm' may be used uninitialized in this function [-Werror=uninitialized]  It's a bogus warning/error since of_get_drconf_memory() only writes it anyway.  Signed-off-by: Michael Neuling <mikey@neuling.org> cc: <stable@kernel.org> [v3.3+] Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | tlb_nohash.c | s | 16K | 593 | Linus Torvalds | torvalds@linux-foundation.org | 1325901502 |  | Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc  * 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/benh/powerpc: (185 commits)   powerpc: fix compile error with 85xx/p1010rdb.c   powerpc: fix compile error with 85xx/p1023_rds.c   powerpc/fsl: add MSI support for the Freescale hypervisor   arch/powerpc/sysdev/fsl_rmu.c: introduce missing kfree   powerpc/fsl: Add support for Integrated Flash Controller   powerpc/fsl: update compatiable on fsl 16550 uart nodes   powerpc/85xx: fix PCI and localbus properties in p1022ds.dts   powerpc/85xx: re-enable ePAPR byte channel driver in corenet32_smp_defconfig   powerpc/fsl: Update defconfigs to enable some standard FSL HW features   powerpc: Add TBI PHY node to first MDIO bus   sbc834x: put full compat string in board match check   powerpc/fsl-pci: Allow 64-bit PCIe devices to DMA to any memory address   powerpc: Fix unpaired probe_hcall_entry and probe_hcall_exit   offb: Fix setting of the pseudo-palette for >8bpp   offb: Add palette hack for qemu "standard vga" framebuffer   offb: Fix bug in calculating requested vram size   powerpc/boot: Change the WARN to INFO for boot wrapper overlap message   powerpc/44x: Fix build error on currituck platform   powerpc/boot: Change the load address for the wrapper to fit the kernel   powerpc/44x: Enable CRASH_DUMP for 440x   ...  Fix up a trivial conflict in arch/powerpc/include/asm/cputime.h due to the additional sparse-checking code for cputime_t.
f | hugetlbpage-hash64.c | s | 4.1K | 122 | Benjamin Herrenschmidt | benh@kernel.crashing.org | 1279853816 |  | powerpc/mm: Add some debug output when hash insertion fails  This adds some debug output to our MMU hash code to print out some useful debug data if the hypervisor refuses the insertion (which should normally never happen).  Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> ---
f | mmu_context_hash32.c | s | 3.4K | 106 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103838 |  | powerpc: include export.h for files using EXPORT_SYMBOL/THIS_MODULE  Fix failures in powerpc associated with the previously allowed implicit module.h presence that now lead to things like this:  arch/powerpc/mm/mmu_context_hash32.c:76:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/powerpc/mm/tlb_hash32.c:48:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/kernel/pci_32.c:51:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL' arch/powerpc/kernel/iomap.c:36:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/platforms/44x/canyonlands.c:126:1: error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL' arch/powerpc/kvm/44x.c:168:59: error: 'THIS_MODULE' undeclared (first use in this function)  [with several contibutions from Stephen Rothwell <sfr@canb.auug.org.au>]  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | fault.c | s | 14K | 469 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for PowerPC  Disintegrate asm/system.h for PowerPC.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> cc: linuxppc-dev@lists.ozlabs.org
