f | hw_exception_handler.S | g | 32K |  | Michal Simek | monstr@monstr.eu | 1332491299 |  | microblaze: Handle TLB skip size dynamically  This patch fix the problem with rootfs on JFFS2 with early printk console turned on.  The origin version used TLB63 for temporary early printk mapping. The code expect that kernel is not able to use all 64 TLB entries till early printk console is remapped by ioremap. After that temporary mapping on TLB63 is silently lost. This expectation give the opportunity to have early console pretty early.  Microblaze systems with JFFS2 rootfs with early printk console turned on used more than 64 TLB entries before kernel can remap early console. Based on that kernel does access to bad area because early printk mapping is rewritten.  This patch introduces tlb_skip variable which dynamically stores number of skipped TLB entries from the TLB0. skip_tlb=2 means that TLB0 and TLB1 should be skipped.  MICROBLAZE_TLB_SKIP defines how many TLB is skipped at the kernel start. They can be used for user purpose.  TLB 63 is used for temporary LMB mapping (MICROBLAZE_LMB_TLB_ID).  Also clean TLBLO when kernel starts.  For specific kernel sizes kernel can use just one TLB. Detect this case and use the second TLB for general purpose.  Change _tlbia function to flush TLB entries from tlb_skip to TLB_SIZE.  Export tlb_skip size through debugfs.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | head.S | g | 10K |  | Michal Simek | monstr@monstr.eu | 1332491299 |  | microblaze: Handle TLB skip size dynamically  This patch fix the problem with rootfs on JFFS2 with early printk console turned on.  The origin version used TLB63 for temporary early printk mapping. The code expect that kernel is not able to use all 64 TLB entries till early printk console is remapped by ioremap. After that temporary mapping on TLB63 is silently lost. This expectation give the opportunity to have early console pretty early.  Microblaze systems with JFFS2 rootfs with early printk console turned on used more than 64 TLB entries before kernel can remap early console. Based on that kernel does access to bad area because early printk mapping is rewritten.  This patch introduces tlb_skip variable which dynamically stores number of skipped TLB entries from the TLB0. skip_tlb=2 means that TLB0 and TLB1 should be skipped.  MICROBLAZE_TLB_SKIP defines how many TLB is skipped at the kernel start. They can be used for user purpose.  TLB 63 is used for temporary LMB mapping (MICROBLAZE_LMB_TLB_ID).  Also clean TLBLO when kernel starts.  For specific kernel sizes kernel can use just one TLB. Detect this case and use the second TLB for general purpose.  Change _tlbia function to flush TLB entries from tlb_skip to TLB_SIZE.  Export tlb_skip size through debugfs.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | Makefile | g | 889B |  | Thomas Gleixner | tglx@linutronix.de | 1336215624 |  | microblaze: Use generic init_task  Same code. Use the generic version.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Michal Simek <monstr@monstr.eu> Link: http://lkml.kernel.org/r/20120503085034.881532838@linutronix.de
f | reset.c | s | 1.9K | 84 | Grant Likely | grant.likely@secretlab.ca | 1323722416 |  | gpio/microblaze: Eliminate duplication of of_get_named_gpio_flags()  of_reset_gpio_handle() is largely a cut-and-paste copy of of_get_named_gpio_flags(). There really isn't any reason for the split, so this patch deletes the duplicate function  Signed-off-by: Grant Likely <grant.likely@secretlab.ca> Cc: Michal Simek <monstr@monstr.eu>
f | intc.c | s | 4.6K | 145 | Linus Torvalds | torvalds@linux-foundation.org | 1332897656 |  | Merge branch 'next' of git://git.monstr.eu/linux-2.6-microblaze  Pull arch/microblaze fixes from Michal Simek  * 'next' of git://git.monstr.eu/linux-2.6-microblaze:   microblaze: Handle TLB skip size dynamically   microblaze: Introduce TLB skip size   microblaze: Improve TLB calculation for small systems   microblaze: Extend space for compiled-in FDT to 32kB   microblaze: Clear all MSR flags on the first kernel instruction   microblaze: Use node name instead of compatible string   microblaze: Fix mapin_ram function   microblaze: Highmem support   microblaze: Use active regions   microblaze: Show more detailed information about memory   microblaze: Introduce fixmap   microblaze: mm: Fix lowmem max memory size limits   microblaze: mm: Use ZONE_DMA instead of ZONE_NORMAL   microblaze: trivial: Fix typo fault in timer.c   microblaze: Use vsprintf extention %pf with builtin_return_address   microblaze: Add PVR version string for MB 8.20.b and 8.30.a   microblaze: Fix makefile to work with latest toolchain   microblaze: Fix typo in early_printk.c
f | dma.c | s | 5.3K | 175 | Andrzej Pietrasiewicz | andrzej.p@samsung.com | 1332945398 |  | Microblaze: adapt for dma_map_ops changes  Adapt core Microblaze architecture code for dma_map_ops changes: replace alloc/free_coherent with generic alloc/free methods.  Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> [fixed coding style issues] Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Reviewed-by: Arnd Bergmann <arnd@arndb.de>
f | kgdb.c | s | 3.9K | 129 | Michal Simek | monstr@monstr.eu | 1287640318 |  | microblaze: KGDB little endian support  Just need to use little-endian opcode for brki r16, 0x18  Signed-off-by: Michal Simek <monstr@monstr.eu> CC: Jason Wessel <jason.wessel@windriver.com>
f | asm-offsets.c | s | 5.0K | 120 | Michal Simek | monstr@monstr.eu | 1273137718 |  | microblaze: Remove "cache" optimized copy_page function  Current implementation doesn't handle dcache_line_length correctly that's why is better to use generic memcpy.  Cache optimized function could be good way howto improve performance but must be based on benchmarking not blind function like this.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | ptrace.c | s | 5.2K | 174 | Will Drewry | wad@chromium.org | 1334715890 |  | seccomp: ignore secure_computing return values  This change is inspired by   https://lkml.org/lkml/2012/4/16/14 which fixes the build warnings for arches that don't support CONFIG_HAVE_ARCH_SECCOMP_FILTER.  In particular, there is no requirement for the return value of secure_computing() to be checked unless the architecture supports seccomp filter.  Instead of silencing the warnings with (void) a new static inline is added to encode the expected behavior in a compiler and human friendly way.  v2: - cleans things up with a static inline     - removes sfr's signed-off-by since it is a different approach v1: - matches sfr's original change  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Will Drewry <wad@chromium.org> Acked-by: Kees Cook <keescook@chromium.org> Signed-off-by: James Morris <james.l.morris@oracle.com>
f | syscall_table.S | g | 9.7K |  | Michal Simek | monstr@monstr.eu | 1325758611 |  | microblaze: Wire-up new system calls  Wire up three system calls sendmmsg/process_vm_readv/process_vm_writev  All tested by testing apps. Look at: net: Add sendmmsg socket system call (sha1: 228e548e602061b08ee8e8966f567c12aa079682) Cross Memory Attach (sha1: fcf634098c00dd9cd247447368495f0b79be12d1)  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | vmlinux.lds.S | g | 2.7K |  | Michal Simek | monstr@monstr.eu | 1332491297 |  | microblaze: Extend space for compiled-in FDT to 32kB  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | traps.c | s | 2.0K | 71 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for Microblaze  Disintegrate asm/system.h for Microblaze.  Not compiled.  Signed-off-by: David Howells <dhowells@redhat.com> cc: microblaze-uclinux@itee.uq.edu.au
d | cpu |  | 7 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1332975501 |  | 
f | unwind.c | s | 8.8K | 285 | Michal Simek | monstr@monstr.eu | 1333102306 |  | microblaze: Add missing headers caused by disintegration asm/system.h  It should be the part of patch "Disintegrate asm/system.h for Microblaze" (sha1: c40d04df152a1111c5bbcb632278394dabd2b73d)  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | sys_microblaze.c | s | 2.6K | 89 | Michal Simek | monstr@monstr.eu | 1299654598 |  | microblaze: Fix missing microblaze specific syscalls declaration  Warning log: CHECK   arch/microblaze/kernel/sys_microblaze.c arch/microblaze/kernel/sys_microblaze.c:37:17: warning: symbol 'microblaze_vfork' was not declared. Should it be static? arch/microblaze/kernel/sys_microblaze.c:43:17: warning: symbol 'microblaze_clone' was not declared. Should it be static? arch/microblaze/kernel/sys_microblaze.c:50:17: warning: symbol 'microblaze_execve' was not declared. Should it be static?  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | mcount.S | g | 4.1K |  | Michal Simek | monstr@monstr.eu | 1337920475 |  | microblaze: ftrace: Pass the first calling instruction for dynamic ftrace  Selftest for dynamic ftrace requres to pass address of the first calling instruction because hash function is calculated from it.  ftrace_update_ftrace_func setups pointer to function which is called in _mcount function. trace_selftest is not aware about instruction size (for microblaze 8 - imm and addik) and that's why we have to pass in r5 address of imm not addik which is in r15.12  For more info look at ftrace_ops_list_func/ftrace.c.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | entry-nommu.S | g | 14K |  | Al Viro | viro@zeniv.linux.org.uk | 1337659188 |  | microblaze: drop 'oldset' argument of do_notify_resume()  never used...  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | irq.c | s | 1.0K | 42 | Grant Likely | grant.likely@secretlab.ca | 1329397884 |  | irq_domain/microblaze: Convert microblaze to use irq_domains  This patch converts Microblaze to use the irq_domain remapper and get away from hard coding the offset between hwirq number and the linux irq number space.  This also paves the way for multiple interrupt controllers.  v2: Don't enable SPARSE_IRQ and keep NR_IRQS set to 33  Signed-off-by: Grant Likely <grant.likely@secretlab.ca> Signed-off-by: Michal Simek <monstr@monstr.eu> Cc: Rob Herring <rob.herring@calxeda.com> Cc: John Williams <john.williams@petalogix.com> Cc: John Linn <john.linn@xilinx.com>
f | microblaze_ksyms.c | s | 1.3K | 49 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for Microblaze  Disintegrate asm/system.h for Microblaze.  Not compiled.  Signed-off-by: David Howells <dhowells@redhat.com> cc: microblaze-uclinux@itee.uq.edu.au
f | stacktrace.c | s | 822B | 28 | Steven J. Magnani | steve@digidescorp.com | 1280910155 |  | microblaze: Add stack unwinder  Implement intelligent backtracing by searching for stack frame creation, and emitting only return addresses. Use print_hex_dump() to display the entire binary kernel stack.  Limitation: MMU kernels are not currently able to trace beyond a system trap (interrupt, syscall, etc.). It is the intent of this patch to provide infrastructure that can be extended to add this capability later.  Changes from V1: * Removed checks in find_frame_creation() that prevented location of the frame   creation instruction in heavily optimized code * Various formatting/commenting/file location tweaks per review comments * Dropped Kconfig option to enable STACKTRACE as something logically separate  Signed-off-by: Steven J. Magnani <steve@digidescorp.com>
f | timer.c | s | 7.8K | 267 | Linus Torvalds | torvalds@linux-foundation.org | 1332975501 |  | 
f | setup.c | s | 6.2K | 202 | Michal Simek | monstr@monstr.eu | 1333102203 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6 into next
f | prom.c | s | 4.6K | 147 | David Howells | dhowells@redhat.com | 1332955802 |  | Disintegrate asm/system.h for Microblaze  Disintegrate asm/system.h for Microblaze.  Not compiled.  Signed-off-by: David Howells <dhowells@redhat.com> cc: microblaze-uclinux@itee.uq.edu.au
f | module.c | s | 3.0K | 108 | Michal Simek | monstr@monstr.eu | 1325748867 |  | microblaze: Fix debug message in module  Trivial fix.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | misc.S | g | 2.1K |  | Michal Simek | monstr@monstr.eu | 1332491299 |  | microblaze: Handle TLB skip size dynamically  This patch fix the problem with rootfs on JFFS2 with early printk console turned on.  The origin version used TLB63 for temporary early printk mapping. The code expect that kernel is not able to use all 64 TLB entries till early printk console is remapped by ioremap. After that temporary mapping on TLB63 is silently lost. This expectation give the opportunity to have early console pretty early.  Microblaze systems with JFFS2 rootfs with early printk console turned on used more than 64 TLB entries before kernel can remap early console. Based on that kernel does access to bad area because early printk mapping is rewritten.  This patch introduces tlb_skip variable which dynamically stores number of skipped TLB entries from the TLB0. skip_tlb=2 means that TLB0 and TLB1 should be skipped.  MICROBLAZE_TLB_SKIP defines how many TLB is skipped at the kernel start. They can be used for user purpose.  TLB 63 is used for temporary LMB mapping (MICROBLAZE_LMB_TLB_ID).  Also clean TLBLO when kernel starts.  For specific kernel sizes kernel can use just one TLB. Detect this case and use the second TLB for general purpose.  Change _tlbia function to flush TLB entries from tlb_skip to TLB_SIZE.  Export tlb_skip size through debugfs.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | exceptions.c | s | 4.2K | 146 | Edgar E. Iglesias | edgar.iglesias@petalogix.com | 1318587871 |  | microblaze: Raise SIGFPE/FPE_INTDIV for div by zero  It fixes the signal nr raised for divizion by zero from SIGILL to SIGFPE, in accordance to POSIX and other archs.  This came up due to a failed test in the GCC testsuite.  Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>
f | prom_parse.c | s | 909B | 27 | Sebastian Andrzej Siewior | sebastian@breakpoint.cc | 1296845210 |  | of/pci: move of_irq_map_pci() into generic code  There is a tiny difference between PPC32 and PPC64. Microblaze uses the PPC32 variant.  Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc> [grant.likely@secretlab.ca: Added comment to #endif, moved documentation 	block to function implementation, fixed for non ppc and microblaze 	compiles] Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
f | selfmod.c | s | 2.6K | 72 | Michal Simek | monstr@monstr.eu | 1238160315 |  | microblaze_v8: Selfmodified code  Reviewed-by: Ingo Molnar <mingo@elte.hu> Acked-by: Stephen Neuendorffer <stephen.neuendorffer@xilinx.com> Acked-by: John Linn <john.linn@xilinx.com> Acked-by: John Williams <john.williams@petalogix.com> Signed-off-by: Michal Simek <monstr@monstr.eu>
f | entry.S | g | 29K |  | Linus Torvalds | torvalds@linux-foundation.org | 1338223796 |  | Merge branch 'next' of git://git.monstr.eu/linux-2.6-microblaze  Pull microblaze changes from Michal Simek.  * 'next' of git://git.monstr.eu/linux-2.6-microblaze:   microblaze: Setup correct pointer to TLS area   microblaze: Add TLS support to sys_clone   microblaze: ftrace: Pass the first calling instruction for dynamic ftrace   microblaze: Port OOM changes to do_page_fault   microblaze: Do not select GENERIC_GPIO by default
f | early_printk.c | s | 5.0K | 179 | Michal Simek | monstr@monstr.eu | 1333364422 |  | microblaze: Do not use tlb_skip in early_printk  tlb_skip is valid only for MMU system.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | process.c | s | 6.9K | 228 | Edgar E. Iglesias | edgar.iglesias@gmail.com | 1337920878 |  | microblaze: Setup correct pointer to TLS area  Setup a pointer to the TLS area in copy_thread. r10 is 6th argumetn which contains TLS area. And r21 is the thread reg.  Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com> Signed-off-by: David Holsgrove <david.holsgrove@petalogix.com> Signed-off-by: Michal Simek <monstr@monstr.eu>
f | heartbeat.c | s | 1.6K | 61 | Michal Simek | monstr@monstr.eu | 1287640319 |  | microblaze: Add support for little-endian Microblaze  Microblaze little-endian toolchain exports __MICROBLAZEEL__ which is used in the kernel to identify little/big endian.  The most of the changes are in loading values from DTB which is always big endian.  Little endian platforms are based on new AXI bus which has impact to early uartlite initialization.  Signed-off-by: Michal Simek <monstr@monstr.eu>
f | signal.c | s | 9.7K | 328 | Al Viro | viro@zeniv.linux.org.uk | 1338569932 |  | new helper: signal_delivered()  Does block_sigmask() + tracehook_signal_handler();  called when sigframe has been successfully built.  All architectures converted to it; block_sigmask() itself is gone now (merged into this one).  I'm still not too happy with the signature, but that's a separate story (IMO we need a structure that would contain signal number + siginfo + k_sigaction, so that get_signal_to_deliver() would fill one, signal_delivered(), handle_signal() and probably setup...frame() - take one).  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | ftrace.c | s | 6.1K | 197 | Michal Simek | monstr@monstr.eu | 1301643291 |  | microblaze: Fix ftrace  - Do not trace idle loop which takes a lot time - Fix cache handling in generic ftrace code - Do not trace lib functions ashldi3, ashrdi3, lshrdi3   Functions are called from generic ftrace code which   can't be traced  Signed-off-by: Michal Simek <monstr@monstr.eu>
