d | kernel |  | 42 items |  | Chris Metcalf | cmetcalf@tilera.com | 1338996575 |  | tile: add #include to unbreak build after generic init_task conversion  Some code was moved from init_task.c to setup.c but the appropriate header needed to be moved as well.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
d | include |  | 3 items |  | Chris Metcalf | cmetcalf@tilera.com | 1339880173 |  | tile: fix bug in get_user() for 4-byte values  The definition of 32-bit values in the 64-bit tilegx architecture is that they should be sign-extended regardless of whether they are considered signed or unsigned by the compiler.  Accordingly, we need to use an "ld4s" rather than "ld4u" to load and sign-extend for get_user().  This fixes glibc bug 14238 (see http://sourceware.org/bugzilla), introduced during the 3.5 merge window.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | Makefile | g | 2.3K |  | Chris Metcalf | cmetcalf@tilera.com | 1337972563 |  | tile: default to tilegx_defconfig for ARCH=tile  There is no "ARCH=tile" (just like there is no "ARCH=x86") so we need to pick a default configuration, either tilepro or tilegx, when users specify ARCH=tile.  We'll use tilegx, since that's our current chip.  Reported-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | Kconfig.debug | g | 1.0K |  | Stephen Boyd | sboyd@codeaurora.org | 1306337994 |  | lib: consolidate DEBUG_STACK_USAGE option  Most arches define CONFIG_DEBUG_STACK_USAGE exactly the same way.  Move it to lib/Kconfig.debug so each arch doesn't have to define it.  This obviously makes the option generic, but that's fine because the config is already used in generic code.  It's not obvious to me that sysrq-P actually does anything caution by keeping the most inclusive wording.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Chris Metcalf <cmetcalf@tilera.com> Acked-by: David S. Miller <davem@davemloft.net> Acked-by: Richard Weinberger <richard@nod.at> Acked-by: Mike Frysinger <vapier@gentoo.org> Cc: Russell King <rmk@arm.linux.org.uk> Cc: Hirokazu Takata <takata@linux-m32r.org> Acked-by: Ralf Baechle <ralf@linux-mips.org> Cc: Paul Mackerras <paulus@samba.org> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Chen Liqin <liqin.chen@sunplusct.com> Cc: Lennox Wu <lennox.wu@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 10K |  | Linus Torvalds | torvalds@linux-foundation.org | 1337986778 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile  Pull tile updates from Chris Metcalf:  "These changes cover a range of new arch/tile features and   optimizations.  They've been through LKML review and on linux-next for   a month or so.  There's also one bug-fix that just missed 3.4, which   I've marked for stable."  Fixed up trivial conflict in arch/tile/Kconfig (new added tile Kconfig entries clashing with the generic timer/clockevents changes).  * git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:   tile: default to tilegx_defconfig for ARCH=tile   tile: fix bug where fls(0) was not returning 0   arch/tile: mark TILEGX as not EXPERIMENTAL   tile/mm/fault.c: Port OOM changes to handle_page_fault   arch/tile: add descriptive text if the kernel reports a bad trap   arch/tile: allow querying cpu module information from the hypervisor   arch/tile: fix hardwall for tilegx and generalize for idn and ipi   arch/tile: support multiple huge page sizes dynamically   mm: add new arch_make_huge_pte() method for tile support   arch/tile: support kexec() for tilegx   arch/tile: support <asm/cachectl.h> header for cacheflush() syscall   arch/tile: Allow tilegx to build with either 16K or 64K page size   arch/tile: optimize get_user/put_user and friends   arch/tile: support building big-endian kernel   arch/tile: allow building Linux with transparent huge pages enabled   arch/tile: use interrupt critical sections less
d | mm |  | 13 items |  | Kautuk Consul | consul.kautuk@gmail.com | 1337964509 |  | tile/mm/fault.c: Port OOM changes to handle_page_fault  Commit d065bd810b6deb67d4897a14bfe21f8eb526ba99 (mm: retry page fault when blocking on disk transfer) and commit 37b23e0525d393d48a7d59f870b3bc061a30ccdb (x86,mm: make pagefault killable)  The above commits introduced changes into the x86 pagefault handler for making the page fault handler retryable as well as killable.  These changes reduce the mmap_sem hold time, which is crucial during OOM killer invocation.  Port these changes to tile.  Signed-off-by: Kautuk Consul <consul.kautuk@gmail.com> [cmetcalf@tilera.com: initialize "flags" after "write" updated.] Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
d | lib |  | 28 items |  | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | Kbuild | g | 31B |  | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
d | configs |  | 2 items |  | Chris Metcalf | cmetcalf@tilera.com | 1331749996 |  | arch/tile/configs: convert to minimal configs via "make savedefconfig"  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
d | kvm |  | 1 items |  | Ohad Ben-Cohen | ohad@wizery.com | 1311403830 |  | virtio: expose for non-virtualization users too  virtio has been so far used only in the context of virtualization, and the virtio Kconfig was sourced directly by the relevant arch Kconfigs when VIRTUALIZATION was selected.  Now that we start using virtio for inter-processor communications, we need to source the virtio Kconfig outside of the virtualization scope too.  Moreover, some architectures might use virtio for both virtualization and inter-processor communications, so directly sourcing virtio might yield unexpected results due to conflicting selections.  The simple solution offered by this patch is to always source virtio's Kconfig in drivers/Kconfig, and remove it from the appropriate arch Kconfigs. Additionally, a virtio menu entry has been added so virtio drivers don't show up in the general drivers menu.  This way anyone can use virtio, though it's arguably less accessible (and neat!) for virtualization users now.  Note: some architectures (mips and sh) seem to have a VIRTUALIZATION menu merely for sourcing virtio's Kconfig, so that menu is removed too.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
