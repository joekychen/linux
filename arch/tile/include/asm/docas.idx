f | hardwall.h | s | 1.9K | 52 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: fix hardwall for tilegx and generalize for idn and ipi  The hardwall drain code was not properly implemented for tilegx, just tilepro, so you couldn't reliably restart an application that made use of the udn.  In addition, the code was only applicable to the udn (user dynamic network).  On tilegx there is a second user network that is available (the "idn"), and there is support for having I/O shims deliver user-level interrupts to applications ("ipi") which functions in a very similar way to the inter-core permissions used for udn/idn. So this change also generalizes the code from supporting just the udn to supports udn/idn/ipi on tilegx.  By default we now use /dev/hardwall/{udn,idn,ipi} with separate minor numbers for the three devices.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | kmap_types.h | s | 1.4K | 53 | Chris Metcalf | cmetcalf@tilera.com | 1288639836 |  | arch/tile: complete migration to new kmap_atomic scheme  This change makes KM_TYPE_NR independent of the actual deprecated list of km_type values, which are no longer used in tile code anywhere. For now we leave it set to 8, allowing that many nested mappings, and thus reserving 32MB of address space.  A few remaining places using KM_* values were cleaned up as well.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | tile-desc_32.h | s | 12K | 510 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | kvm_para.h | s | 34B | 1 | Eric B Munson | emunson@mgebm.net | 1333878539 |  | kvmclock: Add functions to check if the host has stopped the vm  When a host stops or suspends a VM it will set a flag to show this.  The watchdog will use these functions to determine if a softlockup is real, or the result of a suspended VM.  Signed-off-by: Eric B Munson <emunson@mgebm.net> asm-generic changes Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com> Signed-off-by: Avi Kivity <avi@redhat.com>
f | compat.h | s | 7.0K | 220 | Al Viro | viro@zeniv.linux.org.uk | 1338426290 |  | bury __kernel_nlink_t, make internal nlink_t consistent  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | atomic_32.h | s | 10K | 293 | Chris Metcalf | cmetcalf@tilera.com | 1337964503 |  | arch/tile: optimize get_user/put_user and friends  Use direct load/store for the get_user/put_user.  Previously, we would call out to a helper routine that would do the appropriate thing and then return, handling the possible exception internally.  Now we inline the load or store, along with a "we succeeded" indication in a register; if the load or store faults, we write a "we failed" indication into the same register and then return to the following instruction.  This is more efficient and gives us more compact code, as well as being more in line with what other architectures do.  The special futex assembly source file for TILE-Gx also disappears in this change; we just use the same inlining idiom there as well, putting the appropriate atomic operations directly into futex_atomic_op_inuser() (and thus into the FUTEX_WAIT function).  The underlying atomic copy_from_user, copy_to_user functions were renamed using the (cryptic) x86 convention as copy_from_user_ll and copy_to_user_ll.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | pci.h | s | 2.6K | 75 | Chris Metcalf | cmetcalf@tilera.com | 1335372326 |  | arch/tile: fix a couple of functions that should be __init  They were marked __devinit by mistake, causing some warnings at link time.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | io.h | s | 7.5K | 252 | Michael S. Tsirkin | mst@redhat.com | 1323007207 |  | tile: don't panic on iomap  I think panic on iomap is there just for debugging. If we return NULL instead, the generic pci_iomap will DTRT so we don't need to roll our own.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
f | pgtable_64.h | s | 4.9K | 138 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | sections.h | s | 1.4K | 35 | Chris Metcalf | cmetcalf@tilera.com | 1278438111 |  | arch/tile: Miscellaneous cleanup changes.  This commit is primarily changes caused by reviewing "sparse" and "checkpatch" output on our sources, so is somewhat noisy, since things like "printk() -> pr_err()" (or whatever) throughout the codebase tend to get tedious to read.  Rather than trying to tease apart precisely which things changed due to which type of code review, this commit includes various cleanups in the code:  - sparse: Add declarations in headers for globals. - sparse: Fix __user annotations. - sparse: Using gfp_t consistently instead of int. - sparse: removing functions not actually used. - checkpatch: Clean up printk() warnings by using pr_info(), etc.;   also avoid partial-line printks except in bootup code.   - checkpatch: Use exposed structs rather than typedefs.   - checkpatch: Change some C99 comments to C89 comments.  In addition, a couple of minor other changes are rolled in to this commit:  - Add support for a "raise" instruction to cause SIGFPE, etc., to be raised. - Remove some compat code that is unnecessary when we fully eliminate   some of the deprecated syscalls from the generic syscall ABI. - Update the tile_defconfig to reflect current config contents.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de>
f | barrier.h | s | 4.2K | 135 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | edac.h | s | 855B | 25 | Chris Metcalf | cmetcalf@tilera.com | 1299781814 |  | drivers/edac: provide support for tile architecture  Add tile support for the EDAC driver, which provides unified system error (memory, PCI, etc.) reporting. For now, the TILEPro port reports memory correctable error (CE) only.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | cacheflush.h | s | 5.1K | 145 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | mmzone.h | s | 2.1K | 57 | KAMEZAWA Hiroyuki | kamezawa.hiroyu@jp.fujitsu.com | 1309209189 |  | Fix node_start/end_pfn() definition for mm/page_cgroup.c  commit 21a3c96 uses node_start/end_pfn(nid) for detection start/end of nodes. But, it's not defined in linux/mmzone.h but defined in /arch/???/include/mmzone.h which is included only under CONFIG_NEED_MULTIPLE_NODES=y.  Then, we see   mm/page_cgroup.c: In function 'page_cgroup_init':   mm/page_cgroup.c:308: error: implicit declaration of function 'node_start_pfn'   mm/page_cgroup.c:309: error: implicit declaration of function 'node_end_pfn'  So, fixiing page_cgroup.c is an idea...  But node_start_pfn()/node_end_pfn() is a very generic macro and should be implemented in the same manner for all archs. (m32r has different implementation...)  This patch removes definitions of node_start/end_pfn() in each archs and defines a unified one in linux/mmzone.h. It's not under CONFIG_NEED_MULTIPLE_NODES, now.  A result of macro expansion is here (mm/page_cgroup.c)  for !NUMA  start_pfn = ((&contig_page_data)->node_start_pfn);   end_pfn = ({ pg_data_t *__pgdat = (&contig_page_data); __pgdat->node_start_pfn + __pgdat->node_spanned_pages;});  for NUMA (x86-64)   start_pfn = ((node_data[nid])->node_start_pfn);   end_pfn = ({ pg_data_t *__pgdat = (node_data[nid]); __pgdat->node_start_pfn + __pgdat->node_spanned_pages;});  Changelog:  - fixed to avoid using "nid" twice in node_end_pfn() macro.  Reported-and-acked-by: Randy Dunlap <randy.dunlap@oracle.com> Reported-and-tested-by: Ingo Molnar <mingo@elte.hu> Acked-by: Mel Gorman <mgorman@suse.de> Signed-off-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ide.h | s | 758B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | delay.h | s | 1.1K | 28 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | traps.h | s | 2.0K | 60 | Chris Metcalf | cmetcalf@tilera.com | 1333383168 |  | arch/tile: work around a hardware issue with the return-address stack  In certain circumstances we need to do a bunch of jump-and-link instructions to fill the hardware return-address stack with nonzero values.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | backtrace.h | s | 4.0K | 115 | Chris Metcalf | cmetcalf@tilera.com | 1304358554 |  | arch/tile: refactor backtracing code  This change is the result of some work to make the backtrace code more shareable between kernel, libc, and gdb.  For the kernel, some good effects are to eliminate the hacky "VirtualAddress" typedef in favor of "unsigned long", to eliminate a bunch of spurious kernel doc comments, to remove the dead "bt_read_memory" function, and to use "__tilegx__" in #ifdefs instead of "TILE_CHIP".  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | cachectl.h | s | 1.9K | 39 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: support <asm/cachectl.h> header for cacheflush() syscall  We already had a syscall that did some dcache flushing, but it was not used in practice.  Make it MIPS compatible instead so it can do both the DCACHE and ICACHE actions.  We have code that wants to be able to use the ICACHE flush mode from userspace so this change enables that.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | current.h | s | 947B | 25 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | elf.h | s | 5.1K | 142 | Chris Metcalf | cmetcalf@tilera.com | 1337964502 |  | arch/tile: support building big-endian kernel  The toolchain supports big-endian mode now, so add support for building the kernel to run big-endian as well.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | unaligned.h | s | 1.3K | 33 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | bitsperlong.h | s | 784B | 22 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | tlb.h | s | 878B | 21 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | spinlock_64.h | s | 4.5K | 135 | Chris Metcalf | cmetcalf@tilera.com | 1333383229 |  | arch/tile: use atomic exchange in arch_write_unlock()  This idiom is used elsewhere when we do an unlock by writing a zero, but I missed it here.  Using an atomic operation avoids waiting on the write buffer for the unlocking write to be sent to the home cache.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | siginfo.h | s | 999B | 28 | Chris Metcalf | cmetcalf@tilera.com | 1281702741 |  | arch/tile: Fix a couple of issues with the COMPAT code for TILE-Gx.  First, the siginfo preamble wasn't quite right; we need to indicate that we are padding up to 4 ints of preamble for 64-bit code, and then for compat mode we need to pad differently, using only 3 ints.  Second, the C ABI requires a save area of two registers, not two pointers, since in compat mode we have 64-bit registers all of which we need to save, even though we only have 32-bit VAs.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | dma-mapping.h | s | 3.2K | 79 | James Hogan | james.hogan@imgtec.com | 1304534496 |  | tile,mn10300: add device parameter to dma_cache_sync()  Since v2.6.20 "Pass struct dev pointer to dma_cache_sync()" (d3fa72e4556ec1f04e46a0d561d9e785ecaa173d), dma_cache_sync() takes a struct dev pointer, but these appear to be missing from the tile and mn10300 implementations, so add them.  Signed-off-by: James Hogan <james.hogan@imgtec.com> [cmetcalf@tilera.com: took only the "tile" portion as I don't maintain mn10300] Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | smp.h | s | 4.0K | 110 | Gilad Ben-Yossef | gilad@benyossef.com | 1332980075 |  | smp: introduce a generic on_each_cpu_mask() function  We have lots of infrastructure in place to partition multi-core systems such that we have a group of CPUs that are dedicated to specific task: cgroups, scheduler and interrupt affinity, and cpuisol= boot parameter. Still, kernel code will at times interrupt all CPUs in the system via IPIs for various needs.  These IPIs are useful and cannot be avoided altogether, but in certain cases it is possible to interrupt only specific CPUs that have useful work to do and not the entire system.  This patch set, inspired by discussions with Peter Zijlstra and Frederic Weisbecker when testing the nohz task patch set, is a first stab at trying to explore doing this by locating the places where such global IPI calls are being made and turning the global IPI into an IPI for a specific group of CPUs.  The purpose of the patch set is to get feedback if this is the right way to go for dealing with this issue and indeed, if the issue is even worth dealing with at all.  Based on the feedback from this patch set I plan to offer further patches that address similar issue in other code paths.  This patch creates an on_each_cpu_mask() and on_each_cpu_cond() infrastructure API (the former derived from existing arch specific versions in Tile and Arm) and uses them to turn several global IPI invocation to per CPU group invocations.  Core kernel:  on_each_cpu_mask() calls a function on processors specified by cpumask, which may or may not include the local processor.  You must not call this function with disabled interrupts or from a hardware interrupt handler or from a bottom half handler.  arch/arm:  Note that the generic version is a little different then the Arm one:  1. It has the mask as first parameter 2. It calls the function on the calling CPU with interrupts disabled,    but this should be OK since the function is called on the other CPUs    with interrupts disabled anyway.  arch/tile:  The API is the same as the tile private one, but the generic version also calls the function on the with interrupts disabled in UP case  This is OK since the function is called on the other CPUs with interrupts disabled.  Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com> Reviewed-by: Christoph Lameter <cl@linux.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Pekka Enberg <penberg@kernel.org> Cc: Matt Mackall <mpm@selenic.com> Cc: Rik van Riel <riel@redhat.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Sasha Levin <levinsasha928@gmail.com> Cc: Mel Gorman <mel@csn.ul.ie> Cc: Alexander Viro <viro@zeniv.linux.org.uk> Cc: Avi Kivity <avi@redhat.com> Acked-by: Michal Nazarewicz <mina86@mina86.org> Cc: Kosaki Motohiro <kosaki.motohiro@gmail.com> Cc: Milton Miller <miltonm@bga.com> Cc: Russell King <linux@arm.linux.org.uk> Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bitops.h | s | 3.1K | 112 | Chris Metcalf | cmetcalf@tilera.com | 1337972443 |  | tile: fix bug where fls(0) was not returning 0  This is because __builtin_clz(0) returns 64 for the "undefined" case of 0, since the builtin just does a right-shift 32 and "clz" instruction. So, use the alpha approach of casting to u32 and using __builtin_clzll().  Cc: stable@vger.kernel.org Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | dma.h | s | 762B | 21 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | checksum.h | s | 817B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | hw_irq.h | s | 645B | 16 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | setup.h | s | 1.6K | 46 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: fix hardwall for tilegx and generalize for idn and ipi  The hardwall drain code was not properly implemented for tilegx, just tilepro, so you couldn't reliably restart an application that made use of the udn.  In addition, the code was only applicable to the udn (user dynamic network).  On tilegx there is a second user network that is available (the "idn"), and there is support for having I/O shims deliver user-level interrupts to applications ("ipi") which functions in a very similar way to the inter-core permissions used for udn/idn. So this change also generalizes the code from supporting just the udn to supports udn/idn/ipi on tilegx.  By default we now use /dev/hardwall/{udn,idn,ipi} with separate minor numbers for the three devices.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | mmu_context.h | s | 4.5K | 118 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | ptrace.h | s | 5.0K | 134 | Mike Frysinger | vapier@gentoo.org | 1311724183 |  | ptrace: unify show_regs() prototype  [ poleg@redhat.com: no need to declare show_regs() in ptrace.h, sched.h does this ] Signed-off-by: Mike Frysinger <vapier@gentoo.org> Cc: Tejun Heo <tj@kernel.org> Signed-off-by: Oleg Nesterov <oleg@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | fixmap.h | s | 3.8K | 103 | Chris Metcalf | cmetcalf@tilera.com | 1308148538 |  | arch/tile: remove useless set_fixmap_nocache() macro  TILE doesn't support PAGE_KERNEL_NOCACHE so the macro isn't useful; it's a copy-and-paste from the first version of this header in 2007.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | spinlock_32.h | s | 3.4K | 107 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | cache.h | s | 1.7K | 42 | Chris Metcalf | cmetcalf@tilera.com | 1299014332 |  | arch/tile: catch up with section naming convention in 2.6.35  The convention changed to, e.g., ".data..page_aligned".  This commit fixes the places in the tile architecture that were still using the old convention.  One tile-specific section (.init.page) was dropped in favor of just using an "aligned" attribute.  Sam Ravnborg <sam@ravnborg.org> pointed out __PAGE_ALIGNED_BSS, etc.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | ftrace.h | s | 658B | 17 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | user.h | s | 717B | 18 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | sigcontext.h | s | 1.3K | 33 | Chris Metcalf | cmetcalf@tilera.com | 1320353916 |  | arch/tile: avoid ISO namespace pollution with <asm/sigcontext.h>  <asm/sigcontext.h> is used by glibc's <bits/sigcontext.h> from <signal.h>, which means that it can't clutter the namespace with random symbols or #defines.  However, we use <arch/abi.h> to get a suitable type to hold a machine register.  This change makes <arch/abi.h> safe to use in this kind of context if __need_int_reg_t is defined prior to including the file; in that case, it only defines a few symbols that are safe in the ISO namespace (prefixed with double underscores).  <asm/sigcontext.h> then uses the __uint_reg_t type instead of the normal uint_reg_t.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | hv_driver.h | s | 1.9K | 51 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | sigframe.h | s | 956B | 26 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | exec.h | s | 672B | 17 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | Kbuild | g | 934B |  | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: support <asm/cachectl.h> header for cacheflush() syscall  We already had a syscall that did some dcache flushing, but it was not used in practice.  Make it MIPS compatible instead so it can do both the DCACHE and ICACHE actions.  We have code that wants to be able to use the ICACHE flush mode from userspace so this change enables that.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | futex.h | s | 4.8K | 167 | Chris Metcalf | cmetcalf@tilera.com | 1337964503 |  | arch/tile: optimize get_user/put_user and friends  Use direct load/store for the get_user/put_user.  Previously, we would call out to a helper routine that would do the appropriate thing and then return, handling the possible exception internally.  Now we inline the load or store, along with a "we succeeded" indication in a register; if the load or store faults, we write a "we failed" indication into the same register and then return to the following instruction.  This is more efficient and gives us more compact code, as well as being more in line with what other architectures do.  The special futex assembly source file for TILE-Gx also disappears in this change; we just use the same inlining idiom there as well, putting the appropriate atomic operations directly into futex_atomic_op_inuser() (and thus into the FUTEX_WAIT function).  The underlying atomic copy_from_user, copy_to_user functions were renamed using the (cryptic) x86 convention as copy_from_user_ll and copy_to_user_ll.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | hardirq.h | s | 1.3K | 36 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | memprof.h | s | 1.3K | 30 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | atomic.h | s | 3.3K | 115 | Paul Gortmaker | paul.gortmaker@windriver.com | 1333382257 |  | tile: fix multiple build failures from system.h dismantle  Commit bd119c69239322caafdb64517a806037d0d0c70a      "Disintegrate asm/system.h for Tile"  created the asm/switch_to.h file, but did not add an include of it to all its users.  Also, commit b4816afa3986704d1404fc48e931da5135820472          "Move the asm-generic/system.h xchg() implementation to asm-generic/cmpxchg.h"  introduced the concept of asm/cmpxchg.h but the tile arch never got one.  Fork the cmpxchg content out of the asm/atomic.h file to create one.  Acked-by: David Howells <dhowells@redhat.com> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | mmu.h | s | 939B | 26 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | linkage.h | s | 1.5K | 42 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | spinlock_types.h | s | 1.6K | 47 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | hugetlb.h | s | 3.1K | 110 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: support multiple huge page sizes dynamically  This change adds support for a new "super" bit in the PTE, using the new arch_make_huge_pte() method.  The Tilera hypervisor sees the bit set at a given level of the page table and gangs together 4, 16, or 64 consecutive pages from that level of the hierarchy to create a larger TLB entry.  One extra "super" page size can be specified at each of the three levels of the page table hierarchy on tilegx, using the "hugepagesz" argument on the boot command line.  A new hypervisor API is added to allow Linux to tell the hypervisor how many PTEs to gang together at each level of the page table.  To allow pre-allocating huge pages larger than the buddy allocator can handle, this change modifies the Tilera bootmem support to put all of memory on tilegx platforms into bootmem.  As part of this change I eliminate the vestigial CONFIG_HIGHPTE support, which never worked anyway, and eliminate the hv_page_size() API in favor of the standard vma_kernel_pagesize() API.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | tlbflush.h | s | 4.0K | 110 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: support multiple huge page sizes dynamically  This change adds support for a new "super" bit in the PTE, using the new arch_make_huge_pte() method.  The Tilera hypervisor sees the bit set at a given level of the page table and gangs together 4, 16, or 64 consecutive pages from that level of the hierarchy to create a larger TLB entry.  One extra "super" page size can be specified at each of the three levels of the page table hierarchy on tilegx, using the "hugepagesz" argument on the boot command line.  A new hypervisor API is added to allow Linux to tell the hypervisor how many PTEs to gang together at each level of the page table.  To allow pre-allocating huge pages larger than the buddy allocator can handle, this change modifies the Tilera bootmem support to put all of memory on tilegx platforms into bootmem.  As part of this change I eliminate the vestigial CONFIG_HIGHPTE support, which never worked anyway, and eliminate the hv_page_size() API in favor of the standard vma_kernel_pagesize() API.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | tile-desc_64.h | s | 10K | 444 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | tile-desc.h | s | 650B | 18 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | pgtable_32.h | s | 4.2K | 109 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | irqflags.h | s | 9.9K | 258 | Chris Metcalf | cmetcalf@tilera.com | 1337964500 |  | arch/tile: use interrupt critical sections less  In general we want to avoid ever touching memory while within an interrupt critical section, since the page fault path goes through a different path from the hypervisor when in an interrupt critical section, and we carefully decided with tilegx that we didn't need to support this path in the kernel.  (On tilepro we did implement that path as part of supporting atomic instructions in software.)  In practice we always need to touch the kernel stack, since that's where we store the interrupt state before releasing the critical section, but this change cleans up a few things.  The IRQ_ENABLE macro is split up so that when we want to enable interrupts in a deferred way (e.g. for cpu_idle or for interrupt return) we can read the per-cpu enable mask before entering the critical section. The cache-migration code is changed to use interrupt masking instead of interrupt critical sections.  And, the interrupt-entry code is changed so that we defer loading "tp" from per-cpu data until after we have released the interrupt critical section.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | topology.h | s | 2.8K | 82 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1336568455 |  | sched/numa: Rewrite the CONFIG_NUMA sched domain support  The current code groups up to 16 nodes in a level and then puts an ALLNODES domain spanning the entire tree on top of that. This doesn't reflect the numa topology and esp for the smaller not-fully-connected machines out there today this might make a difference.  Therefore, build a proper numa topology based on node_distance().  Since there's no fixed numa layers anymore, the static SD_NODE_INIT and SD_ALLNODES_INIT aren't usable anymore, the new code tries to construct something similar and scales some values either on the number of cpus in the domain and/or the node_distance() ratio.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Anton Blanchard <anton@samba.org> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: David Howells <dhowells@redhat.com> Cc: "David S. Miller" <davem@davemloft.net> Cc: Fenghua Yu <fenghua.yu@intel.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: linux-alpha@vger.kernel.org Cc: linux-ia64@vger.kernel.org Cc: linux-kernel@vger.kernel.org Cc: linux-mips@linux-mips.org Cc: linuxppc-dev@lists.ozlabs.org Cc: linux-sh@vger.kernel.org Cc: Matt Turner <mattst88@gmail.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Richard Henderson <rth@twiddle.net> Cc: sparclinux@vger.kernel.org Cc: Tony Luck <tony.luck@intel.com> Cc: x86@kernel.org Cc: Dimitri Sivanich <sivanich@sgi.com> Cc: Greg Pearson <greg.pearson@hp.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: bob.picco@oracle.com Cc: chris.mason@oracle.com Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/n/tip-r74n3n8hhuc2ynbrnp3vt954@git.kernel.org Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | kexec.h | s | 2.2K | 55 | Chris Metcalf | cmetcalf@tilera.com | 1337964505 |  | arch/tile: support kexec() for tilegx  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | bitops_64.h | s | 2.8K | 84 | Chris Metcalf | cmetcalf@tilera.com | 1333382415 |  | arch/tile: fix gcc 4.6 warnings in <asm/bitops_64.h>  Fix some signedness and variable usage warnings in change_bit() and test_and_change_bit().  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | unistd.h | s | 1.5K | 40 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: support <asm/cachectl.h> header for cacheflush() syscall  We already had a syscall that did some dcache flushing, but it was not used in practice.  Make it MIPS compatible instead so it can do both the DCACHE and ICACHE actions.  We have code that wants to be able to use the ICACHE flush mode from userspace so this change enables that.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | syscall.h | s | 2.2K | 69 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | string.h | s | 1.1K | 28 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | processor.h | s | 10K | 307 | Linus Torvalds | torvalds@linux-foundation.org | 1337986778 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile  Pull tile updates from Chris Metcalf:  "These changes cover a range of new arch/tile features and   optimizations.  They've been through LKML review and on linux-next for   a month or so.  There's also one bug-fix that just missed 3.4, which   I've marked for stable."  Fixed up trivial conflict in arch/tile/Kconfig (new added tile Kconfig entries clashing with the generic timer/clockevents changes).  * git://git.kernel.org/pub/scm/linux/kernel/git/cmetcalf/linux-tile:   tile: default to tilegx_defconfig for ARCH=tile   tile: fix bug where fls(0) was not returning 0   arch/tile: mark TILEGX as not EXPERIMENTAL   tile/mm/fault.c: Port OOM changes to handle_page_fault   arch/tile: add descriptive text if the kernel reports a bad trap   arch/tile: allow querying cpu module information from the hypervisor   arch/tile: fix hardwall for tilegx and generalize for idn and ipi   arch/tile: support multiple huge page sizes dynamically   mm: add new arch_make_huge_pte() method for tile support   arch/tile: support kexec() for tilegx   arch/tile: support <asm/cachectl.h> header for cacheflush() syscall   arch/tile: Allow tilegx to build with either 16K or 64K page size   arch/tile: optimize get_user/put_user and friends   arch/tile: support building big-endian kernel   arch/tile: allow building Linux with transparent huge pages enabled   arch/tile: use interrupt critical sections less
f | page.h | s | 10K | 273 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: support multiple huge page sizes dynamically  This change adds support for a new "super" bit in the PTE, using the new arch_make_huge_pte() method.  The Tilera hypervisor sees the bit set at a given level of the page table and gangs together 4, 16, or 64 consecutive pages from that level of the hierarchy to create a larger TLB entry.  One extra "super" page size can be specified at each of the three levels of the page table hierarchy on tilegx, using the "hugepagesz" argument on the boot command line.  A new hypervisor API is added to allow Linux to tell the hypervisor how many PTEs to gang together at each level of the page table.  To allow pre-allocating huge pages larger than the buddy allocator can handle, this change modifies the Tilera bootmem support to put all of memory on tilegx platforms into bootmem.  As part of this change I eliminate the vestigial CONFIG_HIGHPTE support, which never worked anyway, and eliminate the hv_page_size() API in favor of the standard vma_kernel_pagesize() API.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | module.h | s | 1.1K | 33 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | percpu.h | s | 828B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | highmem.h | s | 2.1K | 62 | Cong Wang | amwang@redhat.com | 1332251310 |  | highmem: kill all __kmap_atomic() [swarren@nvidia.com: highmem: Fix ARM build break due to __kmap_atomic rename]  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Cong Wang <amwang@redhat.com>
f | syscalls.h | s | 2.6K | 67 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: support <asm/cachectl.h> header for cacheflush() syscall  We already had a syscall that did some dcache flushing, but it was not used in practice.  Make it MIPS compatible instead so it can do both the DCACHE and ICACHE actions.  We have code that wants to be able to use the ICACHE flush mode from userspace so this change enables that.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | auxvec.h | s | 676B | 17 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | cmpxchg.h | s | 2.0K | 65 | Paul Gortmaker | paul.gortmaker@windriver.com | 1333382257 |  | tile: fix multiple build failures from system.h dismantle  Commit bd119c69239322caafdb64517a806037d0d0c70a      "Disintegrate asm/system.h for Tile"  created the asm/switch_to.h file, but did not add an include of it to all its users.  Also, commit b4816afa3986704d1404fc48e931da5135820472          "Move the asm-generic/system.h xchg() implementation to asm-generic/cmpxchg.h"  introduced the concept of asm/cmpxchg.h but the tile arch never got one.  Fork the cmpxchg content out of the asm/atomic.h file to create one.  Acked-by: David Howells <dhowells@redhat.com> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | atomic_64.h | s | 4.4K | 131 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | pgalloc.h | s | 4.8K | 131 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | swab.h | s | 848B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1304534454 |  | arch/tile: various header improvements for building drivers  This change adds a number of missing headers in asm (fb.h, parport.h, serial.h, and vga.h) using the minimal generic versions.  It also adds a number of missing interfaces that showed up as build failures when trying to build various drivers not normally included in the "tile" distribution: ioremap_wc(), memset_io(), io{read,write}{16,32}be(), virt_to_bus(), bus_to_virt(), irq_canonicalize(), __pte(), __pgd(), and __pmd().  I also added a cast in virt_to_page() since not all callers pass a pointer.  I fixed <asm/stat.h> to properly include a __KERNEL__ guard for the __ARCH_WANT_STAT64 symbol, and <asm/swab.h> to use __builtin_bswap32() even for our 64-bit architecture, since the same code is produced.  I added an export for get_cycles(), since it's used in some modules.  And I made <arch/spr_def.h> properly include the __KERNEL__ guard, even though it's not yet exported, since it likely will be soon.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | asm-offsets.h | s | 35B | 1 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | thread_info.h | s | 5.7K | 157 | Chris Metcalf | cmetcalf@tilera.com | 1338996571 |  | tile: remove cpu_idle_on_new_stack  This routine isn't used unless CONFIG_HOMECACHE is enabled, which isn't even available as a public configuration option yet. Since it no longer links correctly in 3.4, just remove it for now.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | irq.h | s | 2.8K | 68 | Chris Metcalf | cmetcalf@tilera.com | 1333382416 |  | arch/tile: use 0 for IRQ_RESCHEDULE instead of 1  This avoids assigning IRQ 0 to PCI devices, because we've seen that doesn't always work well.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | timex.h | s | 1.7K | 43 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | bitops_32.h | s | 4.1K | 118 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | pgtable.h | s | 16K | 462 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: support multiple huge page sizes dynamically  This change adds support for a new "super" bit in the PTE, using the new arch_make_huge_pte() method.  The Tilera hypervisor sees the bit set at a given level of the page table and gangs together 4, 16, or 64 consecutive pages from that level of the hierarchy to create a larger TLB entry.  One extra "super" page size can be specified at each of the three levels of the page table hierarchy on tilegx, using the "hugepagesz" argument on the boot command line.  A new hypervisor API is added to allow Linux to tell the hypervisor how many PTEs to gang together at each level of the page table.  To allow pre-allocating huge pages larger than the buddy allocator can handle, this change modifies the Tilera bootmem support to put all of memory on tilegx platforms into bootmem.  As part of this change I eliminate the vestigial CONFIG_HIGHPTE support, which never worked anyway, and eliminate the hv_page_size() API in favor of the standard vma_kernel_pagesize() API.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | uaccess.h | s | 19K | 571 | Chris Metcalf | cmetcalf@tilera.com | 1339880173 |  | tile: fix bug in get_user() for 4-byte values  The definition of 32-bit values in the 64-bit tilegx architecture is that they should be sign-extended regardless of whether they are considered signed or unsigned by the compiler.  Accordingly, we need to use an "ld4s" rather than "ld4u" to load and sign-extend for get_user().  This fixes glibc bug 14238 (see http://sourceware.org/bugzilla), introduced during the 3.5 merge window.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | stat.h | s | 154B | 4 | Chris Metcalf | cmetcalf@tilera.com | 1304534454 |  | arch/tile: various header improvements for building drivers  This change adds a number of missing headers in asm (fb.h, parport.h, serial.h, and vga.h) using the minimal generic versions.  It also adds a number of missing interfaces that showed up as build failures when trying to build various drivers not normally included in the "tile" distribution: ioremap_wc(), memset_io(), io{read,write}{16,32}be(), virt_to_bus(), bus_to_virt(), irq_canonicalize(), __pte(), __pgd(), and __pmd().  I also added a cast in virt_to_page() since not all callers pass a pointer.  I fixed <asm/stat.h> to properly include a __KERNEL__ guard for the __ARCH_WANT_STAT64 symbol, and <asm/swab.h> to use __builtin_bswap32() even for our 64-bit architecture, since the same code is produced.  I added an export for get_cycles(), since it's used in some modules.  And I made <arch/spr_def.h> properly include the __KERNEL__ guard, even though it's not yet exported, since it likely will be soon.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | switch_to.h | s | 2.8K | 62 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Tile  Disintegrate asm/system.h for Tile.  Signed-off-by: David Howells <dhowells@redhat.com> Acked-by: Chris Metcalf <cmetcalf@tilera.com>
f | signal.h | s | 1.3K | 33 | David Howells | dhowells@redhat.com | 1323788869 |  | UAPI: Split trivial #if defined(__KERNEL__) && X conditionals  Split trivial #if defined(__KERNEL__) && X conditionals to make automated disintegration easier.  Signed-off-by: David Howells <dhowells@redhat.com>
f | mman.h | s | 1.4K | 33 | Chris Metcalf | cmetcalf@tilera.com | 1287083342 |  | arch/tile: provide a definition of MAP_STACK  It's convenient for userspace (in particular, glibc) to find a definition of MAP_STACK.  We use MAP_GROWSDOWN as an alias since that's appropriate for the main stack, and since our current allocation of mmap flags bits is running a bit short otherwise.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | stack.h | s | 2.7K | 61 | Chris Metcalf | cmetcalf@tilera.com | 1333383165 |  | arch/tile: various bugs in stack backtracer  Fix a long-standing bug in the stack backtracer where we would print garbage to the console instead of kernel function names, if the kernel wasn't built with symbol support (e.g. mboot).  Make sure to tag every line of userspace backtrace output if we actually have the mmap_sem, since that way if there's no tag, we know that it's because we couldn't trylock the semaphore.  Stop doing a TLB flush and examining page tables during backtrace. Instead, just trust that __copy_from_user_inatomic() will properly fault and return a failure, which it should do in all cases.  Fix a latent bug where the backtracer would directly examine a signal context in user space, rather than copying it safely to kernel memory first.  This meant that a race with another thread could potentially have caused a kernel panic.  Guard against unaligned sp when trying to restart backtrace at an interrupt or signal handler point in the kernel backtracer.  Report kernel symbolic information for the call instruction rather than for the following instruction.  We still report the actual numeric address corresponding to the instruction after the call, for the sake of consistency with the normal expectations for stack backtracers.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | vga.h | s | 1.1K | 31 | Chris Metcalf | cmetcalf@tilera.com | 1304534454 |  | arch/tile: various header improvements for building drivers  This change adds a number of missing headers in asm (fb.h, parport.h, serial.h, and vga.h) using the minimal generic versions.  It also adds a number of missing interfaces that showed up as build failures when trying to build various drivers not normally included in the "tile" distribution: ioremap_wc(), memset_io(), io{read,write}{16,32}be(), virt_to_bus(), bus_to_virt(), irq_canonicalize(), __pte(), __pgd(), and __pmd().  I also added a cast in virt_to_page() since not all callers pass a pointer.  I fixed <asm/stat.h> to properly include a __KERNEL__ guard for the __ARCH_WANT_STAT64 symbol, and <asm/swab.h> to use __builtin_bswap32() even for our 64-bit architecture, since the same code is produced.  I added an export for get_cycles(), since it's used in some modules.  And I made <arch/spr_def.h> properly include the __KERNEL__ guard, even though it's not yet exported, since it likely will be soon.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | byteorder.h | s | 779B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1337964502 |  | arch/tile: support building big-endian kernel  The toolchain supports big-endian mode now, so add support for building the kernel to run big-endian as well.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | spinlock.h | s | 741B | 21 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | homecache.h | s | 4.1K | 102 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
