f | spr_def_64.h | s | 7.8K | 211 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: fix hardwall for tilegx and generalize for idn and ipi  The hardwall drain code was not properly implemented for tilegx, just tilepro, so you couldn't reliably restart an application that made use of the udn.  In addition, the code was only applicable to the udn (user dynamic network).  On tilegx there is a second user network that is available (the "idn"), and there is support for having I/O shims deliver user-level interrupts to applications ("ipi") which functions in a very similar way to the inter-core permissions used for udn/idn. So this change also generalizes the code from supporting just the udn to supports udn/idn/ipi on tilegx.  By default we now use /dev/hardwall/{udn,idn,ipi} with separate minor numbers for the three devices.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | sim.h | s | 16K | 552 | Chris Metcalf | cmetcalf@tilera.com | 1299014442 |  | arch/tile: sync up with <arch/sim.h> and <arch/sim_def.h> changes  These headers are used by Linux but are maintained upstream. This change incorporates a few minor fixes to these headers, including a new sim_print() function, cleaner support for the sim_syscall() API, and a sim_query_cpu_speed() method.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | sim_def.h | s | 14K | 380 | Chris Metcalf | cmetcalf@tilera.com | 1299014442 |  | arch/tile: sync up with <arch/sim.h> and <arch/sim_def.h> changes  These headers are used by Linux but are maintained upstream. This change incorporates a few minor fixes to these headers, including a new sim_print() function, cleaner support for the sim_syscall() API, and a sim_query_cpu_speed() method.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | interrupts_64.h | s | 8.2K | 265 | Chris Metcalf | cmetcalf@tilera.com | 1305229932 |  | arch/tile: finish enabling support for TILE-Gx 64-bit chip  This support was partially present in the existing code (look for "__tilegx__" ifdefs) but with this change you can build a working kernel using the TILE-Gx toolchain and ARCH=tilegx.  Most of these files are new, generally adding a foo_64.c file where previously there was just a foo_32.c file.  The ARCH=tilegx directive redirects to arch/tile, not arch/tilegx, using the existing SRCARCH mechanism in the top-level Makefile.  Changes to existing files:  - <asm/bitops.h> and <asm/bitops_32.h> changed to factor the   include of <asm-generic/bitops/non-atomic.h> in the common header.  - <asm/compat.h> and arch/tile/kernel/compat.c changed to remove   the "const" markers I had put on compat_sys_execve() when trying   to match some recent similar changes to the non-compat execve.   It turns out the compat version wasn't "upgraded" to use const.  - <asm/opcode-tile_64.h> and <asm/opcode_constants_64.h> were   previously included accidentally, with the 32-bit contents.  Now   they have the proper 64-bit contents.  Finally, I had to hack the existing hacky drivers/input/input-compat.h to add yet another "#ifdef" for INPUT_COMPAT_TEST (same as x86_64).  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Dmitry Torokhov <dmitry.torokhov@gmail.com> [drivers/input]
f | spr_def.h | s | 3.8K | 96 | Chris Metcalf | cmetcalf@tilera.com | 1333382414 |  | arch/tile: fix typo in <arch/spr_def.h>  We aren't yet using this definition in the kernel, but fix it up before someone goes looking for it.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | icache.h | s | 2.6K | 75 | Chris Metcalf | cmetcalf@tilera.com | 1304534473 |  | arch/tile: kernel-related cleanups from removing static page size  User space code has been able to discover the static page size by including a special <hv/pagesize.h> file.  In the current release, that file is now gone, and <asm/page.h> doesn't rely on it.  The getpagesize() API is now the only way for userspace to get the page size.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | interrupts_32.h | s | 9.2K | 295 | Chris Metcalf | cmetcalf@tilera.com | 1300386726 |  | arch/tile: support newer binutils assembler shift semantics  This change supports building the kernel with newer binutils where a shift of greater than the word size is no longer interpreted silently as modulo the word size, but instead generates a warning.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | Kbuild | g | 408B |  | Chris Metcalf | cmetcalf@tilera.com | 1320353928 |  | arch/tile: add the <arch> headers to the set of installed kernel headers  These headers are similar to the <asm> headers that describe kernel APIs, but instead describe aspects of the actual hardware in an OS- and application-independent manner.  We need to include them in the set of installed headers so that userspace tools (including glibc) can build purely from the provided kernel headers.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | chip_tilepro.h | s | 7.8K | 183 | Chris Metcalf | cmetcalf@tilera.com | 1284563770 |  | arch/tile: Save and restore extra user state for tilegx  During context switch, save and restore a couple of additional bits of tilegx user state that can be persistently modified by userspace.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | chip_tilegx.h | s | 7.8K | 183 | Chris Metcalf | cmetcalf@tilera.com | 1305229932 |  | arch/tile: finish enabling support for TILE-Gx 64-bit chip  This support was partially present in the existing code (look for "__tilegx__" ifdefs) but with this change you can build a working kernel using the TILE-Gx toolchain and ARCH=tilegx.  Most of these files are new, generally adding a foo_64.c file where previously there was just a foo_32.c file.  The ARCH=tilegx directive redirects to arch/tile, not arch/tilegx, using the existing SRCARCH mechanism in the top-level Makefile.  Changes to existing files:  - <asm/bitops.h> and <asm/bitops_32.h> changed to factor the   include of <asm-generic/bitops/non-atomic.h> in the common header.  - <asm/compat.h> and arch/tile/kernel/compat.c changed to remove   the "const" markers I had put on compat_sys_execve() when trying   to match some recent similar changes to the non-compat execve.   It turns out the compat version wasn't "upgraded" to use const.  - <asm/opcode-tile_64.h> and <asm/opcode_constants_64.h> were   previously included accidentally, with the 32-bit contents.  Now   they have the proper 64-bit contents.  Finally, I had to hack the existing hacky drivers/input/input-compat.h to add yet another "#ifdef" for INPUT_COMPAT_TEST (same as x86_64).  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Dmitry Torokhov <dmitry.torokhov@gmail.com> [drivers/input]
f | opcode_tilepro.h | s | 36K | 1313 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | opcode.h | s | 722B | 20 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | spr_def_32.h | s | 9.2K | 252 | Chris Metcalf | cmetcalf@tilera.com | 1337964507 |  | arch/tile: fix hardwall for tilegx and generalize for idn and ipi  The hardwall drain code was not properly implemented for tilegx, just tilepro, so you couldn't reliably restart an application that made use of the udn.  In addition, the code was only applicable to the udn (user dynamic network).  On tilegx there is a second user network that is available (the "idn"), and there is support for having I/O shims deliver user-level interrupts to applications ("ipi") which functions in a very similar way to the inter-core permissions used for udn/idn. So this change also generalizes the code from supporting just the udn to supports udn/idn/ipi on tilegx.  By default we now use /dev/hardwall/{udn,idn,ipi} with separate minor numbers for the three devices.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | chip_tile64.h | s | 7.8K | 183 | Chris Metcalf | cmetcalf@tilera.com | 1284563770 |  | arch/tile: Save and restore extra user state for tilegx  During context switch, save and restore a couple of additional bits of tilegx user state that can be persistently modified by userspace.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | opcode_tilegx.h | s | 35K | 1274 | Chris Metcalf | cmetcalf@tilera.com | 1320353934 |  | arch/tile: factor out <arch/opcode.h> header  The kernel code was using some <asm> headers that included a mix of hardware-specific information (typically found in Tilera <arch> headers) and structures, enums, and function declarations supporting the disassembly function of the tile-desc.c sources.  This change refactors that code so that a hardware-specific, but OS- and application-agnostic header, is created: <arch/opcode.h>. This header is then exported to userspace along with the other <arch> headers and can be used to build userspace code; in particular, it is used by glibc as part of implementing the backtrace() function.  The new header, together with a header that specifically describes the disassembly code (<asm/tile-desc.h> with _32 and _64 variants), replaces the old <asm/opcode-tile*.h> and <asm/opcode_constants*.h> headers.  As part of this change, we are also renaming the 32-bit constants from TILE_xxx to TILEPRO_xxx to better reflect the fact that they are specific to the TILEPro architecture, and not to TILE-Gx and any successor "tile" architecture chips.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | chip.h | s | 771B | 22 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | abi.h | s | 3.6K | 102 | Chris Metcalf | cmetcalf@tilera.com | 1320353916 |  | arch/tile: avoid ISO namespace pollution with <asm/sigcontext.h>  <asm/sigcontext.h> is used by glibc's <bits/sigcontext.h> from <signal.h>, which means that it can't clutter the namespace with random symbols or #defines.  However, we use <arch/abi.h> to get a suitable type to hold a machine register.  This change makes <arch/abi.h> safe to use in this kind of context if __need_int_reg_t is defined prior to including the file; in that case, it only defines a few symbols that are safe in the ISO namespace (prefixed with double underscores).  <asm/sigcontext.h> then uses the __uint_reg_t type instead of the normal uint_reg_t.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | interrupts.h | s | 653B | 18 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
