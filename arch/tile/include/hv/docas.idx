f | hypervisor.h | s | 95K | 2144 | Chris Metcalf | cmetcalf@tilera.com | 1337964508 |  | arch/tile: allow querying cpu module information from the hypervisor  This just adds a few more attributes to the information Linux can query from the hypervisor for the /sys/hypervisor/board/ directory, providing part, serial#, revision#, and description for cpu modules (as opposed to the board itself, or any mezzanine boards).  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | drv_xgbe_intf.h | s | 22K | 516 | Chris Metcalf | cmetcalf@tilera.com | 1337964504 |  | arch/tile: Allow tilegx to build with either 16K or 64K page size  This change introduces new flags for the hv_install_context() API that passes a page table pointer to the hypervisor.  Clients can explicitly request 4K, 16K, or 64K small pages when they install a new context.  In practice, the page size is fixed at kernel compile time and the same size is always requested every time a new page table is installed.  The <hv/hypervisor.h> header changes so that it provides more abstract macros for managing "page" things like PFNs and page tables.  For example there is now a HV_DEFAULT_PAGE_SIZE_SMALL instead of the old HV_PAGE_SIZE_SMALL.  The various PFN routines have been eliminated and only PA- or PTFN-based ones remain (since PTFNs are always expressed in fixed 2KB "page" size).  The page-table management macros are renamed with a leading underscore and take page-size arguments with the presumption that clients will use those macros in some single place to provide the "real" macros they will use themselves.  I happened to notice the old hv_set_caching() API was totally broken (it assumed 4KB pages) so I changed it so it would nominally work correctly with other page sizes.  Tag modules with the page size so you can't load a module built with a conflicting page size.  (And add a test for SMP while we're at it.)  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | drv_pcie_rc_intf.h | s | 1.2K | 32 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | syscall_public.h | s | 1.5K | 34 | Chris Metcalf | cmetcalf@tilera.com | 1275685878 |  | arch/tile: core support for Tilera 32-bit chips.  This change is the core kernel support for TILEPro and TILE64 chips. No driver support (except the console driver) is included yet.  This includes the relevant Linux headers in asm/; the low-level low-level "Tile architecture" headers in arch/, which are shared with the hypervisor, etc., and are build-system agnostic; and the relevant hypervisor headers in hv/.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: FUJITA Tomonori <fujita.tomonori@lab.ntt.co.jp> Reviewed-by: Paul Mundt <lethal@linux-sh.org>
f | netio_errors.h | s | 4.1K | 99 | Chris Metcalf | cmetcalf@tilera.com | 1290622278 |  | drivers/net/tile/: on-chip network drivers for the tile architecture  This change adds the first network driver for the tile architecture, supporting the on-chip XGBE and GBE shims.  The infrastructure is present for the TILE-Gx networking drivers (another three source files in the new directory) but for now the the actual tilegx sources are waiting on releasing hardware to initial customers.  Note that arch/tile/include/hv/* are "upstream" headers from the Tilera hypervisor and will probably benefit less from LKML review.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | drv_srom_intf.h | s | 1.4K | 33 | Chris Metcalf | cmetcalf@tilera.com | 1307725668 |  | arch/tile: add hypervisor-based character driver for SPI flash ROM  The first version of this patch proposed an arch/tile/drivers/ directory, but the consensus was that this was probably a poor choice for a place to group Tilera-specific drivers, and that in any case grouping by platform was discouraged, and grouping by function was preferred.  This version of the patch addresses various issues raised in the community, primarily the absence of sysfs integration.  The sysfs integration now handles passing information on sector size, page size, and total partition size to userspace as well.  In addition, we now use a single "struct cdev" to manage all the partition minor devices, and dynamically discover the correct number of partitions from the hypervisor rather than using a module_param with a default value.  This driver has no particular "peer" drivers it can be grouped with. It is sort of like an MTD driver for SPI ROM, but it doesn't group well with the other MTD devices since it relies on hypervisor virtualization to handle many of the irritating aspects of flash ROM management: sector awareness, background read for sub-sector writes, bit examination to determine whether a sector erase needs to be issued, etc.  It is in fact more like an EEPROM driver, but the hypervisor virtualization does require a "flush" command if you wish to commit a sector write prior to writing to a different sector, and this is sufficiently different from generic I2C/SPI EEPROMs that as a result it doesn't group well with them either.  The simple character device is already in use by a range of Tilera SPI ROM management tools, as well as by customers.  In addition, using the simple character device actually simplifies the userspace tools, since they don't need to manage sector erase, background read, etc. This both simplifies the code (since we can uniformly manage plain files and the SPI ROM) as well as makes the user code portable to non-Linux platforms that don't offer the same MTD ioctls.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Reviewed-by: Arnd Bergmann <arnd@arndb.de>
f | netio_intf.h | s | 102K | 2566 | Chris Metcalf | cmetcalf@tilera.com | 1290622278 |  | drivers/net/tile/: on-chip network drivers for the tile architecture  This change adds the first network driver for the tile architecture, supporting the on-chip XGBE and GBE shims.  The infrastructure is present for the TILE-Gx networking drivers (another three source files in the new directory) but for now the the actual tilegx sources are waiting on releasing hardware to initial customers.  Note that arch/tile/include/hv/* are "upstream" headers from the Tilera hypervisor and will probably benefit less from LKML review.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | drv_xgbe_impl.h | s | 11K | 263 | Chris Metcalf | cmetcalf@tilera.com | 1290622278 |  | drivers/net/tile/: on-chip network drivers for the tile architecture  This change adds the first network driver for the tile architecture, supporting the on-chip XGBE and GBE shims.  The infrastructure is present for the TILE-Gx networking drivers (another three source files in the new directory) but for now the the actual tilegx sources are waiting on releasing hardware to initial customers.  Note that arch/tile/include/hv/* are "upstream" headers from the Tilera hypervisor and will probably benefit less from LKML review.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
f | drv_mshim_intf.h | s | 1.5K | 42 | Chris Metcalf | cmetcalf@tilera.com | 1299781814 |  | drivers/edac: provide support for tile architecture  Add tile support for the EDAC driver, which provides unified system error (memory, PCI, etc.) reporting. For now, the TILEPro port reports memory correctable error (CE) only.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>
