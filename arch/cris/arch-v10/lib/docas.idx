f | usercopy.c | s | 15K | 462 | Jesper Nilsson | jesper.nilsson@axis.com | 1204677316 |  | cris: correct usage of __user for copy to and from user space in lib/usercopy and uaccess.h  Function __copy_user_zeroing in arch/lib/usercopy.c had the wrong parameter set as __user, and in include/asm-cris/uaccess.h, it was not set at all for some of the calling functions.  This will cut the number of warnings quite dramatically when using sparse.  While we're here, remove useless CVS log and correct confusing typo.  Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com> Cc: Mikael Starvik <mikael.starvik@axis.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | string.c | s | 6.9K | 201 | Jesper Nilsson | jesper.nilsson@axis.com | 1204677313 |  | CRIS: Import string.c (memcpy) from newlib: fixes compile error with gcc 4  Adrian Bunk reported another compile error with a SVN head GCC:  ...   CC      arch/cris/arch-v10/lib/string.o /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/string.c:138: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/string.c:138: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/string.c:139: error: lvalue required as increment operand ...  This is due to the use of the construct:  	*((long*)dst)++ = lc;  Which isn't legal since casts don't return an lvalue.  The solution is to import the implementation from newlib, which is continually autotested together with GCC mainline, and uses the construct:  	*(long *) dst = lc; dst += 4;  Since this is an import of a file from newlib, I'm not touching the formatting or correcting any checkpatch errors.  As for the earlier fix for memset.c, even if the two files for CRIS v10 and CRIS v32 are identical at the moment, it might be possible to tweak the CRIS v32 version. Thus, I'm not yet folding them into the same file, at least not until we've done some research on it.  Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com> Cc: Mikael Starvik <starvik@axis.com> Cc: Adrian Bunk <bunk@stusta.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | csumcpfruser.S | g | 1.6K |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | Makefile | g | 131B |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1334827024 |  | cris: Remove old legacy "-traditional" flag from arch-v10/lib/Makefile  Most of these have been purged years ago.  This one silently lived on until commit 69349c2dc01c489eccaa4c472542c08e370c6d7e      "kconfig: fix IS_ENABLED to not require all options to be defined"  In the above, we use some macro trickery to create a conditional that is valid in CPP and in C usage.  However that trickery doesn't sit well if you have the legacy "-traditional" flag enabled.  You'll get:    AS      arch/cris/arch-v10/lib/checksum.o In file included from <command-line>:4:0: include/linux/kconfig.h:23:0: error: syntax error in macro parameter list make[2]: *** [arch/cris/arch-v10/lib/checksum.o] Error 1  Everything builds fine w/o "-traditional" so simply drop it from this location as well.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
f | old_checksum.c | s | 2.1K | 77 | Daniel Mack | daniel@caiaq.de | 1265710436 |  | tree-wide: Assorted spelling fixes  In particular, several occurances of funny versions of 'success', 'unknown', 'therefore', 'acknowledge', 'argument', 'achieve', 'address', 'beginning', 'desirable', 'separate' and 'necessary' are fixed.  Signed-off-by: Daniel Mack <daniel@caiaq.de> Cc: Joe Perches <joe@perches.com> Cc: Junio C Hamano <gitster@pobox.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | dram_init.S | g | 3.8K |  | Jesper Nilsson | jesper.nilsson@axis.com | 1202465191 |  | CRIS v10: Remove useless CVS id and log from lib/dram_init.S
f | checksumcopy.S | g | 2.4K |  | Jesper Nilsson | jesper.nilsson@axis.com | 1202465192 |  | CRIS v10: Remove duplicated folding of carry from lib/checksumcopy.S, it is not needed.  Also, remove useless CVS id tag.
f | checksum.S | g | 2.1K |  | Jesper Nilsson | jesper.nilsson@axis.com | 1202465192 |  | CRIS v10: Remove duplicated folding of carry from lib/checksum.S, it is not needed.  Also, remove useless CVS id tag.
f | memset.c | s | 7.3K | 222 | Jesper Nilsson | jesper.nilsson@axis.com | 1203051484 |  | cris: import memset.c from newlib: fixes compile error with newer (pre4.3) gcc  Adrian Bunk reported the following compile error with a SVN head GCC:  ... CC arch/cris/arch-v10/lib/memset.o /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c: In function 'memset': /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:164: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:165: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:166: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:167: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:185: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:189: error: lvalue required as increment operand /home/bunk/linux/kernel-2.6/git/linux-2.6/arch/cris/arch-v10/lib/memset.c:192: error: lvalue required as increment operand ... etc ...  This is due to the use of the construct:  	*((long*)dst)++ = lc;  Which is no longer legal since casts don't return an lvalue.  The solution is to import the implementation from newlib, which is continually autotested together with GCC mainline, and uses the construct:  	*(long *) dst = lc; dst += 4;  With this change, the generated code actually shrinks 76 bytes since gcc notices that it can use autoincrement for the move instruction in CRIS.     text    data     bss     dec     hex filename     304       0       0     304     130 memset.old.o    text    data     bss     dec     hex filename     228       0       0     228      e4 memset.o  Since this is an import of a file from newlib, I'm not touching the formatting or correcting any checkpatch errors.  Note also that even if the two files for the CRIS v10 and CRIS v32 are identical at the moment, it might be possible to tweak the CRIS v32 version. Thus, I'm not yet folding them into the same file, at least not until we've done some research on it.  Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com> Cc: Mikael Starvik <mikael.starvik@axis.com> Cc: Adrian Bunk <bunk@stusta.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | dmacopy.c | s | 871B | 31 | Jesper Nilsson | jesper.nilsson@axis.com | 1274792452 |  | CRISv10: Trivial fixes.  - Removed CVS id tag. - Formatting fixes  Signed-off-by: Andrea Gelmini <andrea.gelmini@gelma.net> Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
f | hw_settings.S | g | 1.5K |  | Jesper Nilsson | jesper.nilsson@axis.com | 1274792646 |  | CRISv10: Whitespace fixes for hw_settings.S  Remove trailing whitespace.  Signed-off-by: Andrea Gelmini <andrea.gelmini@gelma.net> Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
