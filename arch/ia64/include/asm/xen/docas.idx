f | hypervisor.h | s | 2.3K | 54 | Isaku Yamahata | yamahata@valinux.co.jp | 1257548695 |  | ia64/xen: compilation fix  This patch fixes the following compilation error introduced by a PCI related features.  The change set of 5dd1af9f84c79bedd589db89e71ca733f3bf0ebd moves some xen related definitions from the arch header file (x86/include/asm/xen/hypervisor.h) to the common header file (include/xen/xen.h).  So ia64/xen also follows it.  In file included from linux-next/include/xen/grant_table.h:41,                  from linux-next/drivers/block/xen-blkfront.c:48: linux-next/arch/ia64/include/asm/xen/hypervisor.h:43: error: nested redefinition of 'enum xen_domain_type' linux-next/arch/ia64/include/asm/xen/hypervisor.h:43: error: redeclaration of 'enum xen_domain_type' linux-next/arch/ia64/include/asm/xen/hypervisor.h:44: error: redeclaration of enumerator 'XEN_NATIVE' linux-next/include/xen/xen.h:5: error: previous definition of 'XEN_NATIVE' was here linux-next/arch/ia64/include/asm/xen/hypervisor.h:45: error: redeclaration of enumerator 'XEN_PV_DOMAIN' linux-next/include/xen/xen.h:6: error: previous definition of 'XEN_PV_DOMAIN' was here linux-next/arch/ia64/include/asm/xen/hypervisor.h:46: error: redeclaration of enumerator 'XEN_HVM_DOMAIN' linux-next/include/xen/xen.h:7: error: previous definition of 'XEN_HVM_DOMAIN' was here  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | events.h | s | 1.3K | 36 | Eric W. Biederman | ebiederm@xmission.com | 1266542278 |  | xen: Remove unnecessary arch specific xen irq functions.  Right now xen's use of the x86 and ia64 handle_irq is just bizarre and very fragile as it is very non-obvious the function exists and is is used by code out in drivers/....  Luckily using handle_irq is completely unnecessary, and we can just use the generic irq apis instead.  This still leaves drivers/xen/events.c as a problematic user of the generic irq apis it has "static struct irq_info irq_info[NR_IRQS]" but that can be fixed some other time.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> LKML-Reference: <4B7CAAD2.10803@kernel.org> Acked-by: Jeremy Fitzhardinge <jeremy@goop.org> Cc: Ian Campbell <Ian.Campbell@citrix.com> Signed-off-by: H. Peter Anvin <hpa@zytor.com>
f | hypercall.h | s | 7.4K | 229 | Ian Campbell | Ian.Campbell@eu.citrix.com | 1299021054 |  | xen: ia64 build broken due to "xen: switch to new schedop hypercall by default."  The git commit:  > commit a8b7458363b9174f3c2196ca6085630b4b30b7a1 > Author: Ian Campbell <ian.campbell@citrix.com> > Date:   Thu Feb 17 11:04:20 2011 +0000 > >     xen: switch to new schedop hypercall by default. > >     Rename old interface to sched_op_compat and rename sched_op_new to >     simply sched_op. >  breaks the IA64 build. This patch fixes it.  Signed-off-by: Tony Luck <tony.luck@intel.com> Signed-off-by: Ian Campbell <Ian.Campbell@eu.citrix.com> Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | xencomm.h | s | 1.5K | 37 | Isaku Yamahata | yamahata@valinux.co.jp | 1224262819 |  | ia64/xen: xencomm conversion functions for hypercalls  On ia64/xen, pointer arguments for hypercall is passed by pseudo physical address(guest physical address.) So such hypercalls needs address conversion functions. This patch implements concrete conversion functions for such hypercalls.  Signed-off-by: Akio Takebe <takebe_akio@jp.fujitsu.com> Signed-off-by: Yaozu (Eddie) Dong <eddie.dong@intel.com> Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | interface.h | s | 10K | 320 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1331401484 |  | xen/enlighten: Expose MWAIT and MWAIT_LEAF if hypervisor OKs it.  For the hypervisor to take advantage of the MWAIT support it needs to extract from the ACPI _CST the register address. But the hypervisor does not have the support to parse DSDT so it relies on the initial domain (dom0) to parse the ACPI Power Management information and push it up to the hypervisor. The pushing of the data is done by the processor_harveset_xen module which parses the information that the ACPI parser has graciously exposed in 'struct acpi_processor'.  For the ACPI parser to also expose the Cx states for MWAIT, we need to expose the MWAIT capability (leaf 1). Furthermore we also need to expose the MWAIT_LEAF capability (leaf 5) for cstate.c to properly function.  The hypervisor could expose these flags when it traps the XEN_EMULATE_PREFIX operations, but it can't do it since it needs to be backwards compatible. Instead we choose to use the native CPUID to figure out if the MWAIT capability exists and use the XEN_SET_PDC query hypercall to figure out if the hypervisor wants us to expose the MWAIT_LEAF capability or not.  Note: The XEN_SET_PDC query was implemented in c/s 23783: "ACPI: add _PDC input override mechanism".  With this in place, instead of  C3 ACPI IOPORT 415 we get now  C3:ACPI FFH INTEL MWAIT 0x20  Note: The cpu_idle which would be calling the mwait variants for idling never gets set b/c we set the default pm_idle to be the hypercall variant.  Acked-by: Jan Beulich <JBeulich@suse.com> [v2: Fix missing header file include and #ifdef] Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
f | minstate.h | s | 5.5K | 141 | Isaku Yamahata | yamahata@valinux.co.jp | 1238089832 |  | ia64/pv_ops/xen: paravirtualize read/write ar.itc and ar.itm  paravirtualize ar.itc and ar.itm in order to support save/restore.  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | patchlist.h | s | 1.7K | 37 | Isaku Yamahata | yamahata@valinux.co.jp | 1238089872 |  | ia64/pv_ops/xen: define xen specific gate page.  define xen specific gate page. At this phase bits in the gate page is same to native. At the next phase, it will be paravirtualized.  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | xcom_hcall.h | s | 1.9K | 37 | Isaku Yamahata | yamahata@valinux.co.jp | 1224262819 |  | ia64/xen: xencomm conversion functions for hypercalls  On ia64/xen, pointer arguments for hypercall is passed by pseudo physical address(guest physical address.) So such hypercalls needs address conversion functions. This patch implements concrete conversion functions for such hypercalls.  Signed-off-by: Akio Takebe <takebe_akio@jp.fujitsu.com> Signed-off-by: Yaozu (Eddie) Dong <eddie.dong@intel.com> Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | privop.h | s | 5.3K | 117 | Isaku Yamahata | yamahata@valinux.co.jp | 1238177464 |  | ia64: remove some warnings.  This patch removes the following warnings and related ones. Plus some cosmetics.  arch/ia64/kernel/patch.c:112: warning: passing argument 1 of 'paravirt_fc' makes integer from pointer without a cast arch/ia64/kernel/patch.c:135: warning: passing argument 1 of 'paravirt_fc' makes integer from pointer without a cast arch/ia64/kernel/patch.c:166: warning: passing argument 1 of 'paravirt_fc' makes integer from pointer without a cast arch/ia64/kernel/patch.c:202: warning: passing argument 1 of 'paravirt_fc' makes integer from pointer without a cast arch/ia64/kernel/patch.c:220: warning: passing argument 1 of 'paravirt_fc' makes integer from pointer without a cast  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | inst.h | s | 10K | 432 | Isaku Yamahata | yamahata@valinux.co.jp | 1238090515 |  | ia64/pv_ops/xen/gate.S: xen gate page paravirtualization  xen gate page paravirtualization  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | irq.h | s | 1.7K | 38 | Isaku Yamahata | yamahata@valinux.co.jp | 1224263219 |  | ia64/pv_ops/xen: define the nubmer of irqs which xen needs.  define arch/ia64/include/asm/xen/irq.h to define the number of irqs which xen needs.  Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
f | page.h | s | 1.8K | 54 | Isaku Yamahata | yamahata@valinux.co.jp | 1224262677 |  | ia64/xen: define helper functions for xen related address conversion.  Xen needs some address conversions between pseudo physical address (guest phsyical address), guest machine address (real machine address) and dma address. Define helper functions for those address conversion.  Cc: Jeremy Fitzhardinge <jeremy@goop.org> Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp> Signed-off-by: Tony Luck <tony.luck@intel.com>
