f | math_64.c | s | 15K | 498 | David S. Miller | davem@davemloft.net | 1337931116 |  | sparc64: Fix several bugs in quad floating point emulation.  UltraSPARC-T2 and later do not use the fp_exception_other trap and do not set the floating point trap type field in the %fsr at all when you try to execute an unimplemented FPU operation.  Instead, it uses the illegal_instruction trap and it leaves the floating point trap type field clear.  So we should not validate the %fsr trap type field when do_mathemu() is invoked from the illegal instruction handler.  Also, the floating point trap type field is 3 bits, not 4 bits.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | sfp-util_64.h | s | 4.1K | 112 | Linus Torvalds | torvalds@linux-foundation.org | 1274887815 |  | Revert "endian: #define __BYTE_ORDER"  This reverts commit b3b77c8caef1750ebeea1054e39e358550ea9f55, which was also totally broken (see commit 0d2daf5cc858 that reverted the crc32 version of it).  As reported by Stephen Rothwell, it causes problems on big-endian machines:  > In file included from fs/jfs/jfs_types.h:33, >                  from fs/jfs/jfs_incore.h:26, >                  from fs/jfs/file.c:22: > fs/jfs/endian24.h:36:101: warning: "__LITTLE_ENDIAN" is not defined  The kernel has never had that crazy "__BYTE_ORDER == __LITTLE_ENDIAN" model.  It's not how we do things, and it isn't how we _should_ do things.  So don't go there.  Requested-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sfp-util_32.h | s | 3.7K | 110 | Linus Torvalds | torvalds@linux-foundation.org | 1274887815 |  | Revert "endian: #define __BYTE_ORDER"  This reverts commit b3b77c8caef1750ebeea1054e39e358550ea9f55, which was also totally broken (see commit 0d2daf5cc858 that reverted the crc32 version of it).  As reported by Stephen Rothwell, it causes problems on big-endian machines:  > In file included from fs/jfs/jfs_types.h:33, >                  from fs/jfs/jfs_incore.h:26, >                  from fs/jfs/file.c:22: > fs/jfs/endian24.h:36:101: warning: "__LITTLE_ENDIAN" is not defined  The kernel has never had that crazy "__BYTE_ORDER == __LITTLE_ENDIAN" model.  It's not how we do things, and it isn't how we _should_ do things.  So don't go there.  Requested-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 147B |  | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | math_32.c | s | 17K | 483 | Peter Zijlstra | a.p.zijlstra@chello.nl | 1309511195 |  | perf: Remove the nmi parameter from the swevent and overflow interface  The nmi parameter indicated if we could do wakeups from the current context, if not, we would set some state and self-IPI and let the resulting interrupt do the wakeup.  For the various event classes:    - hardware: nmi=0; PMI is in fact an NMI or we run irq_work_run from     the PMI-tail (ARM etc.)   - tracepoint: nmi=0; since tracepoint could be from NMI context.   - software: nmi=[0,1]; some, like the schedule thing cannot     perform wakeups, and hence need 0.  As one can see, there is very little nmi=1 usage, and the down-side of not using it is that on some platforms some software events can have a jiffy delay in wakeup (when arch_irq_work_raise isn't implemented).  The up-side however is that we can remove the nmi parameter and save a bunch of conditionals in fast paths.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Michael Cree <mcree@orcon.net.nz> Cc: Will Deacon <will.deacon@arm.com> Cc: Deng-Cheng Zhu <dengcheng.zhu@gmail.com> Cc: Anton Blanchard <anton@samba.org> Cc: Eric B Munson <emunson@mgebm.net> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: David S. Miller <davem@davemloft.net> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Jason Wessel <jason.wessel@windriver.com> Cc: Don Zickus <dzickus@redhat.com> Link: http://lkml.kernel.org/n/tip-agjev8eu666tvknpb3iaj0fg@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
