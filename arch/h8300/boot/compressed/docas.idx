f | head.S | g | 1007B |  | Denys Vlasenko | vda.linux@googlemail.com | 1267611961 |  | Rename .text.startup to .text..startup.  Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | vmlinux.lds | g | 459B |  | Denys Vlasenko | vda.linux@googlemail.com | 1267611961 |  | Rename .text.startup to .text..startup.  Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | Makefile | g | 1.0K |  | matt mooney | mfm@muteddisk.com | 1300366975 |  | h8300: change to new flag variable  Replace EXTRA_AFLAGS with asflags-y.  Signed-off-by: matt mooney <mfm@muteddisk.com> Acked-by: WANG Cong <xiyou.wangcong@gmail.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | vmlinux.scr | g | 131B |  | Yoshinori Sato | ysato@users.sourceforge.jp | 1184601937 |  | h8300 zImage support update  - Add missing files - Add Makefile target - Change image base - Style fix  Signed-off-by: Yoshinori Sato <ysato@users.sourceforge.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | misc.c | s | 4.2K | 147 | Thomas Petazzoni | thomas.petazzoni@free-electrons.com | 1217008408 |  | inflate: refactor inflate malloc code  Inflate requires some dynamic memory allocation very early in the boot process and this is provided with a set of four functions: malloc/free/gzip_mark/gzip_release.  The old inflate code used a mark/release strategy rather than implement free.  This new version instead keeps a count on the number of outstanding allocations and when it hits zero, it resets the malloc arena.  This allows removing all the mark and release implementations and unifying all the malloc/free implementations.  The architecture-dependent code must define two addresses:  - free_mem_ptr, the address of the beginning of the area in which    allocations should be made  - free_mem_end_ptr, the address of the end of the area in which    allocations should be made. If set to 0, then no check is made on    the number of allocations, it just grows as much as needed  The architecture-dependent code can also provide an arch_decomp_wdog() function call.  This function will be called several times during the decompression process, and allow to notify the watchdog that the system is still running.  If an architecture provides such a call, then it must define ARCH_HAS_DECOMP_WDOG so that the generic inflate code calls arch_decomp_wdog().  Work initially done by Matt Mackall, updated to a recent version of the kernel and improved by me.  [akpm@linux-foundation.org: coding-style fixes] Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com> Cc: Matt Mackall <mpm@selenic.com> Cc: Richard Henderson <rth@twiddle.net> Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru> Cc: Mikael Starvik <mikael.starvik@axis.com> Cc: Jesper Nilsson <jesper.nilsson@axis.com> Cc: Haavard Skinnemoen <hskinnemoen@atmel.com> Cc: David Howells <dhowells@redhat.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Andi Kleen <andi@firstfloor.org> Cc: "H. Peter Anvin" <hpa@zytor.com> Acked-by: Paul Mundt <lethal@linux-sh.org> Acked-by: Yoshinori Sato <ysato@users.sourceforge.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
