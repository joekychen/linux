f | pci.c | s | 9.5K | 328 | Bjorn Helgaas | bhelgaas@google.com | 1330053544 |  | xtensa/PCI: get rid of device resource fixups  Tell the PCI core about host bridge address translation so it can take care of bus-to-resource conversion for us.  CC: Chris Zankel <chris@zankel.net> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | time.c | s | 2.6K | 93 | John Stultz | johnstul@us.ibm.com | 1321930864 |  | clocksource: xtensa: Convert to clocksource_register_hz/khz  This converts the xtensa clocksource to use clocksource_register_hz/khz  This is untested, so any assistance in testing would be appreciated!  CC: Chris Zankel <chris@zankel.net> CC: Thomas Gleixner <tglx@linutronix.de> Signed-off-by: John Stultz <johnstul@us.ibm.com>
f | Makefile | g | 1.2K |  | Thomas Gleixner | tglx@linutronix.de | 1336215626 |  | xtensa: Use generic init_task  Same code. Use the generic version.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Chris Zankel <chris@zankel.net> Link: http://lkml.kernel.org/r/20120503085035.804059531@linutronix.de
f | syscall.c | s | 1.5K | 50 | Al Viro | viro@zeniv.linux.org.uk | 1260983800 |  | sanitize do_pipe_flags() callers in arch  * hpux_pipe() - no need to take BKL * sys32_pipe() in arch/x86/ia32 and xtensa_pipe() in arch/xtensa - 	no need at all, since both functions are open-coded sys_pipe()  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | head.S | g | 4.8K |  | Chris Zankel | chris@zankel.net | 1272780329 |  | xtensa: Fixes due to bss boundary symbol name changes.  The bss start and end symbols have changed to __bss_start and __bss_stop.  Signed-off-by: Chris Zankel <chris@zankel.net>
f | asm-offsets.c | s | 4.5K | 100 | Chris Zankel | chris@zankel.net | 1272787513 |  | xtensa: Shuffle include statements to fix linker script  The linker script was including assembly macros from the coprocessor header file that is not otherwise used by the script.  Signed-off-by: Chris Zankel <chris@zankel.net>
f | platform.c | s | 1.3K | 41 | Johannes Weiner | hannes@cmpxchg.org | 1238741107 |  | xtensa: remove platform rtc hooks  platform_get/set_rtc_time() is not implemented by any of the supported xtensa platforms.  Remove the facility completely.  The initial seconds for xtime come from read_persistent_clock() which returns just 0 in the generic implementation.  Platforms that sport a persistent clock can implement this function.  This is needed to implement the ccount as a clock source.  Signed-off-by: Johannes Weiner <hannes@cmpxchg.org> Signed-off-by: Chris Zankel <chris@zankel.net>
f | align.S | g | 11K |  | Chris Zankel | czankel@tensilica.com | 1165773339 |  | [PATCH] xtensa: remove extra header files  The Xtensa port contained many header files that were never needed.  This rather lengthy patch removes all those files.  Unfortunately, there were many dependencies that needed to be updated, so this patch touches quite a few source files.  Signed-off-by: Chris Zankel <chris@zankel.net> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | ptrace.c | s | 8.0K | 277 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Xtensa  Disintegrate asm/system.h for Xtensa.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Chris Zankel <chris@zankel.net>
f | vmlinux.lds.S | g | 7.0K |  | Geert Uytterhoeven | geert@linux-m68k.org | 1340228375 |  | xtensa: replace xtensa-specific _f{data,text} by _s{data,text}  commit a2d063ac216c161 ("extable, core_kernel_data(): Make sure all archs define _sdata") missed xtensa.  Xtensa does have a start of data marker, but calls it _fdata, causing      kernel/built-in.o:(.text+0x964): undefined reference to `_sdata'  _stext was already defined, but it was duplicated by _fdata.  Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Chris Zankel <chris@zankel.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | traps.c | s | 12K | 431 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Xtensa  Disintegrate asm/system.h for Xtensa.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Chris Zankel <chris@zankel.net>
f | pci-dma.c | s | 2.3K | 76 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | irq.c | s | 3.2K | 120 | Thomas Gleixner | tglx@linutronix.de | 1303252329 |  | xtensa: Fixup irq conversion fallout and nmi_count  Some unnamed moron fatfingered the arguments of the irq chip callbacks to irq_chip instead of irq_data.  While at it remove the nmi_count() print in arch_show_interrupts() which has been broken before the irq conversion already.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | setup.c | s | 10K | 392 | David Howells | dhowells@redhat.com | 1332955803 |  | Disintegrate asm/system.h for Xtensa  Disintegrate asm/system.h for Xtensa.  Signed-off-by: David Howells <dhowells@redhat.com> cc: Chris Zankel <chris@zankel.net>
f | module.c | s | 4.9K | 179 | Jonas Bonn | jonas@southpole.se | 1311510964 |  | modules: make arch's use default loader hooks  This patch removes all the module loader hook implementations in the architecture specific code where the functionality is the same as that now provided by the recently added default hooks.  Signed-off-by: Jonas Bonn <jonas@southpole.se> Acked-by: Mike Frysinger <vapier@gentoo.org> Acked-by: Geert Uytterhoeven <geert@linux-m68k.org> Tested-by: Michal Simek <monstr@monstr.eu> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | coprocessor.S | g | 7.1K |  | Chris Zankel | chris@zankel.net | 1202953303 |  | [XTENSA] Add support for configurable registers and coprocessors  The Xtensa architecture allows to define custom instructions and registers. Registers that are bound to a coprocessor are only accessible if the corresponding enable bit is set, which allows to implement a 'lazy' context switch mechanism. Other registers needs to be saved and restore at the time of the context switch or during interrupt handling.  This patch adds support for these additional states:  - save and restore registers that are used by the compiler upon   interrupt entry and exit. - context switch additional registers unbound to any coprocessor - 'lazy' context switch of registers bound to a coprocessor - ptrace interface to provide access to additional registers - update configuration files in include/asm-xtensa/variant-fsf  Signed-off-by: Chris Zankel <chris@zankel.net>
f | entry.S | g | 45K |  | Al Viro | viro@zeniv.linux.org.uk | 1337659188 |  | xtensa: add handling of TIF_NOTIFY_RESUME  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | process.c | s | 7.8K | 278 | Suresh Siddha | suresh.b.siddha@intel.com | 1337206586 |  | fork: move the real prepare_to_copy() users to arch_dup_task_struct()  Historical prepare_to_copy() is mostly a no-op, duplicated for majority of the architectures and the rest following the x86 model of flushing the extended register state like fpu there.  Remove it and use the arch_dup_task_struct() instead.  Suggested-by: Oleg Nesterov <oleg@redhat.com> Suggested-by: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Link: http://lkml.kernel.org/r/1336692811-30576-1-git-send-email-suresh.b.siddha@intel.com Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: David Howells <dhowells@redhat.com> Cc: Koichi Yasutake <yasutake.koichi@jp.panasonic.com> Cc: Paul Mackerras <paulus@samba.org> Cc: Paul Mundt <lethal@linux-sh.org> Cc: Chris Zankel <chris@zankel.net> Cc: Richard Henderson <rth@twiddle.net> Cc: Russell King <linux@arm.linux.org.uk> Cc: Haavard Skinnemoen <hskinnemoen@gmail.com> Cc: Mike Frysinger <vapier@gentoo.org> Cc: Mark Salter <msalter@redhat.com> Cc: Aurelien Jacquiot <a-jacquiot@ti.com> Cc: Mikael Starvik <starvik@axis.com> Cc: Yoshinori Sato <ysato@users.sourceforge.jp> Cc: Richard Kuo <rkuo@codeaurora.org> Cc: Tony Luck <tony.luck@intel.com> Cc: Michal Simek <monstr@monstr.eu> Cc: Ralf Baechle <ralf@linux-mips.org> Cc: Jonas Bonn <jonas@southpole.se> Cc: James E.J. Bottomley <jejb@parisc-linux.org> Cc: Helge Deller <deller@gmx.de> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Chen Liqin <liqin.chen@sunplusct.com> Cc: Lennox Wu <lennox.wu@gmail.com> Cc: David S. Miller <davem@davemloft.net> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Jeff Dike <jdike@addtoit.com> Cc: Richard Weinberger <richard@nod.at> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
f | vectors.S | g | 13K |  | Jaswinder Singh Rajput | jaswinder@kernel.org | 1274800016 |  | xtensa: includecheck fix: vectors.S  fix the following 'make includecheck' warnings:    arch/xtensa/kernel/vectors.S: asm/processor.h is included more than once.   arch/xtensa/kernel/vectors.S: asm/ptrace.h is included more than once.  Signed-off-by: Jaswinder Singh Rajput <jaswinderrajput@gmail.com> Cc: Chris Zankel <chris@zankel.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | io.c | s | 1.9K | 68 | Chris Zankel | chris@zankel.net | 1188248002 |  | [XTENSA] Move string-io functions to io.c from pci.c  The string-io functions (outs{bwl}, ins{bwl}) are independent from the PCI option and should be in a separate file.  Signed-off-by: Chris Zankel <chris@zankel.net>
f | signal.c | s | 12K | 421 | Al Viro | viro@zeniv.linux.org.uk | 1338846454 |  | fixups for signal breakage  Obvious brainos spotted by Geert.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | xtensa_ksyms.c | s | 2.2K | 85 | Adrian Bunk | bunk@kernel.org | 1217953020 |  | remove unneeded #include <linux/ide.h>'s  This patch remove unneeded #include <linux/ide.h>'s.  It also adds a required #include <linux/interrupt.h> that was previously implicitely pulled by ide.h  Signed-off-by: Adrian Bunk <bunk@kernel.org> [bart: revert change to tests/lkdtm.c (spotted by Stephen Rothwell)] Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
