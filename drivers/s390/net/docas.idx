f | ctcm_main.c | s | 46K | 1657 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172169 |  | s390/ctc: cleanup drv attr usage  Rename attributes of the ctcm_group_driver. Also get rid of the call to driver_remove_file.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | fsm.c | s | 4.8K | 190 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | Makefile | g | 543B |  | Hendrik Brueckner | brueckner@linux.vnet.ibm.com | 1268047588 |  | [S390] smsgiucv_app: deliver z/VM CP special messages (SMSG) as uevents  The smsgiucv_app driver registers a callback with the smsgiucv driver to receive z/VM CP special messages (SMSG) starting with "APP".  When the callback is called for special messages, the driver creates an uevent for the received message.  The uevent consists of additional environment data containing the message prefix ("APP"), message sender, and message content.  udev rules can be used to trigger application specific actions through matching the content or sender of the special message.  Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ctcm_fsms.h | s | 8.1K | 311 | Ursula Braun | ursula.braun@de.ibm.com | 1258174020 |  | s390: remove cu3088 layer for lcs and ctcm  The cu3088-driver used as common base for lcs- and ctcm-devices makes it difficult to assign the appropriate driver to an lcs-device or a ctcm-device. This patch eliminates the cu3088-driver and thus the root device "cu3088". Path /sys/devices/cu3088 is replaced with the pathes /sys/devices/lcs and /sys/devices/ctcm.  Patch is based on a proposal from Cornelia Huck.  Cc: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | qeth_core.h | s | 25K | 838 | Linus Torvalds | torvalds@linux-foundation.org | 1337629277 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux  Pull s390 updates from Martin Schwidefsky:  "Just a random collection of bug-fixes and cleanups, nothing new in   this merge request."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (46 commits)   s390/ap: Fix wrong or missing comments   s390/ap: move receive callback to message struct   s390/dasd: re-prioritize partition detection message   s390/qeth: reshuffle initialization   s390/qeth: cleanup drv attr usage   s390/claw: cleanup drv attr usage   s390/lcs: cleanup drv attr usage   s390/ctc: cleanup drv attr usage   s390/ccwgroup: remove ccwgroup_create_from_string   s390/qeth: stop using struct ccwgroup driver for discipline callbacks   s390/qeth: switch to ccwgroup_create_dev   s390/claw: switch to ccwgroup_create_dev   s390/lcs: switch to ccwgroup_create_dev   s390/ctcm: switch to ccwgroup_create_dev   s390/ccwgroup: exploit ccwdev_by_dev_id   s390/ccwgroup: introduce ccwgroup_create_dev   s390: fix race on TIF_MCCK_PENDING   s390/barrier: make use of fast-bcr facility   s390/barrier: cleanup barrier functions   s390/claw: remove "eieio" calls   ...
f | lcs.c | s | 62K | 2227 | Linus Torvalds | torvalds@linux-foundation.org | 1337629277 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux  Pull s390 updates from Martin Schwidefsky:  "Just a random collection of bug-fixes and cleanups, nothing new in   this merge request."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (46 commits)   s390/ap: Fix wrong or missing comments   s390/ap: move receive callback to message struct   s390/dasd: re-prioritize partition detection message   s390/qeth: reshuffle initialization   s390/qeth: cleanup drv attr usage   s390/claw: cleanup drv attr usage   s390/lcs: cleanup drv attr usage   s390/ctc: cleanup drv attr usage   s390/ccwgroup: remove ccwgroup_create_from_string   s390/qeth: stop using struct ccwgroup driver for discipline callbacks   s390/qeth: switch to ccwgroup_create_dev   s390/claw: switch to ccwgroup_create_dev   s390/lcs: switch to ccwgroup_create_dev   s390/ctcm: switch to ccwgroup_create_dev   s390/ccwgroup: exploit ccwdev_by_dev_id   s390/ccwgroup: introduce ccwgroup_create_dev   s390: fix race on TIF_MCCK_PENDING   s390/barrier: make use of fast-bcr facility   s390/barrier: cleanup barrier functions   s390/claw: remove "eieio" calls   ...
f | qeth_l2_main.c | s | 35K | 1197 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172168 |  | s390/qeth: stop using struct ccwgroup driver for discipline callbacks  The interface between qeth and its disciplines should not depend on struct ccwgroup_driver, as a qeth discipline is not a ccwgroup driver on its own. Instead provide the particular callbacks in struct qeth_discipline.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | qeth_l3.h | s | 2.2K | 63 | Frank Blaschka | frank.blaschka@de.ibm.com | 1313223017 |  | qeth: add support for af_iucv HiperSockets transport  This patch extends the HiperSockets device driver to send and receive af_iucv traffic over HiperSockets transport. TX: Driver uses new asynchronous delivery of storage blocks to pass     flow control/congestion information from the HiperSockets microcode     to the af_iucv socket. RX: Memory for incoming traffic is preallocated and passed to     HiperSockets layer. If receiver is not capable to clean its buffers     shared with HiperSockets and pass new memory to the HiperSockets     layer this will cause flow control/congestion events on the     sender.  Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: Einar Lueck <elelueck@de.ibm.com> Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | qeth_core_sys.c | s | 18K | 623 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172168 |  | s390/qeth: stop using struct ccwgroup driver for discipline callbacks  The interface between qeth and its disciplines should not depend on struct ccwgroup_driver, as a qeth discipline is not a ccwgroup driver on its own. Instead provide the particular callbacks in struct qeth_discipline.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | qeth_l3_sys.c | s | 26K | 875 | Frank Blaschka | frank.blaschka@de.ibm.com | 1337196770 |  | qeth: remove token ring part 2  Commit 1abd2296b4a1ee7b6a883541c3ede52042a09521 starts removing token ring from qeth_l3. This patch removes the rest of token ring related code from the driver.  Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | claw.h | s | 14K | 306 | Heiko Carstens | heiko.carstens@de.ibm.com | 1281654262 |  | claw: rename READ/WRITE defines to avoid redefinitions  READ/WRITE seems to be a bit too generic for defines in a device driver. Just rename them to READ_CHANNEL/WRITE_CHANNEL which should suffice.  Fixes this:  In file included from drivers/s390/net/claw.c:93: drivers/s390/net/claw.h:78:1: warning: "WRITE" redefined In file included from /home2/heicarst/linux-2.6/arch/s390/include/asm/debug.h:12,                  from drivers/s390/net/claw.c:68: include/linux/fs.h:156:1: warning: this is the location of the previous definition  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | smsgiucv.c | s | 6.2K | 233 | Stefan Weil | weil@mail.berlios.de | 1296687602 |  | s390: Fix possibly wrong size in strncmp (smsgiucv)  This error was reported by cppcheck: drivers/s390/net/smsgiucv.c:63: error: Using sizeof for array given as function argument returns the size of pointer.  Although there is no runtime problem as long as sizeof(u8 *) == 8, this misleading code should get fixed.  Signed-off-by: Stefan Weil <weil@mail.berlios.de> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | netiucv.c | s | 58K | 1994 | Ursula Braun | ursula.braun@de.ibm.com | 1324407904 |  | netiucv: allow multiple interfaces to same peer  The NETIUCV device driver allows to connect a Linux guest on z/VM to another z/VM guest based on the z/VM communication facility IUCV. Multiple output paths to different guests are possible, as well as multiple input paths from different guests. With this feature, you can configure multiple point-to-point NETIUCV interfaces between your Linux on System z instance and another z/VM guest.  Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ctcm_sysfs.c | s | 5.1K | 174 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172167 |  | s390/ctcm: switch to ccwgroup_create_dev  Switch to the new ccwgroup_create_dev interface. Also wrap device attributes in a struct device_type and let the driver core create these attributes automagically.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ctcm_fsms.c | s | 73K | 2082 | Belinda Thompson | belindat@us.ibm.com | 1331189545 |  | ctcm: use correct idal word list for ctcmpc  Communication Server Linux uses the ctcmpc code of the ctcm driver. Sending problems have shown up caused by a wrong idal word list for the first ccw. Function ctcmpc_chx_txdone() invokes the function to prepare the idal word list without setting an appropriate length for the first ccw, which may lead to an incomplete idal word list. This patch sets the maximum buffer size as data length of the first ccw. Thus correct idal word lists are guaranteed in all cases.  Signed-off-by: Belinda Thompson <belindat@us.ibm.com> Reviewed-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ctcm_main.h | s | 6.9K | 262 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172167 |  | s390/ctcm: switch to ccwgroup_create_dev  Switch to the new ccwgroup_create_dev interface. Also wrap device attributes in a struct device_type and let the driver core create these attributes automagically.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | qeth_l3_main.c | s | 96K | 3341 | Linus Torvalds | torvalds@linux-foundation.org | 1337629277 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux  Pull s390 updates from Martin Schwidefsky:  "Just a random collection of bug-fixes and cleanups, nothing new in   this merge request."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (46 commits)   s390/ap: Fix wrong or missing comments   s390/ap: move receive callback to message struct   s390/dasd: re-prioritize partition detection message   s390/qeth: reshuffle initialization   s390/qeth: cleanup drv attr usage   s390/claw: cleanup drv attr usage   s390/lcs: cleanup drv attr usage   s390/ctc: cleanup drv attr usage   s390/ccwgroup: remove ccwgroup_create_from_string   s390/qeth: stop using struct ccwgroup driver for discipline callbacks   s390/qeth: switch to ccwgroup_create_dev   s390/claw: switch to ccwgroup_create_dev   s390/lcs: switch to ccwgroup_create_dev   s390/ctcm: switch to ccwgroup_create_dev   s390/ccwgroup: exploit ccwdev_by_dev_id   s390/ccwgroup: introduce ccwgroup_create_dev   s390: fix race on TIF_MCCK_PENDING   s390/barrier: make use of fast-bcr facility   s390/barrier: cleanup barrier functions   s390/claw: remove "eieio" calls   ...
f | ctcm_mpc.c | s | 58K | 1900 | Ursula Braun | ursula.braun@de.ibm.com | 1331189545 |  | ctcm: make ctcmpc debugging compilable  ctcmpc debugging can be activated defining constant DEBUGCCW. The debugging part contains wrong checks for 64 bit addresses. Thus the debugging version does not compile. This patch corrects the 64-bit address checks to make it compilable.  Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Reviewed-by: Belinda Thompson <belindat@us.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | smsgiucv.h | s | 383B | 11 | Hendrik Brueckner | brueckner@linux.vnet.ibm.com | 1268047588 |  | [S390] smsgiucv_app: deliver z/VM CP special messages (SMSG) as uevents  The smsgiucv_app driver registers a callback with the smsgiucv driver to receive z/VM CP special messages (SMSG) starting with "APP".  When the callback is called for special messages, the driver creates an uevent for the received message.  The uevent consists of additional environment data containing the message prefix ("APP"), message sender, and message content.  udev rules can be used to trigger application specific actions through matching the content or sender of the special message.  Signed-off-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | ctcm_mpc.h | s | 5.2K | 211 | Alexey Dobriyan | adobriyan@gmail.com | 1307426111 |  | net: remove interrupt.h inclusion from netdevice.h  * remove interrupt.g inclusion from netdevice.h -- not needed * fixup fallout, add interrupt.h and hardirq.h back where needed.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | claw.c | s | 113K | 3108 | Sebastian Ott | sebott@linux.vnet.ibm.com | 1337172170 |  | s390/claw: cleanup drv attr usage  Rename attributes of the claw_group_driver. Also get rid of the call to driver_remove_file.  Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | qeth_core_main.c | s | 151K | 5003 | Linus Torvalds | torvalds@linux-foundation.org | 1337629277 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux  Pull s390 updates from Martin Schwidefsky:  "Just a random collection of bug-fixes and cleanups, nothing new in   this merge request."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux: (46 commits)   s390/ap: Fix wrong or missing comments   s390/ap: move receive callback to message struct   s390/dasd: re-prioritize partition detection message   s390/qeth: reshuffle initialization   s390/qeth: cleanup drv attr usage   s390/claw: cleanup drv attr usage   s390/lcs: cleanup drv attr usage   s390/ctc: cleanup drv attr usage   s390/ccwgroup: remove ccwgroup_create_from_string   s390/qeth: stop using struct ccwgroup driver for discipline callbacks   s390/qeth: switch to ccwgroup_create_dev   s390/claw: switch to ccwgroup_create_dev   s390/lcs: switch to ccwgroup_create_dev   s390/ctcm: switch to ccwgroup_create_dev   s390/ccwgroup: exploit ccwdev_by_dev_id   s390/ccwgroup: introduce ccwgroup_create_dev   s390: fix race on TIF_MCCK_PENDING   s390/barrier: make use of fast-bcr facility   s390/barrier: cleanup barrier functions   s390/claw: remove "eieio" calls   ...
f | lcs.h | s | 7.6K | 309 | Ursula Braun | ursula.braun@de.ibm.com | 1258174020 |  | s390: remove cu3088 layer for lcs and ctcm  The cu3088-driver used as common base for lcs- and ctcm-devices makes it difficult to assign the appropriate driver to an lcs-device or a ctcm-device. This patch eliminates the cu3088-driver and thus the root device "cu3088". Path /sys/devices/cu3088 is replaced with the pathes /sys/devices/lcs and /sys/devices/ctcm.  Patch is based on a proposal from Cornelia Huck.  Cc: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ctcm_dbug.c | s | 1.9K | 68 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | qeth_core_mpc.h | s | 18K | 559 | Frank Blaschka | frank.blaschka@de.ibm.com | 1337196770 |  | qeth: remove token ring part 2  Commit 1abd2296b4a1ee7b6a883541c3ede52042a09521 starts removing token ring from qeth_l3. This patch removes the rest of token ring related code from the driver.  Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 3.6K |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1337126901 |  | s390: delete any traces of token ring support  The token ring support is going away from the core kernel. Divorce the S390 drivers from it in advance.  Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: linux390@de.ibm.com Cc: linux-s390@vger.kernel.org Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | fsm.h | s | 6.3K | 240 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | qeth_core_mpc.c | s | 8.9K | 248 | Ursula Braun | ursula.braun@de.ibm.com | 1331189545 |  | qeth: meaningful return code for set_mac_address  Setting an invalid mac-address for a qeth layer2 device returns with a strange error code: # ip link set hsi1 address 00:00:00:00:00:01    RTNETLINK answers: Unknown error 18446744073709486085 Problem is caused by wrong usage of the return_code field within structure qeth_ipa_cmd. With this patch the ip command above returns    SIOCSIFHWADDR: Invalid argument  Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Frank Blaschka <frank.blaschka@de.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | smsgiucv_app.c | s | 5.4K | 181 | Alan Stern | stern@rowland.harvard.edu | 1327449634 |  | Driver core: driver_find() drops reference before returning  As part of the removal of get_driver()/put_driver(), this patch (as1510) changes driver_find(); it now drops the reference it acquires before returning.  The patch also adjusts all the callers of driver_find() to remove the now unnecessary calls to put_driver().  In addition, the patch adds a warning to driver_find(): Callers must make sure the driver they are searching for does not get unloaded while they are using it.  This has always been the case; driver_find() has never prevented a driver from being unregistered or unloaded. Hence the patch will not introduce any new bugs.  The existing callers all seem to be okay in this respect, however I don't understand the video drivers well enough to be certain about them.  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> CC: Dmitry Torokhov <dmitry.torokhov@gmail.com> CC: Kyungmin Park <kyungmin.park@samsung.com> CC: Andy Walls <awalls@md.metrocast.net> CC: Martin Schwidefsky <schwidefsky@de.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | ctcm_dbug.h | s | 3.2K | 122 | Peter Tiedemann | ptiedem@de.ibm.com | 1216763626 |  | s390/net/ctcm: message cleanup  Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Signed-off-by: Peter Tiedemann <ptiedem@de.ibm.com> Signed-off-by: Ursula Braun <ursula.braun@de.ibm.com> Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
