f | dasd_alias.c | s | 27K | 871 | Stefan Haberland | stefan.haberland@de.ibm.com | 1326906222 |  | [S390] dasd: revert LCU optimization  Remove the optimization that validate server is only called once per LCU. If a device is set online we only know that we already know the LCU. But if the pathgroup was lost in between we have to do a validate server again to activate some features. Since we have no indication when a pathgroup gets lost we have to do a validate server every time a device is set online.  Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_erp.c | s | 4.8K | 157 | Stefan Weinhuber | wein@de.ibm.com | 1294228050 |  | [S390] dasd: do path verification for paths added at runtime  When a new path is added at runtime, the CIO layer will call the drivers path_event callback. The DASD device driver uses this callback to trigger a path verification for the new path. The driver will use only those paths for I/O, which have been successfully verified.  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | Makefile | g | 551B |  | Stefan Weinhuber | wein@de.ibm.com | 1201353088 |  | [S390] dasd: add hyper PAV support to DASD device driver, part 1  Parallel access volumes (PAV) is a storage server feature, that allows to start multiple channel programs on the same DASD in parallel. It defines alias devices which can be used as alternative paths to the same disk. With the old base PAV support we only needed rudimentary functionality in the DASD device driver. As the mapping between base and alias devices was static, we just had to export an identifier (uid) and could leave the combining of devices to external layers like a device mapper multipath. Now hyper PAV removes the requirement to dedicate alias devices to specific base devices. Instead each alias devices can be combined with multiple base device on a per request basis. This requires full support by the DASD device driver as now each channel program itself has to identify the target base device. The changes to the dasd device driver and the ECKD discipline are: - Separate subchannel device representation (dasd_device) from block   device representation (dasd_block). Only base devices are block   devices. - Gather information about base and alias devices and possible   combinations. - For each request decide which dasd_device should be used (base or   alias) and build specific channel program. - Support summary unit checks, which allow the storage server to   upgrade / downgrade between base and hyper PAV at runtime (support   is mandatory).  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_fba.h | s | 1.8K | 67 | Horst Hummel | horst.hummel@de.ibm.com | 1151585892 |  | [S390] dasd whitespace and other cosmetics.  Dasd code cleanup: 1) remove white space, 2) remove the emacs override sections, and 3) use kzalloc instead of kmalloc.  Signed-off-by: Horst Hummel <horst.hummel@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_eckd.c | s | 119K | 3958 | Julia Lawall | Julia.Lawall@lip6.fr | 1334147304 |  | [S390] drivers/s390/block/dasd_eckd.c: add missing dasd_sfree_request  Extend some error paths to call dasd_sfree_request as done earlier in the function.  The error-handling code is also moved to the end of the function.  Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_int.h | s | 25K | 675 | Heiko Carstens | heiko.carstens@de.ibm.com | 1337847005 |  | s390/headers: remove #ifdef __KERNEL__ from not exported headers  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_fba.c | s | 17K | 578 | Peter Oberparleiter | peter.oberparleiter@de.ibm.com | 1319984175 |  | [S390] fix mismatch in summation of I/O IRQ statistics  Current IRQ statistics support does not show detail counts for I/O interrupts which are processed internally only. The result is a summation count which is way off such as this one:             CPU0       CPU1       CPU2 I/O:       1331        710        442 [...] QAI:         15         16         16   [I/O] QDIO Adapter Interrupt QDI:          1          0          0   [I/O] QDIO Interrupt DAS:        706        645        381   [I/O] DASD C15:         26         10          0   [I/O] 3215 C70:          0          0          0   [I/O] 3270 TAP:          0          0          0   [I/O] Tape VMR:          0          0          0   [I/O] Unit Record Devices LCS:          0          0          0   [I/O] LCS CLW:          0          0          0   [I/O] CLAW CTC:          0          0          0   [I/O] CTC APB:          0          0          0   [I/O] AP Bus  Fix this by moving I/O interrupt accounting into the common I/O layer.  Signed-off-by: Peter Oberparleiter <peter.oberparleiter@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dcssblk.c | s | 26K | 991 | Christoph Hellwig | hch@infradead.org | 1315822321 |  | block: remove support for bio remapping from ->make_request  There is very little benefit in allowing to let a ->make_request instance update the bios device and sector and loop around it in __generic_make_request when we can archive the same through calling generic_make_request from the driver and letting the loop in generic_make_request handle it.  Note that various drivers got the return value from ->make_request and returned non-zero values for errors.  Signed-off-by: Christoph Hellwig <hch@lst.de> Acked-by: NeilBrown <neilb@suse.de> Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
f | dasd_proc.c | s | 9.7K | 342 | Stefan Weinhuber | wein@de.ibm.com | 1312382659 |  | [S390] dasd: use vmalloc for statistics input buffer  The size of the buffer that is used to store DASD statistics input strings depends on the user input. If the input string is to large, the write operation could fail with -ENOMEM. To avoid this, use vmalloc instead of kmalloc.  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
f | dasd_3990_erp.c | s | 68K | 2370 | Stefan Weinhuber | wein@de.ibm.com | 1324981633 |  | [S390] dasd: fix expiration handling for recovery requests  The 'expires' value of a ccw requests defines how long the device driver should wait for a response from the evice after the request has been submitted to the channel subsystem. After the expiration time (e.g. 30 seconds) the waiting request will be cancelled and started again. This protects the DASD devices from beeing blocked by errors that cause the answering I/O interrupt to be lost.  In case of error recovery requests, this 'expires' value used to be set to 0, so in case of a lost interrupt, such a recovery request would never expire and block the device. To prevent this kind of problem, all recovery requests need to have an expires value > 0 as well. If not specified otherwise, this should be the same expires value as for the original request.  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_eckd.h | s | 11K | 428 | Stefan Haberland | stefan.haberland@de.ibm.com | 1294228050 |  | [S390] dasd: Add support for raw ECKD access.  Normal I/O operations through the DASD device driver give only access to the data fields of an ECKD device even for track based I/O. This patch extends the DASD device driver to give access to whole ECKD tracks including count, key and data fields.  Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_diag.h | s | 2.4K | 106 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1288015819 |  | [S390] cleanup lowcore access from external interrupts  Read external interrupts parameters from the lowcore in the first level interrupt handler in entry[64].S.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd.c | s | 94K | 3211 | Stefan Haberland | stefan.haberland@de.ibm.com | 1331481569 |  | [S390] dasd: prevent validate server for offline devices  Calling validate server on devices in offline processing may cause an OOPS in the dasd_sleep_on function.  Signed-off-by: Stefan Haberland <stefan.haberland@de.ibm.com> Reviewed-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_diag.c | s | 17K | 596 | Heiko Carstens | heiko.carstens@de.ibm.com | 1331481569 |  | [S390] irq: external interrupt code passing  The external interrupt handlers have a parameter called ext_int_code. Besides the name this paramter does not only contain the ext_int_code but in addition also the "cpu address" (POP) which caused the external interrupt. To make the code a bit more obvious pass a struct instead so the called function can easily distinguish between external interrupt code and cpu address. The cpu address field however is named "subcode" since some external interrupt sources do not pass a cpu address but a different parameter (or none at all).  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_eer.c | s | 19K | 630 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 2.0K |  | Martin Schwidefsky | schwidefsky@de.ibm.com | 1294228043 |  | [S390] cleanup s390 Kconfig  Make use of def_bool and def_tristate where possible and add sensible defaults to the config symbols where applicable. This shortens the defconfig file by another ~40 lines.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | dasd_ioctl.c | s | 12K | 458 | Heiko Carstens | heiko.carstens@de.ibm.com | 1330358067 |  | compat: fix compile breakage on s390  The new is_compat_task() define for the !COMPAT case in include/linux/compat.h conflicts with a similar define in arch/s390/include/asm/compat.h.  This is the minimal patch which fixes the build issues.  Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | dasd_devmap.c | s | 33K | 1229 | Stefan Weinhuber | wein@de.ibm.com | 1303287343 |  | [S390] dasd: fix race between open and offline  The dasd_open function uses the private_data pointer of the gendisk to find the dasd_block structure that matches the gendisk. When a DASD device is set offline, we set the private_data pointer of the gendisk to NULL and later remove the dasd_block structure, but there is still a small race window, in which dasd_open could first read a pointer from the private_data field and then try to use it, after the structure has already been freed. To close this race window, we will store a pointer to the dasd_devmap structure of the base device in the private_data field. The devmap entries are not deleted, and we already have proper locking and reference counting in place, so that we can safely get from a devmap pointer to the dasd_device and dasd_block structures of the device.  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
f | xpram.c | s | 11K | 429 | Kay Sievers | kay.sievers@vrfy.org | 1324513563 |  | driver-core: remove sysdev.h usage.  The sysdev.h file should not be needed by any in-kernel code, so remove the .h file from these random files that seem to still want to include it.  The sysdev code will be going away soon, so this include needs to be removed no matter what.  Cc: Jiandong Zheng <jdzheng@broadcom.com> Cc: Scott Branden <sbranden@broadcom.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Kukjin Kim <kgene.kim@samsung.com> Cc: David Brown <davidb@codeaurora.org> Cc: Daniel Walker <dwalker@fifo99.com> Cc: Bryan Huntsman <bryanh@codeaurora.org> Cc: Ben Dooks <ben-linux@fluff.org> Cc: Wan ZongShun <mcuos.com@gmail.com> Cc: Haavard Skinnemoen <hskinnemoen@gmail.com> Cc: Hans-Christian Egtvedt <egtvedt@samfundet.no> Cc: Guan Xuetao <gxt@mprc.pku.edu.cn> Cc: "Venkatesh Pallipadi Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Grant Likely <grant.likely@secretlab.ca> Cc: Richard Purdie <rpurdie@rpsys.net> Cc: Matthew Garrett <mjg@redhat.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org>
f | dasd_genhd.c | s | 4.8K | 159 | Stefan Weinhuber | wein@de.ibm.com | 1303287343 |  | [S390] dasd: fix race between open and offline  The dasd_open function uses the private_data pointer of the gendisk to find the dasd_block structure that matches the gendisk. When a DASD device is set offline, we set the private_data pointer of the gendisk to NULL and later remove the dasd_block structure, but there is still a small race window, in which dasd_open could first read a pointer from the private_data field and then try to use it, after the structure has already been freed. To close this race window, we will store a pointer to the dasd_devmap structure of the base device in the private_data field. The devmap entries are not deleted, and we already have proper locking and reference counting in place, so that we can safely get from a devmap pointer to the dasd_device and dasd_block structures of the device.  Signed-off-by: Stefan Weinhuber <wein@de.ibm.com> Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
