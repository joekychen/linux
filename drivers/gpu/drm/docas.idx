d | cirrus |  | 8 items |  | Dave Airlie | airlied@redhat.com | 1338545469 |  | drm/cirrus: kick out conflicting framebuffers earlier  It appears that grub2 will pass framebuffer info via EFI, this causes the vram reserve to fail, so kick out efifb earlier before cirrus loads.  Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=826983 Signed-off-by: Dave Airlie <airlied@redhat.com>
f | Makefile | g | 1.6K |  | Dave Airlie | airlied@redhat.com | 1337248944 |  | drm/kms: driver for virtual cirrus under qemu  This is the initial driver for emulated cirrus GPU found in qemu. This driver only supports the emulated GPU and doesn't attempt to bind to any real cirrus GPUs.  This driver is intended to be used with xf86-video-modesetting in userspace. It requires at least version 0.3.0  This follow the same design as ast and mgag200, and is based on work done by Matthew Garrett previously.  This GPU has no hw cursor, and it can't scanout 32-bpp, only packed 24-bpp. i.e. it sucks.  Reviewed-by: Adam Jackson <ajax@redhat.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_edid_load.c | s | 7.8K | 221 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679178 |  | drm: Don't initialize local ret variable when not needed  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_trace_points.c | s | 70B | 3 | Jesse Barnes | jbarnes@virtuousgeek.org | 1278043364 |  | drm: add vblank event trace point  Emit a trace point for vblank events.  This can be helpful for mapping drawing activity against the vblank frequency and period.  Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_context.c | s | 11K | 404 | Ville Syrjälä | ville.syrjala@linux.intel.com | 1335257420 |  | drm: Unify and fix idr error handling  The error handling code w.r.t. idr usage looks inconsistent.  In the case of drm_mode_object_get() and drm_ctxbitmap_next() the error handling is also incomplete.  Unify the code to follow the same pattern always.  Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_memory.c | s | 4.3K | 126 | Sascha Hauer | s.hauer@pengutronix.de | 1330510709 |  | drm: remove unused code  remove declared but unused functions from drmP.h, fix the comments where necessary. Also, remove drm_mem_info which is unused.  Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_hashtab.c | s | 5.2K | 177 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | README.drm | g | 1.7K |  | Dave Airlie | airlied@redhat.com | 1215996301 |  | drm: reorganise drm tree to be more future proof.  With the coming of kernel based modesetting and the memory manager stuff, the everything in one directory approach was getting very ugly and starting to be unmanageable.  This restructures the drm along the lines of other kernel components.  It creates a drivers/gpu/drm directory and moves the hw drivers into subdirectores. It moves the includes into an include/drm, and sets up the unifdef for the userspace headers we should be exporting.  Signed-off-by: Dave Airlie <airlied@redhat.com>
d | gma500 |  | 63 items |  | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679307 |  | drm: Constify drm_mode_config_funcs pointer  The DRM mode config functions structure declared by drivers and pointed to by the drm_mode_config funcs field is never modified. Make it a const pointer.  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Cc: Inki Dae <inki.dae@samsung.com> Cc: Alan Cox <alan@linux.intel.com> Cc: Daniel Vetter <daniel.vetter@ffwll.ch> Cc: Ben Skeggs <bskeggs@redhat.com> Cc: Thomas Hellstrom <thellstrom@vmware.com> Cc: Rob Clark <rob.clark@linaro.org> Reviwed-by: Alex Deucher <alexdeucher@gmail.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_irq.c | s | 39K | 1153 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679178 |  | drm: Don't initialize local ret variable when not needed  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | i810 |  | 4 items |  | Al Viro | viro@zeniv.linux.org.uk | 1338426294 |  | i810: switch to vm_mmap()  Weirdness around do_mmap() in there does not rely on ->mmap_sem for exclusion, so no need to keep it under that.  As the result, we can turn that do_mmap() into vm_mmap().  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | drm_mm.c | s | 18K | 604 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | drm_crtc.c | s | 95K | 3327 | Ville Syrjälä | ville.syrjala@linux.intel.com | 1338286029 |  | drm: Use stdint types for consistency  The rest of the code uses stdint types, so use them in drm_property_change_is_valid() as well.  Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_proc.c | s | 5.9K | 194 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
d | mga |  | 8 items |  | Dave Airlie | airlied@redhat.com | 1329417067 |  | drm: move pci bus master enable into driver.  The current enabling of bus mastering in the drm midlayer allows a large race condition under kexec. When a kexec'ed kernel re-enables bus mastering for the GPU, previously setup dma blocks may cause writes to random pieces of memory. On radeon the writeback mechanism can cause these sorts of issues.  This patch doesn't fix the problem, but it moves the bus master enable under the individual drivers control so they can move enabling it until later in their load cycle and close the race.  Fix for radeon kms driver will be in a follow-up patch.  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_buffer.c | s | 4.9K | 156 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | drm_sysfs.c | s | 14K | 483 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679273 |  | drm: Miscellaneous typo fixes and documentation updates  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_edid_modes.h | s | 33K | 766 | Jim Cromie | jim.cromie@gmail.com | 1334923936 |  | drm: replace open-coded ARRAY_SIZE with macro  [airlied: fixed one more new one added since]  Signed-off-by: Jim Cromie <jim.cromie@gmail.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | via |  | 13 items |  | Márton Németh | nm127@freemail.hu | 1339841918 |  | drm via: initialize object_idr  The field obejct_idr of struct drm_via_private was introduced with the commit http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commitdiff;h=77ee8f3825054f23b17e9c8f728f061defd86cdc . In that patch idr_init(&dev->object_name_idr) was called instead of idr_init(&dev_priv->object_idr) by mistake, leaving the dev_priv->object_idr uninitialized. To be more exact, the object_idr buffer is filled with zeros because of kzalloc(), but the dev_priv->object_idr.lock spinlock can cause system freeze at lib/idr.c:move_to_free_list() when spin_lock_irqsave() is called on this spinlock.  The patch was tested on Clevo D4J, model D410J laptop, on the following hardware, without AGP kernel module loaded:    # lspci -s 01:00.0 -n   01:00.0 0300: 1106:3108 (rev 01)   # lspci -s 01:00.0 -v   01:00.0 VGA compatible controller: VIA Technologies, Inc. K8M800/K8N800/K8N800A [S3 UniChrome Pro] (rev 01) (prog-if 00 [VGA controller])           Subsystem: CLEVO/KAPOK Computer Device 4702           Flags: bus master, 66MHz, medium devsel, latency 64, IRQ 16           Memory at f0000000 (32-bit, prefetchable) [size=64M]           Memory at d1000000 (32-bit, non-prefetchable) [size=16M]           Expansion ROM at <unassigned> [disabled]           Capabilities: [60] Power Management version 2           Capabilities: [70] AGP version 3.0  Signed-off-by: Márton Németh <nm127@freemail.hu> Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Cc: stable@vger.kernel.org Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_encoder_slave.c | s | 3.8K | 109 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: add module.h to drivers/gpu files as required.  So that we don't get build failures once the implicit module.h presence is removed.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
d | mgag200 |  | 10 items |  | Dave Airlie | airlied@redhat.com | 1338545559 |  | drm/mgag200: kick off conflicting framebuffers earlier.  It appears grub2 can pass framebuffer info via efifb, so we need to kick it off earlier to reserve the vram allocation.  (just a fixup same as for cirrus)  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_fops.c | s | 17K | 566 | Prathyush | prathyush.k@samsung.com | 1334842841 |  | drm: Releasing FBs before releasing GEM objects during drm_release  During DRM release, all the FBs and gem objects are released. If a gem object is being used as a FB and set to a crtc, it must not be freed before releasing the framebuffer first.  If FBs are released first, the crtc using the FB is disabled first so now the GEM object can be freed safely. The CRTC will be enabled again when the driver restores fbdev mode.  Signed-off-by: Prathyush K <prathyush.k@samsung.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_vm.c | s | 18K | 610 | Rob Clark | rob@ti.com | 1336754266 |  | drm: pass dev to drm_vm_{open,close}_locked()  Previously these functions would assume that vma->vm_file was the drm_file.  Although if in some cases if the drm driver needs to use something else for the backing file (such as the tmpfs filp) then this assumption is no longer true.  But vma->vm_private_data is still the GEM object.  With this change, now the drm_device comes from the GEM object rather than the drm_file so the driver is more free to play with vma->vm_file.  The scenario where this comes up is for mmap'ing of cached dmabuf's for non-coherent systems, where the driver needs to use fault handling and PTE shootdown to simulate coherency.  We can't use the vma->vm_file of the dmabuf, which is using anon_inode's address_space.  The most straightforward thing to do is to use the GEM object's obj->filp for vma->vm_file in all cases, for which we need this patch.  Signed-off-by: Rob Clark <rob@ti.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | r128 |  | 7 items |  | Dave Airlie | airlied@redhat.com | 1329417067 |  | drm: move pci bus master enable into driver.  The current enabling of bus mastering in the drm midlayer allows a large race condition under kexec. When a kexec'ed kernel re-enables bus mastering for the GPU, previously setup dma blocks may cause writes to random pieces of memory. On radeon the writeback mechanism can cause these sorts of issues.  This patch doesn't fix the problem, but it moves the bus master enable under the individual drivers control so they can move enabling it until later in their load cycle and close the race.  Fix for radeon kms driver will be in a follow-up patch.  Signed-off-by: Dave Airlie <airlied@redhat.com>
d | radeon |  | 122 items |  | Jerome Glisse | jglisse@redhat.com | 1341310629 |  | drm/radeon: fix rare segfault  In gem idle/busy ioctl the radeon object was derefenced after drm_gem_object_unreference_unlocked which in case the object have been destroyed lead to use of a possibly free pointer with possibly wrong data.  Signed-off-by: Jerome Glisse <jglisse@redhat.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Reviewed-by: Christian König <christian.koenig@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_prime.c | s | 9.7K | 307 | Dave Airlie | airlied@redhat.com | 1337766363 |  | drm/prime: add exported buffers to current fprivs imported buffer list (v2)  If userspace attempts to import a buffer it exported on the same device, we need to return the same GEM handle for it, not a new handle pointing at the same GEM object.  v2: move removals into a single fn, no need to set to NULL. (Chris Wilson)  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_fb_helper.c | s | 37K | 1215 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679315 |  | drm: Make the CRTC gamma_set operation optional  Drivers for hardware without gamma support should not be forced to implement a no-op gamma set operation.  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Cc: Rob Clark <rob.clark@linaro.org> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_trace.h | s | 1.7K | 59 | Jesse Barnes | jbarnes@virtuousgeek.org | 1278043404 |  | drm: add per-event vblank event trace points  Allows us to track each process that requests and completes events.  Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | vmwgfx |  | 29 items |  | Thomas Hellstrom | thellstrom@vmware.com | 1338566420 |  | drm/vmwgfx: Fix nasty write past alloced memory area  Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com> Reviewed-by: Jakob Bornecrantz <jakob@vmware.com> Cc: stable@vger.kernel.org Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_crtc_helper.c | s | 28K | 879 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679178 |  | drm: Don't initialize local ret variable when not needed  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_ioctl.c | s | 8.8K | 318 | Dave Airlie | airlied@redhat.com | 1337335936 |  | drm/prime: expose capability flags for userspace.  This lets the kernel tell userspace if the device supports prime import/export.  This is useful for -modesetting at least, but would be nice for other drivers.  Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_platform.c | s | 5.4K | 170 | Rob Clark | rob@ti.com | 1331129020 |  | drm: cope with platformdev->id == -1  If there are not multiple instances of a platform device, the id should apparently be set to -1.  Which results in a odd looking bus-id like "platform:foodrm:-1".  Probably we should just treat this case as id 0.  Signed-off-by: Rob Clark <rob@ti.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | ast |  | 11 items |  | Dave Airlie | airlied@redhat.com | 1337778521 |  | drm: update ast/cirrus/mgag200 for change in TTM api  New drivers merged after changes were done in prime TTM code.  Fix build.  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_drv.c | s | 17K | 432 | Paulo Zanoni | paulo.r.zanoni@intel.com | 1337249482 |  | drm: add generic ioctls to get/set properties on any object  Useless for connector properties (since they already have their own ioctls), but useful when we add properties to CRTCs, planes and other objects.  Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Reviewed-by: Rob Clark <rob.clark@linaro.org> Tested-by: Rob Clark <rob.clark@linaro.org> Signed-off-by: Paulo Zanoni <paulo.r.zanoni@intel.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_debugfs.c | s | 6.3K | 209 | Marcin Slusarz | marcin.slusarz@gmail.com | 1321009519 |  | drm: serialize access to list of debugfs files  Nouveau, when configured with debugfs, creates debugfs files for every channel, so structure holding list of files needs to be protected from simultaneous changes by multiple threads.  Without this patch it's possible to hit kernel oops in drm_debugfs_remove_files just by running a couple of xterms with looped glxinfo.  Signed-off-by: Marcin Slusarz <marcin.slusarz@gmail.com> Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_scatter.c | s | 5.1K | 174 | Rakib Mullick | rakib.mullick@gmail.com | 1311652633 |  | drivers: use kzalloc/kcalloc instead of 'kmalloc+memset', where possible  Signed-off-by: Rakib Mullick <rakib.mullick@gmail.com> Cc: Jeff Garzik <jgarzik@pobox.com> Cc: David Airlie <airlied@linux.ie> Cc: Tejun Heo <tj@kernel.org> Cc: Joe Perches <joe@perches.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | drm_stub.c | s | 12K | 422 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679178 |  | drm: Don't initialize local ret variable when not needed  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | savage |  | 5 items |  | Dan Carpenter | dan.carpenter@oracle.com | 1337251347 |  | drm: checking the wrong variable in savage_do_init_bci()  drm_core_ioremap() initializes ->handle.  We already know "dev->agp_buffer_map" is a valid pointer.  Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_cache.c | s | 3.3K | 108 | Dave Airlie | airlied@redhat.com | 1334222821 |  | Merge branch 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel into drm-core-next  Daniel Vetter wrote First pull request for 3.5-next, slightly large than usual because new things kept coming in since the last pull for 3.4. Highlights: - first batch of hw enablement for vlv (Jesse et al) and hsw (Eugeni). pci  ids are not yet added, and there's still quite a few patches to merge  (mostly modesetting). To make QA easier I've decided to merge this stuff  in pieces. - loads of cleanups and prep patches spurred by the above. Especially vlv  is a real frankenstein chip, but also hsw is stretching our driver's  code design. Expect more to come in this area for 3.5. - more gmbus fixes, cleanups and improvements by Daniel Kurtz. Again,  there are more patches needed (and some already queued up), but I wanted  to split this a bit for better testing. - pwrite/pread rework and retuning. This series has been in the works for  a few months already and a lot of i-g-t tests have been created for it.  Now it's finally ready to be merged.  Note that one patch in this series  touches include/pagemap.h, that patch is acked-by akpm. - reduce mappable pressure and relocation throughput improvements from  Chris. - mmap offset exhaustion mitigation by Chris Wilson. - a start at figuring out which codepaths in our messy dri1/ums+gem/kms  driver we actually need to support by bailing out of unsupported case.  The driver now refuses to load without kms on gen6+ and disallows a few  ioctls that userspace never used in certain cases. More of this will  definitely come. - More decoupling of global gtt and ppgtt. - Improved dual-link lvds detection by Takashi Iwai. - Shut up the compiler + plus fix the fallout (Ben) - Inverted panel brightness handling (mostly Acer manages to break things  in this way). - Small fixlets and adjustements and some minor things to help debugging.  Regression-wise QA reported quite a few issues on ivb, but all of them turned out to be hw stability issues which are already fixed in drm-intel-fixes (QA runs the nightly regression tests on -next alone, without -fixes automatically merged in). There's still one issue open on snb, it looks like occlusion query writes are not quite as cache coherent as we've expected. With some of the pwrite adjustements we can now reliably hit this. Kernel workaround for it is in the works."  * 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel: (101 commits)   drm/i915: VCS is not the last ring   drm/i915: Add a dual link lvds quirk for MacBook Pro 8,2   drm/i915: make quirks more verbose   drm/i915: dump the DMA fetch addr register on pre-gen6   drm/i915/sdvo: Include YRPB as an additional TV output type   drm/i915: disallow gem init ioctl on ilk   drm/i915: refuse to load on gen6+ without kms   drm/i915: extract gt interrupt handler   drm/i915: use render gen to switch ring irq functions   drm/i915: rip out old HWSTAM missed irq WA for vlv   drm/i915: open code gen6+ ring irqs   drm/i915: ring irq cleanups   drm/i915: add SFUSE_STRAP registers for digital port detection   drm/i915: add WM_LINETIME registers   drm/i915: add WRPLL clocks   drm/i915: add LCPLL control registers   drm/i915: add SSC offsets for SBI access   drm/i915: add port clock selection support for HSW   drm/i915: add S PLL control   drm/i915: add PIXCLK_GATE register   ...  Conflicts: 	drivers/char/agp/intel-agp.h 	drivers/char/agp/intel-gtt.c 	drivers/gpu/drm/i915/i915_debugfs.c
f | drm_auth.c | s | 5.8K | 176 | Thomas Hellstrom | thellstrom@vmware.com | 1327483665 |  | drm: Fix authentication kernel crash  If the master tries to authenticate a client using drm_authmagic and that client has already closed its drm file descriptor, either wilfully or because it was terminated, the call to drm_authmagic will dereference a stale pointer into kmalloc'ed memory and corrupt it.  Typically this results in a hard system hang.  This patch fixes that problem by removing any authentication tokens (struct drm_magic_entry) open for a file descriptor when that file descriptor is closed.  Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com> Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Cc: stable@vger.kernel.org Signed-off-by: Dave Airlie <airlied@redhat.com>
d | nouveau |  | 156 items |  | Dave Airlie | airlied@redhat.com | 1340785655 |  | drm/nouveau: add license header to prime.  Just forgot this when I posted it, and yes I'm the only person to have changed the file since.  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_ioc32.c | s | 31K | 900 | Julia Lawall | Julia.Lawall@lip6.fr | 1328262452 |  | drivers/gpu/drm/drm_ioc32.c: initialize all fields  The c32 structure is allocated on the stack and its idx field is not initialized before copying it to user level.  This patch takes the value from the result of the ioctl, as done for the other fields.  Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_lock.c | s | 10K | 335 | Laurent Pinchart | laurent.pinchart@ideasonboard.com | 1337679178 |  | drm: Don't initialize local ret variable when not needed  Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com> Reviewed-by: Alex Deucher <alexander.deucher@amd.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | i2c |  | 5 items |  | Sascha Hauer | s.hauer@pengutronix.de | 1328782525 |  | drm: add convenience function to create an range property  Creating a range property is a common pattern, so create a convenience function for this and use it where appropriate.  Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | exynos |  | 38 items |  | Seung-Woo Kim | sw0312.kim@samsung.com | 1338870318 |  | drm/exynos: fixed blending for hdmi graphic layer  Blending for graphic layer 0 of hdmi mixer was not set so video layer cannot be showed if graphic layer 0 is enabled. This patch fixes blending values to support blending between graphic layer 0 and video layer.  Signed-off-by: Seung-Woo Kim <sw0312.kim@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Inki Dae <inki.dae@samsung.com>
f | Kconfig | g | 6.2K |  | Dave Airlie | airlied@redhat.com | 1337248944 |  | drm/kms: driver for virtual cirrus under qemu  This is the initial driver for emulated cirrus GPU found in qemu. This driver only supports the emulated GPU and doesn't attempt to bind to any real cirrus GPUs.  This driver is intended to be used with xf86-video-modesetting in userspace. It requires at least version 0.3.0  This follow the same design as ast and mgag200, and is based on work done by Matthew Garrett previously.  This GPU has no hw cursor, and it can't scanout 32-bpp, only packed 24-bpp. i.e. it sucks.  Reviewed-by: Adam Jackson <ajax@redhat.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_info.c | s | 8.9K | 285 | Dave Airlie | airlied@redhat.com | 1300076113 |  | Merge remote branch 'intel/drm-intel-next' of ../drm-next into drm-core-next  * 'intel/drm-intel-next' of ../drm-next: (755 commits)   drm/i915: Only wait on a pending flip if we intend to write to the buffer   drm/i915/dp: Sanity check eDP existence   drm/i915: Rebind the buffer if its alignment constraints changes with tiling   drm/i915: Disable GPU semaphores by default   drm/i915: Do not overflow the MMADDR write FIFO   Revert "drm/i915: fix corruptions on i8xx due to relaxed fencing"   drm/i915: Don't save/restore hardware status page address register   drm/i915: don't store the reg value for HWS_PGA   drm/i915: fix memory corruption with GM965 and >4GB RAM   Linux 2.6.38-rc7   Revert "TPM: Long default timeout fix"   drm/i915: Re-enable GPU semaphores for SandyBridge mobile   drm/i915: Replace vblank PM QoS with "Interrupt-Based AGPBUSY#"   Revert "drm/i915: Use PM QoS to prevent C-State starvation of gen3 GPU"   drm/i915: Allow relocation deltas outside of target bo   drm/i915: Silence an innocuous compiler warning for an unused variable   fs/block_dev.c: fix new kernel-doc warning   ACPI: Fix build for CONFIG_NET unset   mm: <asm-generic/pgtable.h> must include <linux/mm_types.h>   x86: Use u32 instead of long to set reset vector back to 0   ...  Conflicts: 	drivers/gpu/drm/i915/i915_gem.c
f | ati_pcigart.c | s | 5.6K | 174 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | drm_pci.c | s | 11K | 393 | Dave Airlie | airlied@redhat.com | 1329417067 |  | drm: move pci bus master enable into driver.  The current enabling of bus mastering in the drm midlayer allows a large race condition under kexec. When a kexec'ed kernel re-enables bus mastering for the GPU, previously setup dma blocks may cause writes to random pieces of memory. On radeon the writeback mechanism can cause these sorts of issues.  This patch doesn't fix the problem, but it moves the bus master enable under the individual drivers control so they can move enabling it until later in their load cycle and close the race.  Fix for radeon kms driver will be in a follow-up patch.  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_bufs.c | s | 42K | 1417 | Linus Torvalds | torvalds@linux-foundation.org | 1334968153 |  | VM: add "vm_mmap()" helper function  This continues the theme started with vm_brk() and vm_munmap(): vm_mmap() does the same thing as do_mmap(), but additionally does the required VM locking.  This uninlines (and rewrites it to be clearer) do_mmap(), which sadly duplicates it in mm/mmap.c and mm/nommu.c.  But that way we don't have to export our internal do_mmap_pgoff() function.  Some day we hopefully don't have to export do_mmap() either, if all modular users can become the simpler vm_mmap() instead.  We're actually very close to that already, with the notable exception of the (broken) use in i810, and a couple of stragglers in binfmt_elf.  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | drm_dp_i2c_helper.c | s | 5.3K | 185 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | drm_global.c | s | 3.0K | 99 | Dave Airlie | airlied@redhat.com | 1280879166 |  | drm: move ttm global code to core drm  I wrote this for the prime sharing work, but I also noticed other external non-upstream drivers from a large company carrying a similiar patch, so I may as well ship it in master.  Signed-off-by: Dave Airlie <airlied@redhat.com>
d | udl |  | 11 items |  | Dave Airlie | airlied@redhat.com | 1340606592 |  | drm/udl: Make sure to get correct endian keys from vendor descriptor  This is a port of commit b49f184b640dcfab7ede394cf2a1ff4fe3d154f5 Author: Ben Collins <bcollins@ubuntu.com> from udlfb to udl kms driver.  The driver was not using le16_to_cpu when reading keys from the vendor descriptor, causing incorrect parsing. Mainly, sku_pixel_limit was not being parsed on big-endian systems. This would result in a blank screen on big-endian CPUs where the DL chips's max mode was smaller than the monitor's native mode.  Signed-off-by: Dave Airlie <airlied@redhat.com>
d | sis |  | 4 items |  | Márton Németh | nm127@freemail.hu | 1339841933 |  | drm sis: initialize object_idr  The filed object_idr of struct drm_sis_private was introduced with commit http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=commitdiff;h=6de8a748881f1cd9d795454da2b6db616d5ca3d7 .  The idr_init(&dev->object_name_idr) is called instead of idr_init(&dev_priv->object_idr) by mistake, leaving object_idr uninitialized. Correct this.  This patch was not tested because of lack of hardware.  Signed-off-by: Márton Németh <nm127@freemail.hu> Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch> Cc: stable@vger.kernel.org Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_modes.c | s | 33K | 1086 | Ville Syrjälä | ville.syrjala@linux.intel.com | 1331805171 |  | drm: Add drm_mode_copy()  Add a helper function to copy a display mode. Use it in drm_mode_duplicate() and nouveau mode_fixup hooks.  Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_agpsupport.c | s | 12K | 408 | Daniel Vetter | daniel.vetter@ffwll.ch | 1290543284 |  | drm: kill drm_agp_chipset_flush  No longer used.  Cc: Dave Airlie <airlied@gmail.com> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
d | i915 |  | 50 items |  | Daniel Vetter | daniel.vetter@ffwll.ch | 1341310728 |  | drm/i915: kick any firmware framebuffers before claiming the gtt  Especially vesafb likes to map everything as uc- (yikes), and if that mapping hangs around still while we try to map the gtt as wc the kernel will downgrade our request to uc-, resulting in abyssal performance.  Unfortunately we can't do this as early as readon does (i.e. as the first thing we do when initializing the hw) because our fb/mmio space region moves around on a per-gen basis. So I've had to move it below the gtt initialization, but that seems to work, too. The important thing is that we do this before we set up the gtt wc mapping.  Now an altogether different question is why people compile their kernels with vesafb enabled, but I guess making things just work isn't bad per se ...  v2: - s/radeondrmfb/inteldrmfb/ - fix up error handling  v3: Kill #ifdef X86, this is Intel after all. Noticed by Ben Widawsky.  v4: Jani Nikula complained about the pointless bool primary initialization.  v5: Don't oops if we can't allocate, noticed by Chris Wilson.  v6: Resolve conflicts with agp rework and fixup whitespace.  This is commit e188719a2891f01b3100d in drm-next.  Backport to 3.5 -fixes queue requested by Dave Airlie - due to grub using vesa on fedora their initrd seems to load vesafb before loading the real kms driver. So tons more people actually experience a dead-slow gpu. Hence also the Cc: stable.  Cc: stable@vger.kernel.org Reported-and-tested-by: "Kilarski, Bernard R" <bernard.r.kilarski@intel.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_edid.c | s | 49K | 1704 | Takashi Iwai | tiwai@suse.de | 1341310690 |  | drm: edid: Don't add inferred modes with higher resolution  When a monitor EDID doesn't give the preferred bit, driver assumes that the mode with the higest resolution and rate is the preferred mode.  Meanwhile the recent changes for allowing more modes in the GFT/CVT ranges give actually more modes, and some modes may be over the native size.  Thus such a mode would be picked up as the preferred mode although it's no native resolution.  For avoiding such a problem, this patch limits the addition of inferred modes by checking not to be greater than other modes. Also, it checks the duplicated mode entry at the same time.  Reviewed-by: Adam Jackson <ajax@redhat.com> Signed-off-by: Takashi Iwai <tiwai@suse.de> Signed-off-by: Dave Airlie <airlied@redhat.com>
d | ttm |  | 14 items |  | Thomas Hellstrom | thellstrom@vmware.com | 1339513067 |  | drm/ttm: Fix buffer object metadata accounting regression v2  A regression was introduced in the 3.3 rc series, commit "drm/ttm: simplify memory accounting for ttm user v2", causing the metadata of buffer objects created using the ttm_bo_create() function to be accounted twice. That causes massive leaks with the vmwgfx driver running for example SpecViewperf Catia-03 test 2, eventually killing the app.  Furthermore, the same commit introduces a regression where metadata accounting is leaked if a buffer object is initialized with an illegal size. This is also fixed with this commit.  v2: Fixed an error path and removed an unused variable.  Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com> Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Cc: Jerome Glisse <jglisse@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_gem.c | s | 18K | 617 | Dave Airlie | airlied@redhat.com | 1337766363 |  | drm/prime: add exported buffers to current fprivs imported buffer list (v2)  If userspace attempts to import a buffer it exported on the same device, we need to return the same GEM handle for it, not a new handle pointing at the same GEM object.  v2: move removals into a single fn, no need to set to NULL. (Chris Wilson)  Signed-off-by: Dave Airlie <airlied@redhat.com>
d | tdfx |  | 3 items |  | Arjan van de Ven | arjan@infradead.org | 1321010087 |  | drm: Make the per-driver file_operations struct const  From fdf1fdebaa00f81de18c227f32f8074c8b352d50 Mon Sep 17 00:00:00 2001 From: Arjan van de Ven <arjan@linux.intel.com> Date: Sun, 30 Oct 2011 19:06:07 -0700 Subject: [PATCH] drm: Make the per-driver file_operations struct const  The DRM layer keeps a copy of struct file_operations inside its big driver struct... which prevents it from being consistent and static. For consistency (and the general security objective of having such things static), it's desirable to get this fixed.  This patch splits out the file_operations field to its own struct, which is then "static const", and just stick a pointer to this into the driver struct, making it more consistent with how the rest of the kernel does this.  Signed-off-by: Arjan van de Ven <arjan@linux.intel.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_usb.c | s | 2.4K | 95 | Dave Airlie | airlied@redhat.com | 1334824412 |  | drm/usb: fix module license on drm/usb layer.  Allows this module to load correctly with certain debugging options on.  Reported on irc by scientes Signed-off-by: Dave Airlie <airlied@redhat.com>
f | drm_dma.c | s | 4.0K | 146 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103923 |  | gpu: Add export.h as required to drivers/gpu files.  They need this to get all the EXPORT_SYMBOL variants and THIS_MODULE  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
