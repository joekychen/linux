f | i915_suspend.c | s | 28K | 770 | Takashi Iwai | tiwai@suse.de | 1340402502 |  | drm/i915: Fix eDP blank screen after S3 resume on HP desktops  This patch fixes the problem on some HP desktop machines with eDP which give blank screens after S3 resume.  It turned out that BLC_PWM_CPU_CTL must be written after BLC_PWM_CPU_CTL2.  Otherwise it doesn't take effect on these SNB machines.  Tested with 3.5-rc3 kernel.  Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=49233  Cc: <stable@vger.kernel.org> Signed-off-by: Takashi Iwai <tiwai@suse.de> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_dvo.c | s | 12K | 390 | Daniel Kurtz | djkurtz@chromium.org | 1332938444 |  | drm/i915/intel_i2c: refactor using intel_gmbus_get_adapter  Instead of letting other modules directly access the ->gmbus array, introduce intel_gmbus_get_adapter() for looking up an i2c_adapter for a given gmbus port identifier.  This will enable later refactoring of the gmbus port list.  Note: Before requesting an adapter for a given gmbus port number, the driver must first check its validity using i2c_intel_gmbus_is_port_valid(). If this check fails, a call to intel_gmbus_get_adapter() will WARN_ON and return NULL.  This is relevant for parts of the driver that read a port from VBIOS, which might be improperly initialized and contain an invalid port.  In these cases, the driver must fall back to using a safer default port.  Signed-off-by: Daniel Kurtz <djkurtz@chromium.org> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_gem_debug.c | s | 5.1K | 167 | Chris Wilson | chris@chris-wilson.co.uk | 1336036691 |  | drm/i915: Remove the list of pinned inactive objects  Simplify object tracking by removing the inactive but pinned list. The only place where this was used is for counting the available memory, which is just as easy performed by checking all objects on the rare occasions it is required (application startup). For ease of debugging, we keep the reporting of pinned objects through the error-state and debugfs.  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo_tfp410.c | s | 7.7K | 257 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | Makefile | g | 1.0K |  | Daniel Vetter | daniel.vetter@ffwll.ch | 1337766430 |  | i915: add dmabuf/prime buffer sharing support.  This adds handle->fd and fd->handle support to i915, this is to allow for offloading of rendering in one direction and outputs in the other.  v2 from Daniel Vetter: - fixup conflicts with the prepare/finish gtt prep work. - implement ppgtt binding support.  Note that we have squat i-g-t testcoverage for any of the lifetime and access rules dma_buf/prime support brings along. And there are quite a few intricate situations here.  Also note that the integration with the existing code is a bit hackish, especially around get_gtt_pages and put_gtt_pages. It imo would be easier with the prep code from Chris Wilson's unbound series, but that is for 3.6.  Also note that I didn't bother to put the new prepare/finish gtt hooks to good use by moving the dma_buf_map/unmap_attachment calls in there (like we've originally planned for).  Last but not least this patch is only compile-tested, but I've changed very little compared to Dave Airlie's version. So there's a decent chance v2 on drm-next works as well as v1 on 3.4-rc.  v3: Right when I've hit sent I've noticed that I've screwed up one obj->sg_list (for dmar support) and obj->sg_table (for prime support) disdinction. We should be able to merge these 2 paths, but that's material for another patch.  v4: fix the error reporting bugs pointed out by ickle.  v5: fix another error, and stop non-gtt mmaps on shared objects stop pread/pwrite on imported objects, add fake kmap  Signed-off-by: Dave Airlie <airlied@redhat.com> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_display.c | s | 189K | 6118 | Daniel Vetter | daniel.vetter@ffwll.ch | 1340821590 |  | Revert "drm/i915: allow PCH PWM override on IVB"  This reverts commit f82cfb6bcda164ef3a66b8c3fc549b1f9bdd09ad.  This breaks the backlight controls on my IVB asus zenbook with an eDP panel.  I guess the right fix would be to read this bit and use either the pch or the cpu register to frob the backlight values. But that is stuff for -next.  Cc: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_modes.c | s | 3.8K | 126 | Dave Airlie | airlied@redhat.com | 1334222821 |  | Merge branch 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel into drm-core-next  Daniel Vetter wrote First pull request for 3.5-next, slightly large than usual because new things kept coming in since the last pull for 3.4. Highlights: - first batch of hw enablement for vlv (Jesse et al) and hsw (Eugeni). pci  ids are not yet added, and there's still quite a few patches to merge  (mostly modesetting). To make QA easier I've decided to merge this stuff  in pieces. - loads of cleanups and prep patches spurred by the above. Especially vlv  is a real frankenstein chip, but also hsw is stretching our driver's  code design. Expect more to come in this area for 3.5. - more gmbus fixes, cleanups and improvements by Daniel Kurtz. Again,  there are more patches needed (and some already queued up), but I wanted  to split this a bit for better testing. - pwrite/pread rework and retuning. This series has been in the works for  a few months already and a lot of i-g-t tests have been created for it.  Now it's finally ready to be merged.  Note that one patch in this series  touches include/pagemap.h, that patch is acked-by akpm. - reduce mappable pressure and relocation throughput improvements from  Chris. - mmap offset exhaustion mitigation by Chris Wilson. - a start at figuring out which codepaths in our messy dri1/ums+gem/kms  driver we actually need to support by bailing out of unsupported case.  The driver now refuses to load without kms on gen6+ and disallows a few  ioctls that userspace never used in certain cases. More of this will  definitely come. - More decoupling of global gtt and ppgtt. - Improved dual-link lvds detection by Takashi Iwai. - Shut up the compiler + plus fix the fallout (Ben) - Inverted panel brightness handling (mostly Acer manages to break things  in this way). - Small fixlets and adjustements and some minor things to help debugging.  Regression-wise QA reported quite a few issues on ivb, but all of them turned out to be hw stability issues which are already fixed in drm-intel-fixes (QA runs the nightly regression tests on -next alone, without -fixes automatically merged in). There's still one issue open on snb, it looks like occlusion query writes are not quite as cache coherent as we've expected. With some of the pwrite adjustements we can now reliably hit this. Kernel workaround for it is in the works."  * 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel: (101 commits)   drm/i915: VCS is not the last ring   drm/i915: Add a dual link lvds quirk for MacBook Pro 8,2   drm/i915: make quirks more verbose   drm/i915: dump the DMA fetch addr register on pre-gen6   drm/i915/sdvo: Include YRPB as an additional TV output type   drm/i915: disallow gem init ioctl on ilk   drm/i915: refuse to load on gen6+ without kms   drm/i915: extract gt interrupt handler   drm/i915: use render gen to switch ring irq functions   drm/i915: rip out old HWSTAM missed irq WA for vlv   drm/i915: open code gen6+ ring irqs   drm/i915: ring irq cleanups   drm/i915: add SFUSE_STRAP registers for digital port detection   drm/i915: add WM_LINETIME registers   drm/i915: add WRPLL clocks   drm/i915: add LCPLL control registers   drm/i915: add SSC offsets for SBI access   drm/i915: add port clock selection support for HSW   drm/i915: add S PLL control   drm/i915: add PIXCLK_GATE register   ...  Conflicts: 	drivers/char/agp/intel-agp.h 	drivers/char/agp/intel-gtt.c 	drivers/gpu/drm/i915/i915_debugfs.c
f | intel_bios.h | s | 16K | 561 | Rohit Jain | rohit.jain@intel.com | 1326472664 |  | drm/i915: VBT Parser cleanup for eDP block  Support for parsing parameters for S3D support and T3 optimization support is implemented. The order for the bdb_edp struct was also made similar to that indicated in spec.  Signed-off-by: Rohit Jain <rohit.jain@intel.com> Reviewed-by: Shobhit Kumar <shobhit.kumar@intel.com> Reviewed-by: Vijay A. Purushothaman <vijay.a.purushothaman@intel.com> Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Acked-by: Jesse Barnes <jesse.barnes@intel.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | intel_tv.c | s | 47K | 1400 | Rodrigo Vivi | rodrigo.vivi@gmail.com | 1337874848 |  | drm/i915: Adding TV Out Missing modes.  These 2 modes were removed by mistake during a clean up. So, now it is time to add them back. For further info about supported mode and standard timing table please check: VOL_3_display_registers_updated.pdf at intellinuxgraphics.org.  Note that this regression has been introduce in  commit 55a6713b3f30a5024056027e9dbf03ac8f13bfc9 Author: Rodrigo Vivi <rodrigo.vivi@gmail.com> Date:   Thu Dec 15 14:47:33 2011 -0200      drm/i915: Removing TV Out modes.  and this commit partially reverts it by re-adding the wrongly removed modes.  Reported-by: Robert Lowery <rglowery@exemail.com.au> Signed-off-by: Rodrigo Vivi <rodrigo.vivi@gmail.com> [danvet: Pimped commit message to cite the commit that introduced this regression.] Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_reg.h | s | 154K | 3982 | Adam Jackson | ajax@redhat.com | 1339016468 |  | drm/i915: pch_irq_handler -> {ibx, cpt}_irq_handler  Cougar/Panther Point redefine the bits in SDEIIR pretty completely. This function is just debugging, but if we're debugging we probably want to be told accurate things instead of lies.  I'm told Lynx Point changes this yet more, but I have no idea how...  Note from Eugeni's review:  "For the record and for future enabling efforts, for LPT, bits 28-31 and 1-14 are gone since CPT/PPT (e.g., those must be zero). And there is the bit 15 as a new addition, but we are not using it yet and probably won't be using in foreseeable future."  Signed-off-by: Adam Jackson <ajax@redhat.com> Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=35103 Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_ringbuffer.h | s | 6.3K | 182 | Chris Wilson | chris@chris-wilson.co.uk | 1337459993 |  | drm/i915: Introduce for_each_ring() macro  In many places we wish to iterate over the rings associated with the GPU, so refactor them to use a common macro.  Along the way, there are a few code removals that should be side-effect free and some rearrangement which should only have a cosmetic impact, such as error-state.  Note that this slightly changes the semantics in the hangcheck code: We now always cycle through all enabled rings instead of short-circuiting the logic.  v2: Pull in a couple of suggestions from Ben and Daniel for intel_ring_initialized() and not removing the warning (just moving them to a new home, closer to the error).  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Reviewed-by: Ben Widawsky <ben@bwidawsk.net> [danvet: Added note to commit message about the small behaviour change, suggested by Ben Widawsky.] Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_bios.c | s | 21K | 675 | Dave Airlie | airlied@redhat.com | 1334222821 |  | Merge branch 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel into drm-core-next  Daniel Vetter wrote First pull request for 3.5-next, slightly large than usual because new things kept coming in since the last pull for 3.4. Highlights: - first batch of hw enablement for vlv (Jesse et al) and hsw (Eugeni). pci  ids are not yet added, and there's still quite a few patches to merge  (mostly modesetting). To make QA easier I've decided to merge this stuff  in pieces. - loads of cleanups and prep patches spurred by the above. Especially vlv  is a real frankenstein chip, but also hsw is stretching our driver's  code design. Expect more to come in this area for 3.5. - more gmbus fixes, cleanups and improvements by Daniel Kurtz. Again,  there are more patches needed (and some already queued up), but I wanted  to split this a bit for better testing. - pwrite/pread rework and retuning. This series has been in the works for  a few months already and a lot of i-g-t tests have been created for it.  Now it's finally ready to be merged.  Note that one patch in this series  touches include/pagemap.h, that patch is acked-by akpm. - reduce mappable pressure and relocation throughput improvements from  Chris. - mmap offset exhaustion mitigation by Chris Wilson. - a start at figuring out which codepaths in our messy dri1/ums+gem/kms  driver we actually need to support by bailing out of unsupported case.  The driver now refuses to load without kms on gen6+ and disallows a few  ioctls that userspace never used in certain cases. More of this will  definitely come. - More decoupling of global gtt and ppgtt. - Improved dual-link lvds detection by Takashi Iwai. - Shut up the compiler + plus fix the fallout (Ben) - Inverted panel brightness handling (mostly Acer manages to break things  in this way). - Small fixlets and adjustements and some minor things to help debugging.  Regression-wise QA reported quite a few issues on ivb, but all of them turned out to be hw stability issues which are already fixed in drm-intel-fixes (QA runs the nightly regression tests on -next alone, without -fixes automatically merged in). There's still one issue open on snb, it looks like occlusion query writes are not quite as cache coherent as we've expected. With some of the pwrite adjustements we can now reliably hit this. Kernel workaround for it is in the works."  * 'drm-intel-next' of git://people.freedesktop.org/~danvet/drm-intel: (101 commits)   drm/i915: VCS is not the last ring   drm/i915: Add a dual link lvds quirk for MacBook Pro 8,2   drm/i915: make quirks more verbose   drm/i915: dump the DMA fetch addr register on pre-gen6   drm/i915/sdvo: Include YRPB as an additional TV output type   drm/i915: disallow gem init ioctl on ilk   drm/i915: refuse to load on gen6+ without kms   drm/i915: extract gt interrupt handler   drm/i915: use render gen to switch ring irq functions   drm/i915: rip out old HWSTAM missed irq WA for vlv   drm/i915: open code gen6+ ring irqs   drm/i915: ring irq cleanups   drm/i915: add SFUSE_STRAP registers for digital port detection   drm/i915: add WM_LINETIME registers   drm/i915: add WRPLL clocks   drm/i915: add LCPLL control registers   drm/i915: add SSC offsets for SBI access   drm/i915: add port clock selection support for HSW   drm/i915: add S PLL control   drm/i915: add PIXCLK_GATE register   ...  Conflicts: 	drivers/char/agp/intel-agp.h 	drivers/char/agp/intel-gtt.c 	drivers/gpu/drm/i915/i915_debugfs.c
f | i915_gem_dmabuf.c | s | 6.0K | 197 | Dave Airlie | airlied@redhat.com | 1338470037 |  | i915: add dma-buf vmap support for exporting vmapped buffer  This is used to export a vmapping to the udl driver so that i915 and udl can share the udl scanout.  Signed-off-by: Dave Airlie <airlied@redhat.com>
f | intel_ddi.c | s | 19K | 706 | Eugeni Dodonov | eugeni.dodonov@intel.com | 1337459991 |  | drm/i915: prepare HDMI link for Haswell  On Haswell, we need to properly train the DDI buffers prior to enabling HDMI, and enable the required clocks with correct dividers for the desired frequency.  Also, we cannot simple reuse HDMI routines from previous generations of GPU, as most of HDMI-specific stuff is being done via the DDI port programming instead of HDMI-specific registers.  This commit take advantage of the WR PLL clock table which is in a separate (previous) commit to select the right divisors for each mode.  Signed-off-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_irq.c | s | 71K | 2183 | Daniel Vetter | daniel.vetter@ffwll.ch | 1340402501 |  | drm/i915: rip out the PM_IIR WARN  After banging my head against this for the past few months, I still don't see how this could possible race under the premise that once an irq bit is masked in PM_IMR and reset in PM_IIR it won't show up again until we unmask it in PM_IMR.  Still, we have reports of this being seen in the wild. Now Bspec has this little bit of lovely language in the PMIIR register:  Public SNB Docs, Vol3Part2, 2.5.14 "PMIIR":  "For each bit, the IIR can store a second pending interrupt if two or more of the same interrupt conditions occur before the first condition is cleared. Upon clearing the interrupt, the IIR bit will momentarily go low, then return high to indicate there is another interrupt pending."  Now if we presume that PMIMR only prevent new interrupts from being queued, we could easily end up masking an interrupt and clearing it, but the 2nd pending interrupt setting the bit in PMIIR right away again. Which leads, the next time the irq handler runs, to hitting the WARN.  Also, no bad side effects of this have ever been reported. And we've tracked down our issues with the gpu turbo getting stuck to bogus interrupt generation limits in th RPLIMIT register.  So let's just rip out this WARN as bogus and call it a day. The only shallow thing here is that this 2-deep irq queue in the hw makes you wonder how racy the windows irq handler is ...  Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=42907 Cc: stable@vger.kernel.org Acked-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_trace.h | s | 10K | 332 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | intel_dp.c | s | 70K | 2249 | Jesse Barnes | jbarnes@virtuousgeek.org | 1339853942 |  | drm/i915: cache the EDID for eDP panels  They aren't going anywhere, and probing on DDC can cause the panel to blank briefly, so read them up front and cache them for later queries.  v2: fix potential NULL derefs in intel_dp_get_edid_modes and     intel_dp_get_edid (Jani)     copy full EDID length, including extension blocks (Takashi)     free EDID on teardown (Takashi) v3: malloc a new EDID buffer that's big enough for the memcpy (Chris) v4: change handling of NULL EDIDs, just preserve the NULL behavior     across detects and mode list fetches rather than trying to re-fetch     the EDID (Chris) v5: be glad that Chris is around to remind me to hit C-x C-s before     committing.  References: https://bugs.freedesktop.org/show_bug.cgi?id=46856 Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_drv.h | s | 17K | 447 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337526671 |  | drm/i915: fixup infoframe support for sdvo  At least the worst offenders: - SDVO specifies that the encoder should compute the ecc. Testing also   shows that we must not send the ecc field, so copy the dip_infoframe   struct to a temporay place and avoid the ecc field. This way the avi   infoframe is exactly 17 bytes long, which agrees with what the spec   mandates as a minimal storage capacity (with the ecc field it would   be 18 bytes). - Only 17 when sending the avi infoframe. The SDVO spec explicitly   says that sending more data than what the device announces results   in undefined behaviour. - Add __attribute__((packed)) to the avi and spd infoframes, for   otherwise they're wrongly aligned. Noticed because the avi infoframe   ended up being 18 bytes large instead of 17. We haven't noticed this   yet because we don't use the uint16_t fields yet (which are the only   ones that would be wrongly aligned).  This regression has been introduce by  3c17fe4b8f40a112a85758a9ab2aebf772bdd647 is the first bad commit commit 3c17fe4b8f40a112a85758a9ab2aebf772bdd647 Author: David Härdeman <david@hardeman.nu> Date:   Fri Sep 24 21:44:32 2010 +0200      i915: enable AVI infoframe for intel_hdmi.c [v4]  Patch tested on my g33 with a sdvo hdmi adaptor.  Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=25732 Tested-by: Peter Ross <pross@xvid.org> (G35 SDVO-HDMI) Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_sprite.c | s | 18K | 595 | Daniel Vetter | daniel.vetter@ffwll.ch | 1336036693 |  | drm/i915: properly check for MODESET for kms driver ioctls  Also ditch the cargo-culted dev_priv checks - either we have a giant hole in our setup code or this is useless. Plainly bogus to check for it in either case.  v2: Chris Wilson noticed that I've missed one bogus dev_priv check.  v3: The check in the overlay code is redundant (Chris)  Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_panel.c | s | 11K | 341 | Corentin Chary | corentin.chary@gmail.com | 1337678986 |  | drm/backlight: initialize struct backlight_properties properly  The power field was never correctly initialized.  [airlied: just took the two drm specific bits]  Signed-off-by: Corentin Chary <corentin.chary@gmail.com> Signed-off-by: Dave Airlie <airlied@redhat.com>
f | i915_gem_gtt.c | s | 11K | 369 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337766430 |  | i915: add dmabuf/prime buffer sharing support.  This adds handle->fd and fd->handle support to i915, this is to allow for offloading of rendering in one direction and outputs in the other.  v2 from Daniel Vetter: - fixup conflicts with the prepare/finish gtt prep work. - implement ppgtt binding support.  Note that we have squat i-g-t testcoverage for any of the lifetime and access rules dma_buf/prime support brings along. And there are quite a few intricate situations here.  Also note that the integration with the existing code is a bit hackish, especially around get_gtt_pages and put_gtt_pages. It imo would be easier with the prep code from Chris Wilson's unbound series, but that is for 3.6.  Also note that I didn't bother to put the new prepare/finish gtt hooks to good use by moving the dma_buf_map/unmap_attachment calls in there (like we've originally planned for).  Last but not least this patch is only compile-tested, but I've changed very little compared to Dave Airlie's version. So there's a decent chance v2 on drm-next works as well as v1 on 3.4-rc.  v3: Right when I've hit sent I've noticed that I've screwed up one obj->sg_list (for dmar support) and obj->sg_table (for prime support) disdinction. We should be able to merge these 2 paths, but that's material for another patch.  v4: fix the error reporting bugs pointed out by ickle.  v5: fix another error, and stop non-gtt mmaps on shared objects stop pread/pwrite on imported objects, add fake kmap  Signed-off-by: Dave Airlie <airlied@redhat.com> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo_ch7xxx.c | s | 7.5K | 267 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | i915_ioc32.c | s | 7.1K | 191 | Ben Widawsky | ben@bwidawsk.net | 1334738089 |  | drm/i915: [sparse] trivial sparse fixes  This should contain all the changes which require no thought to make sparse happy.  Signed-off-by: Ben Widawsky <benjamin.widawsky@intel.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_gem_stolen.c | s | 6.2K | 176 | Chris Wilson | chris@chris-wilson.co.uk | 1336036691 |  | drm/i915: Split the stolen handling for GEM out of i915_dma.c  We slightly modify the initialisation sequence to move the initialisation of the memory managers earlier and in particular before probing outputs and detecting any existing output configuration. This is essential if we wish to track preallocated objects and preserve them whilst initialising GEM.  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_ringbuffer.c | s | 38K | 1292 | Daniel Vetter | daniel.vetter@ffwll.ch | 1338834329 |  | drm/i915: hold forcewake around ring hw init  Empirical evidence suggests that we need to: On at least one ivb machine when running the hangman i-g-t test, the rings don't properly initialize properly - the RING_START registers seems to be stuck at all zeros.  Holding forcewake around this register init sequences makes chip reset reliable again. Note that this is not the first such issue:  commit f01db988ef6f6c70a6cc36ee71e4a98a68901229 Author: Sean Paul <seanpaul@chromium.org> Date:   Fri Mar 16 12:43:22 2012 -0400      drm/i915: Add wait_for in init_ring_common  added delay loops to make RING_START and RING_CTL initialization reliable on the blt ring at boot-up. So I guess it won't hurt if we do this unconditionally for all force_wake needing gpus.  To avoid copy&pasting of the HAS_FORCE_WAKE check I've added a new intel_info bit for that.  v2: Fixup missing commas in static struct and properly handling the error case in init_ring_common, both noticed by Jani Nikula.  Cc: stable@vger.kernel.org Reported-and-tested-by: Yang Guang <guang.a.yang@intel.com> Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=50522 Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_gem_execbuffer.c | s | 38K | 1247 | Chris Wilson | chris@chris-wilson.co.uk | 1337459993 |  | drm/i915: Check whether the ring is initialised prior to dispatch  Rather than use the magic feature tests HAS_BLT/HAS_BSD just check whether the ring we are about to dispatch the execbuffer on is initialised.  v2: Use intel_ring_initialized()  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Reviewed-by: Ben Widawsky <ben@bwidawsk.net> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_pm.c | s | 104K | 3263 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337934555 |  | drm/i915: tune down the noise of the RP irq limit fail  We still don't understand why this fails exactly, but if fails way too often for a simple debug information. Furthermore the current ducttape should prevent the gpu from getting stuck at low frequencies.  Hence tune down the dmesg noise.  Note that the known failure case is that the register read returns 0 when the gpu gets confused.  v2: Add comments about the known failure case.  Acked-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo_sil164.c | s | 6.3K | 216 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | i915_gem.c | s | 99K | 3325 | Dave Airlie | airlied@redhat.com | 1338286146 |  | Merge branch 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel into drm-fixes  * 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel:   drm/i915: tune down the noise of the RP irq limit fail   drm/i915: Remove the error message for unbinding pinned buffers   drm/i915: Limit page allocations to lowmem (dma32) for i965   drm/i915: always use RPNSWREQ for turbo change requests   drm/i915: reject doubleclocked cea modes on dp   drm/i915: Adding TV Out Missing modes.   drm/i915: wait for a vblank to pass after tv detect   drm/i915: no lvds quirk for HP t5740e Thin Client   drm/i915: enable vdd when switching off the eDP panel   drm/i915: Fix PCH PLL assertions to not assume CRTC:PLL relationship   drm/i915: Always update RPS interrupts thresholds along with frequency   drm/i915: properly handle interlaced bit for sdvo dtd conversion   drm/i915: fix module unload since error_state rework   drm/i915: be more careful when returning -ENXIO in gmbus transfer
f | i915_gem_evict.c | s | 6.2K | 175 | Chris Wilson | chris@chris-wilson.co.uk | 1337459993 |  | drm/i915: Introduce for_each_ring() macro  In many places we wish to iterate over the rings associated with the GPU, so refactor them to use a common macro.  Along the way, there are a few code removals that should be side-effect free and some rearrangement which should only have a cosmetic impact, such as error-state.  Note that this slightly changes the semantics in the hangcheck code: We now always cycle through all enabled rings instead of short-circuiting the logic.  v2: Pull in a couple of suggestions from Ben and Daniel for intel_ring_initialized() and not removing the warning (just moving them to a new home, closer to the error).  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Reviewed-by: Ben Widawsky <ben@bwidawsk.net> [danvet: Added note to commit message about the small behaviour change, suggested by Ben Widawsky.] Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_acpi.c | s | 5.7K | 219 | Ben Widawsky | ben@bwidawsk.net | 1334738089 |  | drm/i915: [sparse] trivial sparse fixes  This should contain all the changes which require no thought to make sparse happy.  Signed-off-by: Ben Widawsky <benjamin.widawsky@intel.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo.h | s | 4.5K | 126 | Chris Wilson | chris@chris-wilson.co.uk | 1281378268 |  | drm/i915: Subclass intel_encoder.  Subclass intel_encoder to reduce the pointer dance through intel_encoder->dev_priv.  10 files changed, 896 insertions(+), 997 deletions(-)  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Eric Anholt <eric@anholt.net>
f | i915_gem_tiling.c | s | 15K | 456 | Chris Wilson | chris@chris-wilson.co.uk | 1336036687 |  | drm/i915: Only the zap the VMA after updating the tiling parameters  If we fail to unbind and so abort the change in tiling, we will have removed the VMA for the object for no reason. The likelihood of unbind failing is slim (other than ERESTARTSYS which will cause userspace to try again), so the change is mostly for the principle.  Also improve the slightly stale comment.  Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_sysfs.c | s | 3.6K | 96 | Ben Widawsky | ben@bwidawsk.net | 1335166214 |  | drm/i915: rc6 residency (fix the fix)  Chris' fix for my 32b breakage was incorrect. do_div returns a remainder. Go back to a divide macro which is more 32b friendly.  Tested on x86-64.  This has only been compile tested on 32b systems.  Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=48756 Cc: Chris Wilson <chris@chris-wilson.co.uk> Sincere-apologies: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Ben Widawsky <benjamin.widawsky@intel.com> [danvet: fixup 32bit compile-fail.] Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_opregion.c | s | 14K | 447 | Ben Widawsky | ben@bwidawsk.net | 1336036680 |  | drm/i915: [sparse] __iomem fixes for opregion  Almost all of the errors related __iomem problems.  Most of the changes here are trivial, however there is plenty of chance for yank/paste errors.  Signed-off-by: Ben Widawsky <benjamin.widawsky@intel.com> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo_ivch.c | s | 9.8K | 357 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | intel_crt.c | s | 17K | 557 | Linus Torvalds | torvalds@linux-foundation.org | 1339192386 |  | Revert "drm/i915/crt: Do not rely upon the HPD presence pin"  This reverts commit 9e612a008fa7fe493a473454def56aa321479495.  It incorrectly finds VGA connectors where none are attached, apparently not noticing that nothing replied to the EDID queries, and happily using the default EDID modes that have nothing to do with actual hardware.  That in turn then causes X to fall down to the lowest common denominator, which is usually the default 1024x768 mode that is in the default EDID and pretty much anything supports).  I'd suggest that if not relying on the HDP pin, the code should at least check whether it gets valid EDID data back, rather than just assume there's something on the VGA connector.  Cc: Dave Airlie <airlied@linux.ie> Cc: Chris Wilson <chris@chris-wilson.co.uk> Cc: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | intel_overlay.c | s | 41K | 1379 | Daniel Vetter | daniel.vetter@ffwll.ch | 1336123884 |  | drm/i915: rip out unnecessary calls to drm_mode_set_crtcinfo  Our handling of the crtc timing computation has been nicely cargo-culted with calls to drm_mode_set_crtcinfo sprinkled all over the place. But with  commit f9bef081c3c3f77bec54454872e98d3ec635756f Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date:   Sun Apr 15 19:53:19 2012 +0200      drm/i915: don't clobber the special upscaling lvds timings  and  commit ca9bfa7eed20ea34e862804e62aae10eb159edbb Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date:   Sat Jan 28 14:49:20 2012 +0100      drm/i915: fixup interlaced vertical timings confusion, part 1  we now only set the crtc timing fields in the encoder->mode_fixup (lvds only) and in crtc->mode_fixup (for everyone else). And since  commit 75c13993db592343bda1fd62f2555fea037d56bd Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date:   Sat Jan 28 23:48:46 2012 +0100      drm/i915: fixup overlay checks for interlaced modes  the only places we actually need the crtc timings is in the mode_set function.  I guess the idea of the drm core is that every time it creates a drm mode, it also sets the timings. But afaics it never uses them, safe for the precise vblank timestamp code (but that can only run on active modes, i.e.  after our mode_fixup functions have been called). The problem is that drm core always sets CRTC_INTERLACE_HALVE_V, so the timings are pretty much bogus for us anyway (at least with interlaced support).  So I guess it's the drivers job that every active modes needs to have crtc timings that suits it, and with these patches we should have that. drm core doesn't seem to care about modes that just get passed around. Hence we can now safely rip out all the remaining calls to set_crtcinfo left in the driver and clean up this confusion.  Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_drv.h | s | 47K | 1345 | Dave Airlie | airlied@redhat.com | 1339144955 |  | Merge branch 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel into drm-fixes  * 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel:   drm/i915: pch_irq_handler -> {ibx, cpt}_irq_handler   char/agp: add another Ironlake host bridge   drm/i915: fix up ivb plane 3 pageflips   drm/i915: hold forcewake around ring hw init   drm/i915: Mark the ringbuffers as being in the GTT domain   drm/i915/crt: Do not rely upon the HPD presence pin   drm/i915: Reset last_retired_head when resetting ring
f | i915_trace_points.c | s | 210B | 11 | Ben Widawsky | ben@bwidawsk.net | 1334738089 |  | drm/i915: [sparse] trivial sparse fixes  This should contain all the changes which require no thought to make sparse happy.  Signed-off-by: Ben Widawsky <benjamin.widawsky@intel.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_drv.c | s | 32K | 999 | Daniel Vetter | daniel.vetter@ffwll.ch | 1338834329 |  | drm/i915: hold forcewake around ring hw init  Empirical evidence suggests that we need to: On at least one ivb machine when running the hangman i-g-t test, the rings don't properly initialize properly - the RING_START registers seems to be stuck at all zeros.  Holding forcewake around this register init sequences makes chip reset reliable again. Note that this is not the first such issue:  commit f01db988ef6f6c70a6cc36ee71e4a98a68901229 Author: Sean Paul <seanpaul@chromium.org> Date:   Fri Mar 16 12:43:22 2012 -0400      drm/i915: Add wait_for in init_ring_common  added delay loops to make RING_START and RING_CTL initialization reliable on the blt ring at boot-up. So I guess it won't hurt if we do this unconditionally for all force_wake needing gpus.  To avoid copy&pasting of the HAS_FORCE_WAKE check I've added a new intel_info bit for that.  v2: Fixup missing commas in static struct and properly handling the error case in init_ring_common, both noticed by Jani Nikula.  Cc: stable@vger.kernel.org Reported-and-tested-by: Yang Guang <guang.a.yang@intel.com> Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=50522 Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_sdvo.c | s | 78K | 2224 | Dave Airlie | airlied@redhat.com | 1338286146 |  | Merge branch 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel into drm-fixes  * 'drm-intel-fixes' of git://people.freedesktop.org/~danvet/drm-intel:   drm/i915: tune down the noise of the RP irq limit fail   drm/i915: Remove the error message for unbinding pinned buffers   drm/i915: Limit page allocations to lowmem (dma32) for i965   drm/i915: always use RPNSWREQ for turbo change requests   drm/i915: reject doubleclocked cea modes on dp   drm/i915: Adding TV Out Missing modes.   drm/i915: wait for a vblank to pass after tv detect   drm/i915: no lvds quirk for HP t5740e Thin Client   drm/i915: enable vdd when switching off the eDP panel   drm/i915: Fix PCH PLL assertions to not assume CRTC:PLL relationship   drm/i915: Always update RPS interrupts thresholds along with frequency   drm/i915: properly handle interlaced bit for sdvo dtd conversion   drm/i915: fix module unload since error_state rework   drm/i915: be more careful when returning -ENXIO in gmbus transfer
f | intel_fb.c | s | 7.6K | 243 | Daniel Vetter | daniel.vetter@ffwll.ch | 1336392134 |  | 
f | intel_lvds.c | s | 31K | 989 | Jan-Benedict Glaw | jan-benedict.glaw@getslash.de | 1337874841 |  | drm/i915: no lvds quirk for HP t5740e Thin Client  This box has DisplayPort and VGA, but no LVDS. Product specs are at http://h10010.www1.hp.com/wwpc/us/en/sm/WF25a/12454-12454-321959-338927-3640406-4282707.html?dnr=1 and dmidecode output can be found at http://www.getslash.de/bug_attachments/dmidecode-t5740e.txt  Signed-off-by: Jan-Benedict Glaw <jbglaw@getslash.de> Cc: stable@vger.kernel.org Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_i2c.c | s | 14K | 463 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337627061 |  | drm/i915: be more careful when returning -ENXIO in gmbus transfer  ... flaky ddc hardware can cause a spurious NAK, resulting in the i2c core and drm edid functions not trying to retry the edid transfer.  Luckily the gmbus quiescenting also times out for these cases, so we can get out of this mess by returning -ETIMEDOUT for this specific case. This way we keep the fast-fail of returning -ENXIO if there is no device present, speeding up the boot process.  This regression has been introduced in  commit e646d5773572bf52017983d758bdf05777dc5600 Author: Daniel Kurtz <djkurtz@chromium.org> Date:   Fri Mar 30 19:46:38 2012 +0800      drm/i915/intel_i2c: always wait for IDLE before clearing NAK  v2: Return -ETIMEDOUT for this case and keep the -ENXIO for real NAKs, suggested by Daniel Kurtz.  Cc: Daniel Kurtz <djkurtz@chromium.org> Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=49518 Reported-and-Tested-by: Julian Simioni <julian.simioni@gmail.com> Acked-by: Chris Wilson <chris@chris-wilson.co.uk> Reviewed-by: Daniel Kurtz <djkurtz@chromium.org> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_debugfs.c | s | 54K | 1727 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337671356 |  | drm/i915: fix module unload since error_state rework  We need to remove the debugfs file. Regression introduce in  commit d54423037f141518950f324af88a551a82449496 Author: Daniel Vetter <daniel.vetter@ffwll.ch> Date:   Fri Apr 27 15:17:40 2012 +0200      drm/i915: allow the existing error_state to be destroyed  Reported-and-Tested-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | intel_sdvo_regs.h | s | 23K | 651 | Daniel Vetter | daniel.vetter@ffwll.ch | 1337874832 |  | drm/i915: properly handle interlaced bit for sdvo dtd conversion  We've simply ignored this, which isn't too great. With this, interlaced 1080i works on my HDMI screen connected through sdvo. For no apparent reason anything else still doesn't work as it should.  While at it, give these magic numbers in the dtd proper names and add a comment that they match with EDID detailed timings.  v2: Actually use the right bit for interlaced.  Tested-by: Peter Ross <pross@xvid.org> Reviewed-by: Paulo Zanoni <paulo.r.zanoni@intel.com> Cc: stable@vger.kernel.org Signed-Off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | dvo_ch7017.c | s | 12K | 345 | Akshay Joshi | me@akshayjoshi.com | 1316480507 |  | Drivers: i915: Fix all space related issues.  Various issues involved with the space character were generating warnings in the checkpatch.pl file. This patch removes most of those warnings.  Signed-off-by: Akshay Joshi <me@akshayjoshi.com> Signed-off-by: Keith Packard <keithp@keithp.com>
f | intel_hdmi.c | s | 20K | 628 | Paulo Zanoni | paulo.r.zanoni@intel.com | 1337529155 |  | drm/i915: implement hsw_write_infoframe  Both the control and data registers are completely different now.  Signed-off-by: Paulo Zanoni <paulo.r.zanoni@intel.com> Reviewed-by: Eugeni Dodonov <eugeni.dodonov@intel.com> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
f | i915_dma.c | s | 48K | 1522 | Daniel Vetter | daniel.vetter@ffwll.ch | 1341310728 |  | drm/i915: kick any firmware framebuffers before claiming the gtt  Especially vesafb likes to map everything as uc- (yikes), and if that mapping hangs around still while we try to map the gtt as wc the kernel will downgrade our request to uc-, resulting in abyssal performance.  Unfortunately we can't do this as early as readon does (i.e. as the first thing we do when initializing the hw) because our fb/mmio space region moves around on a per-gen basis. So I've had to move it below the gtt initialization, but that seems to work, too. The important thing is that we do this before we set up the gtt wc mapping.  Now an altogether different question is why people compile their kernels with vesafb enabled, but I guess making things just work isn't bad per se ...  v2: - s/radeondrmfb/inteldrmfb/ - fix up error handling  v3: Kill #ifdef X86, this is Intel after all. Noticed by Ben Widawsky.  v4: Jani Nikula complained about the pointless bool primary initialization.  v5: Don't oops if we can't allocate, noticed by Chris Wilson.  v6: Resolve conflicts with agp rework and fixup whitespace.  This is commit e188719a2891f01b3100d in drm-next.  Backport to 3.5 -fixes queue requested by Dave Airlie - due to grub using vesa on fedora their initrd seems to load vesafb before loading the real kms driver. So tons more people actually experience a dead-slow gpu. Hence also the Cc: stable.  Cc: stable@vger.kernel.org Reported-and-tested-by: "Kilarski, Bernard R" <bernard.r.kilarski@intel.com> Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch> Signed-off-by: Dave Airlie <airlied@redhat.com>
