f | devres.c | s | 17K | 594 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1336174396 |  | devres: Add devres_release()  APIs using devres frequently want to implement a "remove and free the resource" operation so it seems sensible that they should be able to just have devres do the freeing for them since that's a big part of what devres is all about.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | driver.c | s | 5.8K | 213 | Hiroshi DOYU | hdoyu@nvidia.com | 1337010361 |  | Driver Core: don't oops with unregistered driver in driver_find_device()  driver_find_device() can be called with an unregistered driver. Need to check driver_private to see if it's populated or not, especially under deferrable probe.  In the case that there are 2 drivers, one depends on the other. With -EPROBE_DEFER, two drivers can use deferred probe to ensure that their relative probe order doesn't matter. If dependee driver is probed first, then the dependant's driver_find_device('dependee') succeeds. If the dependant is probed first, then the dependant's driver_find_device('dependee') should return NULL, and the dependant should get -EPROBE_DEFER. driver_find_device() needs to return NULL if it's not populated.  In [PATCHv5 2/3] ARM: tegra: Add SMMU enabler in AHB:   http://article.gmane.org/gmane.linux.ports.tegra/4658  "tegra_ahb_driver" may not be populated when it's called.  For more SMMU/AHB specific discussion, refer to the following thread:   https://lkml.org/lkml/2012/5/10/21  Signed-off-by: Hiroshi DOYU <hdoyu@nvidia.com> Cc: Stephen Warren <swarren@wwwdotorg.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | Makefile | g | 827B |  | Marek Szyprowski | m.szyprowski@samsung.com | 1337605777 |  | drivers: add Contiguous Memory Allocator  The Contiguous Memory Allocator is a set of helper functions for DMA mapping framework that improves allocations of contiguous memory chunks.  CMA grabs memory on system boot, marks it with MIGRATE_CMA migrate type and gives back to the system. Kernel is allowed to allocate only movable pages within CMA's managed memory so that it can be used for example for page cache when DMA mapping do not use it. On dma_alloc_from_contiguous() request such pages are migrated out of CMA area to free required contiguous block and fulfill the request. This allows to allocate large contiguous chunks of memory at any time assuming that there is enough free memory available in the system.  This code is heavily based on earlier works by Michal Nazarewicz.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Rob Clark <rob.clark@linaro.org> Tested-by: Ohad Ben-Cohen <ohad@wizery.com> Tested-by: Benjamin Gaignard <benjamin.gaignard@linaro.org> Tested-by: Robert Nelson <robertcnelson@gmail.com> Tested-by: Barry Song <Baohua.Song@csr.com>
f | init.c | s | 714B | 32 | Kay Sievers | kay.sievers@vrfy.org | 1323901778 |  | driver-core: implement 'sysdev' functionality for regular devices and buses  All sysdev classes and sysdev devices will converted to regular devices and buses to properly hook userspace into the event processing.  There is no interesting difference between a 'sysdev' and 'device' which would justify to roll an entire own subsystem with different userspace export semantics. Userspace relies on events and generic sysfs subsystem infrastructure from sysdev devices, which are currently not properly available.  Every converted sysdev class will create a regular device with the class name in /sys/devices/system and all registered devices will becom a children of theses devices.  For compatibility reasons, the sysdev class-wide attributes are created at this parent device. (Do not copy that logic for anything new, subsystem- wide properties belong to the subsystem, not to some fake parent device created in /sys/devices.)  Every sysdev driver is implemented as a simple subsystem interface now, and no longer called a driver.  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dma-buf.c | s | 13K | 426 | Linus Torvalds | torvalds@linux-foundation.org | 1337963846 |  | 
f | class.c | s | 15K | 527 | Kay Sievers | kay.sievers@vrfy.org | 1323901778 |  | driver-core: implement 'sysdev' functionality for regular devices and buses  All sysdev classes and sysdev devices will converted to regular devices and buses to properly hook userspace into the event processing.  There is no interesting difference between a 'sysdev' and 'device' which would justify to roll an entire own subsystem with different userspace export semantics. Userspace relies on events and generic sysfs subsystem infrastructure from sysdev devices, which are currently not properly available.  Every converted sysdev class will create a regular device with the class name in /sys/devices/system and all registered devices will becom a children of theses devices.  For compatibility reasons, the sysdev class-wide attributes are created at this parent device. (Do not copy that logic for anything new, subsystem- wide properties belong to the subsystem, not to some fake parent device created in /sys/devices.)  Every sysdev driver is implemented as a simple subsystem interface now, and no longer called a driver.  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | platform.c | s | 28K | 980 | Grant Likely | grant.likely@secretlab.ca | 1328131590 |  | drivercore: Output common devicetree information in uevent  When userspace needs to find a specific device, it currently isn't easy to resolve a /sys/devices/ path from a specific device tree node.  Nor is it easy to obtain the compatible list for devices.  This patch generalizes the code that inserts OF_* values into the uevent device attribute so that any device that is attached to an OF node will have that information exported to userspace.  Without this patch only platform devices and some powerpc-specific busses have access to this data.  The original function also creates a MODALIAS property for the compatible list, but that code has not been generalized into the common case because it has the potential to break module loading on a lot of bus types.  Bus types are still responsible for their own MODALIAS properties.  Boot tested on ARM and compile tested on PowerPC and SPARC.  Signed-off-by: Grant Likely <grant.likely@secretlab.ca> Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Tobias Klauser <tklauser@distanz.ch> Cc: Frederic Lambert <frdrc66@gmail.com> Cc: Rob Herring <rob.herring@calxeda.com> Cc: Mark Brown <broonie@sirena.org.uk> Cc: "David S. Miller" <davem@davemloft.net> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | topology.c | s | 5.2K | 169 | Kay Sievers | kay.sievers@vrfy.org | 1324506582 |  | cpu: convert 'cpu' and 'machinecheck' sysdev_class to a regular subsystem  This moves the 'cpu sysdev_class' over to a regular 'cpu' subsystem and converts the devices to regular devices. The sysdev drivers are implemented as subsystem interfaces now.  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Userspace relies on events and generic sysfs subsystem infrastructure from sysdev devices, which are made available with this conversion.  Cc: Haavard Skinnemoen <hskinnemoen@gmail.com> Cc: Hans-Christian Egtvedt <egtvedt@samfundet.no> Cc: Tony Luck <tony.luck@intel.com> Cc: Fenghua Yu <fenghua.yu@intel.com> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Cc: Paul Mackerras <paulus@samba.org> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Cc: Paul Mundt <lethal@linux-sh.org> Cc: "David S. Miller" <davem@davemloft.net> Cc: Chris Metcalf <cmetcalf@tilera.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Borislav Petkov <bp@amd64.org> Cc: Tigran Aivazian <tigran@aivazian.fsnet.co.uk> Cc: Len Brown <lenb@kernel.org> Cc: Zhang Rui <rui.zhang@intel.com> Cc: Dave Jones <davej@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Cc: Russell King <rmk+kernel@arm.linux.org.uk> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Arjan van de Ven <arjan@linux.intel.com> Cc: "Rafael J. Wysocki" <rjw@sisk.pl> Cc: "Srivatsa S. Bhat" <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
d | regmap |  | 12 items |  | Mark Brown | broonie@opensource.wolfsonmicro.com | 1339106241 |  | regmap: Export regmap_reinit_cache()  It's supposed to be there for drivers.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
d | power |  | 14 items |  | Mandeep Singh Baines | msb@chromium.org | 1340573469 |  | PM / Sleep: Prevent waiting forever on asynchronous suspend after abort  __device_suspend() must always send a completion. Otherwise, parent devices will wait forever.  Commit 1e2ef05b, "PM: Limit race conditions between runtime PM and system sleep (v2)", introduced a regression by short-circuiting the complete_all() for certain error cases.  This patch fixes the bug by always signalling a completion.  Addresses http://crosbug.com/31972  Tested by injecting an abort.  Signed-off-by: Mandeep Singh Baines <msb@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | soc.c | s | 4.1K | 146 | Al Viro | viro@zeniv.linux.org.uk | 1338348522 |  | mode_t whack-a-mole: ->is_visible() returns umode_t...  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | memory.c | s | 16K | 600 | Ingo Molnar | mingo@elte.hu | 1331707451 |  | 
f | dd.c | s | 15K | 511 | Kuninori Morimoto | kuninori.morimoto.gx@renesas.com | 1339620159 |  | driver core: fixup reversed deferred probe order  If driver requests probe deferral, it will be added to deferred_probe_pending_list by driver_deferred_probe_add(), but, it used list_add(). Because of that, deferred probe will be run as reversed order. This patch uses list_add_tail(), and solved this issue.  Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | devtmpfs.c | s | 9.2K | 389 | Peter Korsgaard | jacmet@sunsite.dk | 1334788655 |  | devtmpfs: fix 'the the' typo  Signed-off-by: Peter Korsgaard <jacmet@sunsite.dk> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dma-coherent.c | s | 5.9K | 190 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605569 |  | common: add dma_mmap_from_coherent() function  Add a common helper for dma-mapping core for mapping a coherent buffer to userspace.  Reported-by: Subash Patel <subashrp@gmail.com> Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Tested-By: Subash Patel <subash.ramaswamy@linaro.org>
f | transport_class.c | s | 9.4K | 250 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103875 |  | drivers/base: transport_class explicitly requires EXPORT_SYMBOL  This file was getting <linux/module.h> via an implicit include path, but we want to crush those out of existence since they cost time during compiles of processing thousands of lines of headers for no reason.  Give it the lightweight header that just contains the EXPORT_SYMBOL infrastructure.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | base.h | s | 4.8K | 125 | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1331237842 |  | driver core: move the deferred probe pointer into the private area  Nothing outside of the driver core needs to get to the deferred probe pointer, so move it inside the private area of 'struct device' so no one tries to mess around with it.  Cc: Grant Likely <grant.likely@secretlab.ca> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | firmware_class.c | s | 17K | 620 | Stephen Boyd | sboyd@codeaurora.org | 1332970260 |  | firmware_class: Move request_firmware_nowait() to workqueues  Oddly enough a work_struct was already part of the firmware_work structure but nobody was using it. Instead of creating a new kthread for each request_firmware_nowait() call just schedule the work on the system workqueue. This should avoid some overhead in forking new threads when they're not strictly necessary.  Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | module.c | s | 1.9K | 78 | Julia Lawall | julia@diku.dk | 1274459849 |  | driver core: module.c: Use kasprintf  kasprintf combines kmalloc and sprintf, and takes care of the size calculation itself.  The semantic patch that makes this change is as follows: (http://coccinelle.lip6.fr/)  // <smpl> @@ expression a,flag; expression list args; statement S; @@    a = -  \(kmalloc\||kzalloc\)(...,flag) +  kasprintf(flag,args)   <... when != a   if (a == NULL |||| ...) S   ...> - sprintf(a,args); // </smpl>  Signed-off-by: Julia Lawall <julia@diku.dk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | hypervisor.c | s | 544B | 22 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103898 |  | drivers/base: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required.  Most of these files were implicitly getting EXPORT_SYMBOL via device.h which was including module.h, but that path will be broken soon.  [ with input from Stephen Rothwell <sfr@canb.auug.org.au> ]  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | Kconfig | g | 9.9K |  | Marek Szyprowski | m.szyprowski@samsung.com | 1337605777 |  | drivers: add Contiguous Memory Allocator  The Contiguous Memory Allocator is a set of helper functions for DMA mapping framework that improves allocations of contiguous memory chunks.  CMA grabs memory on system boot, marks it with MIGRATE_CMA migrate type and gives back to the system. Kernel is allowed to allocate only movable pages within CMA's managed memory so that it can be used for example for page cache when DMA mapping do not use it. On dma_alloc_from_contiguous() request such pages are migrated out of CMA area to free required contiguous block and fulfill the request. This allows to allocate large contiguous chunks of memory at any time assuming that there is enough free memory available in the system.  This code is heavily based on earlier works by Michal Nazarewicz.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Rob Clark <rob.clark@linaro.org> Tested-by: Ohad Ben-Cohen <ohad@wizery.com> Tested-by: Benjamin Gaignard <benjamin.gaignard@linaro.org> Tested-by: Robert Nelson <robertcnelson@gmail.com> Tested-by: Barry Song <Baohua.Song@csr.com>
f | cpu.c | s | 8.2K | 284 | Peter Zijlstra | peterz@infradead.org | 1337255336 |  | sched: Remove stale power aware scheduling remnants and dysfunctional knobs  It's been broken forever (i.e. it's not scheduling in a power aware fashion), as reported by Suresh and others sending patches, and nobody cares enough to fix it properly ... so remove it to make space free for something better.  There's various problems with the code as it stands today, first and foremost the user interface which is bound to topology levels and has multiple values per level. This results in a state explosion which the administrator or distro needs to master and almost nobody does.  Furthermore large configuration state spaces aren't good, it means the thing doesn't just work right because it's either under so many impossibe to meet constraints, or even if there's an achievable state workloads have to be aware of it precisely and can never meet it for dynamic workloads.  So pushing this kind of decision to user-space was a bad idea even with a single knob - it's exponentially worse with knobs on every node of the topology.  There is a proposal to replace the user interface with a single 3 state knob:   sched_balance_policy := { performance, power, auto }  where 'auto' would be the preferred default which looks at things like Battery/AC mode and possible cpufreq state or whatever the hw exposes to show us power use expectations - but there's been no progress on it in the past many months.  Aside from that, the actual implementation of the various knobs is known to be broken. There have been sporadic attempts at fixing things but these always stop short of reaching a mergable state.  Therefore this wholesale removal with the hopes of spurring people who care to come forward once again and work on a coherent replacement.  Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Suresh Siddha <suresh.b.siddha@intel.com> Cc: Arjan van de Ven <arjan@linux.intel.com> Cc: Vincent Guittot <vincent.guittot@linaro.org> Cc: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Link: http://lkml.kernel.org/r/1326104915.2442.53.camel@twins Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | node.c | s | 17K | 565 | Ryota Ozaki | ozaki.ryota@gmail.com | 1338333739 |  | mm: fix off-by-one bug in print_nodes_state()  /sys/devices/system/node/{online,possible} outputs a garbage byte because print_nodes_state() returns content size + 1.  To fix the bug, the patch changes the use of cpuset_sprintf_cpulist to follow the use at other places, which is clearer and safer.  This bug was introduced in v2.6.24 (commit bde631a51876: "mm: add node states sysfs class attributeS").  Signed-off-by: Ryota Ozaki <ozaki.ryota@gmail.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | isa.c | s | 3.7K | 143 | Yang Hongyang | yanghy@cn.fujitsu.com | 1239118272 |  | dma-mapping: replace all DMA_24BIT_MASK macro with DMA_BIT_MASK(24)  Replace all DMA_24BIT_MASK macro with DMA_BIT_MASK(24)  Signed-off-by: Yang Hongyang<yanghy@cn.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | core.c | s | 49K | 1698 | Kay Sievers | kay@vrfy.org | 1336435923 |  | driver-core: extend dev_printk() to pass structured data  Extends dev_printk() to attach a dictionary with a device identifier and the driver core subsystem name to logged messages, which makes dev_prink() reliable machine-readable. In addition to the printed plain text message, it creates these properties:     SUBSYSTEM=     - the driver-core subsytem name     DEVICE=       b12:8        - block dev_t       c127:3       - char dev_t       n8           - netdev ifindex       +sound:card0 - subsystem:devname  Tested-by: William Douglas <william.douglas@intel.com> Signed-off-by: Kay Sievers <kay@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | firmware.c | s | 614B | 24 | Greg Kroah-Hartman | gregkh@suse.de | 1201236023 |  | firmware: change firmware_kset to firmware_kobj  There is no firmware "subsystem" it's just a directory in /sys that other portions of the kernel want to hook into.  So make it a kobject not a kset to help alivate anyone who tries to do some odd kset-like things with this.  Cc: Kay Sievers <kay.sievers@vrfy.org> Cc: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | map.c | s | 3.3K | 139 | Jes Sorensen | jes@sgi.com | 1142890978 |  | [PATCH] kobj_map semaphore to mutex conversion  Convert the kobj_map code to use a mutex instead of a semaphore.  It converts the single two users as well, genhd.c and char_dev.c.  Signed-off-by: Jes Sorensen <jes@sgi.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dma-contiguous.c | s | 10.0K | 336 | Marek Szyprowski | m.szyprowski@samsung.com | 1337605777 |  | drivers: add Contiguous Memory Allocator  The Contiguous Memory Allocator is a set of helper functions for DMA mapping framework that improves allocations of contiguous memory chunks.  CMA grabs memory on system boot, marks it with MIGRATE_CMA migrate type and gives back to the system. Kernel is allowed to allocate only movable pages within CMA's managed memory so that it can be used for example for page cache when DMA mapping do not use it. On dma_alloc_from_contiguous() request such pages are migrated out of CMA area to free required contiguous block and fulfill the request. This allows to allocate large contiguous chunks of memory at any time assuming that there is enough free memory available in the system.  This code is heavily based on earlier works by Michal Nazarewicz.  Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com> Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com> Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Rob Clark <rob.clark@linaro.org> Tested-by: Ohad Ben-Cohen <ohad@wizery.com> Tested-by: Benjamin Gaignard <benjamin.gaignard@linaro.org> Tested-by: Robert Nelson <robertcnelson@gmail.com> Tested-by: Barry Song <Baohua.Song@csr.com>
f | bus.c | s | 31K | 1125 | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1334888250 |  | Revert "driver core: check start node in klist_iter_init_node"  This reverts commit a15d49fd3094cff90e5410ca454a870e0a722fe1 as that patch broke the build.  Cc: Hannes Reinecke <hare@suse.de> Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | syscore.c | s | 3.0K | 107 | Colin Cross | ccross@android.com | 1310374309 |  | PM: Reintroduce dropped call to check_wakeup_irqs  Patch 2e711c04dbbf7a7732a3f7073b1fc285d12b369d (PM: Remove sysdev suspend, resume and shutdown operations) deleted sysdev_suspend(), which was being relied on to call check_wakeup_irqs() in suspend.  If check_wakeup_irqs() is not called, wake interrupts that are pending when suspend is entered may be lost.  It also breaks IRQCHIP_MASK_ON_SUSPEND, which is handled in check_wakeup_irqs().  This patch adds a call to check_wakeup_irqs() in syscore_suspend(), similar to what was deleted in sysdev_suspend().  Signed-off-by: Colin Cross <ccross@android.com> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | dma-mapping.c | s | 5.4K | 188 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103898 |  | drivers/base: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required.  Most of these files were implicitly getting EXPORT_SYMBOL via device.h which was including module.h, but that path will be broken soon.  [ with input from Stephen Rothwell <sfr@canb.auug.org.au> ]  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | attribute_container.c | s | 11K | 389 | James Bottomley | James.Bottomley@suse.de | 1269717324 |  | [SCSI] attirbute_container: Initialize sysfs attributes with sysfs_attr_init  All of the SCSI transport classes are suddenly spitting lockdep warnings.  According to Eric Biderman this is because lockdep needs static initialisers and the attribute container way of doing things end up with dynamic sysfs attributes.  Fix this by calling sysfs_attr_init which sets the lockdep key correctly.  Tested-by: Christof Schmitt <christof.schmitt@de.ibm.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
