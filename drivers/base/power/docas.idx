f | domain.c | s | 46K | 1483 | Rafael J. Wysocki | rjw@sisk.pl | 1337366726 |  | PM / Domains: Make it possible to add devices to inactive domains  The generic PM domains core code currently requires domains to be in the "power on" state for adding devices to them, but this limitation turns out to be inconvenient in some situations, so remove it.  For this purpose, make __pm_genpd_add_device() set the device's need_restore flag if the domain is in the "power off" state, so that the device's "restore state" (usually .runtime_resume()) callback is executed when it is resumed after the domain has been turned on. If the domain is in the "power on" state, the device's need_restore flag will be cleared by __pm_genpd_add_device(), so that its "save state" (usually .runtime_suspend()) callback is executed when the domain is about to be turned off.  However, since that default behavior need not be always desirable, add a helper function pm_genpd_dev_need_restore() allowing a device's need_restore flag to be set/unset at any time.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | common.c | s | 1.9K | 73 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | power.h | s | 2.5K | 65 | Rafael J. Wysocki | rjw@sisk.pl | 1331674634 |  | PM / QoS: Make it possible to expose PM QoS latency constraints  A runtime suspend of a device (e.g. an MMC controller) belonging to a power domain or, in a more complicated scenario, a runtime suspend of another device in the same power domain, may cause power to be removed from the entire domain.  In that case, the amount of time necessary to runtime-resume the given device (e.g. the MMC controller) is often substantially greater than the time needed to run its driver's runtime resume callback.  That may hurt performance in some situations, because user data may need to wait for the device to become operational, so we should make it possible to prevent that from happening.  For this reason, introduce a new sysfs attribute for devices, power/pm_qos_resume_latency_us, allowing user space to specify the upper bound of the time necessary to bring the (runtime-suspended) device up after the resume of it has been requested.  However, make that attribute appear only for the devices whose drivers declare support for it by calling the (new) dev_pm_qos_expose_latency_limit() helper function with the appropriate initial value of the attribute.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Reviewed-by: Kevin Hilman <khilman@ti.com> Reviewed-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Acked-by: Linus Walleij <linus.walleij@linaro.org>
f | Makefile | g | 350B |  | Rafael J. Wysocki | rjw@sisk.pl | 1322772460 |  | PM / Domains: Add device stop governor function (v4)  Add a function deciding whether or not devices should be stopped in pm_genpd_runtime_suspend() depending on their PM QoS constraints and stop/start timing values.  Make it possible to add information used by this function to device objects.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by: Magnus Damm <damm@opensource.se>
f | domain_governor.c | s | 6.5K | 214 | Rafael J. Wysocki | rjw@sisk.pl | 1336763504 |  | PM / Domains: Fix computation of maximum domain off time  The default domain power off governor function for generic PM domains, default_power_down_ok(), may violate subdomain maximum off time limit by allowing the master domain to be off for too long.  Namely, it only finds the minium of all device maximum off times over the domain's devices and uses that to compute the domain's maximum off time, but it should do the same for the subdomains.  Fix this problem by modifying default_power_down_ok() to compute the given domain's maximum off time as the difference between the minimum off time over all devices and subdomains in the domain and its power on latency.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | qos.c | s | 14K | 439 | Rafael J. Wysocki | rjw@sisk.pl | 1335900523 |  | PM / QoS: Create device constraints objects on notifier registration  The current behavior of dev_pm_qos_add_notifier() makes device PM QoS notifiers less than useful.  Namely, it silently returns success when called before any PM QoS constraints are added for the device, so the caller will assume that the notifier has been registered, but when someone actually adds some nontrivial constraints for the device eventually, the previous callers of dev_pm_qos_add_notifier() will not know about that and their notifier routines will not be executed (contrary to their expectations).  To address this problem make dev_pm_qos_add_notifier() create the constraints object for the device if it is not present when the routine is called.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by : markgross <markgross@thegnar.org>
f | clock_ops.c | s | 11K | 401 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | generic_ops.c | s | 8.6K | 277 | Rafael J. Wysocki | rjw@sisk.pl | 1327865921 |  | PM / Sleep: Introduce generic callbacks for new device PM phases  Introduce generic subsystem callbacks for the new phases of device suspend/resume during system power transitions: "late suspend", "early resume", "late freeze", "early thaw", "late poweroff", "early restore".  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | sysfs.c | s | 17K | 549 | Rafael J. Wysocki | rjw@sisk.pl | 1335900349 |  | PM / Sleep: Add "prevent autosleep time" statistics to wakeup sources  Android uses one wakelock statistics that is only necessary for opportunistic sleep.  Namely, the prevent_suspend_time field accumulates the total time the given wakelock has been locked while "automatic suspend" was enabled.  Add an analogous field, prevent_sleep_time, to wakeup sources and make it behave in a similar way.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | main.c | s | 32K | 1133 | Mandeep Singh Baines | msb@chromium.org | 1340573469 |  | PM / Sleep: Prevent waiting forever on asynchronous suspend after abort  __device_suspend() must always send a completion. Otherwise, parent devices will wait forever.  Commit 1e2ef05b, "PM: Limit race conditions between runtime PM and system sleep (v2)", introduced a regression by short-circuiting the complete_all() for certain error cases.  This patch fixes the bug by always signalling a completion.  Addresses http://crosbug.com/31972  Tested by injecting an abort.  Signed-off-by: Mandeep Singh Baines <msb@chromium.org> Cc: stable@vger.kernel.org Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | runtime.c | s | 35K | 1109 | Rafael J. Wysocki | rjw@sisk.pl | 1335900518 |  | PM / Runtime: Remove device fields related to suspend time, v2  After the previous changes in default_stop_ok() and default_power_down_ok() for PM domains, there are two fields in struct dev_pm_info that aren't necessary any more,  suspend_time and max_time_suspended_ns.  Remove those fields along with all of the code that accesses them, which simplifies the runtime PM framework quite a bit.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
f | trace.c | s | 7.0K | 239 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103898 |  | drivers/base: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required.  Most of these files were implicitly getting EXPORT_SYMBOL via device.h which was including module.h, but that path will be broken soon.  [ with input from Stephen Rothwell <sfr@canb.auug.org.au> ]  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | wakeup.c | s | 23K | 735 | Rafael J. Wysocki | rjw@sisk.pl | 1335900365 |  | PM / Sleep: Add user space interface for manipulating wakeup sources, v3  Android allows user space to manipulate wakelocks using two sysfs file located in /sys/power/, wake_lock and wake_unlock. Writing a wakelock name and optionally a timeout to the wake_lock file causes the wakelock whose name was written to be acquired (it is created before is necessary), optionally with the given timeout. Writing the name of a wakelock to wake_unlock causes that wakelock to be released.  Implement an analogous interface for user space using wakeup sources. Add the /sys/power/wake_lock and /sys/power/wake_unlock files allowing user space to create, activate and deactivate wakeup sources, such that writing a name and optionally a timeout to wake_lock causes the wakeup source of that name to be activated, optionally with the given timeout.  If that wakeup source doesn't exist, it will be created and then activated.  Writing a name to wake_unlock causes the wakeup source of that name, if there is one, to be deactivated.  Wakeup sources created with the help of wake_lock that haven't been used for more than 5 minutes are garbage collected and destroyed.  Moreover, there can be only WL_NUMBER_LIMIT wakeup sources created with the help of wake_lock present at a time.  The data type used to track wakeup sources created by user space is called "struct wakelock" to indicate the origins of this feature.  This version of the patch includes an rbtree manipulation fix from John Stultz.  Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Reviewed-by: NeilBrown <neilb@suse.de>
f | opp.c | s | 20K | 604 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
