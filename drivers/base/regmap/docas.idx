f | regmap-i2c.c | s | 3.2K | 118 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1338368134 |  | i2c: Split I2C_M_NOSTART support out of I2C_FUNC_PROTOCOL_MANGLING  Since there are uses for I2C_M_NOSTART which are much more sensible and standard than most of the protocol mangling functionality (the main one being gather writes to devices where something like a register address needs to be inserted before a block of data) create a new I2C_FUNC_NOSTART for this feature and update all the users to use it.  Also strengthen the disrecommendation of the protocol mangling while we're at it.  In the case of regmap-i2c we remove the requirement for mangling as I2C_M_NOSTART is the only mangling feature which is being used.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Acked-by: Wolfram Sang <w.sang@pengutronix.de> Signed-off-by: Jean Delvare <khali@linux-fr.org>
f | regcache-lzo.c | s | 9.1K | 328 | Stephen Warren | swarren@nvidia.com | 1334052078 |  | regmap: implement register striding  regmap_config.reg_stride is introduced. All extant register addresses are a multiple of this value. Users of serial-oriented regmap busses will typically set this to 1. Users of the MMIO regmap bus will typically set this based on the value size of their registers, in bytes, so 4 for a 32-bit register.  Throughout the regmap code, actual register addresses are used. Wherever the register address is used to index some array of values, the address is divided by the stride to determine the index, or vice-versa. Error- checking is added to all entry-points for register address data to ensure that register addresses actually satisfy the specified stride. The MMIO bus ensures that the specified stride is large enough for the register size.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regcache-rbtree.c | s | 10K | 374 | Stephen Warren | swarren@nvidia.com | 1334052078 |  | regmap: implement register striding  regmap_config.reg_stride is introduced. All extant register addresses are a multiple of this value. Users of serial-oriented regmap busses will typically set this to 1. Users of the MMIO regmap bus will typically set this based on the value size of their registers, in bytes, so 4 for a 32-bit register.  Throughout the regmap code, actual register addresses are used. Wherever the register address is used to index some array of values, the address is divided by the stride to determine the index, or vice-versa. Error- checking is added to all entry-points for register address data to ensure that register addresses actually satisfy the specified stride. The MMIO bus ensures that the specified stride is large enough for the register size.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regmap-debugfs.c | s | 6.7K | 245 | Stephen Warren | swarren@nvidia.com | 1334052078 |  | regmap: implement register striding  regmap_config.reg_stride is introduced. All extant register addresses are a multiple of this value. Users of serial-oriented regmap busses will typically set this to 1. Users of the MMIO regmap bus will typically set this based on the value size of their registers, in bytes, so 4 for a 32-bit register.  Throughout the regmap code, actual register addresses are used. Wherever the register address is used to index some array of values, the address is divided by the stride to determine the index, or vice-versa. Error- checking is added to all entry-points for register address data to ensure that register addresses actually satisfy the specified stride. The MMIO bus ensures that the specified stride is large enough for the register size.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | internal.h | s | 4.3K | 121 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1336933247 |  | Merge branches 'regmap-core', 'regmap-stride', 'regmap-mmio' and 'regmap-irq' into regmap-next
f | regcache.c | s | 11K | 426 | Stephen Warren | swarren@nvidia.com | 1334052078 |  | regmap: implement register striding  regmap_config.reg_stride is introduced. All extant register addresses are a multiple of this value. Users of serial-oriented regmap busses will typically set this to 1. Users of the MMIO regmap bus will typically set this based on the value size of their registers, in bytes, so 4 for a 32-bit register.  Throughout the regmap code, actual register addresses are used. Wherever the register address is used to index some array of values, the address is divided by the stride to determine the index, or vice-versa. Error- checking is added to all entry-points for register address data to ensure that register addresses actually satisfy the specified stride. The MMIO bus ensures that the specified stride is large enough for the register size.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regmap-spi.c | s | 2.5K | 81 | Stephen Warren | swarren@nvidia.com | 1333705654 |  | regmap: introduce explicit bus_context for bus callbacks  The only context needed by I2C and SPI bus definitions is the device itself; this can be converted to an i2c_client or spi_device in order to perform IO on the device. However, other bus types may need more context in order to perform IO. Enable this by having regmap_init accept a bus_context parameter, and pass this to all bus callbacks. The existing callbacks simply pass the struct device here. Future bus types may pass something else.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | Makefile | g | 310B |  | Stephen Warren | swarren@nvidia.com | 1333705655 |  | regmap: add MMIO bus support  This is a basic memory-mapped-IO bus for regmap. It has the following features and limitations:  * Registers themselves may be 8, 16, 32, or 64-bit. 64-bit is only   supported on 64-bit platforms. * Register offsets are limited to precisely 32-bit. * IO is performed using readl/writel, with no provision for using the   __raw_readl or readl_relaxed variants.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | Kconfig | g | 452B |  | Mark Brown | broonie@opensource.wolfsonmicro.com | 1337764551 |  | regmap: Use select .. if to get IRQ_DOMAIN enabled  Ensure that we can't get randconfig breakage by doing the IRQ_DOMAIN select automatically. Don't just do the select from REGMAP_IRQ to ensure that the select actually gets noticed.  Reported-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regmap.c | s | 25K | 940 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1339106241 |  | regmap: Export regmap_reinit_cache()  It's supposed to be there for drivers.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regmap-irq.c | s | 8.8K | 300 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1337291964 |  | regmap: Fix typo in IRQ register striding  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
f | regmap-mmio.c | s | 5.0K | 193 | Stephen Warren | swarren@nvidia.com | 1334052078 |  | regmap: implement register striding  regmap_config.reg_stride is introduced. All extant register addresses are a multiple of this value. Users of serial-oriented regmap busses will typically set this to 1. Users of the MMIO regmap bus will typically set this based on the value size of their registers, in bytes, so 4 for a 32-bit register.  Throughout the regmap code, actual register addresses are used. Wherever the register address is used to index some array of values, the address is divided by the stride to determine the index, or vice-versa. Error- checking is added to all entry-points for register address data to ensure that register addresses actually satisfy the specified stride. The MMIO bus ensures that the specified stride is large enough for the register size.  Signed-off-by: Stephen Warren <swarren@nvidia.com> Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
