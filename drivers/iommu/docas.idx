f | tegra-gart.c | s | 11K | 387 | Hiroshi DOYU | hdoyu@nvidia.com | 1336729325 |  | iommu/tegra: gart: Fix register offset correctly  DT passes the exact GART register ranges without any overlapping with MC register ranges. GART register offset needs to be adjusted by one passed by DT correctly.  Signed-off-by: Hiroshi DOYU <hdoyu@nvidia.com> Acked-by: Stephen Warren <swarren@wwwdotorg.org> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | amd_iommu.c | s | 83K | 2857 | Joerg Roedel | joerg.roedel@amd.com | 1338806864 |  | iommu/amd: Fix deadlock in ppr-handling error path  In the error path of the ppr_notifer it can happen that the iommu->lock is taken recursivly. This patch fixes the problem by releasing the iommu->lock before any notifier is invoked. This also requires to move the erratum workaround for the ppr-log (interrupt may be faster than data in the log) one function up.  Cc: stable@vger.kernel.org # v3.3, v3.4 Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | Makefile | g | 615B |  | Linus Torvalds | torvalds@linux-foundation.org | 1338060147 |  | 
f | omap-iovmm.c | s | 15K | 595 | Joerg Roedel | joerg.roedel@amd.com | 1326110645 |  | Merge branches 'iommu/fixes', 'arm/omap' and 'x86/amd' into next  Conflicts: 	drivers/pci/hotplug/acpiphp_glue.c
f | omap-iommu-debug.c | s | 9.6K | 348 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | amd_iommu_proto.h | s | 2.7K | 64 | Joerg Roedel | joerg.roedel@amd.com | 1323699545 |  | iommu/amd: Add function to get IOMMUv2 domain for pdev  The AMD IOMMUv2 driver needs to get the IOMMUv2 domain associated with a particular device. This patch adds a function to get this information.  Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | iommu.c | s | 8.7K | 275 | Ohad Ben-Cohen | ohad@wizery.com | 1337702888 |  | iommu/core: pass a user-provided token to fault handlers  Sometimes a single IOMMU user may have to deal with several different IOMMU devices (e.g. remoteproc).  When an IOMMU fault happens, such users have to regain their context in order to deal with the fault.  Users can't use the private fields of neither the iommu_domain nor the IOMMU device, because those are already used by the IOMMU core and low level driver (respectively).  This patch just simply allows users to pass a private token (most notably their own context pointer) to iommu_set_fault_handler(), and then makes sure it is provided back to the users whenever an IOMMU fault happens.  The patch also adopts remoteproc to the new fault handling interface, but the real functionality using this (recovery of remote processors) will only be added later in a subsequent patch set.  Cc: Fernando Guzman Lugo <fernando.lugo@ti.com> Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | msm_iommu_dev.c | s | 8.9K | 349 | Ohad Ben-Cohen | ohad@wizery.com | 1308646130 |  | msm: iommu: move to drivers/iommu/  This should ease finding similarities with different platforms, with the intention of solving problems once in a generic framework which everyone can use.  Compile-tested for MSM8X60.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com> Acked-by: David Brown <davidb@codeaurora.org> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | dmar.c | s | 31K | 1094 | Dan Carpenter | dan.carpenter@oracle.com | 1336999067 |  | iommu: Fix off by one in dmar_get_fault_reason()  fault_reason - 0x20 == ARRAY_SIZE(irq_remap_fault_reasons) is one past the end of the array.  Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: Joerg Roedel <joerg.roedel@amd.com> Cc: Youquan Song <youquan.song@intel.com> Cc: walter harms <wharms@bfs.de> Cc: Suresh Siddha <suresh.b.siddha@intel.com> Cc: <stable@kernel.org> Link: http://lkml.kernel.org/r/20120513170938.GA4280@elgon.mountain Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | msm_iommu.c | s | 16K | 586 | Joerg Roedel | joerg.roedel@amd.com | 1327924394 |  | iommu/msm: Fix error handling in msm_iommu_unmap()  Error handling in msm_iommu_unmap() is broken. On some error conditions retval is set to a non-zero value which causes the function to return 'len' at the end. This hides the error from the user. Zero should be returned in those error cases.  Cc: David Brown <davidb@codeaurora.org> Cc: Stepan Moskovchenko <stepanm@codeaurora.org> Cc: stable@vger.kernel.org # >= 3.1 Signed-off-by: Joerg Roedel <joerg.roedel@amd.com> Acked-by: David Brown <davidb@codeaurora.org>
f | amd_iommu_types.h | s | 19K | 576 | Joerg Roedel | joerg.roedel@amd.com | 1338806864 |  | iommu/amd: Cache pdev pointer to root-bridge  At some point pci_get_bus_and_slot started to enable interrupts. Since this function is used in the amd_iommu_resume path it will enable interrupts on resume which causes a warning. The fix will use a cached pointer to the root-bridge to re-enable the IOMMU in case the BIOS is broken.  Cc: stable@vger.kernel.org Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | exynos-iommu.c | s | 25K | 858 | KyongHo Cho | pullip.cho@samsung.com | 1336769769 |  | iommu/exynos: Add iommu driver for EXYNOS Platforms  This is the System MMU driver and IOMMU API implementation for EXYNOS SoC platforms. EXYNOS platforms has more than 10 System MMUs dedicated for each multimedia accelerators.  The System MMU driver is already in arc/arm/plat-s5p but it is moved to drivers/iommu due to Ohad Ben-Cohen gathered IOMMU drivers there.  Any device driver in EXYNOS platforms that needs to control its System MMU must call platform_set_sysmmu() to inform System MMU driver who will control it. platform_set_sysmmu() is defined in <mach/sysmmu.h>  Signed-off-by: KyongHo Cho <pullip.cho@samsung.com> Acked-by: Joerg Roedel <joerg.roedel@amd.com> Signed-off-by: Kukjin Kim <kgene.kim@samsung.com>
f | omap-iommu.c | s | 26K | 1003 | Omar Ramirez Luna | omar.luna@linaro.org | 1334840843 |  | iommu: OMAP: device detach on domain destroy  'domain_destroy with devices attached' case isn't yet handled, instead code assumes that the device was already detached.  If the domain is destroyed the hardware still has access to invalid pointers to its page table and internal iommu object. In order to detach the users we need to track devices using the iommu, current use cases only have one user of iommu per instance. When required this can evolve to a list with the devices using the iommu_dev.  Reported-by: Joerg Roedel <joro@8bytes.org> Reviewed-by: Ohad Ben-Cohen <ohad@wizery.com> Signed-off-by: Omar Ramirez Luna <omar.luna@linaro.org> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | intel-iommu.c | s | 105K | 3559 | David Woodhouse | dwmw2@infradead.org | 1337986229 |  | intel-iommu: Move duplicate list-mangling code into unlink_domain_info() helper  Now we have four copies of this code, Linus "suggested" it was about time we stopped copying it and turned it into a helper.  Signed-off-by: David Woodhouse <David.Woodhouse@intel.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 5.8K |  | Linus Torvalds | torvalds@linux-foundation.org | 1338060147 |  | 
f | irq_remapping.c | s | 3.2K | 129 | Suresh Siddha | suresh.b.siddha@intel.com | 1336468650 |  | irq_remap: Fix UP build failure  Fix the below UP build failure with CONFIG_IRQ_REMAP enabled.   drivers/iommu/intel_irq_remapping.c:955:19: error: ‘struct irq_data’ has no member named ‘affinity’  Reported-by: Ingo Molnar <mingo@kernel.org> Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Cc: joro@8bytes.org Cc: iommu@lists.linux-foundation.org Cc: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1336460934-23592-2-git-send-email-suresh.b.siddha@intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | intel_irq_remapping.c | s | 24K | 855 | Suresh Siddha | suresh.b.siddha@intel.com | 1336468650 |  | irq_remap: Fix the 'sub_handle' uninitialized warning  Fix this uninitialized variable warning:    drivers/iommu/intel_irq_remapping.c:986:12: warning: ‘sub_handle’ may be used uninitialized in this function [-Wuninitialized]  GCC is wrong, help it out.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Cc: joro@8bytes.org Cc: iommu@lists.linux-foundation.org Cc: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1336460934-23592-3-git-send-email-suresh.b.siddha@intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | amd_iommu_init.c | s | 42K | 1413 | Joerg Roedel | joerg.roedel@amd.com | 1338806864 |  | iommu/amd: Cache pdev pointer to root-bridge  At some point pci_get_bus_and_slot started to enable interrupts. Since this function is used in the amd_iommu_resume path it will enable interrupts on resume which causes a warning. The fix will use a cached pointer to the root-bridge to re-enable the IOMMU in case the BIOS is broken.  Cc: stable@vger.kernel.org Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | tegra-smmu.c | s | 26K | 877 | Hiroshi DOYU | hdoyu@nvidia.com | 1334573561 |  | iommu/tegra: smmu: Print device name correctly  Print an attached device name correctly.  Signed-off-by: Hiroshi DOYU <hdoyu@nvidia.com> Reviewed-by: Thierry Reding <thierry.reding@avionic-design.de> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | amd_iommu_v2.c | s | 22K | 773 | Joerg Roedel | joerg.roedel@amd.com | 1331812000 |  | iommu/amd: Don't initialize IOMMUv2 resources when not required  Add a check to the init-path of the AMD IOMMUv2 driver if the hardware is available in the system. Only allocate all the resources if it is really available.  Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
f | irq_remapping.h | s | 2.5K | 70 | Suresh Siddha | suresh.b.siddha@intel.com | 1336468650 |  | irq_remap: Fix UP build failure  Fix the below UP build failure with CONFIG_IRQ_REMAP enabled.   drivers/iommu/intel_irq_remapping.c:955:19: error: ‘struct irq_data’ has no member named ‘affinity’  Reported-by: Ingo Molnar <mingo@kernel.org> Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Cc: joro@8bytes.org Cc: iommu@lists.linux-foundation.org Cc: Joerg Roedel <joerg.roedel@amd.com> Link: http://lkml.kernel.org/r/1336460934-23592-2-git-send-email-suresh.b.siddha@intel.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | iova.c | s | 11K | 379 | Ohad Ben-Cohen | ohad@wizery.com | 1308646170 |  | x86/ia64: intel-iommu: move to drivers/iommu/  This should ease finding similarities with different platforms, with the intention of solving problems once in a generic framework which everyone can use.  Note: to move intel-iommu.c, the declaration of pci_find_upstream_pcie_bridge() has to move from drivers/pci/pci.h to include/linux/pci.h. This is handled in this patch, too.  As suggested, also drop DMAR's EXPERIMENTAL tag while we're at it.  Compile-tested on x86_64.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com> Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
