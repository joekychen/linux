f | qib_verbs.c | s | 59K | 2036 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1325652811 |  | IB/qib: Optimize locking for get_txreq()  The current code locks the QP s_lock, followed by the pending_lock, I guess to to protect against the allocate failing.  This patch only locks the pending_lock, assuming that the empty case is an exeception, in which case the pending_lock is dropped, and the original code is executed.  This will save a lock of s_lock in the normal case.  The observation is that the sdma descriptors will deplete at twice the rate of txreq's, so this should be rare.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_verbs_mcast.c | s | 8.4K | 310 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_7220_regs.h | s | 67K | 1338 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_mmap.c | s | 4.8K | 151 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_tx.c | s | 16K | 526 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024223 |  | IB/qib: Optimize pio ack buffer allocation  This patch optimizes pio buffer allocation in the kernel.  For qib, kernel pio buffers are used for sending acks.  The code to allocate the buffer would always start at 0 until it found a buffer.  This means that an average of 64 comparisions were done on each allocate, since the busy bit won't be cleared until the bits are refreshed when buffers are exhausted.  This patch adds two new fields in the devdata struct, last_pio and min_kernel_pio.  last_pio is the last buffer that was allocated. min_kernel_pio is the lowest potential available buffer.  min_kernel_pio is modifed as contexts are allocated and deallocted.  Reviewed-by: Ramkrishna Vepa <ramkrishna.vepa@intel.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_sysfs.c | s | 18K | 623 | Mitko Haralanov | mitko.haralanov@intel.com | 1337024344 |  | IB/qib: Display correct value for number of contexts  A "fix" for a bug with the number of contexts on a single-port board caused the calculation to be off by one, which causes problems with the upper layers.  The same problem exists for number of free contexts, which is also fixed here.  Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | Makefile | g | 647B |  | Ben Hutchings | ben@decadent.org.uk | 1278620825 |  | IB/qib: Use request_firmware() to load SD7220 firmware  Extract the microcode for the QLogic QLE7220 series IB HCA and use the kernel microcode request facility to load the microcode.  This supports Debian Linux's requirements to separate microcode which doesn't have open source code available from the device driver.  Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_user_sdma.h | s | 2.1K | 46 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib.h | s | 48K | 1317 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_fs.c | s | 14K | 521 | Al Viro | viro@zeniv.linux.org.uk | 1325649303 |  | infiniband: umode_t noise, including open-coded S_ISDIR()  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | qib_mr.c | s | 11K | 441 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1294710142 |  | IB/qib: RDMA lkey/rkey validation is inefficient for large MRs  The current code loops during rkey/lkey validiation to isolate the MR for the RDMA, which is expensive when the current operation is inside a very large memory region.  This fix optimizes rkey/lkey validation routines for user memory regions and fast memory regions.  The MR entry can be isolated by shifts/mods instead of looping.  The existing loop is preserved for phys memory regions for now.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_wc_x86_64.c | s | 5.2K | 158 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_sd7220.c | s | 39K | 1302 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1325652702 |  | IB/qib: Fix style issues  More style issues revealed with checkpatch.pl -f.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_file_ops.c | s | 59K | 2069 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1324315174 |  | IB/qib: Correct sense on freectxts increment and decrement  Commit 53ab1c64983 ("IB/qib: Correct nfreectxts for multiple HCAs") reversed the increments and decrements of dd->nfreectxts.  Fix it.  Reviewed-by: Ram Vepa <ram.vepa@qlogic.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_common.h | s | 24K | 693 | Dave Olson | dave.olson@qlogic.com | 1279737576 |  | IB/qib: Allow PSM to select from multiple port assignment algorithms  We used to allow only full specification, or using all contexts within an HCA before moving to the next HCA.  We now allow an additional method -- round-robining through HCAs -- and make that the default.  Signed-off-by: Dave Olson <dave.olson@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_dma.c | s | 4.9K | 157 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_uc.c | s | 14K | 517 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_pcie.c | s | 20K | 680 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1330220749 |  | IB/qib: Add logic for affinity hint  Call irq_set_affinity_hint() to give userspace programs such as irqbalance the information to be able to distribute qib interrupts appropriately.  The logic allocates all non-receive interrupts to the first CPU local to the HCA.  Receive interrupts are allocated round robin starting with the second CPU local to the HCA with potential wrap back to the second CPU.  This patch also adds a refinement to the name registered for MSI-X interrupts so that user level scripts can determine the device associated with the IRQs when there are multiple HCAs with a potentially different set of local CPUs.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_twsi.c | s | 12K | 440 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | qib_cq.c | s | 11K | 432 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1294710139 |  | IB/qib: Generate completion callback on errors  According to IBTA vol. 1, C11-30.1.1, a notification callback is invoked if the CQ is armed for the next solicited completion event or an error completion.  The error case wasn't being generated correctly.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_rc.c | s | 60K | 2122 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_qp.c | s | 31K | 1148 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_iba6120.c | s | 109K | 3184 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024223 |  | IB/qib: Optimize pio ack buffer allocation  This patch optimizes pio buffer allocation in the kernel.  For qib, kernel pio buffers are used for sending acks.  The code to allocate the buffer would always start at 0 until it found a buffer.  This means that an average of 64 comparisions were done on each allocate, since the busy bit won't be cleared until the bits are refreshed when buffers are exhausted.  This patch adds two new fields in the devdata struct, last_pio and min_kernel_pio.  last_pio is the last buffer that was allocated. min_kernel_pio is the lowest potential available buffer.  min_kernel_pio is modifed as contexts are allocated and deallocted.  Reviewed-by: Ramkrishna Vepa <ramkrishna.vepa@intel.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_keys.c | s | 8.9K | 328 | Mike Marciniszyn | mike.marciniszyn@qlogic.org | 1294710143 |  | IB/qib: Fix refcount leak in lkey/rkey validation  The mr optimization introduced a reference count leak on an exception test.  The lock/refcount manipulation is moved down and the problematic exception test now calls bail to insure that the lock is released.  Additional fixes as suggested by Ralph Campbell <ralph.campbell@qlogic.org>: - reduce lock scope of dma regions - use explicit values on returns vs. automatic ret value  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_ruc.c | s | 21K | 752 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_ud.c | s | 16K | 547 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_user_sdma.c | s | 21K | 747 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | qib_7322_regs.h | s | 159K | 2926 | Ralph Campbell | ralph.campbell@qlogic.com | 1278450800 |  | IB/qib: Mask hardware error during link reset  The HCA checks for certain hardware errors which can be falsely triggered when the IB link is reset. The fix is to mask them rather than report them.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_init.c | s | 41K | 1378 | Mitko Haralanov | mitko.haralanov@intel.com | 1337024344 |  | IB/qib: Display correct value for number of contexts  A "fix" for a bug with the number of contexts on a single-port board caused the calculation to be off by one, which causes problems with the upper layers.  The same problem exists for number of free contexts, which is also fixed here.  Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_user_pages.c | s | 4.4K | 134 | Christoph Lameter | cl@linux.com | 1320107446 |  | mm: distinguish between mlocked and pinned pages  Some kernel components pin user space memory (infiniband and perf) (by increasing the page count) and account that memory as "mlocked".  The difference between mlocking and pinning is:  A. mlocked pages are marked with PG_mlocked and are exempt from    swapping. Page migration may move them around though.    They are kept on a special LRU list.  B. Pinned pages cannot be moved because something needs to    directly access physical memory. They may not be on any    LRU list.  I recently saw an mlockalled process where mm->locked_vm became bigger than the virtual size of the process (!) because some memory was accounted for twice:  Once when the page was mlocked and once when the Infiniband layer increased the refcount because it needt to pin the RDMA memory.  This patch introduces a separate counter for pinned pages and accounts them seperately.  Signed-off-by: Christoph Lameter <cl@linux.com> Cc: Mike Marciniszyn <infinipath@qlogic.com> Cc: Roland Dreier <roland@kernel.org> Cc: Sean Hefty <sean.hefty@intel.com> Cc: Hugh Dickins <hughd@google.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | qib_6120_regs.h | s | 42K | 875 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_pio_copy.c | s | 2.2K | 60 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_qsfp.c | s | 13K | 478 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1322511453 |  | IB/qib: Fix over-scheduling of QSFP work  Don't over-schedule QSFP work on driver initialization.  It could end up being run simultaneously on two different CPUs resulting in bad EEPROM reads.  In combination with setting the physical IB link state prior to the IBC being brought out of reset, this can cause the link state machine to start training early with wrong settings.  Signed-off-by: Mitko Haralanov <mitko@qlogic.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_srq.c | s | 9.2K | 339 | Sean Hefty | sean.hefty@intel.com | 1318522406 |  | RDMA/core: Add SRQ type field  Currently, there is only a single ("basic") type of SRQ, but with XRC support we will add a second.  Prepare for this by defining an SRQ type and setting all current users to IB_SRQT_BASIC.  Signed-off-by: Sean Hefty <sean.hefty@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_diag.c | s | 22K | 811 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103895 |  | infiniband: add in export.h for files using EXPORT_SYMBOL/THIS_MODULE  These were getting it implicitly via device.h --> module.h but we are going to stop that when we clean up the headers.  Fix these in advance so the tree remains biscect-clean.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | qib_wc_ppc64.c | s | 2.1K | 58 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_mad.c | s | 61K | 1937 | Jim Foraker | foraker1@llnl.gov | 1337024564 |  | IB/qib: MADs with misset M_Keys should return failure  If a MAD is sent directly to the local HCA rather than placed on a QP and the MAD fails M_Key checks, there is no means to generate a timeout for the client, which may hang.  Instead we report IB_MAD_RESULT_FAILURE, which operates the same for on-the-wire packets, but will generate a send failure back to the client.  Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Jim Foraker <foraker1@llnl.gov> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | Kconfig | g | 250B |  | Roland Dreier | roland@purestorage.com | 1305917171 |  | RDMA: Add netlink infrastructure  Add basic RDMA netlink infrastructure that allows for registration of RDMA clients for which data is to be exported and supplies message construction callbacks.  Signed-off-by: Nir Muchtar <nirm@voltaire.com>  [ Reorganize a few things, add CONFIG_NET dependency.  - Roland ]  Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_mad.h | s | 6.8K | 211 | Or Gerlitz | ogerlitz@mellanox.com | 1311048275 |  | IB/pma: Add include file for IBA performance counters definitions  Move the various definitions and mad structures needed for software implementation of IBA PM agent from the ipath and qib drivers into a single include file, which in turn could be used by more consumers.  Signed-off-by: Or Gerlitz <ogerlitz@mellanox.co.il> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_7220.h | s | 4.8K | 136 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1325652732 |  | IB/qib: Eliminate 64-bit jiffies use  The qib driver makes use of the the 64-bit jiffies API.  Code inspection reveals that that version of the API is not really required.  This patch converts to use the "normal" jiffies.  Reviewed-by: Ram Vepa <ram.vepa@qlogic.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_iba7322.c | s | 251K | 7266 | Mitko Haralanov | mitko.haralanov@intel.com | 1337024366 |  | IB/qib: Fix QLE734X link cycling  The SERDES was using the incorrect Frequency Loop Bandwidth setting causing the link to cycle through the Physical link negotiation state machine.  Fixing the Frequency Loop Bandwidth setting in the SERDES helps the link come up faster and more reliably.  Signed-off-by: Mitko Haralanov <mitko.haralanov@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_driver.c | s | 21K | 723 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024178 |  | IB/qib: Add prefetch for eager buffers  Add a prefetch call when a packet has been stored.  The nature of the prefetch is correctly determined by the alternatives mechanism.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_qsfp.h | s | 7.1K | 179 | Mike Marciniszyn | mike.marciniszyn@qlogic.com | 1325652732 |  | IB/qib: Eliminate 64-bit jiffies use  The qib driver makes use of the the 64-bit jiffies API.  Code inspection reveals that that version of the API is not really required.  This patch converts to use the "normal" jiffies.  Reviewed-by: Ram Vepa <ram.vepa@qlogic.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_eeprom.c | s | 12K | 415 | Ralph Campbell | ralph.campbell@qlogic.com | 1274676294 |  | IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters  Add a low-level IB driver for QLogic PCIe adapters.  Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | qib_verbs.h | s | 33K | 924 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024614 |  | IB/qib: Add cache line awareness to qib_qp and qib_devdata structures  This patch reorganizes the QP and devdata files to be more cache line aware.  qib_qp fields in particular are split into read-mostly, send, and receive fields.  qib_devdata fields are split into read-mostly and read/write fields  Testing has show that bidirectional tests improve by as much as 100% with this patch.  Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_iba7220.c | s | 143K | 4138 | Mike Marciniszyn | mike.marciniszyn@intel.com | 1337024223 |  | IB/qib: Optimize pio ack buffer allocation  This patch optimizes pio buffer allocation in the kernel.  For qib, kernel pio buffers are used for sending acks.  The code to allocate the buffer would always start at 0 until it found a buffer.  This means that an average of 64 comparisions were done on each allocate, since the busy bit won't be cleared until the bits are refreshed when buffers are exhausted.  This patch adds two new fields in the devdata struct, last_pio and min_kernel_pio.  last_pio is the last buffer that was allocated. min_kernel_pio is the lowest potential available buffer.  min_kernel_pio is modifed as contexts are allocated and deallocted.  Reviewed-by: Ramkrishna Vepa <ramkrishna.vepa@intel.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_intr.c | s | 7.5K | 220 | Mitko Haralanov | mitko@qlogic.com | 1308337019 |  | IB/qib: Ensure that LOS and DFE are being turned off  Due to timing, it is possible for the LOS and DFE to remain on. This is due to the link progressing to LinkUP prior to the driver getting the first Status Changed interrupt.  By expanding the conditions under which LOS is turned off and DFE timeout is being set, timing is no longer an issue.  Signed-off-by: Mitko Haralanov <mitko@qlogic.com> Signed-off-by: Mike Marciniszyn <mike.marciniszyn@qlogic.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | qib_sdma.c | s | 25K | 858 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103896 |  | infiniband: add moduleparam.h to drivers/infiniband as required  These files were getting the moduleparam infrastructure from the implicit presence of module.h being everywhere, but that is going away soon.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
