f | iwch_cm.c | s | 57K | 1986 | David Miller | davem@davemloft.net | 1323116419 |  | cxgb3: Rework t3_l2t_get to take a dst_entry instead of a neighbour.  This way we consolidate the RCU locking down into the place where it actually matters, and also we can make the code handle dst_get_neighbour_noref() returning NULL properly.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 276B |  | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313031292 |  | chelsio: Move the Chelsio drivers  Moves the drivers for the Chelsio chipsets into drivers/net/ethernet/chelsio/ and the necessary Kconfig and Makefile changes.  CC: Divy Le Ray <divy@chelsio.com> CC: Dimitris Michailidis <dm@chelsio.com> CC: Casey Leedom <leedom@chelsio.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | cxio_dbg.c | s | 5.0K | 190 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | cxio_resource.h | s | 3.0K | 65 | Steve Wise | swise@opengridcomputing.com | 1171663055 |  | RDMA/cxgb3: Remove Open Grid Computing copyrights in iw_cxgb3 driver  Remove the Open Grid Computing copyright.  It shouldn't be there.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iwch_provider.c | s | 38K | 1272 | Or Gerlitz | ogerlitz@mellanox.com | 1330968316 |  | IB: Use central enum for speed instead of hard-coded values  The kernel IB stack uses one enumeration for IB speed, which wasn't explicitly specified in the verbs header file.  Add that enum, and use it all over the code.  The IB speed/width notation is also used by iWARP and IBoE HW drivers, which use the convention of rate = speed * width to advertise their port link rate.  Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | iwch_provider.h | s | 9.3K | 321 | Kumar Sanghvi | kumaras@chelsio.com | 1320085997 |  | RDMA/cxgb3: Serialize calls to CQ's comp_handler  iw_cxgb3 has a potential problem where a CQ's comp_handler can get called simultaneously from different places in iw_cxgb3 driver.  This does not comply with Documentation/infiniband/core_locking.txt, which states that at a given point of time, there should be only one callback per CQ should be active.  Such problem was reported by Parav Pandit <Parav.Pandit@Emulex.Com> for iw_cxgb4 driver.  Based on discussion between Parav Pandit and Steve Wise, this patch fixes the above problem by serializing the calls to a CQ's comp_handler using a spin_lock.  Signed-off-by: Kumar Sanghvi <kumaras@chelsio.com> Acked-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | iwch_ev.c | s | 6.9K | 209 | Kumar Sanghvi | kumaras@chelsio.com | 1320085997 |  | RDMA/cxgb3: Serialize calls to CQ's comp_handler  iw_cxgb3 has a potential problem where a CQ's comp_handler can get called simultaneously from different places in iw_cxgb3 driver.  This does not comply with Documentation/infiniband/core_locking.txt, which states that at a given point of time, there should be only one callback per CQ should be active.  Such problem was reported by Parav Pandit <Parav.Pandit@Emulex.Com> for iw_cxgb4 driver.  Based on discussion between Parav Pandit and Steve Wise, this patch fixes the above problem by serializing the calls to a CQ's comp_handler using a spin_lock.  Signed-off-by: Kumar Sanghvi <kumaras@chelsio.com> Acked-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | iwch_mem.c | s | 5.3K | 173 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | cxio_hal.c | s | 37K | 1210 | Stephen Hemminger | shemminger@vyatta.com | 1294710103 |  | RDMA/cxgb3,cxgb4: Remove dead code  This removes unused code found by running 'make namespacecheck'; compile tested only.  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Acked-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | cxio_hal.h | s | 7.3K | 189 | Steve Wise | swise@opengridcomputing.com | 1283464341 |  | RDMA/cxgb3: Don't exceed the max HW CQ depth  The max depth supported by T3 is 64K entries.  This fixes a bug introduced in commit 9918b28d ("RDMA/cxgb3: Increase the max CQ depth") that causes stalls and possibly crashes in large MPI clusters.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Cc: <stable@kernel.org> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iwch_cm.h | s | 5.7K | 206 | Steve Wise | swise@opengridcomputing.com | 1252207358 |  | RDMA/cxgb3: Don't free endpoints early  - Keep ref on connection request endpoints until either accepted or   rejected so it doesn't get freed early.  - Endpoint flags now need to be set via atomic bitops because they can   be set on both the iw_cxgb3 workqueue thread and user disconnect   threads.  - Don't move out of CLOSING too early due to multiple calls to   iwch_ep_disconnect.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iwch_user.h | s | 2.2K | 68 | Steve Wise | swise@opengridcomputing.com | 1287810053 |  | RDMA/cxgb3: When a user QP is marked in error, also mark the CQs in error  The flushing of work requests for user QPs is implemented entirely in the user mode library.  The only kernel interaction is to mark the user QP object indicating it is in error when the QP exits RTS.  When the user QP operations are called by the application (eg: post_send, post_recv), the QP in error bit is checked and if set, the library flushes the QP.  If, however, the application is not doing IO, but rather just polling the CQ, it will never get flushed work requests. This breaks some classes of applications.  This patch adds logic to mark user CQs in error when a QP that is bound to the CQ is marked in error.  The library poll code can then notice the CQ is in error and flush all the in error QPs bound to that CQ.  Design:   - add 1 extra CQE entry to the CQ memory that will be used to indicate    in error status.  - return the desired CQ memory size that should be mapped by the library  - bump the ABI since the create_cq uverbs response changes.  - detect older libraries and reduce the mmap size accordingly.    (The ABI bump doesn't break old libraries, since they didn't check    the ABI field anyway)  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iwch_qp.c | s | 31K | 1079 | Steve Wise | swise@opengridcomputing.com | 1331161965 |  | RDMA/cxgb3: Don't pass irq flags to flush_qp()  Since flush_qp() is always called with irqs disabled, all the locking inside flush_qp() and __flush_qp() doesn't need irq save/restore.  Further, passing the flag variable from iwch_modify_qp() is just wrong and causes a WARN_ON() in local_bh_enable().  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | cxio_resource.c | s | 9.2K | 299 | Stefani Seibold | stefani@seibold.net | 1261520276 |  | kfifo: fix warn_unused_result  Fix the "ignoring return value of '...', declared with attribute warn_unused_result" compiler warning in several users of the new kfifo API.  It removes the __must_check attribute from kfifo_in() and kfifo_in_locked() which must not necessary performed.  Fix the allocation bug in the nozomi driver file, by moving out the kfifo_alloc from the interrupt handler into the probe function.  Fix the kfifo_out() and kfifo_out_locked() users to handle a unexpected end of fifo.  Signed-off-by: Stefani Seibold <stefani@seibold.net> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | iwch_cq.c | s | 5.7K | 217 | Steve Wise | swise@opengridcomputing.com | 1216104525 |  | RDMA/cxgb3: MEM_MGT_EXTENSIONS support  - set IB_DEVICE_MEM_MGT_EXTENSIONS capability bit if fw supports it. - set max_fast_reg_page_list_len device attribute. - add iwch_alloc_fast_reg_mr function. - add iwch_alloc_fastreg_pbl - add iwch_free_fastreg_pbl - adjust the WQ depth for kernel mode work queues to account for   fastreg possibly taking 2 WR slots. - add fastreg_mr work request support. - add local_inv work request support. - add send_with_inv and send_with_se_inv work request support. - removed useless duplicate enums/defines for TPT/MW/MR stuff.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | tcb.h | s | 19K | 496 | Steve Wise | swise@opengridcomputing.com | 1171325778 |  | RDMA/cxgb3: Add driver for Chelsio T3 RNIC  Add an RDMA/iWARP driver for the Chelsio T3 1GbE and 10GbE adapters.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | cxio_wr.h | s | 21K | 692 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1288640314 |  | tree-wide: fix comment/printk typos  "gadget", "through", "command", "maintain", "maintain", "controller", "address", "between", "initiali[zs]e", "instead", "function", "select", "already", "equal", "access", "management", "hierarchy", "registration", "interest", "relative", "memory", "offset", "already",  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | iwch.c | s | 7.5K | 258 | Roland Dreier | rolandd@cisco.com | 1272491860 |  | RDMA/cxgb3: Shrink .text with compile-time init of handlers arrays  Using compile-time designated initializers for the handler arrays instead of open-coding the initialization in iwch_cm_init() is (IMHO) cleaner, and leads to substantially smaller code: on my x86-64 build, bloat-o-meter shows:  add/remove: 0/1 grow/shrink: 4/3 up/down: 4/-1682 (-1678) function                                     old     new   delta tx_ack                                       167     168      +1 state_set                                     55      56      +1 start_ep_timer                                99     100      +1 pass_establish                               177     178      +1 act_open_req_arp_failure                      39      38      -1 sched                                         84      82      -2 iwch_cm_init                                 442      91    -351 work_handlers                               1328       -   -1328  Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | iwch.h | s | 4.6K | 158 | Steve Wise | swise@opengridcomputing.com | 1267036828 |  | RDMA/cxgb3: Doorbell overflow avoidance and recovery  T3 hardware doorbell FIFO overflows can cause application stalls due to lost doorbell ring events.  This has been seen when running large NP IMB alltoall MPI jobs.  The T3 hardware supports an xon/xoff-type flow control mechanism to help avoid overflowing the HW doorbell FIFO.  This patch uses these interrupts to disable RDMA QP doorbell rings when we near an overflow condition, and then turn them back on (and ring all the active QP doorbells) when when the doorbell FIFO empties out.  In addition if an doorbell ring is dropped by the hardware, the code will now recover.  Design:  cxgb3: - enable these DB interrupts - in the interrupt handler, schedule work tasks to call the ULPs event   handlers with the new events. - ring all the qset txqs when an overflow is detected.  iw_cxgb3: - disable db ringing on all active qps when we get the DB_FULL event - enable db ringing on all active qps and ring all active dbs when we get   the DB_EMPTY event - On DB_DROP event:        - disable db rings in the event handler        - delay-schedule a work task which rings and enables the dbs on          all active qps. - in post_send and post_recv logic, don't ring the db if it's disabled.  Signed-off-by: Steve Wise <swise@opengridcomputing.com> Signed-off-by: Roland Dreier <rolandd@cisco.com>
f | Kconfig | g | 865B |  | Justin P. Mattock | justinmattock@gmail.com | 1287392594 |  | Update broken web addresses in the kernel.  The patch below updates broken web addresses in the kernel  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Cc: Maciej W. Rozycki <macro@linux-mips.org> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Finn Thain <fthain@telegraphics.com.au> Cc: Randy Dunlap <rdunlap@xenotime.net> Cc: Matt Turner <mattst88@gmail.com> Cc: Dimitry Torokhov <dmitry.torokhov@gmail.com> Cc: Mike Frysinger <vapier.adi@gmail.com> Acked-by: Ben Pfaff <blp@cs.stanford.edu> Acked-by: Hans J. Koch <hjk@linutronix.de> Reviewed-by: Finn Thain <fthain@telegraphics.com.au> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
