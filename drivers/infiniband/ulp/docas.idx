d | iser |  | 7 items |  | Or Gerlitz | ogerlitz@mellanox.com | 1337385931 |  | IB/iser: Fix error flow in iser ep connection establishment  The current error flow code was releasing the IB connection object and calling iscsi_destroy_endpoint() directly without going through the reference counting mechanism introduced in commit 39ff05d ("IB/iser: Enhance disconnection logic for multi-pathing"). This resulted in a double free of the iscsi endpoint object, which causes a kernel NULL pointer dereference.  Fix that by plugging into the IB conn reference counting correctly.  Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
d | srpt |  | 5 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1337647029 |  | Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending  Pull scsi-target changes from Nicholas Bellinger:  "There has been lots of work in existing code in a number of areas this   past cycle.  The major highlights have been:     * Removal of transport_do_task_sg_chain() from core + fabrics      (Roland)    * target-core: Removal of se_task abstraction from target-core and      enforce hw_max_sectors for pSCSI backends (hch)    * Re-factoring of iscsi-target tx immediate/response queues (agrover)    * Conversion of iscsi-target back to using target core memory      allocation logic (agrover)    We've had one last minute iscsi-target patch go into for-next to   address a nasty regression bug related to the target core allocation   logic conversion from agrover that is not included in friday's   linux-next build, but has been included in this series.    On the new fabric module code front for-3.5, here is a brief status   update for the three currently in flight this round:     * usb-gadget target driver:    Sebastian Siewior's driver for supporting usb-gadget target mode   operation.  This will be going out as a separate PULL request from   target-pending/usb-target-merge with subsystem maintainer ACKs.  There   is one minor target-core patch in this series required to function.     * sbp ieee-1394/firewire target driver:    Chris Boot's driver for supportting the Serial Block Protocol (SBP)   across IEEE-1394 Firewire hardware.  This will be going out as a   separate PULL request from target-pending/sbp-target-merge with two   additional drivers/firewire/ patches w/ subsystem maintainer ACKs.     * qla2xxx LLD target mode infrastructure changes + tcm_qla2xxx:    The Qlogic >= 24xx series HW target mode LLD infrastructure patch-set   and tcm_qla2xxx fabric driver.  Support for FC target mode using   qla2xxx LLD code has been officially submitted by Qlogic to James   below, and is currently outstanding but not yet merged into   scsi.git/for-next..      [PATCH 00/22] qla2xxx: Updates for scsi "misc" branch     http://www.spinics.net/lists/linux-scsi/msg59350.html    Note there are *zero* direct dependencies upon this for-next series   for the qla2xxx LLD target + tcm_qla2xxx patches submitted above, and   over the last days the target mode team has been tracking down an   tcm_qla2xxx specific active I/O shutdown bug that appears to now be   almost squashed for 3.5-rc-fixes."  * 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (47 commits)   iscsi-target: Fix iov_count calculation bug in iscsit_allocate_iovecs   iscsi-target: remove dead code in iscsi_check_valuelist_for_support   target: Handle ATA_16 passthrough for pSCSI backend devices   target: Add MI_REPORT_TARGET_PGS ext. header + implict_trans_secs attribute   target: Fix MAINTENANCE_IN service action CDB checks to use lower 5 bits   target: add support for the WRITE_VERIFY command   target: make target_put_session void   target: cleanup transport_execute_tasks()   target: Remove max_sectors device attribute for modern se_task less code   target: lock => unlock typo in transport_lun_wait_for_tasks   target: Enforce hw_max_sectors for SCF_SCSI_DATA_SG_IO_CDB   target: remove the t_se_count field in struct se_cmd   target: remove the t_task_cdbs_ex_left field in struct se_cmd   target: remove the t_task_cdbs_left field in struct se_cmd   target: remove struct se_task   target: move the state and execute lists to the command   target: simplify command to task linkage   target: always allocate a single task   target: replace ->execute_task with ->execute_cmd   target: remove the task_sectors field in struct se_task   ...
d | srp |  | 4 items |  | Bart Van Assche | bvanassche@acm.org | 1330363677 |  | IB/srp: Consolidate repetitive sysfs code  Remove sysfs attributes before removing a target instead of testing the target state in every sysfs attribute callback method. Note: it is safe to invoke a sysfs attribute removal method like device_remove_file() twice on the same attribute.  Signed-off-by: Bart Van Assche <bvanassche@acm.org> Acked-by: David Dillow <dillowda@ornl.gov> Signed-off-by: Roland Dreier <roland@purestorage.com>
d | ipoib |  | 11 items |  | Or Gerlitz | ogerlitz@mellanox.com | 1331238867 |  | IB: Change CQE "csum_ok" field to a bit flag  Use a bit in wc_flags rather then a whole integer to hold the "checksum OK" flag.  By itself, this change doesn't reduce the size of struct ib_wc on 64bit machines -- it stays on 56 bytes because of padding.  However, it will allow to add more fields in the future without enlarging the struct.  Also, it will let us have a unified approach with future libibverbs checksum offload reporting, because a bit flag doesn't break the library ABI.  This patch was suggested during conversation with Liran Liss <liranl@mellanox.com>.  Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Reviewed-by: Sean Hefty <sean.hefty@intel.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
