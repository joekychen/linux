f | debug.c | s | 5.4K | 178 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | init.c | s | 4.9K | 159 | Joe Perches | joe@perches.com | 1307710536 |  | treewide: Convert uses of struct resource to resource_size(ptr)  Several fixes as well where the +1 was missing.  Done via coccinelle scripts like:  @@ struct resource *ptr; @@  - ptr->end - ptr->start + 1 + resource_size(ptr)  and some grep and typing.  Mostly uncompiled, no cross-compilers.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | asl.c | s | 9.5K | 329 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | wusb.c | s | 5.4K | 175 | David Vrabel | david.vrabel@csr.com | 1227706619 |  | wusb: add debug files for ASL, PZL and DI to the whci-hcd driver  Add asl, pzl and di debugfs files to uwb/uwbN/wusbhc for WHCI host controller.  These dump the current ASL, PZL and DI buffer.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | qset.c | s | 20K | 700 | Greg Kroah-Hartman | gregkh@suse.de | 1323731993 |  | Merge branch 'for-next/dwc3' of git://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb into usb-next  * 'for-next/dwc3' of git://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb: (392 commits)   usb: dwc3: ep0: fix for possible early delayed_status   usb: dwc3: gadget: fix stream enable bit   usb: dwc3: ep0: fix GetStatus handling (again)   usb: dwc3: ep0: use dwc3_request for ep0 requsts instead of usb_request   usb: dwc3: use correct hwparam register for power mgm check   usb: dwc3: omap: move to module_platform_driver   usb: dwc3: workaround: missing disconnect event   usb: dwc3: workaround: missing USB3 Reset event   usb: dwc3: workaround: U1/U2 -> U0 transiton   usb: dwc3: gadget: return early in dwc3_cleanup_done_reqs()   usb: dwc3: ep0: handle delayed_status again   usb: dwc3: ep0: push ep0state into xfernotready processing   usb: dwc3: fix sparse errors   usb: dwc3: fix few coding style problems   usb: dwc3: move generic dwc3 code from gadget into core   usb: dwc3: use a helper function for operation mode setting   usb: dwc3: ep0: don't use ep0in for transfers   usb: dwc3: ep0: use proper endianess in SetFeature for wIndex   usb: dwc3: core: drop DWC3_EVENT_BUFFERS_MAX   usb: dwc3: omap: add multiple instances support to OMAP   ...
f | hcd.c | s | 8.5K | 312 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add module.h to drivers/usb consumers who really use it.  The situation up to this point meant that module.h was pretty much everywhere, regardless of whether you asked for it or not. We are fixing that, so give the USB folks who want it an actual include of it.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | whcd.h | s | 6.6K | 184 | David Vrabel | david.vrabel@csr.com | 1260561314 |  | USB: whci-hcd: support urbs with scatter-gather lists  Support urbs with scatter-gather lists by trying to fit sg list elements into page lists in one or more qTDs.  qTDs must end on a wMaxPacketSize boundary so if this isn't possible the urb's sg list must be copied into bounce buffers.  Signed-off-by: David Vrabel <david.vrabel@csr.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pzl.c | s | 10K | 363 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | whci-hc.h | s | 14K | 370 | David Vrabel | david.vrabel@csr.com | 1260561316 |  | USB: wusb: add wusb_phy_rate sysfs file to host controllers  Add the wusb_phy_rate sysfs file to Wireless USB host controllers.  This sets the maximum PHY rate that will be used for all connected devices.  Signed-off-by: David Vrabel <david.vrabel@csr.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | Kbuild | g | 141B |  | matt mooney | mfm@muteddisk.com | 1287768127 |  | usb: makefile cleanup  For all modules, change <module>-objs to <module>-y; remove if-statements and replace with lists using the kbuild idiom; move flags to the top of the file; and fix alignment while trying to maintain the original scheme in each file.  None of the dependencies are modified.  Signed-off-by: matt mooney <mfm@muteddisk.com> Acked-by: Sam Ravnborg <sam@ravnborg.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | hw.c | s | 2.8K | 87 | David Vrabel | david.vrabel@csr.com | 1231325662 |  | wusb: timeout when waiting for ASL/PZL updates in whci-hcd  Timeout if an ASL or PZL update doesn't not complete and reset the hardware.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | int.c | s | 2.4K | 78 | Huang Weiyi | weiyi.huang@gmail.com | 1225465827 |  | wusb: remove unused #include <version.h>  The file(s) below do not use LINUX_VERSION_CODE nor KERNEL_VERSION.   drivers/usb/host/hwa-hc.c   drivers/usb/host/whci/hcd.c   drivers/usb/host/whci/int.c   drivers/usb/host/whci/wusb.c   drivers/usb/wusbcore/cbaf.c  This patch removes the said #include <version.h>.  Signed-off-by: Huang Weiyi <weiyi.huang@gmail.com> Signed-off-by: David Vrabel <david.vrabel@csr.com>
