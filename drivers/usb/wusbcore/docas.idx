f | cbaf.c | s | 19K | 582 | Greg Kroah-Hartman | gregkh@suse.de | 1321637642 |  | USB: convert drivers/usb/* to use module_usb_driver()  This converts the drivers in drivers/usb/* to use the module_usb_driver() macro which makes the code smaller and a bit simpler.  Added bonus is that it removes some unneeded kernel log messages about drivers loading and/or unloading.  Cc: Simon Arlott <cxacru@fire.lp0.eu> Cc: Duncan Sands <duncan.sands@free.fr> Cc: Matthieu CASTET <castet.matthieu@free.fr> Cc: Stanislaw Gruszka <stf_xl@wp.pl> Cc: Pete Zaitcev <zaitcev@redhat.com> Cc: Oliver Neukum <oliver@neukum.name> Cc: Juergen Stuber <starblue@users.sourceforge.net> Cc: Cesar Miquel <miquel@df.uba.ar> Cc: Matthew Dharm <mdharm-usb@one-eyed-alien.net> Cc: Matthew Wilcox <willy@linux.intel.com> Cc: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com> Cc: Felipe Balbi <balbi@ti.com> Cc: Lucas De Marchi <lucas.demarchi@profusion.mobi> Cc: Michael Hund <mhund@ld-didactic.de> Cc: Zack Parsons <k3bacon@gmail.com> Cc: Melchior FRANZ <mfranz@aon.at> Cc: Tomoki Sekiyama <tomoki.sekiyama@gmail.com> Cc: Dan Carpenter <error27@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | wa-xfer.c | s | 46K | 1527 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | Makefile | g | 391B |  | matt mooney | mfm@muteddisk.com | 1287768127 |  | usb: makefile cleanup  For all modules, change <module>-objs to <module>-y; remove if-statements and replace with lists using the kbuild idiom; move flags to the top of the file; and fix alignment while trying to maintain the original scheme in each file.  None of the dependencies are modified.  Signed-off-by: matt mooney <mfm@muteddisk.com> Acked-by: Sam Ravnborg <sam@ravnborg.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pal.c | s | 1.5K | 48 | David Vrabel | david.vrabel@csr.com | 1227105993 |  | uwb: add basic radio manager  The UWB radio manager coordinates the use of the radio between the PALs that may be using it.  PALs request use of the radio with uwb_radio_start() and the radio manager will start beaconing if its not already doing so.  When the last PAL has called uwb_radio_stop() beaconing will be stopped.  In the future, the radio manager will have a more sophisticated channel selection algorithm, probably following the Channel Selection Policy from the WiMedia Alliance when it is finalized.  For now, channel 9 (BG1, TFC1) is selected.  The user may override the channel selected by the radio manager and may force the radio to stop beaconing.  The WUSB Host Controller PAL makes use of this and there are two new debug PAL commands that can be used for testing.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | wusbhc.h | s | 16K | 456 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | devconnect.c | s | 32K | 1031 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | reservation.c | s | 3.1K | 105 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | dev-sysfs.c | s | 3.8K | 126 | David Vrabel | david.vrabel@csr.com | 1229970170 |  | uwb: use dev_dbg() for debug messages  Instead of the home-grown d_fnstart(), d_fnend() and d_printf() macros, use dev_dbg() or remove the message entirely.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | wa-rpipe.c | s | 15K | 490 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | wusbhc.c | s | 12K | 404 | Akinobu Mita | akinobu.mita@gmail.com | 1299113548 |  | wusb: fix find_first_zero_bit() return value check  In wusb_cluster_id_get(), if no zero bits exist in wusb_cluster_id_table, find_first_zero_bit() returns CLUSTER_IDS.  But it is impossible to detect that the bitmap is full because there is an off-by-one error in the return value check.  It will cause unexpected memory access by setting bit out of wusb_cluster_id_table bitmap, and caller will get wrong cluster id.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Cc: linux-usb@vger.kernel.org Cc: Greg Kroah-Hartman <gregkh@suse.de> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | mmc.c | s | 7.7K | 264 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | wa-nep.c | s | 8.9K | 290 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | Kconfig | g | 1.2K |  | Randy Dunlap | rdunlap@xenotime.net | 1327605762 |  | uwb & wusb: fix kconfig error  Fix UWB/WUSB kconfig error by changing 'select' to 'depends on'.  drivers/usb/wusbcore/Kconfig:4:error: recursive dependency detected! drivers/usb/wusbcore/Kconfig:4:	symbol USB_WUSB is selected by USB_HWA_HCD drivers/usb/host/Kconfig:559:	symbol USB_HWA_HCD depends on UWB drivers/uwb/Kconfig:5:	symbol UWB is selected by USB_WUSB  Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | wa-hc.c | s | 2.5K | 90 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add module.h to drivers/usb consumers who really use it.  The situation up to this point meant that module.h was pretty much everywhere, regardless of whether you asked for it or not. We are fixing that, so give the USB folks who want it an actual include of it.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | rh.c | s | 12K | 417 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | crypto.c | s | 15K | 483 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | security.c | s | 16K | 513 | Thomas Meyer | thomas@m3y3r.de | 1323476300 |  | USB: wusb: Use kcalloc instead of kzalloc to allocate array  The advantage of kcalloc is, that will prevent integer overflows which could result from the multiplication of number of elements and size and it is also a bit nicer to read.  The semantic patch that makes this change is available in https://lkml.org/lkml/2011/11/25/107  Signed-off-by: Thomas Meyer <thomas@m3y3r.de> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | wa-hc.h | s | 12K | 369 | Uwe Kleine-Koenig | u.kleine-koenig@pengutronix.de | 1253538896 |  | trivial: fix typos "man[ae]g?ment" -> "management"  Signed-off-by: Uwe Kleine-Koenig <u.kleine-koenig@pengutronix.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
