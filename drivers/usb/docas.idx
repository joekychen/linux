d | otg |  | 18 items |  | Moiz Sonasath | m-sonasath@ti.com | 1340359926 |  | usb: otg: twl6030-usb: Fix twl writes  There were mistakes in writing to few twl registers. There was interchange in the parameters being passed to twl6030_writeb().  Signed-off-by: Moiz Sonasath <m-sonasath@ti.com> Signed-off-by: Ruslan Bilovol <ruslan.bilovol@ti.com> Signed-off-by: Felipe Balbi <balbi@ti.com>
d | chipidea |  | 13 items |  | Richard Zhao | richard.zhao@freescale.com | 1337096620 |  | usb: chipidea: remove zero check of hw_ep_max  It's 0 for host only device.  Signed-off-by: Richard Zhao <richard.zhao@freescale.com> Cc: Marek Vasut <marex@denx.de> Cc: Alan Stern <stern@rowland.harvard.edu> Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com> Cc: Felipe Balbi <balbi@ti.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | Makefile | g | 1.5K |  | Alexandre Pereira da Silva | aletes.xgr@gmail.com | 1340752473 |  | usb: phy: Fix Kconfig dependency for Phy drivers  USB phy layer driver are only built if usb host is selected, but they are used too by USB_GADGET drivers  Signed-off-by: Alexandre Pereira da Silva <aletes.xgr@gmail.com> Acked-by: Roland Stigge <stigge@antcom.de> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | usb-skeleton.c | s | 16K | 579 | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1335551085 |  | USB: usb-skeleton.c: remove err() usage  err() was a very old USB-specific macro that I thought had gone away.  This patch removes it from being used in the driver and uses dev_err() instead.  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | gadget |  | 105 items |  | Alexandre Pereira da Silva | aletes.xgr@gmail.com | 1340360140 |  | usb: gadget: lpc32xx_udc: fix build error with debugfs enabled  If CONFIG_USB_GADGET_DEBUG_FILES is enabled, lpc32xx_udc breaks compilation because of a missing include file.  Signed-off-by: Alexandre Pereira da Silva <aletes.xgr@gmail.com> Signed-off-by: Felipe Balbi <balbi@ti.com>
d | class |  | 7 items |  | Otto Meta | otto.patches@sister-shadow.de | 1339719213 |  | usb: cdc-acm: fix devices not unthrottled on open  Currently CDC-ACM devices stay throttled when their TTY is closed while throttled, stalling further communication attempts after the next open.  Unthrottling during open/activate got lost starting with kernel 3.0.0 and this patch reintroduces it.  Signed-off-by: Otto Meta <otto.patches@sister-shadow.de> Cc: stable <stable@vger.kernel.org> Acked-by: Johan Hovold <jhovold@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | misc |  | 25 items |  | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1335933251 |  | USB: yurex.c: remove dbg() usage  dbg() was a very old USB-specific macro that should no longer be used. This patch removes it from being used in the driver and uses dev_dbg() instead.  CC: Tomoki Sekiyama <tomoki.sekiyama@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | mon |  | 7 items |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103885 |  | usb: Add export.h for EXPORT_SYMBOL/THIS_MODULE where needed  With module.h being implicitly everywhere via device.h, the absence of explicitly including something for EXPORT_SYMBOL went unnoticed. Since we are heading to fix things up and clean module.h from the device.h file, we need to explicitly include these files now.  Use the lightweight version of the header that has just THIS_MODULE and EXPORT_SYMBOL variants.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
d | phy |  | 3 items |  | Alexandre Pereira da Silva | aletes.xgr@gmail.com | 1340752473 |  | usb: phy: Fix Kconfig dependency for Phy drivers  USB phy layer driver are only built if usb host is selected, but they are used too by USB_GADGET drivers  Signed-off-by: Alexandre Pereira da Silva <aletes.xgr@gmail.com> Acked-by: Roland Stigge <stigge@antcom.de> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | wusbcore |  | 18 items |  | Randy Dunlap | rdunlap@xenotime.net | 1327605762 |  | uwb & wusb: fix kconfig error  Fix UWB/WUSB kconfig error by changing 'select' to 'depends on'.  drivers/usb/wusbcore/Kconfig:4:error: recursive dependency detected! drivers/usb/wusbcore/Kconfig:4:	symbol USB_WUSB is selected by USB_HWA_HCD drivers/usb/host/Kconfig:559:	symbol USB_HWA_HCD depends on UWB drivers/uwb/Kconfig:5:	symbol UWB is selected by USB_WUSB  Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
d | c67x00 |  | 7 items |  | Axel Lin | axel.lin@gmail.com | 1322430512 |  | usb: convert drivers/usb/* to use module_platform_driver()  This patch converts the drivers in drivers/usb/* to use the module_platform_driver() macro which makes the code smaller and a bit simpler.  Cc: Felipe Balbi <balbi@ti.com> Cc: Li Yang <leoli@freescale.com> Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com> Cc: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Jiri Kosina <jkosina@suse.cz> Cc: Lucas De Marchi <lucas.demarchi@profusion.mobi> Cc: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Axel Lin <axel.lin@gmail.com> Acked-by: Peter Korsgaard <jacmet@sunsite.dk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | usb-common.c | s | 1.1K | 31 | Michal Nazarewicz | mina86@mina86.com | 1316334544 |  | usb: Provide usb_speed_string() function  In a few places in the kernel, the code prints a human-readable USB device speed (eg. "high speed"). This involves a switch statement sometimes wrapped around in ({ ... }) block leading to code repetition.  To mitigate this issue, this commit introduces usb_speed_string() function, which returns a human-readable name of provided speed.  It also changes a few places switch was used to use this new function.  This changes a bit the way the speed is printed in few instances at the same time standardising it.  Signed-off-by: Michal Nazarewicz <mina86@mina86.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
d | host |  | 121 items |  | Shimoda, Yoshihiro | yoshihiro.shimoda.uh@renesas.com | 1339719214 |  | usb: ehci-sh: fix illegal phy_init() running when platform_data is NULL  If the platform_data is not set, pdata will be uninitialized value. Since the driver has the following code, if the condition is true when the pdata is uninitialized value, the driver may jump to the illegal phy_init().  	if (pdata && pdata->phy_init) 		pdata->phy_init();  This patch also fixes the following warning:    CC      drivers/usb/host/ehci-hcd.o drivers/usb/host/ehci-sh.c: In function ‘ehci_hcd_sh_probe’: drivers/usb/host/ehci-sh.c:104: warning: ‘pdata’ may be used uninitialized in this function  Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com> Acked-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | dwc3 |  | 14 items |  | Pratyush Anand | pratyush.anand@st.com | 1339760569 |  | usb: dwc3: fix giveback of queued request in ep_dequeue  In case of ep_dequeue , if dequeued request was submitted for dma transfer, then endpoint is stopped. Once endpoint is stooped, callback for the dequeued request must be called.  Signed-off-by: Pratyush Anand <pratyush.anand@st.com> Signed-off-by: Felipe Balbi <balbi@ti.com>
d | atm |  | 8 items |  | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1335933210 |  | USB: xusbatm.c: remove dbg() usage  dbg() was a very old USB-specific macro that should no longer be used. This patch removes it from being used in the driver and uses dev_dbg() instead.  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | image |  | 5 items |  | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1335933230 |  | USB: mdc800.c: remove dbg() usage  dbg() was a very old USB-specific macro that should no longer be used. This patch removes it from being used in the driver and uses dev_dbg() instead.  Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | storage |  | 48 items |  | Alan Stern | stern@rowland.harvard.edu | 1340427932 |  | usb-storage: revert commit afff07e61a52 (Add 090c:1000 to unusal-devs)  This patch (as1560) reverts commit afff07e61a5243e14ee3f0a272a0380cd744a8a3 (usb-storage: Add 090c:1000 to unusal-devs).  It is no longer needed, because usb-storage now tells the sd driver to try READ CAPACITY(10) before READ CAPACITY(16) for every USB mass-storage device.  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Acked-by: Hans de Goede <hdegoede@redhat.com> CC: Matthew Dharm <mdharm-usb@one-eyed-alien.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | serial |  | 86 items |  | Craig Shelley | craig@microtron.org.uk | 1340752474 |  | USB: CP210x Add 10 Device IDs  This patch adds 10 device IDs for CP210x based devices from the following manufacturers: Timewave Clipsal Festo Link Instruments  Signed-off-by: Craig Shelley <craig@microtron.org.uk> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | Kconfig | g | 5.5K |  | Alexander Shishkin | alexander.shishkin@linux.intel.com | 1336779930 |  | usb: move ci13xxx and related code to drivers/usb/chipidea  Since chipidea is a dual role controller, it makes sense to move it to its own directory, where we can also have host, otg and platform code related to this controller. It also makes sense to break out the driver into several compilation units like udc, host, debugging code, etc.  Firstly, let's move the udc and platform code to drivers/usb/chipidea.  Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | README | g | 2.4K |  | Dirk Hohndel | hohndel@linux.intel.com | 1196287114 |  | USB: fix directory references in usb/README  Another one in the "ok, this is trivial to fix" list... :-)  [PATCH] fix directory references in usb/README  Signed-off-by: Dirk Hohndel <hohndel@linux.intel.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
d | core |  | 22 items |  | Daniel Mack | zonque@gmail.com | 1339719214 |  | USB: fix gathering of interface associations  TEAC's UD-H01 (and probably other devices) have a gap in the interface number allocation of their descriptors:    Configuration Descriptor:     bLength                 9     bDescriptorType         2     wTotalLength          220     bNumInterfaces          3     [...]     Interface Descriptor:       bLength                 9       bDescriptorType         4       bInterfaceNumber        0       bAlternateSetting       0       [...]     Interface Association:       bLength                 8       bDescriptorType        11       bFirstInterface         2       bInterfaceCount         2       bFunctionClass          1 Audio       bFunctionSubClass       0       bFunctionProtocol      32       iFunction               4     Interface Descriptor:       bLength                 9       bDescriptorType         4       bInterfaceNumber        2       bAlternateSetting       0       [...]  Once a configuration is selected, usb_set_configuration() walks the known interfaces of a given configuration and calls find_iad() on each of them to set the interface association pointer the interface is included in.  The problem here is that the loop variable is taken for the interface number in the comparison logic that gathers the association. Which is fine as long as the descriptors are sane.  In the case above, however, the logic gets out of sync and the interface association fields of all interfaces beyond the interface number gap are wrong.  Fix this by passing the interface's bInterfaceNumber to find_iad() instead.  Signed-off-by: Daniel Mack <zonque@gmail.com> Reported-by: bEN <ml_all@circa.be> Reported-by: Ivan Perrone <ivanperrone@hotmail.com> Tested-by: ivan perrone <ivanperrone@hotmail.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
d | musb |  | 33 items |  | Ajay Kumar Gupta | ajay.gupta@ti.com | 1340360155 |  | usb: musb: host: release dma channels if no active io  Currently DMA channels are allocated and they remain allocated even if there is no active data transfer. Added channel_release() whenever there is no pending request.  Signed-off-by: Ajay Kumar Gupta <ajay.gupta@ti.com> Signed-off-by: Felipe Balbi <balbi@ti.com>
d | renesas_usbhs |  | 12 items |  | Shimoda, Yoshihiro | yoshihiro.shimoda.uh@renesas.com | 1336135985 |  | usb: renesas_usbhs: gadget: add support for set_selfpowered  The previous code always set to USB_DEVICE_SELF_POWERED in GET_STATUS. So, this patch adds set_selfpowered().  Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com> Signed-off-by: Felipe Balbi <balbi@ti.com>
d | early |  | 2 items |  | Jan Andersson | jan@gaisler.com | 1304448201 |  | USB: EHCI: Support controllers with big endian capability regs  The two first HC capability registers (CAPLENGTH and HCIVERSION) are defined as one 8-bit and one 16-bit register. Most HC implementations have selected to treat these registers as part of a 32-bit register, giving the same layout for both big and small endian systems.  This patch adds a new quirk, big_endian_capbase, to support controllers with big endian register interfaces that treat HCIVERSION and CAPLENGTH as individual registers.  Signed-off-by: Jan Andersson <jan@gaisler.com> Acked-by: Alan Stern <stern@rowland.harvard.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
