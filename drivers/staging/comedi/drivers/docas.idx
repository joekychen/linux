f | pcm3730.c | s | 3.4K | 130 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_das16_cs.c | s | 20K | 679 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_1564.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | addi_apci_035.c | s | 292B | 7 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | ni_6527.c | s | 13K | 425 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_65xx.c | s | 21K | 763 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | usbduxsigma.c | s | 75K | 2515 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_2032.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | das6402.c | s | 8.1K | 275 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci9118.c | s | 71K | 2223 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | Makefile | g | 5.7K |  | Bernd Porr | berndporr@f2s.com | 1314126045 |  | staging: comedi: new driver usbduxsigma  This adds a new driver file usbduxsigma which is the driver for a new board by ITL. The driver has been tested and is working fine.  Signed-off-by: Bernd Porr <berndporr@f2s.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | rtd520.h | s | 22K | 368 | Bill Pemberton | wfp5p@virginia.edu | 1238795633 |  | Staging: comedi: Convert C99 style comments to traditional style comments  Signed-off-by: Bill Pemberton <wfp5p@virginia.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | me_daq.c | s | 23K | 737 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | usbdux.c | s | 77K | 2548 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | s626.h | s | 29K | 608 | Arun Thomas | arun.thomas@gmail.com | 1276807747 |  | Staging: comedi: Remove typedefs  Remove all remaining typedefs from comedi drivers  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | plx9052.h | s | 3.4K | 77 | David Schleef | ds@schleef.org | 1238795621 |  | Staging: comedi: add plx9052 header file  This is used by multiple comedi drivers.  It is the definitions for the PLX-9052 PCI interface chip  From: David Schleef <ds@schleef.org> Cc: Frank Mori Hess <fmhess@users.sourceforge.net> Cc: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | fl512.c | s | 4.8K | 164 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | icp_multi.h | s | 7.6K | 253 | Kulikov Vasiliy | segooon@gmail.com | 1278620116 |  | Staging: comedi: use for_each_pci_dev()  Use for_each_pci_dev() to simplify the code.  Signed-off-by: Kulikov Vasiliy <segooon@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | addi_apci_3501.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | addi_apci_3200.c | s | 110B | 3 | Ian Abbott | abbotti@mev.co.uk | 1275683932 |  | Staging: comedi: Give the addi_apci_* drivers different driver names  It is not currently possible for more than one of the addi_apci_* drivers to register themselves with comedi at once because they all use the same comedi driver name "addi_common".  Give them different names.  Signed-off-by: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
d | addi-data |  | 53 items |  | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | amplc_pci230.c | s | 91K | 2673 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | comedi_bond.c | s | 12K | 368 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl818.c | s | 54K | 1763 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | daqboard2000.c | s | 25K | 778 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci7230.c | s | 5.0K | 161 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_atmio16d.c | s | 23K | 772 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_16xx.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dyna_pci10xx.c | s | 11K | 374 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci7296.c | s | 4.9K | 153 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcmda12.c | s | 7.3K | 209 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adv_pci1723.c | s | 12K | 396 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | das1800.c | s | 48K | 1612 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_pcidio.c | s | 7.0K | 212 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | mpc8260cpm.c | s | 3.6K | 130 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_1516.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dt2817.c | s | 4.4K | 145 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dt2814.c | s | 8.4K | 305 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_3001.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | comedi_fc.c | s | 3.3K | 91 | Klaas van Gend | klaas.van.gend@mvista.com | 1260562982 |  | Staging: comedi: comedi_fc: checkpatch.pl fixes  This patch fixes all warnings as issued by checkpatch.pl.  Signed-off-by: Klaas van Gend <klaas.van.gend@mvista.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | amplc_pci224.c | s | 43K | 1401 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ke_counter.c | s | 7.3K | 216 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl725.c | s | 2.2K | 87 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dmm32at.c | s | 28K | 896 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | contec_pci_dio.c | s | 5.4K | 170 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcmmio.c | s | 35K | 1102 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_1032.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pcm_common.h | s | 187B | 6 | Bill Pemberton | wfp5p@virginia.edu | 1245434434 |  | staging: comedi: Move pcm do_cmdtest function into a single source file  Many of the comedi source code has functions that were created with cut and paste, this moves the do_cmdtest function into a single file.  Signed-off-by: Bill Pemberton <wfp5p@virginia.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pcm3724.c | s | 6.7K | 250 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | me4000.h | s | 16K | 357 | Bill Pemberton | wfp5p@virginia.edu | 1238795658 |  | Staging: comedi: Remove me4000_info_t typedef  Signed-off-by: Bill Pemberton <wfp5p@virginia.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | jr3_pci.h | s | 25K | 582 | Mithlesh Thukral | mithlesh@linsyssoft.com | 1253041293 |  | Staging: Comedi: Lindent changes to comdi driver in staging tree  Lindent changes to comdi driver in staging tree. This patch is followed by the checkpatch.pl error fixes. Did not make them part of this patch as the patch size is already huge.  Signed-off-by: Mithlesh Thukral <mithlesh@linsyssoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | addi_apci_1500.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | mpc624.c | s | 11K | 354 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | acl7225b.c | s | 3.7K | 123 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | rtd520.c | s | 68K | 2025 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_labpc.c | s | 61K | 1938 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | unioxx5.c | s | 14K | 417 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_tio_internal.h | s | 17K | 734 | W. Trevor King | wking@tremily.us | 1334935794 |  | staging: comedi: ni_tio_internal.h: checkpatch.pl cleanups  * No braces for single statement blocks.  Signed-off-by: W. Trevor King <wking@tremily.us> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcmuio.c | s | 27K | 817 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_670x.c | s | 9.8K | 316 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_3120.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | mite.c | s | 23K | 718 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | 8255.h | s | 1.4K | 30 | Greg Kroah-Hartman | gregkh@suse.de | 1273602971 |  | Staging: comedi: 8255: fix up previous static markings.  Ian pointed out that exported symbols should not be marked as static :)  Fixed this up by properly including the 8255.h file, and fixing the function prototypes there, as the CONFIG variables were not getting set so users of the header file were seeing the incorrect function prototypes.  Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Frank Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pcm_common.c | s | 2.4K | 93 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | icp_multi.c | s | 28K | 859 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dt2801.c | s | 14K | 605 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | amplc_pc236.c | s | 18K | 636 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | am9513.h | s | 1.9K | 60 | Bob Beattie | bob.beattie@ntlworld.com | 1276807392 |  | Staging: comedi: drivers: fix space coding style in am9513.h  This is a patch to the file am9513.h that fixes missing space warnings found by the checkpatch.pl tool.  Signed-off-by: Bob Beattie <bob.beattie@ntlworld.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | cb_pcimdas.c | s | 13K | 403 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl724.c | s | 5.3K | 180 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | das08.c | s | 28K | 1029 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | das08.h | s | 2.5K | 64 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_pcidio.c | s | 35K | 1184 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_pcidda.c | s | 23K | 749 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dt2815.c | s | 6.8K | 207 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | amplc_dio200.c | s | 40K | 1366 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dt9812.c | s | 28K | 1012 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | vmk80xx.c | s | 31K | 1179 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | rti802.c | s | 3.8K | 121 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_at_ao.c | s | 10K | 361 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | aio_aio12_8.c | s | 5.7K | 186 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl812.c | s | 45K | 1524 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_daq_dio24.c | s | 8.4K | 269 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_1710.c | s | 110B | 3 | Ian Abbott | abbotti@mev.co.uk | 1275683932 |  | Staging: comedi: Give the addi_apci_* drivers different driver names  It is not currently possible for more than one of the addi_apci_* drivers to register themselves with comedi at once because they all use the same comedi driver name "addi_common".  Give them different names.  Signed-off-by: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | s626.c | s | 105K | 2770 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_daq_700.c | s | 13K | 468 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | quatech_daqp_cs.c | s | 29K | 876 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | comedi_pci.h | s | 1.6K | 46 | Greg Kroah-Hartman | gregkh@suse.de | 1231278746 |  | Staging: comedi: comedi_pci.h: remove comedi_pci_disable_no_regions  comedi_pci_disable_no_regions is not called by any comedi code (in or out of the kernel tree), so remove it, so no one tries to use it in the future.  Cc: David Schleef <ds@schleef.org> Cc: Frank Mori Hess <fmhess@users.sourceforge.net> Cc: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | das16m1.c | s | 19K | 625 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | comedi_parport.c | s | 8.9K | 320 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcmad.c | s | 4.1K | 141 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_labpc.h | s | 3.7K | 95 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ii_pci20kc.c | s | 18K | 581 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_atmio.c | s | 12K | 439 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci9111.c | s | 38K | 1136 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_3300.c | s | 110B | 3 | Ian Abbott | abbotti@mev.co.uk | 1275683932 |  | Staging: comedi: Give the addi_apci_* drivers different driver names  It is not currently possible for more than one of the addi_apci_* drivers to register themselves with comedi at once because they all use the same comedi driver name "addi_common".  Give them different names.  Signed-off-by: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | ni_at_a2150.c | s | 24K | 774 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | me4000.c | s | 64K | 2030 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_labpc_cs.c | s | 7.9K | 246 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_tio.c | s | 48K | 1630 | Joe Perches | joe@perches.com | 1303775915 |  | staging: Remove unnecessary semicolons when switch (foo) {...};  Done via perl script:  $ cat remove_semi_switch.pl my $match_balanced_parentheses = qr/(\((?:[^\(\)]++||(?-1))*\))/; my $match_balanced_braces      = qr/(\{(?:[^\{\}]++||(?-1))*\})/;  foreach my $file (@ARGV) {     my $f;     my $text;     my $oldtext;      next if ((-d $file));      open($f, '<', $file) 	or die "$P: Can't open $file for read\n";     $oldtext = do { local($/) ; <$f> };     close($f);      next if ($oldtext eq "");      $text = $oldtext;      my $count = 0;     do { 	$count = 0; 	$count += $text =~ s@\b(switch\s*${match_balanced_parentheses}\s*)${match_balanced_braces}\s*;@"$1$3"@egx;     } while ($count > 0);      if ($text ne $oldtext) { 	my $newfile = $file;  	open($f, '>', $newfile) 	    or die "$P: Can't open $newfile for write\n"; 	print $f $text; 	close($f);     } }  $  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dt2811.c | s | 13K | 520 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adv_pci1710.c | s | 45K | 1422 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | dt282x.c | s | 34K | 1265 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | amplc_pc263.c | s | 12K | 439 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | comedi_test.c | s | 13K | 440 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adv_pci_dio.c | s | 38K | 1176 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl816.c | s | 34K | 1136 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_tio.h | s | 5.1K | 159 | Mithlesh Thukral | mithlesh@linsyssoft.com | 1253041293 |  | Staging: Comedi: Lindent changes to comdi driver in staging tree  Lindent changes to comdi driver in staging tree. This patch is followed by the checkpatch.pl error fixes. Did not make them part of this patch as the patch size is already huge.  Signed-off-by: Mithlesh Thukral <mithlesh@linsyssoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | serial2002.c | s | 18K | 787 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_pcidas.c | s | 55K | 1676 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_660x.c | s | 41K | 1290 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_mio_cs.c | s | 10.0K | 365 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | jr3_pci.c | s | 25K | 890 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adq12b.c | s | 9.6K | 287 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | comedi_fc.h | s | 2.4K | 60 | Mithlesh Thukral | mithlesh@linsyssoft.com | 1253041293 |  | Staging: Comedi: Lindent changes to comdi driver in staging tree  Lindent changes to comdi driver in staging tree. This patch is followed by the checkpatch.pl error fixes. Did not make them part of this patch as the patch size is already huge.  Signed-off-by: Mithlesh Thukral <mithlesh@linsyssoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | amcc_s5933.h | s | 6.4K | 143 | Bill Pemberton | wfp5p@virginia.edu | 1245434430 |  | Staging: comedi: Remove C99 comments  Signed-off-by: Bill Pemberton <wfp5p@virginia.edu> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | adl_pci6208.c | s | 10K | 323 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_pcidas64.c | s | 121K | 3786 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | usbduxfast.c | s | 45K | 1586 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | das08_cs.c | s | 6.8K | 203 | Ravishankar karkala Mallikarjunayya | ravishankar.km@greenturtles.in | 1322362083 |  | Staging: comedi: fix printk issue in das08_cs.c  This is a patch to the das08_cs.c file that fixes up a printk warning found by the checkpatch.pl tool.  converted printks to dev_printk.  Signed-off-by: Ravishankar Karkala Mallikarjunayya <ravishankar.km@greenturtles.in> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | ni_pcimio.c | s | 44K | 1746 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | poc.c | s | 6.1K | 200 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_mio_common.c | s | 161K | 5387 | Joe Perches | joe@perches.com | 1303775915 |  | staging: Remove unnecessary semicolons when switch (foo) {...};  Done via perl script:  $ cat remove_semi_switch.pl my $match_balanced_parentheses = qr/(\((?:[^\(\)]++||(?-1))*\))/; my $match_balanced_braces      = qr/(\{(?:[^\{\}]++||(?-1))*\})/;  foreach my $file (@ARGV) {     my $f;     my $text;     my $oldtext;      next if ((-d $file));      open($f, '<', $file) 	or die "$P: Can't open $file for read\n";     $oldtext = do { local($/) ; <$f> };     close($f);      next if ($oldtext eq "");      $text = $oldtext;      my $count = 0;     do { 	$count = 0; 	$count += $text =~ s@\b(switch\s*${match_balanced_parentheses}\s*)${match_balanced_braces}\s*;@"$1$3"@egx;     } while ($count > 0);      if ($text ne $oldtext) { 	my $newfile = $file;  	open($f, '>', $newfile) 	    or die "$P: Can't open $newfile for write\n"; 	print $f $text; 	close($f);     } }  $  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | plx9080.h | s | 19K | 367 | Justin P. Mattock | justinmattock@gmail.com | 1287392594 |  | Update broken web addresses in the kernel.  The patch below updates broken web addresses in the kernel  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Cc: Maciej W. Rozycki <macro@linux-mips.org> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Finn Thain <fthain@telegraphics.com.au> Cc: Randy Dunlap <rdunlap@xenotime.net> Cc: Matt Turner <mattst88@gmail.com> Cc: Dimitry Torokhov <dmitry.torokhov@gmail.com> Cc: Mike Frysinger <vapier.adi@gmail.com> Acked-by: Ben Pfaff <blp@cs.stanford.edu> Acked-by: Hans J. Koch <hjk@linutronix.de> Reviewed-by: Finn Thain <fthain@telegraphics.com.au> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | aio_iiro_16.c | s | 4.1K | 133 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl726.c | s | 9.5K | 316 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | 8255.c | s | 10K | 358 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | multiq3.c | s | 8.5K | 280 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | gsc_hpdi.c | s | 29K | 923 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | rti800.c | s | 11K | 408 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_2200.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | addi_apci_all.c | s | 468B | 17 | ADDI-DATA GmbH | info@addi-data.com | 1238795621 |  | Staging: comedi: add addi-data drivers  This adds the addi-data family of comedi drivers to the staging tree  From: ADDI-DATA GmbH <info@addi-data.com> Cc: David Schleef <ds@schleef.org> Cc: Frank Mori Hess <fmhess@users.sourceforge.net> Cc: Ian Abbott <abbotti@mev.co.uk> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | skel.c | s | 18K | 580 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | das800.c | s | 24K | 805 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_3xxx.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | 8253.h | s | 11K | 368 | Graham M Howe | gman.1352@googlemail.com | 1273602929 |  | Staging: comedi: fix 80 character line issue in 8253.h  This is a patch to the 8253.h file to fix 80 character line warning found by checkpatch.pl tool  Signed-off-by: Graham M Howe <gman.1352@googlemail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | das16.c | s | 42K | 1519 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pcl730.c | s | 3.9K | 135 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | mite.h | s | 11K | 414 | H Hartley Sweeten | hartleys@visionengravers.com | 1336595787 |  | staging: comedi: mite: mite_io_addr and daq_io_addr are void __iomem *  The mite_io_addr and daq_io_addr variables in struct mite_struct are both ioremap'ed pci resources and should be void __iomem * not void *.  This quiets a lot of sparse warings for the write[lwb],read[lwb] calls in the comedi mite drives like:  warning: incorrect type in argument 1 (different address spaces)    expected void const volatile [noderef] <asn:2>*addr    got void *<noident>  warning: incorrect type in argument 2 (different address spaces)    expected void volatile [noderef] <asn:2>*addr    got void *  It also exposed some warnings in the mite ni_660x driver where the daq_io_address was getting cast as a void *const.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | addi_apci_2016.c | s | 228B | 6 | Arun Thomas | arun.thomas@gmail.com | 1276807547 |  | Staging: comedi: Remove COMEDI_MODULES_MACRO  Add MODULE_AUTHOR, MODULE_LICENSE, and MODULE_DESCRIPTION calls to the respective C source files instead of calling COMEDI_MODULES_MACRO  Signed-off-by: Arun Thomas <arun.thomas@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | dt3000.c | s | 23K | 838 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | s526.c | s | 27K | 823 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci8164.c | s | 9.2K | 308 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ssv_dnp.c | s | 8.8K | 220 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | adl_pci7432.c | s | 5.6K | 171 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | cb_pcimdda.c | s | 14K | 398 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | c6xdigio.c | s | 13K | 437 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_stc.h | s | 45K | 1377 | Mithlesh Thukral | mithlesh@linsyssoft.com | 1253041293 |  | Staging: Comedi: Lindent changes to comdi driver in staging tree  Lindent changes to comdi driver in staging tree. This patch is followed by the checkpatch.pl error fixes. Did not make them part of this patch as the patch size is already huge.  Signed-off-by: Mithlesh Thukral <mithlesh@linsyssoft.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | pcl711.c | s | 14K | 514 | H Hartley Sweeten | hartleys@visionengravers.com | 1337387395 |  | staging: comedi: cleanup all the comedi_driver 'detach' functions  1. Change the return type from int to void  All the detach functions, except for the comedi usb drivers, simply return success (0). Plus, the return code is never checked in the comedi core.  The comedi usb drivers do return error codes but the conditions can never happen.  The first check is:  	if (!dev) 		return -EFAULT;  This checks that the passed comedi_device pointer is valid. The detach function itself is called using this pointer so it MUST always be valid or there is a bug in the core:  	if (dev->driver) 		dev->driver->detach(dev);  And the second check:  	usb = dev->private; 	if (!usb) 		return -EFAULT;  The dev->private pointer is setup in the attach function to point to the probed usb device. This value could be NULL if the attach fails. But, since the comedi core is going to unload the driver anyway and does not check for errors there is no gain by returning one.  After removing these checks from the comedi usb drivers the detach functions required a bit of cleanup.  2. Remove all the printk noise in the detach functions  All of the printk output is really just noise. The user did a rmmod to unload the driver, we really don't need to tell them about it.  Also, some of the messages are output using:  	dev_dbg(dev->hw_dev, ... or 	dev_info(dev->hw_dev, ...  Unfortunately the hw_dev value is only used by drivers that are doing DMA. For most drivers this variable is going to be NULL so the output is not going to work as expected.  3. Refactor a couple static 'free_resource' functions into the detach    functions.  The 'free_resource' function is only being called by the detach and it makes more sense to just absorb the code.  4. Remove a couple unnecessary braces for single statements.  5. Remove unnecessary comments.  Most of the comedi drivers appear to be based on the comedi skel driver and have the comments from that driver included. These comments make sense in the skel driver for reference but they don't need to be in any of the actual drivers.  6. Remove all the extra whitespace.  It's not needed to make the functions any more readable.  7. Remove the now unused 'attached_successfully' variable in the    cb_pcimdda driver.  This variable was only used to conditionally output some driver noise during the detach. Since all the printk's have been removed this variable is no longer necessary.  Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com> Cc: Ian Abbott <abbotti@mev.co.uk> Cc: Mori Hess <fmhess@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | ni_tiocmd.c | s | 13K | 474 | Xenofon Foukas | foukas.xenofon@gmail.com | 1292264754 |  | Staging: comedi: Fix coding style issues in ni_tiocmd.c  This patch fixes the following issues in ni_tiocmd.c:  WARNING: braces {} are not necessary for any arm of this statement WARNING: braces {} are not necessary for single statement blocks WARNING: printk() should include KERN_ facility level WARNING: line over 80 characters __func__ should be used instead of gcc specific __FUNCTION__ ERROR: that open brace { should be on the previous line WARNING: EXPORT_SYMBOL(foo); should immediately follow its function/variable  Signed-off-by: Xenofon Foukas <foukas.xenofon@gmail.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
