f | connector.c | s | 6.8K | 240 | K. Y. Srinivasan | kys@microsoft.com | 1307473320 |  | Connector: Correctly set the error code in case of success when dispatching receive callbacks  The recent changes to the connector code introduced this bug where even when a callback was invoked, we would return an error resulting in double freeing of the skb. This patch fixes this bug.  Signed-off-by: K. Y. Srinivasan <kys@microsoft.com> Acked-by: Evgeniy Polyakov <zbr@ioremap.net> Cc: stable <stable@kernel.org>  [.39] Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | cn_proc.c | s | 9.5K | 294 | Vladimir Zapolskiy | vzapolskiy@gmail.com | 1317231710 |  | connector: add comm change event report to proc connector  Add an event to monitor comm value changes of tasks.  Such an event becomes vital, if someone desires to control threads of a process in different manner.  A natural characteristic of threads is its comm value, and helpfully application developers have an opportunity to change it in runtime. Reporting about such events via proc connector allows to fine-grain monitoring and control potentials, for instance a process control daemon listening to proc connector and following comm value policies can place specific threads to assigned cgroup partitions.  It might be possible to achieve a pale partial one-shot likeness without this update, if an application changes comm value of a thread generator task beforehand, then a new thread is cloned, and after that proc connector listener gets the fork event and reads new thread's comm value from procfs stat file, but this change visibly simplifies and extends the matter.  Signed-off-by: Vladimir Zapolskiy <vzapolskiy@gmail.com> Acked-by: Evgeniy Polyakov <zbr@ioremap.net> Cc: David Miller <davem@davemloft.net> Signed-off-by: Andrew Morton <akpm@google.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 603B |  | Pavel Machek | pavel@ucw.cz | 1244822510 |  | trivial: Kconfig: .ko is normally not included in module names  .ko is normally not included in Kconfig help, make it consistent.  Signed-off-by: Pavel Machek <pavel@ucw.cz> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | Makefile | g | 107B |  | Matt Helsley | matthltc@us.ibm.com | 1131378815 |  | [PATCH] Process Events Connector  This patch adds a connector that reports fork, exec, id change, and exit events for all processes to userspace.  It replaces the fork_advisor patch that ELSA is currently using.  Applications that may find these events useful include accounting/auditing (e.g.  ELSA), system activity monitoring (e.g.  top), security, and resource management (e.g.  CKRM).  Signed-off-by: Matt Helsley <matthltc@us.ibm.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | cn_queue.c | s | 3.8K | 132 | Patrick McHardy | kaber@trash.net | 1301530473 |  | connector: convert to synchronous netlink message processing  Commits 01a16b21 (netlink: kill eff_cap from struct netlink_skb_parms) and c53fa1ed (netlink: kill loginuid/sessionid/sid members from struct netlink_skb_parms) removed some members from struct netlink_skb_parms that depend on the current context, all netlink users are now required to do synchronous message processing.  connector however queues received messages and processes them in a work queue, which is not valid anymore. This patch converts connector to do synchronous message processing by invoking the registered callback handler directly from the netlink receive function.  In order to avoid invoking the callback with connector locks held, a reference count is added to struct cn_callback_entry, the reference is taken when finding a matching callback entry on the device's queue_list and released after the callback handler has been invoked.  Signed-off-by: Patrick McHardy <kaber@trash.net> Acked-by: Evgeniy Polyakov <zbr@ioremap.net> Signed-off-by: David S. Miller <davem@davemloft.net>
