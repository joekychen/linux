f | lc-rc.c | s | 10K | 410 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | driver.c | s | 3.8K | 128 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | rsv.c | s | 26K | 865 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | Makefile | g | 448B |  | David Vrabel | david.vrabel@csr.com | 1288011825 |  | uwb: Remove the WLP subsystem and drivers  The only Wimedia LLC Protocol (WLP) hardware was an Intel i1480 chip with a beta release of firmware that was never commercially available as a product.  This hardware and firmware is no longer available as Intel sold their UWB/WLP IP.  I also see little prospect of other WLP capable hardware ever being available.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
d | i1480 |  | 3 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1326057682 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (53 commits)   Kconfig: acpi: Fix typo in comment.   misc latin1 to utf8 conversions   devres: Fix a typo in devm_kfree comment   btrfs: free-space-cache.c: remove extra semicolon.   fat: Spelling s/obsolate/obsolete/g   SCSI, pmcraid: Fix spelling error in a pmcraid_err() call   tools/power turbostat: update fields in manpage   mac80211: drop spelling fix   types.h: fix comment spelling for 'architectures'   typo fixes: aera -> area, exntension -> extension   devices.txt: Fix typo of 'VMware'.   sis900: Fix enum typo 'sis900_rx_bufer_status'   decompress_bunzip2: remove invalid vi modeline   treewide: Fix comment and string typo 'bufer'   hyper-v: Update MAINTAINERS   treewide: Fix typos in various parts of the kernel, and fix some comments.   clockevents: drop unknown Kconfig symbol GENERIC_CLOCKEVENTS_MIGR   gpio: Kconfig: drop unknown symbol 'CS5535_GPIO'   leds: Kconfig: Fix typo 'D2NET_V2'   sound: Kconfig: drop unknown symbol ARCH_CLPS7500   ...  Fix up trivial conflicts in arch/powerpc/platforms/40x/Kconfig (some new kconfig additions, close to removed commented-out old ones)
f | uwb-debug.c | s | 9.4K | 337 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | pal.c | s | 2.3K | 86 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | umc-drv.c | s | 845B | 29 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | neh.c | s | 17K | 563 | Oliver Neukum | oliver@neukum.org | 1334780151 |  | uwb: fix use of del_timer_sync() in interrupt  del_timer_sync() cannot be used in interrupt. Replace it with del_timer() and a flag  Signed-off-by: Oliver Neukum <oneukum@suse.de> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | reset.c | s | 10K | 353 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | drp-ie.c | s | 9.5K | 279 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | ie-rcv.c | s | 1.6K | 49 | Stefano Panella | stefano.panella@csr.com | 1225814009 |  | uwb: infrastructure for handling Relinquish Request IEs  The structures and event handler needed to handle Relinish Request IEs received from neighbors.  Nothing is done with these IEs yet.  Signed-off-by: Stefano Panella <stefano.panella@csr.com> Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | hwa-rc.c | s | 27K | 849 | Oliver Neukum | oliver@neukum.org | 1334780151 |  | uwb: fix error handling  Fatal errors such as a device disconnect must not trigger error handling. The error returns must be checked.  Signed-off-by: Oliver Neukum <oneukum@suse.de> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | whci.c | s | 6.5K | 237 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add module.h to the real uwb modular users.  Lots of files were getting an implicit include of module.h for years now.  But that will be fixed shortly.  So get the real users to call out the include explicitly.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | scan.c | s | 4.1K | 125 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103938 |  | drivers/uwb: fix implicit use of stat.h  The module.h (via device.h) was pulling handfuls of implicitly present header files -- including basic stuff like stat.h.  Fix up these stat.h users in advance so they don't break on the cleanup.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | uwbd.c | s | 10K | 334 | Jesper Juhl | jj@chaosbits.net | 1311249821 |  | uwb: Fix misspelling of neighbourhood in comment  In drivers/uwb/uwbd.c, the word 'neighbourhood' is misspelled as 'neighboorhood' in a comment. Fix that.  Signed-off-by: Jesper Juhl <jj@chaosbits.net> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | est.c | s | 13K | 442 | Thomas Meyer | thomas@m3y3r.de | 1323476300 |  | uwb: Use kcalloc instead of kzalloc to allocate array  The advantage of kcalloc is, that will prevent integer overflows which could result from the multiplication of number of elements and size and it is also a bit nicer to read.  The semantic patch that makes this change is available in https://lkml.org/lkml/2011/11/25/107  Signed-off-by: Thomas Meyer <thomas@m3y3r.de> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | whc-rc.c | s | 13K | 422 | Joe Perches | joe@perches.com | 1307710536 |  | treewide: Convert uses of struct resource to resource_size(ptr)  Several fixes as well where the +1 was missing.  Done via coccinelle scripts like:  @@ struct resource *ptr; @@  - ptr->end - ptr->start + 1 + resource_size(ptr)  and some grep and typing.  Mostly uncompiled, no cross-compilers.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | drp-avail.c | s | 8.6K | 265 | Stefano Panella | stefano.panella@csr.com | 1229086806 |  | uwb: improved MAS allocator and reservation conflict handling  Greatly enhance the MAS allocator:   - Handle row and column reservations.   - Permit all the available MAS to be allocated.   - Follows the WiMedia rules on MAS selection.  Take appropriate action when reservation conflicts are detected.   - Correctly identify which reservation wins the conflict.   - Protect alien BP reservations.   - If an owned reservation loses, resize/move it.   - Follow the backoff procedure before requesting additional MAS.  When reservations are terminated, move the remaining reservations (if necessary) so they keep following the MAS allocation rules.  Signed-off-by: Stefano Panella <stefano.panella@csr.com> Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | radio.c | s | 4.6K | 173 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | umc-bus.c | s | 5.5K | 201 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add module.h to the real uwb modular users.  Lots of files were getting an implicit include of module.h for years now.  But that will be fixed shortly.  So get the real users to call out the include explicitly.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | uwb-internal.h | s | 11K | 323 | Jesper Juhl | jj@chaosbits.net | 1316091428 |  | Remove unneeded version.h include from drivers/uwb/  It was pointed out by 'make versioncheck' that a include of linux/version.h is not needed in drivers/uwb/uwb-internal.h . This patch removes it.  Signed-off-by: Jesper Juhl <jj@chaosbits.net> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | address.c | s | 10K | 338 | Andy Shevchenko | andy.shevchenko@gmail.com | 1287768100 |  | uwb: use '%pM' format to print MAC address  Signed-off-by: Andy Shevchenko <andy.shevchenko@gmail.com> Cc: David Vrabel <david.vrabel@csr.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | drp.c | s | 24K | 716 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | lc-dev.c | s | 12K | 423 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | ie.c | s | 9.6K | 328 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | beacon.c | s | 16K | 544 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | Kconfig | g | 2.5K |  | David Vrabel | david.vrabel@csr.com | 1288011825 |  | uwb: Remove the WLP subsystem and drivers  The only Wimedia LLC Protocol (WLP) hardware was an Intel i1480 chip with a beta release of firmware that was never commercially available as a product.  This hardware and firmware is no longer available as Intel sold their UWB/WLP IP.  I also see little prospect of other WLP capable hardware ever being available.  Signed-off-by: David Vrabel <david.vrabel@csr.com>
f | umc-dev.c | s | 2.2K | 84 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103939 |  | uwb: Add export.h for EXPORT_SYMBOL/THIS_MODULE as required  These macros are no longer in module.h and module.h is no longer present everywhere.  Call out export.h for the real users who are making use of these macros, or else we'll get things like:   CC      drivers/uwb/umc-drv.o drivers/uwb/umc-dev.c:42: warning: data definition has no type or storage class drivers/uwb/umc-dev.c:42: warning: type defaults to ‘int’ in declaration of ‘EXPORT_SYMBOL_GPL’ drivers/uwb/umc-dev.c:42: warning: parameter names (without types) in function declaration  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | allocator.c | s | 9.9K | 339 | Akinobu Mita | akinobu.mita@gmail.com | 1332547114 |  | uwb: use for_each_clear_bit()  Use for_each_clear_bit() to iterate over all the cleared bit in a memory region.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Cc: Stefano Panella <stefano.panella@csr.com> Cc: David Vrabel <david.vrabel@csr.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
