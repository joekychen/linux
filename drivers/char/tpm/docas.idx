f | tpm_tis.c | s | 22K | 765 | Linus Torvalds | torvalds@linux-foundation.org | 1332361504 |  | Merge branch 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security  Pull security subsystem updates for 3.4 from James Morris:  "The main addition here is the new Yama security module from Kees Cook,   which was discussed at the Linux Security Summit last year.  Its   purpose is to collect miscellaneous DAC security enhancements in one   place.  This also marks a departure in policy for LSM modules, which   were previously limited to being standalone access control systems.   Chromium OS is using Yama, and I believe there are plans for Ubuntu,   at least.    This patchset also includes maintenance updates for AppArmor, TOMOYO   and others."  Fix trivial conflict in <net/sock.h> due to the jumo_label->static_key rename.  * 'next' of git://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security: (38 commits)   AppArmor: Fix location of const qualifier on generated string tables   TOMOYO: Return error if fails to delete a domain   AppArmor: add const qualifiers to string arrays   AppArmor: Add ability to load extended policy   TOMOYO: Return appropriate value to poll().   AppArmor: Move path failure information into aa_get_name and rename   AppArmor: Update dfa matching routines.   AppArmor: Minor cleanup of d_namespace_path to consolidate error handling   AppArmor: Retrieve the dentry_path for error reporting when path lookup fails   AppArmor: Add const qualifiers to generated string tables   AppArmor: Fix oops in policy unpack auditing   AppArmor: Fix error returned when a path lookup is disconnected   KEYS: testing wrong bit for KEY_FLAG_REVOKED   TOMOYO: Fix mount flags checking order.   security: fix ima kconfig warning   AppArmor: Fix the error case for chroot relative path name lookup   AppArmor: fix mapping of META_READ to audit and quiet flags   AppArmor: Fix underflow in xindex calculation   AppArmor: Fix dropping of allowed operations that are force audited   AppArmor: Add mising end of structure test to caps unpacking   ...
f | tpm_infineon.c | s | 17K | 591 | Justin P. Mattock | justinmattock@gmail.com | 1287392594 |  | Update broken web addresses in the kernel.  The patch below updates broken web addresses in the kernel  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Cc: Maciej W. Rozycki <macro@linux-mips.org> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Finn Thain <fthain@telegraphics.com.au> Cc: Randy Dunlap <rdunlap@xenotime.net> Cc: Matt Turner <mattst88@gmail.com> Cc: Dimitry Torokhov <dmitry.torokhov@gmail.com> Cc: Mike Frysinger <vapier.adi@gmail.com> Acked-by: Ben Pfaff <blp@cs.stanford.edu> Acked-by: Hans J. Koch <hjk@linutronix.de> Reviewed-by: Finn Thain <fthain@telegraphics.com.au> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | tpm_atmel.c | s | 5.8K | 214 | Ming Lei | tom.leiming@gmail.com | 1237937905 |  | platform driver: fix incorrect use of 'platform_bus_type' with 'struct device_driver'  This patch fixes the bug reported in 	http://bugzilla.kernel.org/show_bug.cgi?id=11681.  "Lots of device drivers register a 'struct device_driver' with the '.bus' member set to '&platform_bus_type'. This is wrong, since the platform_bus functions expect the 'struct device_driver' to be wrapped up in a 'struct platform_driver' which provides some additional callbacks (like suspend_late, resume_early). The effect may be that platform_suspend_late() uses bogus data outside the device_driver struct as a pointer pointer to the device driver's suspend_late() function or other hard to reproduce failures."(Lothar Wassmann)  Signed-off-by: Ming Lei <tom.leiming@gmail.com> Acked-by: Henrique de Moraes Holschuh <hmh@hmh.eng.br> Acked-by: David Brownell <dbrownell@users.sourceforge.net> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | Makefile | g | 296B |  | Leendert van Doorn | leendert@watson.ibm.com | 1145722794 |  | [PATCH] tpm: driver for next generation TPM chips  The driver for the next generation of TPM chips version 1.2 including support for interrupts.  The Trusted Computing Group has written the TPM Interface Specification (TIS) which defines a common interface for all manufacturer's 1.2 TPM's thus the name tpm_tis.  Signed-off-by: Leendert van Doorn <leendert@watson.ibm.com> Signed-off-by: Kylene Hall <kjhall@us.ibm.com> Cc: Greg KH <greg@kroah.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | tpm.h | s | 7.8K | 276 | Stefan Berger | stefanb@linux.vnet.ibm.com | 1329244988 |  | tpm_tis: Only probe iTPMs  Detect iTPMs through the vendor ID on the hardware interface and only probe the device if the manufacturer is found to be Intel. This obsoletes a previously added delay necessary for some TPMs but not iTPMs.  Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com> Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
f | tpm_nsc.c | s | 10K | 349 | Axel Lin | axel.lin@gmail.com | 1316735177 |  | TPM: tpm_nsc: Fix a double free of pdev in cleanup_nsc  platform_device_unregister() will release all resources and remove it from the subsystem, then drop reference count by calling platform_device_put().  We should not call kfree(pdev) after platform_device_unregister(pdev).  Signed-off-by: Axel Lin <axel.lin@gmail.com> Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com> Signed-off-by: James Morris <jmorris@namei.org>
f | tpm_bios.c | s | 11K | 475 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | tpm_atmel.h | s | 3.2K | 107 | Kent Yoder | shpedoikal@gmail.com | 1187837564 |  | tpmdd maintainers  Fix up the maintainers info in the tpm drivers.  Kylene will be out for some time, so copying the sourceforge list is the best way to get some attention.  Cc: Marcel Selhorst <tpm@selhorst.net> Cc: Kylene Jo Hall <kjhall@us.ibm.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | tpm.c | s | 33K | 1255 | Tim Gardner | tim.gardner@canonical.com | 1329245018 |  | TPM: Zero buffer whole after copying to userspace  Commit 3321c07ae5068568cd61ac9f4ba749006a7185c9 correctly clears the TPM buffer if the user specified read length is >= the TPM buffer length. However, if the user specified read length is < the TPM buffer length, then part of the TPM buffer is left uncleared.  Reported-by: Seth Forshee <seth.forshee@canonical.com> Cc: Debora Velarde <debora@linux.vnet.ibm.com> Cc: Rajiv Andrade <srajiv@linux.vnet.ibm.com> Cc: Marcel Selhorst <m.selhorst@sirrix.com> Cc: tpmdd-devel@lists.sourceforge.net Cc: stable@vger.kernel.org Signed-off-by: Tim Gardner <tim.gardner@canonical.com> Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com>
f | Kconfig | g | 2.3K |  | Fabio Estevam | festevam@gmail.com | 1327026609 |  | ima: fix Kconfig dependencies  Fix the following build warning: warning: (IMA) selects TCG_TPM which has unmet direct dependencies (HAS_IOMEM && EXPERIMENTAL)  Suggested-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com> Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com> Signed-off-by: Rajiv Andrade <srajiv@linux.vnet.ibm.com> Cc: <stable@vger.kernel.org> Signed-off-by: Mimi Zohar <zohar@us.ibm.com>
