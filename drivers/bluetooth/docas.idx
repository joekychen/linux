f | ath3k.c | s | 11K | 376 | Giancarlo Formicuccia | giancarlo.formicuccia@gmail.com | 1339469673 |  | Bluetooth: add support for atheros 0930:0219  Add support for the AR3012 chip found on the Toshiba Sallite M840-1000-XQ.  usb-devices shows:  T:  Bus=01 Lev=02 Prnt=02 Port=02 Cnt=01 Dev#=  5 Spd=12  MxCh= 0 D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1 P:  Vendor=0930 ProdID=0219 Rev=00.02 S:  Manufacturer=Atheros Communications S:  Product=Bluetooth USB Host Controller S:  SerialNumber=Alaska Day 2006 C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb  Signed-off-by: Giancarlo Formicuccia <giancarlo.formicuccia@gmail.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | bt3c_cs.c | s | 15K | 561 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | hci_ll.c | s | 11K | 432 | David Herrmann | dh.herrmann@googlemail.com | 1329145282 |  | Bluetooth: hci-uart-ll: Use GFP_ATOMIC in open()  The uart_proto open() callback is not called in atomic context so we can safely sleep here. The caller hci_uart_set_proto() in hci_ldisc.c is an ioctl() handler and therefore can sleep.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | Makefile | g | 977B |  | Pavan Savoy | pavan_savoy@ti.com | 1298500750 |  | Bluetooth: btwilink driver  This is the bluetooth protocol driver for the TI WiLink7 chipsets. Texas Instrument's WiLink chipsets combine wireless technologies like BT, FM, GPS and WLAN onto a single chip.  This Bluetooth driver works on top of the TI_ST shared transport line discipline driver which also allows other drivers like FM V4L2 and GPS character driver to make use of the same UART interface.  Kconfig and Makefile modifications to enable the Bluetooth driver for Texas Instrument's WiLink 7 chipset.  Signed-off-by: Pavan Savoy <pavan_savoy@ti.com> Acked-by: Gustavo F. Padovan <padovan@profusion.mobi> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | btusb.c | s | 29K | 962 | Giancarlo Formicuccia | giancarlo.formicuccia@gmail.com | 1339469673 |  | Bluetooth: add support for atheros 0930:0219  Add support for the AR3012 chip found on the Toshiba Sallite M840-1000-XQ.  usb-devices shows:  T:  Bus=01 Lev=02 Prnt=02 Port=02 Cnt=01 Dev#=  5 Spd=12  MxCh= 0 D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1 P:  Vendor=0930 ProdID=0219 Rev=00.02 S:  Manufacturer=Atheros Communications S:  Product=Bluetooth USB Host Controller S:  SerialNumber=Alaska Day 2006 C:  #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA I:  If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb I:  If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb  Signed-off-by: Giancarlo Formicuccia <giancarlo.formicuccia@gmail.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | btmrvl_sdio.c | s | 25K | 967 | Andrei Emeltchenko | andrei.emeltchenko@intel.com | 1340075951 |  | Bluetooth: btmrvl: Do not send vendor events to bluetooth stack  Vendor-specific events shall be processed in driver and not sent to bluetooth stack where they screw up HCI command countings.  Signed-off-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | bluecard_cs.c | s | 20K | 693 | David Herrmann | dh.herrmann@googlemail.com | 1329145297 |  | Bluetooth: Remove hci_dev->driver_data  The linux device model provides dev_set/get_drvdata so we can use this to save private driver data. This also removes several unnecessary casts.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | hci_ath.c | s | 5.1K | 184 | David Herrmann | dh.herrmann@googlemail.com | 1329145282 |  | Bluetooth: hci-uart-ath: Use GFP_ATOMIC in open()  The uart_proto open() callback is not called in atomic context so we can safely sleep here. The caller hci_uart_set_proto() in hci_ldisc.c is an ioctl-handler and therefore can sleep.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | dtl1_cs.c | s | 12K | 471 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | btsdio.c | s | 8.3K | 295 | David Herrmann | dh.herrmann@googlemail.com | 1329145297 |  | Bluetooth: Remove hci_dev->driver_data  The linux device model provides dev_set/get_drvdata so we can use this to save private driver data. This also removes several unnecessary casts.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | bpa10x.c | s | 10K | 386 | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
f | hci_h4.c | s | 3.9K | 154 | David Herrmann | dh.herrmann@googlemail.com | 1329145282 |  | Bluetooth: hci-uart-h4: Use GFP_ATOMIC in open()  The uart_proto open() callback is not called in atomic context so we can safely sleep here. The caller hci_uart_set_proto() in hci_ldisc.c is an ioctl-handler and therefore can sleep.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | btuart_cs.c | s | 14K | 510 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | hci_uart.h | s | 2.7K | 89 | Marcel Holtmann | marcel@holtmann.org | 1330107334 |  | Bluetooth: Add support for creating HCI UART based AMP controllers  In reality this might never be used for real hardware, but it is a nice feature for emulating AMP controllers within a virtual machine.  Signed-off-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | btmrvl_debugfs.c | s | 11K | 349 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bcm203x.c | s | 6.8K | 223 | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
f | btmrvl_drv.h | s | 3.9K | 122 | Andrei Emeltchenko | andrei.emeltchenko@intel.com | 1340075951 |  | Bluetooth: btmrvl: Do not send vendor events to bluetooth stack  Vendor-specific events shall be processed in driver and not sent to bluetooth stack where they screw up HCI command countings.  Signed-off-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | hci_ldisc.c | s | 12K | 468 | David Herrmann | dh.herrmann@googlemail.com | 1336534890 |  | Bluetooth: Remove redundant hdev->parent field  We initialize the "struct device" in hci_alloc_dev() for a long time now so we can access hdev->dev.parent directly. Hence, we can drop the temporary field hdev->parent which is used in no other place than hci_add_sysfs().  SET_HCIDEV_DEV() is never called after registering a device by the drivers so we do not overwrite internal device-state. Furthermore, hdev->dev is initialized to 0 by kzalloc() inside hci_alloc_dev() so the default behavior with dev.parent = NULL is kept.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | bfusb.c | s | 16K | 564 | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
f | hci_vhci.c | s | 6.2K | 236 | David Herrmann | dh.herrmann@googlemail.com | 1336534896 |  | Bluetooth: vhci: Ignore return code of nonseekable_open()  The comment in ./fs/open.c clearly states that nonseekable_open() will never fail. Therefore, we can safely ignore the return code. This is the recommended way to deal with nonseekable_open(). Our current code looks like nonseekable_open() is checked for the return code. However, if we check the return code, we must also kfree() our private data if the open fails. To avoid this overhead and to avoid confusion, we simply drop the return code and return 0.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
f | btmrvl_main.c | s | 15K | 520 | Andrei Emeltchenko | andrei.emeltchenko@intel.com | 1340075951 |  | Bluetooth: btmrvl: Do not send vendor events to bluetooth stack  Vendor-specific events shall be processed in driver and not sent to bluetooth stack where they screw up HCI command countings.  Signed-off-by: Andrei Emeltchenko <andrei.emeltchenko@intel.com> Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
f | hci_bcsp.c | s | 18K | 629 | Johan Hedberg | johan.hedberg@intel.com | 1329395134 |  | Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next.git  Conflicts: 	include/net/bluetooth/l2cap.h 	net/bluetooth/hci_conn.c 	net/bluetooth/l2cap_core.c
f | Kconfig | g | 7.1K |  | Bing Zhao | bzhao@marvell.com | 1321890751 |  | Bluetooth: btmrvl: support Marvell Bluetooth device SD8797  The SD8797 firmware image is shared with mwifiex driver. Whoever gets loaded first will be responsible for firmware downloading.  Signed-off-by: Bing Zhao <bzhao@marvell.com> Signed-off-by: Frank Huang <frankh@marvell.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>
f | btmrvl_sdio.h | s | 3.0K | 90 | Kevin Gan | ganhy@marvell.com | 1302708005 |  | Bluetooth: btmrvl: support Marvell Bluetooth device SD8787  The SD8787 firmware image is shared with mwifiex driver. Whoever gets loaded first will be responsible for firmware downloading.  Signed-off-by: Kevin Gan <ganhy@marvell.com> Signed-off-by: Tristan Xu <xurf@marvell.com> Signed-off-by: Bing Zhao <bzhao@marvell.com> Signed-off-by: Gustavo F. Padovan <padovan@profusion.mobi>
f | btwilink.c | s | 9.3K | 321 | David Herrmann | dh.herrmann@googlemail.com | 1329145297 |  | Bluetooth: Remove hci_dev->driver_data  The linux device model provides dev_set/get_drvdata so we can use this to save private driver data. This also removes several unnecessary casts.  Signed-off-by: David Herrmann <dh.herrmann@googlemail.com> Acked-by: Marcel Holtmann <marcel@holtmann.org> Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
