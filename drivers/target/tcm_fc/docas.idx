f | tfc_conf.c | s | 15K | 557 | Roland Dreier | roland@purestorage.com | 1334450431 |  | tcm_fc: Remove use of transport_do_task_sg_chain()  With the modern target core, se_cmd->t_data_sg already points to a sglist that covers the whole command.  So task_sg chaining is needless overhead and obfuscation -- instead of splicing the split up task sglists back into one list, we can just use the original list directly.  Signed-off-by: Roland Dreier <roland@purestorage.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Acked-by: Kiran Patil <Kiran.patil@intel.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | tfc_sess.c | s | 11K | 435 | Linus Torvalds | torvalds@linux-foundation.org | 1332445084 |  | Merge branch 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending  Pull SCSI target updates from Nicholas Bellinger:  "This contains the usual set of updates and bugfixes to target-core +   existing fabric module code, along with a handful of the patches   destined for v3.3 stable.    It also contains the necessary target-core infrastructure pieces   required to run using tcm_qla2xxx.ko WWPNs with the new Qlogic Fibre   Channel fabric module currently queued in target-pending/for-next-merge,   and coming for round 2.    The highlights for this series include:     - Add target_submit_tmr() helper function for fabric task management      (andy)    - Convert tcm_fc to use target_submit_tmr() (andy)    - Replace target core various cmd flags with a transport state (hch)    - Convert loopback to use workqueue submission (hch)    - Convert target core to use array_zalloc for tpg_lun_list (joern)    - Convert target core to use array_zalloc for device_list (joern)    - Add target core support for TMR_ABORT_TASK (nab)    - Add target core se_sess->sess_kref + get/put helpers (nab)    - Add target core se_node_acl->acl_kref for ->acl_free_comp usage      (nab)    - Convert iscsi-target to use target_put_session + sess_kref (nab)    - Fix tcm_fc fc_exch memory leak in ft_send_resp_status (nab)    - Fix ib_srpt srpt_handle_cmd send_ioctx->ioctx_kref leak on      exception (nab)    - Fix target core up handling of short INQUIRY buffers (roland)    - Untangle target-core front-end and back-end meanings of max_sectors      attribute (roland)    - Set loopback residual field for SCSI commands (roland)    - Fix target-core 16-bit target ports for SET TARGET PORT GROUPS      emulation (roland)    Thanks again to Andy, Christoph, Joern, Roland, and everyone who has   contributed this round!"  * 'for-next' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending: (64 commits)   ib_srpt: Fix srpt_handle_cmd send_ioctx->ioctx_kref leak on exception   loopback: Fix transport_generic_allocate_tasks error handling   iscsi-target: remove improper externs   iscsi-target: Remove unused variables in iscsi_target_parameters.c   target: remove obvious warnings   target: Use array_zalloc for device_list   target: Use array_zalloc for tpg_lun_list   target: Fix sense code for unsupported SERVICE ACTION IN   target: Remove hack to make READ CAPACITY(10) lie if thin provisioning is enabled   target: Bump core version to v4.1.0-rc2-ml + fabric versions   tcm_fc: Fix fc_exch memory leak in ft_send_resp_status   target: Drop unused legacy target_core_fabric_ops API callers   iscsi-target: Convert to use target_put_session + sess_kref   target: Convert se_node_acl->acl_group removal to use ->acl_kref   target: Add se_node_acl->acl_kref for ->acl_free_comp usage   target: Add se_node_acl->acl_free_comp for NodeACL release path   target: Add se_sess->sess_kref + get/put helpers   target: Convert session_lock to irqsave   target: Fix typo in drivers/target   iscsi-target: Fix dynamic -> explict NodeACL pointer reference   ...
f | Makefile | g | 103B |  | Nicholas Bellinger | nab@linux-iscsi.org | 1311327467 |  | tcm_fc: Makefile cleanups  This patch removes the unnecessary EXTRA_CFLAGS includes, and drops the unused -DTCM_FC_DEBUG define.  Reported-by: Christoph Hellwig <hch@infradead.org> Signed-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org>
f | Kconfig | g | 143B |  | Kiran Patil | kiran.patil@intel.com | 1305615166 |  | [SCSI] tcm_fc: Adding FC_FC4 provider (tcm_fc) for FCoE target (TCM - target core) support  This is a comprehensive patch for FC-FC4 provider. tcm_fc is a FC-FC4 provider which glues target core (TCM) with Fiber channel library (libfc). tcm_fc uses existing FC4 provider hooks from Fiber channel library. This Fiber channel library is used by FCoE (transport - FC over Ethernet) protocol driver as well.  Combination of modules such as Fiber channel library, tcm_fc, TCM target core, and FCoE protocol driver enables functional FCoE target.  This patch includes initial commit for tcm_fc plus additional enhancement, bug fixes.  This tcm_fc module essentially contains 3 entry points such as "prli", "prlo", "recv".  When process login request (ELS_PRLI) request is received, Fiber channel library (libfc) module calls passive providers (FC-FC4, tcm_fc) (if any registered) "prli" function. Likewise when LOGO request is received, "prlo" function of passive provider is invoked by libfc.  For all other request (e.g. any read/write, task management, LUN inquiry commands), "recv" function of passiver provider is invoked by libfc. Those passive providers "prli, prlo, recv" functions interact with TCM target core for requested operation.  This module was primarily developed by "Joe Eykholt" and there were significant contributions from the people listed under signed-off.  Signed-off-by: Joe Eykholt <jeykholt@cisco.com> Signed-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org> Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Yi Zou <yi.zou@intel.com> Signed-off-by: Kiran Patil <kiran.patil@intel.com>  Acked-by: Robert Love <robert.w.love@intel.com> Signed-off-by: James Bottomley <jbottomley@parallels.com> Signed-off-by: James Bottomley <James.Bottomley@suse.de>
f | tfc_cmd.c | s | 13K | 489 | Roland Dreier | roland@purestorage.com | 1334450431 |  | tcm_fc: Remove use of transport_do_task_sg_chain()  With the modern target core, se_cmd->t_data_sg already points to a sglist that covers the whole command.  So task_sg chaining is needless overhead and obfuscation -- instead of splicing the split up task sglists back into one list, we can just use the original list directly.  Signed-off-by: Roland Dreier <roland@purestorage.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Acked-by: Kiran Patil <Kiran.patil@intel.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | tcm_fc.h | s | 4.9K | 160 | Mark Rustad | mark.d.rustad@intel.com | 1333763803 |  | tcm_fc: Add abort flag for gracefully handling exchange timeout  Add abort flag and use it to terminate processing when an exchange is timed out or is reset. The abort flag is used in place of the transport_generic_free_cmd function call in the reset and timeout cases, because calling that function in that context would free memory that was in use. The aborted flag allows the lifetime to be managed in a more normal way, while truncating the processing.  This change eliminates a source of memory corruption which manifested in a variety of ugly ways.  (nab: Drop unused struct fc_exch *ep in ft_recv_seq)  Signed-off-by: Mark Rustad <mark.d.rustad@intel.com> Acked-by: Kiran Patil <Kiran.patil@intel.com> Cc: <stable@vger.kernel.org> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
f | tfc_io.c | s | 9.0K | 323 | Roland Dreier | roland@purestorage.com | 1334450431 |  | tcm_fc: Remove use of transport_do_task_sg_chain()  With the modern target core, se_cmd->t_data_sg already points to a sglist that covers the whole command.  So task_sg chaining is needless overhead and obfuscation -- instead of splicing the split up task sglists back into one list, we can just use the original list directly.  Signed-off-by: Roland Dreier <roland@purestorage.com> Reviewed-by: Christoph Hellwig <hch@lst.de> Acked-by: Kiran Patil <Kiran.patil@intel.com> Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
