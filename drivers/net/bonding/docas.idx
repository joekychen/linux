f | bond_3ad.c | s | 80K | 2225 | Jiri Bohac | jbohac@suse.cz | 1336707001 |  | bonding: don't increase rx_dropped after processing LACPDUs  Since commit 3aba891d, bonding processes LACP frames (802.3ad mode) with bond_handle_frame(). Currently a copy of the skb is made and the original is left to be processed by other rx_handlers and the rest of the network stack by returning RX_HANDLER_ANOTHER.  As there is no protocol handler for PKT_TYPE_LACPDU, the frame is dropped and dev->rx_dropped increased.  Fix this by making bond_handle_frame() return RX_HANDLER_CONSUMED if bonding has processed the LACP frame.  Signed-off-by: Jiri Bohac <jbohac@suse.cz> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_alb.h | s | 5.8K | 149 | Jiri Pirko | jpirko@redhat.com | 1303758030 |  | bonding: move processing of recv handlers into handle_frame()  Since now when bonding uses rx_handler, all traffic going into bond device goes thru bond_handle_frame. So there's no need to go back into bonding code later via ptype handlers. This patch converts original ptype handlers into "bonding receive probes". These functions are called from bond_handle_frame and they are registered per-mode.  Note that vlan packets are also handled because they are always untagged thanks to vlan_untag()  Note that this also allows arpmon for eth-bond-bridge-vlan topology.  Signed-off-by: Jiri Pirko <jpirko@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_debugfs.c | s | 2.9K | 113 | Taku Izumi | izumi.taku@jp.fujitsu.com | 1292534165 |  | bonding: add the debugfs interface to see RLB hash table  This patch provices the debugfs interface to see RLB hash table like the following:  # cat /sys/kernel/debug/bonding/bond0/rlb_hash_table SourceIP        DestinationIP   Destination MAC   DEV 10.124.196.205  10.124.196.205  ff:ff:ff:ff:ff:ff eth4 10.124.196.205  10.124.196.81   00:19:99:XX:XX:XX eth3 10.124.196.205  10.124.196.1    00:21:d8:XX:XX:XX eth0  This is helpful to check if the receive load balancing works as expected.  Signed-off-by: Taku Izumi <izumi.taku@jp.fujitsu.com> Signed-off-by: Jay Vosburgh <fubar@us.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 230B |  | Ben Hutchings | bhutchings@solarflare.com | 1303108563 |  | bonding, ipv4, ipv6, vlan: Handle NETDEV_BONDING_FAILOVER like NETDEV_NOTIFY_PEERS  It is undesirable for the bonding driver to be poking into higher level protocols, and notifiers provide a way to avoid that.  This does mean removing the ability to configure reptitition of gratuitous ARPs and unsolicited NAs.  Signed-off-by: Ben Hutchings <bhutchings@solarflare.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_main.c | s | 129K | 4153 | Eric Dumazet | edumazet@google.com | 1339540161 |  | bonding: Fix corrupted queue_mapping  In the transmit path of the bonding driver, skb->cb is used to stash the skb->queue_mapping so that the bonding device can set its own queue mapping.  This value becomes corrupted since the skb->cb is also used in __dev_xmit_skb.  When transmitting through bonding driver, bond_select_queue is called from dev_queue_xmit.  In bond_select_queue the original skb->queue_mapping is copied into skb->cb (via bond_queue_mapping) and skb->queue_mapping is overwritten with the bond driver queue.  Subsequently in dev_queue_xmit, __dev_xmit_skb is called which writes the packet length into skb->cb, thereby overwriting the stashed queue mappping.  In bond_dev_queue_xmit (called from hard_start_xmit), the queue mapping for the skb is set to the stashed value which is now the skb length and hence is an invalid queue for the slave device.  If we want to save skb->queue_mapping into skb->cb[], best place is to add a field in struct qdisc_skb_cb, to make sure it wont conflict with other layers (eg : Qdiscc, Infiniband...)  This patchs also makes sure (struct qdisc_skb_cb)->data is aligned on 8 bytes :  netem qdisc for example assumes it can store an u64 in it, without misalignment penalty.  Note : we only have 20 bytes left in (struct qdisc_skb_cb)->data[]. The largest user is CHOKe and it fills it.  Based on a previous patch from Tom Herbert.  Signed-off-by: Eric Dumazet <edumazet@google.com> Reported-by: Tom Herbert <therbert@google.com> Cc: John Fastabend <john.r.fastabend@intel.com> Cc: Roland Dreier <roland@kernel.org> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_sysfs.c | s | 44K | 1508 | Weiping Pan | wpan@redhat.com | 1339539791 |  | bonding:record primary when modify it via sysfs  If we modify primary via sysfs and it is not a valid slave, we should record it for future use, and this behavior is the same with bond_check_params().  Signed-off-by: Weiping Pan <wpan@redhat.com> Acked-by: Nicolas de Peslo√ºan <nicolas.2p.debian@free.fr> Signed-off-by: Jay Vosburgh <fubar@us.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_procfs.c | s | 7.4K | 243 | Amerigo Wang | amwang@redhat.com | 1339975434 |  | bonding: show all the link status of slaves  There are four link statuses of a bonding slave, the procfs code shows a wrong status when using downdelay/updelay:  	(slave->link == BOND_LINK_UP) ?  "up" : "down"  It doesn't respect the rest two statuses. This patch fixes it.  Cc: Jay Vosburgh <fubar@us.ibm.com> Cc: Andy Gospodarek <andy@greyhouse.net> Cc: "David S. Miller" <davem@davemloft.net> Signed-off-by: Cong Wang <amwang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_3ad.h | s | 9.0K | 247 | Jiri Bohac | jbohac@suse.cz | 1336707001 |  | bonding: don't increase rx_dropped after processing LACPDUs  Since commit 3aba891d, bonding processes LACP frames (802.3ad mode) with bond_handle_frame(). Currently a copy of the skb is made and the original is left to be processed by other rx_handlers and the rest of the network stack by returning RX_HANDLER_ANOTHER.  As there is no protocol handler for PKT_TYPE_LACPDU, the frame is dropped and dev->rx_dropped increased.  Fix this by making bond_handle_frame() return RX_HANDLER_CONSUMED if bonding has processed the LACP frame.  Signed-off-by: Jiri Bohac <jbohac@suse.cz> Signed-off-by: David S. Miller <davem@davemloft.net>
f | bond_alb.c | s | 43K | 1435 | David S. Miller | davem@davemloft.net | 1337221057 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | bonding.h | s | 12K | 402 | David S. Miller | davem@davemloft.net | 1336938313 |  | bonding: Fix LACPDU rx_dropped commit.  I applied the wrong version of Jiri's bonding fix in commit 13a8e0c8cdb43982372bd6c65fb26839c8fd8ce9 ("bonding: don't increase rx_dropped after processing LACPDUs")  I applied v3, which introduces warnings I asked him to fix, instead of v4 which properly takes care of those issues.  This inter-diffs such that the warnings are now gone.  Signed-off-by: David S. Miller <davem@davemloft.net>
