f | mlx4.h | s | 30K | 1028 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1338502696 |  | net/mlx4_core: Fixes for VF / Guest startup flow  - pass the following parameters:   - firmware version (added QUERY_FW paravirtualization for that)    - disable Blueflame on slaves. KVM disables write combining on guests,     and we get better performance without BF in this case. (This requires     QUERY_DEV_CAP paravirtualization, also in this commit)    - max qp rdma as destination  - get rid of a chunk of "if (0)" dead code  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | resource_tracker.c | s | 71K | 2746 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1337144219 |  | net/mlx4_core: Fixed error flow in rem_slave_eqs  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_rx.c | s | 26K | 815 | Amir Vadai | amirv@mellanox.com | 1333616883 |  | net/mlx4_en: Force user priority by QP attribute  Instead of relying on HW to change schedule queue by UP, schedule queue is fixed for a tx_ring, and UP in WQE is ignored in this aspect.  This resolves two issues with untagged traffic: 1. untagged traffic has no UP in packet which is needed for QoS. The change    above allows setting the schedule queue (and by that the UP) of such a stream. 2. BlueFlame uses the same field used by vlan tag. So forcing UP from QPC    allows using BF for untagged but prioritized traffic.  In old firmware that force UP is not supported, untagged traffic will not subject to QoS.  Because UP is set by QP, need to always have a tx ring per UP, even if pfcrx module paramter is false.  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | srq.c | s | 8.0K | 244 | Marcel Apfelbaum | marcela@dev.mellanox.co.il | 1327262923 |  | mlx4_core: removed function index from vf.  The Virtual Functions should not be aware their function number.  Signed-off-by: Marcel Apfelbaum <marcela@dev.mellanox.co.il> Reviewed-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_dcb_nl.c | s | 6.6K | 212 | Paul Gortmaker | paul.gortmaker@windriver.com | 1334556731 |  | drivers/net: fix unresolved 64bit math in mellanox/mlx4/en_dcb_nl.c  Commit 109d2446052a484c58f07f71f9457bf7b71017f8      "net/mlx4_en: Set max rate-limit for a TC"  introduced 64 bit math operations into mlx4_en_dcbnl_ieee_setmaxrate()  causing the following final link failure on an x86_32 allmodconfig    ERROR: "__udivdi3" [drivers/net/ethernet/mellanox/mlx4/mlx4_en.ko] undefined!  Convert it to use div_u64() instead.  Cc: Amir Vadai <amirv@mellanox.com> Cc: David S. Miller <davem@davemloft.net> Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 408B |  | Amir Vadai | amirv@mellanox.com | 1333616884 |  | net/mlx4_en: DCB QoS support  Set TSA, promised BW and PFC using IEEE 802.1qaz netlink commands.  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | qp.c | s | 13K | 425 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1331063030 |  | mlx4_core: remove buggy sched_queue masking  Fixes a bug introduced by commit fe9a2603c, where the priority bits in the schedule queue field were masked out.  Signed-off-by: Amir Vadai <amirv@mellanox.co.il> Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | catas.c | s | 4.5K | 132 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1323802568 |  | mlx4_core: adjust catas operation for SRIOV mode  When running in SRIOV mode, driver should not automatically start/stop the mlx4_core upon sensing an HCA internal error -- doing this disables/enables sriov, which will cause the hypervisor to hang if there are running VMs with attached VFs.  In addition, on VMs the catas process should not run at all, since the HCA error buffer is not available to VMs in the BARs.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fw.h | s | 5.6K | 202 | Shlomo Pongratz | shlomop@mellanox.com | 1336503272 |  | mlx4_core: Add second capabilities flags field  This patch adds a 64-bit flags2 features member to struct mlx4_dev to export further features of the hardware.  The original flags field tracks features whose support bits are advertised by the firmware in offsets 0x40 and 0x44 of the query device capabilities command. flags2 will track features whose support bits are scattered at various offsets.  RSS support is the first feature to be exported through flags2.  RSS capabilities are located at offset 0x2e.  The size of the RSS indirection table is also given in this offset.  Signed-off-by: Shlomo Pongratz <shlomop@mellanox.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | pd.c | s | 7.0K | 238 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1337144219 |  | net/mlx4_core: Add XRC domains and counters to resource tracker  Add missing resource tracking for XRC domains and complete the tracking for HCA network flow counters.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_port.c | s | 7.6K | 199 | Eugenia Emantayev | eugenia@mellanox.co.il | 1323802567 |  | mlx4: Ethernet port management modifications  The physical port is now common to the PF and VFs. The port resources and configuration is managed by the PF, VFs can only influence the MTU of the port, it is set as max among all functions, Each function allocates RX buffers of required size to meet it's MTU enforcement. Port management code was moved to mlx4_core, as the mlx4_en module is virtualization unaware  Move handling qp functionality to mlx4_get_eth_qp/mlx4_put_eth_qp including reserve/release range and add/release unicast steering. Let mlx4_register/unregister_mac deal only with MAC (un)registration.  Signed-off-by: Eugenia Emantayev <eugenia@mellanox.co.il> Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | reset.c | s | 4.9K | 161 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313055695 |  | mlx4: Move the Mellanox driver  Moves the Mellanox driver into drivers/net/ethernet/mellanox/ and make the necessary Kconfig and Makefile changes.  CC: Roland Dreier <roland@kernel.org> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | en_main.c | s | 8.5K | 270 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1338502696 |  | net/mlx4_en: Fix improper use of "port" parameter in mlx4_en_event  Port is used as an array index before we know if that is proper.  For example, in the catas event case, port is zero; however, the port index should lie in the range (1..2).  Fix this by using 'port' only in the events where it is of interest.  Test for port out of range in the default (unhandled event) case, and do not output a message if it is not an ethernet port.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | fw.c | s | 45K | 1181 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1338502696 |  | net/mlx4_core: Fix obscure mlx4_cmd_box parameter in QUERY_DEV_CAP  The "!mlx4_is_slave" is totally confusing.  Fix with constant MLX4_CMD_NATIVE, which is the intended behavior.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | profile.c | s | 8.4K | 242 | Marcel Apfelbaum | marcela@dev.mellanox.co.il | 1338502696 |  | net/mlx4_core: Fix number of EQs used in ICM initialisation  In SRIOV mode, the number of EQs used when computing the total ICM size was incorrect.  To fix this, we do the following: 1. We add a new structure to mlx4_dev, mlx4_phys_caps, to contain physical HCA    capabilities.  The PPF uses the phys capabilities when it computes things    like ICM size.     The dev_caps structure will then contain the paravirtualized values, making    bookkeeping much easier in SRIOV mode. We add a structure rather than a    single parameter because there will be other fields in the phys_caps.     The first field we add to the mlx4_phys_caps structure is num_phys_eqs.  2. In INIT_HCA, when running in SRIOV mode, the "log_num_eqs" parameter    passed to the FW is the number of EQs per VF/PF; each function (PF or VF)    has this number of EQs available.     However, the total number of EQs which must be allowed for in the ICM is    (1 << log_num_eqs) * (#VFs + #PFs).  Rather than compute this quantity,    we allocate ICM space for 1024 EQs (which is the device maximum    number of EQs, and which is the value we place in the mlx4_phys_caps structure).     For INIT_HCA, however, we use the per-function number of EQs as described    above.  Signed-off-by: Marcel Apfelbaum <marcela@dev.mellanox.co.il> Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sense.c | s | 4.5K | 133 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1323802565 |  | mlx4_core: Add "native" argument to mlx4_cmd and its callers (where needed)  For SRIOV, some Hypervisor commands can be executed directly (native = 1). Others should go through the command wrapper flow (for tracking resource usage, for example, or for changing some HCA configurations that slaves need to be notified of).  This patch sets the groundwork for this capability -- adding the correct value of "native" in each case.  Note that if SRIOV is not activated, this parameter has no effect.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_netdev.c | s | 33K | 1051 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1340667012 |  | net/mlx4_en: Release QP range in free_resources  Add a missing resource release in ring cleanup. Not doing this leaves a range of QPs that are being reserved, and no one can use them.  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_ethtool.c | s | 17K | 555 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1335234842 |  | mlx4_en: Added Ethtool support for TX Interrupt coalescing  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_tx.c | s | 20K | 640 | Amir Vadai | amirv@mellanox.com | 1337285870 |  | net/mlx4_en: num cores tx rings for every UP  Change the TX ring scheme such that the number of rings for untagged packets and for tagged packets (per each of the vlan priorities) is the same, unlike the current situation where for tagged traffic there's one ring per priority and for untagged rings as the number of core.  Queue selection is done as follows:  If the mqprio qdisc is operates on the interface, such that the core networking code invoked the device setup_tc ndo callback, a mapping of skb->priority => queue set is forced - for both, tagged and untagged traffic.  Else, the egress map skb->priority =>  User priority is used for tagged traffic, and all untagged traffic is sent through tx rings of UP 0.  The patch follows the convergence of discussing that issue with John Fastabend over this thread http://comments.gmane.org/gmane.linux.network/229877  Cc: John Fastabend <john.r.fastabend@intel.com> Cc: Liran Liss <liranl@mellanox.com> Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_resources.c | s | 3.2K | 91 | Amir Vadai | amirv@mellanox.com | 1333616883 |  | net/mlx4_en: Force user priority by QP attribute  Instead of relying on HW to change schedule queue by UP, schedule queue is fixed for a tx_ring, and UP in WQE is ignored in this aspect.  This resolves two issues with untagged traffic: 1. untagged traffic has no UP in packet which is needed for QoS. The change    above allows setting the schedule queue (and by that the UP) of such a stream. 2. BlueFlame uses the same field used by vlan tag. So forcing UP from QPC    allows using BF for untagged but prioritized traffic.  In old firmware that force UP is not supported, untagged traffic will not subject to QoS.  Because UP is set by QP, need to always have a tx ring per UP, even if pfcrx module paramter is false.  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cmd.c | s | 43K | 1571 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1338502696 |  | net/mlx4_core: Fixes for VF / Guest startup flow  - pass the following parameters:   - firmware version (added QUERY_FW paravirtualization for that)    - disable Blueflame on slaves. KVM disables write combining on guests,     and we get better performance without BF in this case. (This requires     QUERY_DEV_CAP paravirtualization, also in this commit)    - max qp rdma as destination  - get rid of a chunk of "if (0)" dead code  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_cq.c | s | 4.7K | 145 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1335234842 |  | mlx4_en: Moving to Interrupts for TX completions  Moving to interrupts instead of polling fpr TX completions Avoiding situations where skb can be held in by the driver for a long time (till timer expires). The change is also necessary for supporting BQL.  Removing comp_lock that was required because we could handle TX completions from several contexts: Interrupts, timer, polling. Now there is only interrupts  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | alloc.c | s | 9.7K | 333 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1337028278 |  | mlx4_core: Change bitmap allocator to work in round-robin fashion  Under most circumstances, the bitmap allocator does not allocate the same full 24-bit QP number immediately after a QP is destroyed.  This works by using the upper bits of a 24-bit QP number, beyond the number of QPs that are actually available in the low level driver. For example, say that the HCA is willing to allocate a maximum of 64K qps.  We use the bits 23..16 as a "counter" which is incremented by 1 at each allocation so that even if the same physical QP is re-allocated, it will not receive the same 24-bit QP number.  However, we have seen the following scenario: 1. Allocate, say, 255 QPs in succession.  This will cause a wrap of the "counter". 2. Destroy the first QP allocated, then allocate a new QP.  The new QP,    because of the counter wraparound, will get the same FULL QP number as    the QP just destroyed!  This is a problem because packets in transit can be erroneously delivered to the new QP when they were meant for the old (destroyed) QP, because the full QP number of the new QP is identical to the destroyed QP.  (The "counter" mechanism is meant to prevent this by having the full 24-bit QP numbers differ even if the physical QP on the HCA is the same.  As we see above, however, this mechanism does not always work).  The best fix for this problem is to allocate QPs in round-robin mode, so that the physical QP numbers are not immediately re-used.  Found-by:  Matthew Finlay <matt@mellanox.com> Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | en_port.h | s | 13K | 506 | Amir Vadai | amirv@mellanox.com | 1333616883 |  | net/mlx4_core: set port QoS attributes  Adding QoS firmware commands: - mlx4_en_SET_PORT_PRIO2TC - set UP <=> TC - mlx4_en_SET_PORT_SCHEDULER - set promised BW, max BW and PG number  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mcg.c | s | 26K | 877 | Or Gerlitz | ogerlitz@mellanox.com | 1337144218 |  | net/mlx4: Address build warnings on set but not used variables  Handle the compiler warnings on variables which are set but not used by removing the relevant variable or casting a return value which is ignored on purpose to void.  Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cq.c | s | 9.5K | 293 | Marcel Apfelbaum | marcela@dev.mellanox.co.il | 1327262923 |  | mlx4_core: removed function index from vf.  The Virtual Functions should not be aware their function number.  Signed-off-by: Marcel Apfelbaum <marcela@dev.mellanox.co.il> Reviewed-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 999B |  | Amir Vadai | amirv@mellanox.com | 1333616884 |  | net/mlx4_en: DCB QoS support  Set TSA, promised BW and PFC using IEEE 802.1qaz netlink commands.  Signed-off-by: Amir Vadai <amirv@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | icm.h | s | 4.4K | 116 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313055695 |  | mlx4: Move the Mellanox driver  Moves the Mellanox driver into drivers/net/ethernet/mellanox/ and make the necessary Kconfig and Makefile changes.  CC: Roland Dreier <roland@kernel.org> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | mr.c | s | 21K | 721 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1337144218 |  | net/mlx4_core: Change SYNC_TPT to be native (not wrapped)  The "wrapped" was incorrect, since no wrapper function was defined.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | port.c | s | 24K | 814 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1339002474 |  | mlx4_core: Fix setting VL_cap in mlx4_SET_PORT wrapper flow  Commit 096335b3f983 ("mlx4_core: Allow dynamic MTU configuration for IB ports") modifies the port VL setting.  This exposes a bug in mlx4_common_set_port(), where the VL cap value passed in (inside the command mailbox) is incorrectly zeroed-out:  mlx4_SET_PORT modifies the VL_cap field (byte 3 of the mailbox). Since the SET_PORT command is paravirtualized on the master as well as on the slaves, mlx4_SET_PORT_wrapper() is invoked on the master.  This calls mlx4_common_set_port() where mailbox byte 3 gets overwritten by code which should only set a single bit in that byte (for the reset qkey counter flag) -- but instead overwrites the entire byte.  The result is that when running in SR-IOV mode, the VL_cap will be set to zero -- fix this.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: Roland Dreier <roland@purestorage.com>
f | intf.c | s | 4.9K | 146 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1323802568 |  | mlx4_core: adjust catas operation for SRIOV mode  When running in SRIOV mode, driver should not automatically start/stop the mlx4_core upon sensing an HCA internal error -- doing this disables/enables sriov, which will cause the hypervisor to hang if there are running VMs with attached VFs.  In addition, on VMs the catas process should not run at all, since the HCA error buffer is not available to VMs in the BARs.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | icm.c | s | 10K | 351 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1323802565 |  | mlx4_core: Add "native" argument to mlx4_cmd and its callers (where needed)  For SRIOV, some Hypervisor commands can be executed directly (native = 1). Others should go through the command wrapper flow (for tracking resource usage, for example, or for changing some HCA configurations that slaves need to be notified of).  This patch sets the groundwork for this capability -- adding the correct value of "native" in each case.  Note that if SRIOV is not activated, this parameter has no effect.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | main.c | s | 60K | 1919 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1340667012 |  | net/mlx4: Use single completion vector after NOP failure  Fix a crash at the error flow of NOP command which caused the driver to try and use a completion vector which wasn't allocated.  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | eq.c | s | 30K | 958 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1338502695 |  | net/mlx4_core: Fix the slave_id out-of-range test in mlx4_eq_int  Ths fixes the comparison in the FLR (Function Level Reset) event case.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Reviewed-by: Or Gerlitz <ogerlitz@mellanox.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mlx4_en.h | s | 16K | 529 | Yevgeny Petrilin | yevgenyp@mellanox.co.il | 1340667012 |  | net/mlx4_en: Release QP range in free_resources  Add a missing resource release in ring cleanup. Not doing this leaves a range of QPs that are being reserved, and no one can use them.  Signed-off-by: Yevgeny Petrilin <yevgenyp@mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
f | en_selftest.c | s | 4.9K | 150 | Jack Morgenstein | jackm@dev.mellanox.co.il | 1323802565 |  | mlx4_core: Add "native" argument to mlx4_cmd and its callers (where needed)  For SRIOV, some Hypervisor commands can be executed directly (native = 1). Others should go through the command wrapper flow (for tracking resource usage, for example, or for changing some HCA configurations that slaves need to be notified of).  This patch sets the groundwork for this capability -- adding the correct value of "native" in each case.  Note that if SRIOV is not activated, this parameter has no effect.  Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il> Signed-off-by: David S. Miller <davem@davemloft.net>
