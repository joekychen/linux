f | Makefile | g | 1.7K |  | Jacob Keller | jacob.e.keller@intel.com | 1336628931 |  | ixgbe: Hardware Timestamping + PTP Hardware Clock (PHC)  This patch enables hardware timestamping for use with PTP software by extracting a ns counter from an arbitrary fixed point cycles counter. The hardware generates SYSTIME registers using the DMA tick which changes based on the current link speed. These SYSTIME registers are converted to ns using the cyclecounter and timecounter structures provided by the kernel. Using the SO_TIMESTAMPING api, software can enable and access timestamps for PTP packets.  The SO_TIMESTAMPING API has space for 3 different kinds of timestamps, SYS, RAW, and SOF. SYS hardware timestamps are hardware ns values that are then scaled to the software clock. RAW hardware timestamps are the direct raw value of the ns counter. SOF software timestamps are the software timestamp calculated as close as possible to the software transmit, but are not offloaded to the hardware. This patch only supports the RAW hardware timestamps due to inefficiency of the SYS design.  This patch also enables the PHC subsystem features for atomically adjusting the cycle register, and adjusting the clock frequency in parts per billion. This frequency adjustment works by slightly adjusting the value added to the cycle registers each DMA tick. This causes the hardware registers to overflow rapidly (approximately once every 34 seconds, when at 10gig link). To solve this, the timecounter structure is used, along with a timer set for every 25 seconds. This allows for detecting register overflow and converting the cycle counter registers into ns values needed for providing useful timestamps to the network stack.  Only the basic required clock functions are supported at this time, although the hardware supports some ancillary features and these could easily be enabled in the future.  Note that use of this hardware timestamping requires modifying daemon software to use the SO_TIMESTAMPING API for timestamps, and the ptp_clock PHC framework for accessing the clock. The timestamps have no relation to the system time at all, so software must use the posix clock generated by the PHC framework instead.  Signed-off-by: Jacob E Keller <jacob.e.keller@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_ptp.c | s | 26K | 795 | Jacob Keller | jacob.e.keller@intel.com | 1339974906 |  | ixgbe: Fix PHC loophole allowing misconfiguration of increment register  This patch fixes a potential hole when configuring the cycle counter used to generate the nanosecond time clock. This clock is based off of the SYSTIME registers along with the TIMINCA registers. The TIMINCA register determines the increment to be added to the SYSTIME registers every DMA clock tick. This register needs to be reconfigured whenever the link-speed changes. However, the value calculated stays the same when link is down and when link is up. Misconfiguration can occur if the link status changes due to a reset, which causes the TIMINCA register to be reset. This reset puts the device in an unstable state where the SYSTIME registers stop incrementing and the PTP protocol does not function.  The solution is to double check the TIMINCA value and always reset the value if the register is zero. This prevents a misconfiguration bug that halts the PHC.  Signed-off-by: Jacob Keller <jacob.e.keller@intel.com> Acked-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ixgbe_main.c | s | 209K | 6554 | Alexander Duyck | alexander.h.duyck@intel.com | 1340754274 |  | ixgbe: Do not pad FCoE frames as this can cause issues with FCoE DDP  FCoE target mode was experiencing issues due to the fact that we were sending up data frames that were padded to 60 bytes after the DDP logic had already stripped the frame down to 52 or 56 depending on the use of VLANs. This was resulting in the FCoE DDP logic having issues since it thought the frame still had data in it due to the padding.  To resolve this, adding code so that we do not pad FCoE frames prior to handling them to the stack.  CC: <stable@vger.kernel.org> Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ixgbe_fcoe.h | s | 2.4K | 66 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_common.h | s | 7.2K | 135 | Alexander Duyck | alexander.h.duyck@intel.com | 1336127124 |  | ixgbe: Update link flow control to correctly handle multiple packet buffer DCB  This change updates the link flow control configuration so that we correctly set the link flow control settings for DCB.  Previously we would have to call the fc_enable call 8 times, once for each packet buffer.  If we move that logic into the fc_enable call itself we can avoid multiple unnecessary register writes.  This change also corrects an issue in which we were only shifting the water marks for 82599 parts by 6 instead of 10.  This was resulting in us only using 1/16 of the packet buffer when flow control was enabled.  Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_82599.c | s | 67K | 1881 | Don Skidmore | donald.c.skidmore@intel.com | 1335949943 |  | ixgbe: add hwmon interface to export thermal data  Some of our adapters have thermal data available, this patch exports this data via hwmon sysfs interface.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb.c | s | 10K | 311 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_phy.h | s | 5.5K | 112 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_sriov.c | s | 25K | 812 | Greg Rose | gregory.v.rose@intel.com | 1336628429 |  | ixgbe: Fix bogus error message  If the VF sends a MACVLAN request with index of zero then it is not actually trying to add a filter.  Check the index value and only indicate that operation is not allowed when the VF is actually trying to add a filter.  Signed-off-by: Greg Rose <gregory.v.rose@intel.com> Tested-by: Sibai Li <sibai.li@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb_82598.h | s | 3.6K | 71 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_mbx.c | s | 12K | 392 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb_82599.h | s | 4.7K | 98 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe.h | s | 23K | 633 | Alexander Duyck | alexander.h.duyck@intel.com | 1340754274 |  | ixgbe: Do not pad FCoE frames as this can cause issues with FCoE DDP  FCoE target mode was experiencing issues due to the fact that we were sending up data frames that were padded to 60 bytes after the DDP logic had already stripped the frame down to 52 or 56 depending on the use of VLANs. This was resulting in the FCoE DDP logic having issues since it thought the frame still had data in it due to the padding.  To resolve this, adding code so that we do not pad FCoE frames prior to handling them to the stack.  CC: <stable@vger.kernel.org> Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ixgbe_dcb_nl.c | s | 21K | 637 | Alexander Duyck | alexander.h.duyck@intel.com | 1336627904 |  | ixgbe: Set Drop_EN bit when multiple Rx queues are present w/o flow control  The drop enable bit can be used to improve the performance of the adapter in the case of multiple queues being present.  This performance gain is due to the fact that some slower CPUs can cause the FIFO to backfill preventing faster CPUs from receiving additional work.  By setting the drop enable bit we prevent this and instead just drop the packets that would have been bound for the slower CPU.  Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_ethtool.c | s | 81K | 2418 | Jacob Keller | jacob.e.keller@intel.com | 1336630323 |  | ixgbe: add support for get_ts_info  This patch adds support for the ethtool get_ts_info operation, which enables access of available timestamp/timesync support for that device. It can query which ptp clock device is associated with the particular port.  Signed-off-by: Jacob Keller <jacob.e.keller@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_sriov.h | s | 2.2K | 41 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_82598.c | s | 38K | 1151 | Alexander Duyck | alexander.h.duyck@intel.com | 1336127124 |  | ixgbe: Update link flow control to correctly handle multiple packet buffer DCB  This change updates the link flow control configuration so that we correctly set the link flow control settings for DCB.  Previously we would have to call the fc_enable call 8 times, once for each packet buffer.  If we move that logic into the fc_enable call itself we can avoid multiple unnecessary register writes.  This change also corrects an issue in which we were only shifting the water marks for 82599 parts by 6 instead of 10.  This was resulting in us only using 1/16 of the packet buffer when flow control was enabled.  Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_common.c | s | 100K | 3201 | Jacob Keller | jacob.e.keller@intel.com | 1336630046 |  | ixgbe: correct disable_rx_buff timeout  The current value of the udelay timeout for ixgbe_disable_rx_buff is too short. This causes the security path to not not be properly disabled during the section that is meant to have it turned off. The end result causes a race condition that results in RX issues.  Signed-off-by: Jacob Keller <jacob.e.keller@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb.h | s | 5.5K | 135 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_mbx.h | s | 4.1K | 71 | Don Skidmore | donald.c.skidmore@intel.com | 1328267130 |  | ixgbe: update copyright to 2012  New year so bump the copyright date.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb_82599.c | s | 10.0K | 305 | Alexander Duyck | alexander.h.duyck@intel.com | 1336626940 |  | ixgbe: Clean up priority based flow control  This change cleans up the logic in the priority based flow control configuration routines.  Both the 82599 and 82598 based routines perform similar functions however they are both arranged completely differently. This patch goes over both of them to clean up the code.  In addition I am dropping the ixgbe_fc_pfc flow control mode and instead just replacing it with checks for if priority flow control is enabled. This allows us to maintain some of the link flow control information which allows for an easier transition between link and priority flow control.  Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_x540.c | s | 25K | 768 | Don Skidmore | donald.c.skidmore@intel.com | 1335949943 |  | ixgbe: add hwmon interface to export thermal data  Some of our adapters have thermal data available, this patch exports this data via hwmon sysfs interface.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_fcoe.c | s | 26K | 847 | Yi Zou | yi.zou@intel.com | 1335837292 |  | ixgbe: fix calling skb_put on nonlinear skb assertion bug  With the support to bounce buffer added, the skb is coming as nonlinear in the case of non-DDPed data frames for FCoE, which is mostly ok as the FCoE stack would take care of that. However, for target mode, we have to set the FC CRC and FC EOF field to allow the protocol stack to not drop the frame for the last data frame of that sequence. So fix this by linearizing the skb first before doing skb_put().  Signed-off-by: Yi Zou <yi.zou@intel.com> Tested-by: Marcus Dennis <marcusx.e.dennis@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_dcb_82598.c | s | 8.1K | 236 | Alexander Duyck | alexander.h.duyck@intel.com | 1336626940 |  | ixgbe: Clean up priority based flow control  This change cleans up the logic in the priority based flow control configuration routines.  Both the 82599 and 82598 based routines perform similar functions however they are both arranged completely differently. This patch goes over both of them to clean up the code.  In addition I am dropping the ixgbe_fc_pfc flow control mode and instead just replacing it with checks for if priority flow control is enabled. This allows us to maintain some of the link flow control information which allows for an easier transition between link and priority flow control.  Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_lib.c | s | 25K | 800 | Alexander Duyck | alexander.h.duyck@intel.com | 1340754274 |  | ixgbe: Do not pad FCoE frames as this can cause issues with FCoE DDP  FCoE target mode was experiencing issues due to the fact that we were sending up data frames that were padded to 60 bytes after the DDP logic had already stripped the frame down to 52 or 56 depending on the use of VLANs. This was resulting in the FCoE DDP logic having issues since it thought the frame still had data in it due to the padding.  To resolve this, adding code so that we do not pad FCoE frames prior to handling them to the stack.  CC: <stable@vger.kernel.org> Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ixgbe_type.h | s | 125K | 2744 | Jacob E Keller | jacob.e.keller@intel.com | 1336629339 |  | ixgbe: Enable timesync clock-out feature for PPS support on X540  This patch enables the PPS system in the PHC framework, by enabling the clock-out feature on the X540 device. Causes the SDP0 to be set as a 1Hz clock. Also configures the timesync interrupt cause in order to report each pulse to the PPS via the PHC framework, which can be used for general system clock synchronization. (This allows a stable method for tuning the general system time via the on-board SYSTIM register based clock.)  Signed-off-by: Jacob E Keller <jacob.e.keller@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_sysfs.c | s | 6.8K | 201 | Don Skidmore | donald.c.skidmore@intel.com | 1336630483 |  | ixgbe: cleanup the hwmon function calls  When the hwmon code was initially added it was with the assumption that a sysfs patch would be also coming soon.  Since that isn't the case some clean up needs to be done.  This patch does that.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Stephen Ko <stephen.s.ko@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | ixgbe_phy.c | s | 44K | 1455 | Don Skidmore | donald.c.skidmore@intel.com | 1334394650 |  | ixgbe: add I2C clock stretching  This patch adds support for I2C clock stretching which is required per SFF-8636.  Customers with passive DA cables implement clock stretching would fail without this patch.  Signed-off-by: Don Skidmore <donald.c.skidmore@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
