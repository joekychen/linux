d | e1000 |  | 8 items |  | Sebastian Andrzej Siewior | bigeasy@linutronix.de | 1338620659 |  | e1000: look into the page instead of skb->data for e1000_tbi_adjust_stats()  This is another fixup where the data is not transfered into buffer addressed by skb->data but into a page.  Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | igb |  | 20 items |  | Carolyn Wyborny | carolyn.wyborny@intel.com | 1340178654 |  | igb: Fix incorrect RAR address entries for i210/i211 device.  i210/i211 device has only 16 RAR address filters like 82575, instead of 32 like i350.  This patch removes the entries for i210/i211 in the get_invariants function which was setting them for 32. This ensures that they will get the default value which is the correct one.  Signed-off-by: Carolyn Wyborny <carolyn.wyborny@intel.com> Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | igbvf |  | 10 items |  | Mitch A Williams | mitch.a.williams@intel.com | 1341103245 |  | igbvf: fix divide by zero  Using ethtool -C ethX rx-usecs 0 crashes with a divide by zero. Refactor this function to fix this issue and make it more clear what the intent of each conditional is. Add comment regarding using a setting of zero.  CC: stable <stable@vger.kernel.org> [3.3+] CC: David Ahern <daahern@cisco.com> Signed-off-by: Mitch Williams <mitch.a.williams@intel.com> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 293B |  | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313031807 |  | intel: Move the Intel wired LAN drivers  Moves the Intel wired LAN drivers into drivers/net/ethernet/intel/ and the necessary Kconfig and Makefile changes.  Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | ixgbe |  | 28 items |  | Alexander Duyck | alexander.h.duyck@intel.com | 1340754274 |  | ixgbe: Do not pad FCoE frames as this can cause issues with FCoE DDP  FCoE target mode was experiencing issues due to the fact that we were sending up data frames that were padded to 60 bytes after the DDP logic had already stripped the frame down to 52 or 56 depending on the use of VLANs. This was resulting in the FCoE DDP logic having issues since it thought the frame still had data in it due to the padding.  To resolve this, adding code so that we do not pad FCoE frames prior to handling them to the stack.  CC: <stable@vger.kernel.org> Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com> Tested-by: Phil Schmitt <phillip.j.schmitt@intel.com> Tested-by: Ross Brattain <ross.b.brattain@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 8.0K |  | Carolyn Wyborny | carolyn.wyborny@intel.com | 1340178774 |  | Kconfig: Fix Kconfig for Intel ixgbe and igb PTP support.  Fix Kconfig file to make sure that PTP and IGB/IXGBE are both either in-kernel or modules, not mixed.  Having the build status mixed causes compile errors.  Signed-off-by: Carolyn Wyborny <carolyn.wyborny@intel.com> Tested-by: Jeff Pieper <jeffrey.e.pieper@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | ixgb |  | 11 items |  | stephen hemminger | shemminger@vyatta.com | 1332916162 |  | intel: make wired ethernet driver message level consistent (rev2)  Dan Carpenter noticed that ixgbevf initial default was different than the rest. But the problem is broader than that, only one Intel driver (ixgb) was doing it almost right.  The convention for default debug level should be consistent among Intel drivers and follow established convention.  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | ixgbevf |  | 10 items |  | Greg Rose | gregory.v.rose@intel.com | 1336037918 |  | ixgbevf: Update version string  Signed-off-by: Greg Rose <gregory.v.rose@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
d | e1000e |  | 14 items |  | Bruce Allan | bruce.w.allan@intel.com | 1341127532 |  | e1000e: remove use of IP payload checksum  Currently only used when packet split mode is enabled with jumbo frames, IP payload checksum (for fragmented UDP packets) is mutually exclusive with receive hashing offload since the hardware uses the same space in the receive descriptor for the hardware-provided packet checksum and the RSS hash, respectively.  Users currently must disable jumbos when receive hashing offload is enabled, or vice versa, because of this incompatibility. Since testing has shown that IP payload checksum does not provide any real benefit, just remove it so that there is no longer a choice between jumbos or receive hashing offload but not both as done in other Intel GbE drivers (e.g. e1000, igb).  Also, add a missing check for IP checksum error reported by the hardware; let the stack verify the checksum when this happens.  CC: stable <stable@vger.kernel.org> [3.4] Signed-off-by: Bruce Allan <bruce.w.allan@intel.com> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | e100.c | s | 90K | 2715 | Richard Cochran | richardcochran@gmail.com | 1334394161 |  | e100: enable transmit time stamping.  This patch enables software (and phy device) transmit time stamping. Tested on an old PIII laptop with built in NIC.  Signed-off-by: Richard Cochran <richardcochran@gmail.com> Tested-by: Aaron Brown <aaron.f.brown@intel.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
