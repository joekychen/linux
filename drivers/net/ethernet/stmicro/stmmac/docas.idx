f | norm_desc.c | s | 6.1K | 200 | Deepak SIKRI | deepak.sikri@st.com | 1333579163 |  | stmmac: sanitize the rx coe and add the type-1 csum (v2)  This patch sanities the RX coe and adds the Type-1 Rx checksum offload engine (COE).  So the RX COE can be passed through the platform but can be fixed at run-time in case of the core has the HW capability register.  Also to support the Type-1 Rx COE the driver must append the HW checksum at the end of payload in case the Rx checksum engine was used to  offload the HW checksum.  This v2 version also fixes the IPC that has to be enabled and verified.  Signed-off-by: Deepak Sikri <deepak.sikri@st.com> Hacked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 485B |  | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1324500274 |  | stmmac: add the experimental PCI support  This patch adds the PCI support (as EXPERIMENTAL) this has been also tested on XLINX XC2V3000 FF1152AMT0221 D1215994A VIRTEX FPGA board. To support the PCI bus the main part has been reworked and both the platform and the PCI specific parts have been moved into different files.  Signed-off-by: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | descs_com.h | s | 3.5K | 102 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1319066658 |  | stmmac: add CHAINED descriptor mode support (V4)  This patch enhances the STMMAC driver to support CHAINED mode of descriptor.  STMMAC supports DMA descriptor to operate both in dual buffer(RING) and linked-list(CHAINED) mode. In RING mode (default) each descriptor points to two data buffer pointers whereas in CHAINED mode they point to only one data buffer pointer.  In CHAINED mode each descriptor will have pointer to next descriptor in the list, hence creating the explicit chaining in the descriptor itself, whereas such explicit chaining is not possible in RING mode.  First version of this work has been done by Rayagond. Then the patch has been reworked avoiding ifdef inside the C code. A new header file has been added to define all the functions needed for managing enhanced and normal descriptors. In fact, these have to be specialized according to the ring/chain usage. Two new C files have been also added to implement the helper routines needed to manage: jumbo frames, chain and ring setup (i.e. desc3).  Signed-off-by: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mmc.h | s | 4.5K | 117 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1316115601 |  | stmmac: add MMC support exported via ethtool (v3)  This patch adds the MMC management counters support. MMC module is an extension of the register address space and all the hardware counters can be accessed via ethtoo -S ethX.  Note that, the MMC interrupts remain masked and the logic to handle this kind of interrupt will be added later (if actually useful).  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_platform.c | s | 7.1K | 223 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1339000496 |  | stmmac: fix driver Kconfig when built as module  This patches fixes the driver when built as dynamic module. In fact, the platform part cannot be built and the probe fails (thanks to Bob Liu that reported this bug).  v2: as D. Miller suggested, it is not necessary to make the pci and the platform code mutually exclusive. Having both could also help, at built time ,to verify that all the code is validated and compiles fine.  v3: removed wrong Reviewed-by from the patch  Reported-by: Bob Liu <lliubbo@gmail.com> cc: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac100_dma.c | s | 4.5K | 120 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: add mixed burst for DMA  In mixed burst (MB) mode, the AHB master always initiates the bursts with fixed-size when the DMA requests transfers of size less than or equal to 16 beats. This patch adds the MB support and the flag that can be passed from the platform to select it. MB mode can also give some benefits in terms of performances on some platforms.  v2: fixed Coding Style  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mmc_core.c | s | 10K | 237 | Stefan Roese | sr@denx.de | 1326236240 |  | stmmac: Fix compilation error in mmc_core.c  Fix this error:    CC      drivers/net/ethernet/stmicro/stmmac/mmc_core.o drivers/net/ethernet/stmicro/stmmac/mmc_core.c: In function 'dwmac_mmc_ctrl': drivers/net/ethernet/stmicro/stmmac/mmc_core.c:143:2: error: implicit   declaration of function 'pr_debug' [-Werror=implicit-function-declaration]  Signed-off-by: Stefan Roese <sr@denx.de> Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com> Acked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | descs.h | s | 4.3K | 160 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1319771832 |  | stmmac: update normal descriptor structure (v2)  This patch updates the normal descriptor structure to work fine on new GMAC Synopsys chips.  Normal descriptors were designed on the old MAC10/100 databook 1.91 where some bits were reserved: for example the tx checksum insertion and rx checksum offload.  The patch maintains the back-compatibility with old MAC devices (tested on STx7109 MAC10/100) and adds new fields that actually new GMAC devices can use.  For example, STx7109 (MAC10/100) will pass from the platform   tx_coe = 0, enh_desc = 0, has_gmac = 0. A platform like Loongson1B (GMAC) will pass:   tx_coe = 1, enh_desc = 0, has_gmac = 1.  Thanks to Kelvin, he enhanced the normal descriptors for GMAC (on MIPS Loongson1B platform).  Signed-off-by: Kelvin Cheung <keguang.zhang@gmail.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac1000_dma.c | s | 5.9K | 165 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: add mixed burst for DMA  In mixed burst (MB) mode, the AHB master always initiates the bursts with fixed-size when the DMA requests transfers of size less than or equal to 16 beats. This patch adds the MB support and the flag that can be passed from the platform to select it. MB mode can also give some benefits in terms of performances on some platforms.  v2: fixed Coding Style  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | enh_desc.c | s | 9.6K | 297 | Deepak SIKRI | deepak.sikri@st.com | 1333579163 |  | stmmac: sanitize the rx coe and add the type-1 csum (v2)  This patch sanities the RX coe and adds the Type-1 Rx checksum offload engine (COE).  So the RX COE can be passed through the platform but can be fixed at run-time in case of the core has the HW capability register.  Also to support the Type-1 Rx COE the driver must append the HW checksum at the end of payload in case the Rx checksum engine was used to  offload the HW checksum.  This v2 version also fixes the IPC that has to be enabled and verified.  Signed-off-by: Deepak Sikri <deepak.sikri@st.com> Hacked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_timer.h | s | 1.6K | 33 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313105341 |  | stmmac: Move the STMicroelectronics driver  Move the STMicroelectronics driver into driver/net/ethernet/stmicro/ and make the necessary Kconfig and Makefile changes.  CC: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | chain_mode.c | s | 3.7K | 113 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1319066658 |  | stmmac: add CHAINED descriptor mode support (V4)  This patch enhances the STMMAC driver to support CHAINED mode of descriptor.  STMMAC supports DMA descriptor to operate both in dual buffer(RING) and linked-list(CHAINED) mode. In RING mode (default) each descriptor points to two data buffer pointers whereas in CHAINED mode they point to only one data buffer pointer.  In CHAINED mode each descriptor will have pointer to next descriptor in the list, hence creating the explicit chaining in the descriptor itself, whereas such explicit chaining is not possible in RING mode.  First version of this work has been done by Rayagond. Then the patch has been reworked avoiding ifdef inside the C code. A new header file has been added to define all the functions needed for managing enhanced and normal descriptors. In fact, these have to be specialized according to the ring/chain usage. Two new C files have been also added to implement the helper routines needed to manage: jumbo frames, chain and ring setup (i.e. desc3).  Signed-off-by: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac.h | s | 5.0K | 172 | Stefan Roese | sr@denx.de | 1339458495 |  | net: stmmac: Fix clock en-/disable calls  clk_{un}prepare is mandatory for platforms using common clock framework. Since these drivers are used by SPEAr platform, which supports common clock framework, add clk_{un}prepare() support for them. Otherwise the clocks are not correctly en-/disabled and ethernet support doesn't work.  Signed-off-by: Stefan Roese <sr@denx.de> Cc: Viresh Kumar <viresh.linux@gmail.com> Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_main.c | s | 58K | 1833 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1339134408 |  | stmmac: fix driver built w/ w/o both pci and platf modules  The commit ba27ec66ffeb78cbf fixes the Kconfig of the driver when built as module allowing to select/unselect the PCI and Platform modules that are not anymore mutually exclusive. This patch fixes and guarantees that the driver builds on all the platforms w/ w/o PCI and when select/unselect the two stmmac supports. In case of there are some problems on both the configuration and the pci/pltf registration the module_init will fail.  v2: set the CONFIG_STMMAC_PLATFORM enabled by default. I've just noticed that this can actually help on some configurations that don't enable any STMMAC options by default (e.g. SPEAr).  v3: change printk level when do not register the driver.  Reported-by: Fengguang Wu <wfg@linux.intel.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_pci.c | s | 5.3K | 161 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1339000496 |  | stmmac: fix driver Kconfig when built as module  This patches fixes the driver when built as dynamic module. In fact, the platform part cannot be built and the probe fails (thanks to Bob Liu that reported this bug).  v2: as D. Miller suggested, it is not necessary to make the pci and the platform code mutually exclusive. Having both could also help, at built time ,to verify that all the code is validated and compiles fine.  v3: removed wrong Reviewed-by from the patch  Reported-by: Bob Liu <lliubbo@gmail.com> cc: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac100_core.c | s | 6.0K | 161 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: extend mac addr reg and fix perfect filering  This patch is to extend the number of MAC address registers for 16 to 32. In fact, other new 16 registers are available in new chips and this can help on perfect filter mode for unicast.  This patch also fixes the perfect filtering mode by setting the bit 31 in the MAC address registers.  v2: fixed Coding Style.  Signed-off-by: Gianni Antoniazzi <gianni.antoniazzi-ext@st.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac1000.h | s | 8.3K | 188 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: add mixed burst for DMA  In mixed burst (MB) mode, the AHB master always initiates the bursts with fixed-size when the DMA requests transfers of size less than or equal to 16 beats. This patch adds the MB support and the flag that can be passed from the platform to select it. MB mode can also give some benefits in terms of performances on some platforms.  v2: fixed Coding Style  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_mdio.c | s | 7.1K | 223 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1333579164 |  | stmmac: MDC clock dynamically based on the csr clock input  If a specific clk_csr value is passed from the platform this means that the CSR Clock Range selection cannot be changed at run-time and it is fixed (as reported in the driver documentation). Viceversa the driver will try to set the MDC clock dynamically according to the actual clock input.  Signed-off-by: Deepak Sikri <deepak.sikri@st.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Reviewed-by: Francesco Virlinzi <francesco.virlinzi@st.com> Reviewed-by: David Laight <david.laight@aculab.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac_lib.c | s | 7.5K | 244 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: extend mac addr reg and fix perfect filering  This patch is to extend the number of MAC address registers for 16 to 32. In fact, other new 16 registers are available in new chips and this can help on perfect filter mode for unicast.  This patch also fixes the perfect filtering mode by setting the bit 31 in the MAC address registers.  v2: fixed Coding Style.  Signed-off-by: Gianni Antoniazzi <gianni.antoniazzi-ext@st.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac100.h | s | 5.7K | 103 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313105341 |  | stmmac: Move the STMicroelectronics driver  Move the STMicroelectronics driver into driver/net/ethernet/stmicro/ and make the necessary Kconfig and Makefile changes.  CC: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | Kconfig | g | 2.5K |  | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1339134408 |  | stmmac: fix driver built w/ w/o both pci and platf modules  The commit ba27ec66ffeb78cbf fixes the Kconfig of the driver when built as module allowing to select/unselect the PCI and Platform modules that are not anymore mutually exclusive. This patch fixes and guarantees that the driver builds on all the platforms w/ w/o PCI and when select/unselect the two stmmac supports. In case of there are some problems on both the configuration and the pci/pltf registration the module_init will fail.  v2: set the CONFIG_STMMAC_PLATFORM enabled by default. I've just noticed that this can actually help on some configurations that don't enable any STMMAC options by default (e.g. SPEAr).  v3: change printk level when do not register the driver.  Reported-by: Fengguang Wu <wfg@linux.intel.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac1000_core.c | s | 7.3K | 206 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: extend mac addr reg and fix perfect filering  This patch is to extend the number of MAC address registers for 16 to 32. In fact, other new 16 registers are available in new chips and this can help on perfect filter mode for unicast.  This patch also fixes the perfect filtering mode by setting the bit 31 in the MAC address registers.  v2: fixed Coding Style.  Signed-off-by: Gianni Antoniazzi <gianni.antoniazzi-ext@st.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | dwmac_dma.h | s | 5.3K | 95 | Deepak SIKRI | deepak.sikri@st.com | 1333579164 |  | stmmac: re-work the internal GMAC DMA platf parameters  This patch re-works the internal GMAC DMA parameters passed from the platform. In the past, we only passed the pbl but, with new core, other parameters can be passed and are mandatory on some platforms.  New parameters are documented in stmmac.txt because this patch has an impact for many platforms.  Signed-off-by: Shiraz Hashim <shiraz.hashim@st.com> Signed-off-by: Vikas Manocha <vikas.manocha@st.com> Signed-off-by: Deepak Sikri <deepak.sikri@st.com> Hacked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_timer.c | s | 3.4K | 104 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313105341 |  | stmmac: Move the STMicroelectronics driver  Move the STMicroelectronics driver into driver/net/ethernet/stmicro/ and make the necessary Kconfig and Makefile changes.  CC: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
f | common.h | s | 11K | 303 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1337035999 |  | stmmac: add mixed burst for DMA  In mixed burst (MB) mode, the AHB master always initiates the bursts with fixed-size when the DMA requests transfers of size less than or equal to 16 beats. This patch adds the MB support and the flag that can be passed from the platform to select it. MB mode can also give some benefits in terms of performances on some platforms.  v2: fixed Coding Style  Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | stmmac_ethtool.c | s | 13K | 429 | Richard Cochran | richardcochran@gmail.com | 1333531728 |  | stmmac: Support the get_ts_info ethtool method.  Signed-off-by: Richard Cochran <richardcochran@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ring_mode.c | s | 3.6K | 101 | Giuseppe CAVALLARO | peppe.cavallaro@st.com | 1319066658 |  | stmmac: add CHAINED descriptor mode support (V4)  This patch enhances the STMMAC driver to support CHAINED mode of descriptor.  STMMAC supports DMA descriptor to operate both in dual buffer(RING) and linked-list(CHAINED) mode. In RING mode (default) each descriptor points to two data buffer pointers whereas in CHAINED mode they point to only one data buffer pointer.  In CHAINED mode each descriptor will have pointer to next descriptor in the list, hence creating the explicit chaining in the descriptor itself, whereas such explicit chaining is not possible in RING mode.  First version of this work has been done by Rayagond. Then the patch has been reworked avoiding ifdef inside the C code. A new header file has been added to define all the functions needed for managing enhanced and normal descriptors. In fact, these have to be specialized according to the ring/chain usage. Two new C files have been also added to implement the helper routines needed to manage: jumbo frames, chain and ring setup (i.e. desc3).  Signed-off-by: Rayagond Kokatanur <rayagond@vayavyalabs.com> Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com> Signed-off-by: David S. Miller <davem@davemloft.net>
