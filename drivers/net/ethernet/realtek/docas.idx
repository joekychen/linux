f | 8139cp.c | s | 53K | 1687 | Jason Wang | jasowang@redhat.com | 1338574931 |  | 8139cp/8139too: terminate the eeprom access with the right opmode  Currently, we terminate the eeprom access through clearing the CS by:  RTL_W8 (Cfg9346, ~EE_CS); or writeb (~EE_CS, ee_addr);  This would left the eeprom into "Config. Register Write Enable:" state which is not expcted as the highest two bits were set to 0x11 ( expected is the "Normal" mode (0x00)). Solving this by write 0x0 instead of ~EE_CS when terminating the eeprom access.  Signed-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | 8139too.c | s | 70K | 2212 | Jason Wang | jasowang@redhat.com | 1338574931 |  | 8139cp/8139too: terminate the eeprom access with the right opmode  Currently, we terminate the eeprom access through clearing the CS by:  RTL_W8 (Cfg9346, ~EE_CS); or writeb (~EE_CS, ee_addr);  This would left the eeprom into "Config. Register Write Enable:" state which is not expcted as the highest two bits were set to 0x11 ( expected is the "Normal" mode (0x00)). Solving this by write 0x0 instead of ~EE_CS when terminating the eeprom access.  Signed-off-by: Jason Wang <jasowang@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | atp.c | s | 29K | 795 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | Makefile | g | 182B |  | Cesar Eduardo Barros | cesarb@cesarb.net | 1320190238 |  | net/ethernet: sc92031 is not Realtek  While the SC92031 could be found on fake "Realtek" NICs, it has no relationship to Realtek, and is actually from Silan.  Create a new subdirectory for silan and move sc92031 there.  Signed-off-by: Cesar Eduardo Barros <cesarb@cesarb.net> Signed-off-by: David S. Miller <davem@davemloft.net>
f | r8169.c | s | 158K | 5519 | fran√ßois romieu | romieu@fr.zoreil.com | 1340426912 |  | r8169: RxConfig hack for the 8168evl.  The 8168evl (RTL_GIGA_MAC_VER_34) based Gigabyte GA-990FXA motherboards are very prone to NETDEV watchdog problems without this change. See https://bugzilla.kernel.org/show_bug.cgi?id=42899 for instance.  I don't know why it *works*. It's depressingly effective though.  For the record: - the problem may go along IOMMU (AMD-Vi) errors but it really looks   like a red herring. - the patch sets the RX_MULTI_EN bit. If the 8168c doc is any guide,   the chipset now fetches several Rx descriptors at a time. - long ago the driver ignored the RX_MULTI_EN bit.   e542a2269f232d61270ceddd42b73a4348dee2bb changed the RxConfig   settings. Whatever the problem it's now labeled a regression. - Realtek's own driver can identify two different 8168evl devices   (CFG_METHOD_16 and CFG_METHOD_17) where the r8169 driver only   sees one. It sucks.  Signed-off-by: Francois Romieu <romieu@fr.zoreil.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 4.0K |  | Paul Gortmaker | paul.gortmaker@windriver.com | 1327946080 |  | drivers/net: fix up stale paths from driver reorg  The reorganization of the driver layout in drivers/net left behind some stale paths in comments and in Kconfig help text.  Bring them up to date.  No actual change to any code takes place here.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> CC: Jeff Kirsher <jeffrey.t.kirsher@intel.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | atp.h | s | 8.5K | 219 | Jeff Kirsher | jeffrey.t.kirsher@intel.com | 1313105382 |  | 8139*/atp/r8169/sc92031: Move the Realtek drivers  Move the Realtek drivers into drivers/net/ethernet/realtek/ and make the necessary Kconfig and Makefile changes.  CC: Realtek linux nic maintainers <nic_swsd@realtek.com> CC: Francois Romieu <romieu@fr.zoreil.com> CC: Jeff Garzik <jgarzik@pobox.com> CC: Donald Becker <becker@scyld.com> Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
