f | rt2x00.h | s | 34K | 1178 | Stanislaw Gruszka | sgruszka@redhat.com | 1338837986 |  | rt2x00: use atomic variable for seqno  Remove spinlock as atomic_t can be used instead. Note we use only 16 lower bits, upper bits are changed but we impilcilty cast to u16.  This fix possible deadlock on IBSS mode reproted by lockdep:  ================================= [ INFO: inconsistent lock state ] 3.4.0-wl+ #4 Not tainted --------------------------------- inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage. kworker/u:2/30374 [HC0[0]:SC0[0]:HE1:SE1] takes:  (&(&intf->seqlock)->rlock){+.?...}, at: [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib] {IN-SOFTIRQ-W} state was registered at:   [<c04978ab>] __lock_acquire+0x47b/0x1050   [<c0498504>] lock_acquire+0x84/0xf0   [<c0835733>] _raw_spin_lock+0x33/0x40   [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]   [<f9979f2a>] rt2x00queue_write_tx_frame+0x1a/0x300 [rt2x00lib]   [<f997834f>] rt2x00mac_tx+0x7f/0x380 [rt2x00lib]   [<f98fe363>] __ieee80211_tx+0x1b3/0x300 [mac80211]   [<f98ffdf5>] ieee80211_tx+0x105/0x130 [mac80211]   [<f99000dd>] ieee80211_xmit+0xad/0x100 [mac80211]   [<f9900519>] ieee80211_subif_start_xmit+0x2d9/0x930 [mac80211]   [<c0782e87>] dev_hard_start_xmit+0x307/0x660   [<c079bb71>] sch_direct_xmit+0xa1/0x1e0   [<c0784bb3>] dev_queue_xmit+0x183/0x730   [<c078c27a>] neigh_resolve_output+0xfa/0x1e0   [<c07b436a>] ip_finish_output+0x24a/0x460   [<c07b4897>] ip_output+0xb7/0x100   [<c07b2d60>] ip_local_out+0x20/0x60   [<c07e01ff>] igmpv3_sendpack+0x4f/0x60   [<c07e108f>] igmp_ifc_timer_expire+0x29f/0x330   [<c04520fc>] run_timer_softirq+0x15c/0x2f0   [<c0449e3e>] __do_softirq+0xae/0x1e0 irq event stamp: 18380437 hardirqs last  enabled at (18380437): [<c0526027>] __slab_alloc.clone.3+0x67/0x5f0 hardirqs last disabled at (18380436): [<c0525ff3>] __slab_alloc.clone.3+0x33/0x5f0 softirqs last  enabled at (18377616): [<c0449eb3>] __do_softirq+0x123/0x1e0 softirqs last disabled at (18377611): [<c041278d>] do_softirq+0x9d/0xe0  other info that might help us debug this:  Possible unsafe locking scenario:         CPU0        ----   lock(&(&intf->seqlock)->rlock);   <Interrupt>     lock(&(&intf->seqlock)->rlock);   *** DEADLOCK ***  4 locks held by kworker/u:2/30374:  #0:  (wiphy_name(local->hw.wiphy)){++++.+}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #1:  ((&sdata->work)){+.+.+.}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #2:  (&ifibss->mtx){+.+.+.}, at: [<f98f005b>] ieee80211_ibss_work+0x1b/0x470 [mac80211]  #3:  (&intf->beacon_skb_mutex){+.+...}, at: [<f997a644>] rt2x00queue_update_beacon+0x24/0x50 [rt2x00lib]  stack backtrace: Pid: 30374, comm: kworker/u:2 Not tainted 3.4.0-wl+ #4 Call Trace:  [<c04962a6>] print_usage_bug+0x1f6/0x220  [<c0496a12>] mark_lock+0x2c2/0x300  [<c0495ff0>] ? check_usage_forwards+0xc0/0xc0  [<c04978ec>] __lock_acquire+0x4bc/0x1050  [<c0527890>] ? __kmalloc_track_caller+0x1c0/0x1d0  [<c0777fb6>] ? copy_skb_header+0x26/0x90  [<c0498504>] lock_acquire+0x84/0xf0  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<c0835733>] _raw_spin_lock+0x33/0x40  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f997a5cf>] rt2x00queue_update_beacon_locked+0x5f/0xb0 [rt2x00lib]  [<f997a64d>] rt2x00queue_update_beacon+0x2d/0x50 [rt2x00lib]  [<f9977e3a>] rt2x00mac_bss_info_changed+0x1ca/0x200 [rt2x00lib]  [<f9977c70>] ? rt2x00mac_remove_interface+0x70/0x70 [rt2x00lib]  [<f98e4dd0>] ieee80211_bss_info_change_notify+0xe0/0x1d0 [mac80211]  [<f98ef7b8>] __ieee80211_sta_join_ibss+0x3b8/0x610 [mac80211]  [<c0496ab4>] ? mark_held_locks+0x64/0xc0  [<c0440012>] ? virt_efi_query_capsule_caps+0x12/0x50  [<f98efb09>] ieee80211_sta_join_ibss+0xf9/0x140 [mac80211]  [<f98f0456>] ieee80211_ibss_work+0x416/0x470 [mac80211]  [<c0496d8b>] ? trace_hardirqs_on+0xb/0x10  [<c077683b>] ? skb_dequeue+0x4b/0x70  [<f98f207f>] ieee80211_iface_work+0x13f/0x230 [mac80211]  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<c045d015>] process_one_work+0x185/0x3f0  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<f98f1f40>] ? ieee80211_teardown_sdata+0xa0/0xa0 [mac80211]  [<c045ed86>] worker_thread+0x116/0x270  [<c045ec70>] ? manage_workers+0x1e0/0x1e0  [<c0462f64>] kthread+0x84/0x90  [<c0462ee0>] ? __init_kthread_worker+0x60/0x60  [<c083d382>] kernel_thread_helper+0x6/0x10  Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800pci.c | s | 37K | 1103 | Zero.Lin | Zero.Lin@mediatek.com | 1337186797 |  | rt2x00:Add RT539b chipset support  Signed-off-by: Zero.Lin <Zero.Lin@mediatek.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800lib.h | s | 7.7K | 173 | Jakub Kicinski | kubakici@wp.pl | 1334341967 |  | rt2800: introduce wpdma_disable function  Introduce wpdma_disable function to simplify the code.  Signed-off-by: Jakub Kicinski <kubakici@wp.pl> Reviewed-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00queue.h | s | 21K | 635 | Stanislaw Gruszka | sgruszka@redhat.com | 1331833231 |  | rt2x00: rt2800usb: rework txstatus code  Currently we read tx status register after each urb data transfer. As callback procedure also trigger reading, that causing we have many "threads" of reading status. To prevent that introduce TX_STATUS_READING flags, and check if we are already in process of sequential reading TX_STA_FIFO, before requesting new reads.  Change timer to hrtimer, that make TX_STA_FIFO overruns less possible. Use 200 us for initial timeout, and then reschedule in 100 us period, this values probably have to be tuned.  Make changes on txdone work. Schedule it from rt2800usb_tx_sta_fifo_read_completed() callback when first valid status show up. Check in callback if tx status timeout happens, and schedule work on that condition too. That make possible to remove tx status timeout from generic watchdog. I moved that to rt2800usb.  Loop in txdone work, that should prevent situation when we queue work, which is already processed, and after finish work is not rescheduled again.  Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00debug.c | s | 21K | 674 | Anisse Astier | anisse@astier.eu | 1336528426 |  | rt2x00: Add debugfs access for rfcsr register  RFCSR is only used in rt2800. For other chipsets, the debug struct for rfcsr should be zeroed, which isn't be an issue, since the code can now cope with that.  Signed-off-by: Anisse Astier <anisse@astier.eu> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00link.c | s | 14K | 434 | John Li | chen-yang.li@mediatek.com | 1330369544 |  | rt2x00:Add VCO recalibration  Signed-off-by: John Li <chen-yang.li@mediatek.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800pci.h | s | 4.0K | 121 | Mark Einon | mark.einon@gmail.com | 1289845580 |  | rt2x00: checkpatch.pl error fixes for rt2800pci.h  rt2800pci.h:41: ERROR: Macros with complex values should be enclosed in parenthesis rt2800pci.h:42: ERROR: Macros with complex values should be enclosed in parenthesis rt2800pci.h:43: ERROR: Macros with complex values should be enclosed in parenthesis rt2800pci.h:44: ERROR: Macros with complex values should be enclosed in parenthesis rt2800pci.h:55: ERROR: space prohibited after that open parenthesis '(' rt2800pci.h:55: ERROR: space prohibited before that close parenthesis ')' rt2800pci.h:56: ERROR: space prohibited after that open parenthesis '(' rt2800pci.h:56: ERROR: space prohibited before that close parenthesis ')'  Signed-off-by: Mark Einon <mark.einon@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Makefile | g | 877B |  | Gertjan van Wingerde | gwingerde@gmail.com | 1303241996 |  | rt2x00: Merge rt2x00ht.c contents in other files.  The two functions that are in rt2x00ht.c can be much better placed closer to the places where the call-sites of these functions are (one in rt2x00config.c and one in rt2x00queue.c) allowing us to make these functions static. Also, conditional compilations doesn't seem to be necessary anymore as 802.11n support is quite common nowadays.  This makes the code a bit easier readable and searchable.  Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00usb.c | s | 21K | 735 | Helmut Schaa | helmut.schaa@googlemail.com | 1335209729 |  | rt2x00: Use GFP_KERNEL for rx buffer allocation on USB devices  Since the RX path on USB devices is handled in process context we can use GFP_KERNEL for RX buffer allocation. This should reduce the likelihood of allocation failures.  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Tested-By: Marc Dietrich <marvin24@gmx.de> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2400pci.c | s | 52K | 1561 | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00soc.c | s | 3.8K | 126 | Gertjan van Wingerde | gwingerde@gmail.com | 1290028734 |  | rt2x00: Use ioremap for SoC devices instead of KSEG1ADDR.  Make the code a bit more portable to architectures that do not support KSEG1ADDR.  Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com> Tested-by: Helmut Schaa <helmut.schaa@googlemail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2400pci.h | s | 26K | 844 | Mark Einon | mark.einon@gmail.com | 1289845573 |  | rt2x00: checkpatch.pl error fixes for rt2400pci.h  rt2400pci.h:812: ERROR: space prohibited after that open parenthesis '(' rt2400pci.h:812: ERROR: space prohibited before that close parenthesis ')' rt2400pci.h:813: ERROR: space prohibited after that open parenthesis '(' rt2400pci.h:813: ERROR: space prohibited before that close parenthesis ')' rt2400pci.h:950: ERROR: Macros with complex values should be enclosed in parenthesis  Signed-off-by: Mark Einon <mark.einon@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800usb.c | s | 35K | 1167 | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
f | rt73usb.c | s | 75K | 2207 | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
f | rt61pci.c | s | 93K | 2658 | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00leds.h | s | 1.2K | 37 | Gertjan van Wingerde | gwingerde@gmail.com | 1257977357 |  | rt2x00: Update copyright statements.  As mentioned on the linux-wireless mailing list, the current copyright statements in the rt2x00 are meaningless, as the rt2x00 project is not even a formal legal entity. Therefore it is better to replace the existing copyright statements with copyright statements for the people that actually wrote the code.  Note: Updated to the best of my knowledge with respect to who contributed considerable amounts of code.  Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> CC: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800.h | s | 74K | 2238 | Anisse Astier | anisse@astier.eu | 1336528426 |  | rt2x00: Add debugfs access for rfcsr register  RFCSR is only used in rt2800. For other chipsets, the debug struct for rfcsr should be zeroed, which isn't be an issue, since the code can now cope with that.  Signed-off-by: Anisse Astier <anisse@astier.eu> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00pci.h | s | 4.0K | 121 | Gertjan van Wingerde | gwingerde@gmail.com | 1303241985 |  | rt2x00: Allow dynamic addition of PCI/USB IDs.  Both USB and PCI drivers allow a system administrator to dynamically add USB/PCI IDs to the device table that a driver supports via the /sys/bus/{usb,pci,pci_express}/drivers/<driver-name>/new_id files.  However, for the rt2x00 drivers using this method currently crashes the system with a NULL pointer failure.  This is due to the set-up of rt2x00 where the probe functions require a rt2x00_ops structure in the driver_info field of the probed device. As this field is empty for the dynamically added devices this fails for these devices.  Fix this by introducing driver-specific probe wrappers that do nothing but calling the bus-specific probe functions with the rt2x00_ops structure as an argument, rather than depending on the driver_info field.  Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00soc.h | s | 1.3K | 35 | Helmut Schaa | helmut.schaa@googlemail.com | 1268255813 |  | rt2x00: remove KSEG1ADDR define from rt2x00soc.h  Remove the KSEG1ADDR define from rt2x00soc.h as it redefines and covers the correct one from the arch/mips/include/asm/addrspace.h. Otherwise the driver oopses on the target platform (Ralink rt3050 board).  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800usb.h | s | 3.5K | 96 | Mark Einon | mark.einon@gmail.com | 1289845583 |  | rt2x00: checkpatch.pl error fixes for rt2800usb.h  rt2800usb.h:43: ERROR: space prohibited after that open parenthesis '(' rt2800usb.h:43: ERROR: space prohibited before that close parenthesis ')' rt2800usb.h:44: ERROR: space prohibited after that open parenthesis '(' rt2800usb.h:44: ERROR: space prohibited before that close parenthesis ')'  Signed-off-by: Mark Einon <mark.einon@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2800lib.c | s | 155K | 4262 | Anisse Astier | anisse@astier.eu | 1336528426 |  | rt2x00: Add debugfs access for rfcsr register  RFCSR is only used in rt2800. For other chipsets, the debug struct for rfcsr should be zeroed, which isn't be an issue, since the code can now cope with that.  Signed-off-by: Anisse Astier <anisse@astier.eu> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00config.c | s | 8.1K | 234 | Stanislaw Gruszka | sgruszka@redhat.com | 1334175824 |  | rt2x00: configure different txdesc parameters for non HT channel  This is needed when we are concted to non 11n AP.  Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00usb.h | s | 14K | 405 | John W. Linville | linville@tuxdriver.com | 1304616755 |  | Merge branch 'master' of git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next-2.6 into for-davem  Conflicts: 	drivers/net/wireless/libertas/if_cs.c 	drivers/net/wireless/rtlwifi/pci.c 	net/bluetooth/l2cap_sock.c
f | rt73usb.h | s | 30K | 949 | Ivo van Doorn | ivdoorn@gmail.com | 1292271816 |  | rt2x00: Fix WMM Queue naming  The Queue names were incorrectly copied from the legacy drivers, as a result the queue names were inversed to what was expected.  This renames the queues using this mapping: 	QID_AC_BK -> QID_AC_VO (priority 0) 	QID_AC_BE -> QID_AC_VI (priority 1) 	QID_AC_VI -> QID_AC_BE (priority 2) 	QID_AC_VO -> QID_AC_BK (priority 3)  Note that this was a naming problem only, which didn't affect the assignment of frames to their respective queues.  Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00queue.c | s | 33K | 1082 | Stanislaw Gruszka | sgruszka@redhat.com | 1338837986 |  | rt2x00: use atomic variable for seqno  Remove spinlock as atomic_t can be used instead. Note we use only 16 lower bits, upper bits are changed but we impilcilty cast to u16.  This fix possible deadlock on IBSS mode reproted by lockdep:  ================================= [ INFO: inconsistent lock state ] 3.4.0-wl+ #4 Not tainted --------------------------------- inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage. kworker/u:2/30374 [HC0[0]:SC0[0]:HE1:SE1] takes:  (&(&intf->seqlock)->rlock){+.?...}, at: [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib] {IN-SOFTIRQ-W} state was registered at:   [<c04978ab>] __lock_acquire+0x47b/0x1050   [<c0498504>] lock_acquire+0x84/0xf0   [<c0835733>] _raw_spin_lock+0x33/0x40   [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]   [<f9979f2a>] rt2x00queue_write_tx_frame+0x1a/0x300 [rt2x00lib]   [<f997834f>] rt2x00mac_tx+0x7f/0x380 [rt2x00lib]   [<f98fe363>] __ieee80211_tx+0x1b3/0x300 [mac80211]   [<f98ffdf5>] ieee80211_tx+0x105/0x130 [mac80211]   [<f99000dd>] ieee80211_xmit+0xad/0x100 [mac80211]   [<f9900519>] ieee80211_subif_start_xmit+0x2d9/0x930 [mac80211]   [<c0782e87>] dev_hard_start_xmit+0x307/0x660   [<c079bb71>] sch_direct_xmit+0xa1/0x1e0   [<c0784bb3>] dev_queue_xmit+0x183/0x730   [<c078c27a>] neigh_resolve_output+0xfa/0x1e0   [<c07b436a>] ip_finish_output+0x24a/0x460   [<c07b4897>] ip_output+0xb7/0x100   [<c07b2d60>] ip_local_out+0x20/0x60   [<c07e01ff>] igmpv3_sendpack+0x4f/0x60   [<c07e108f>] igmp_ifc_timer_expire+0x29f/0x330   [<c04520fc>] run_timer_softirq+0x15c/0x2f0   [<c0449e3e>] __do_softirq+0xae/0x1e0 irq event stamp: 18380437 hardirqs last  enabled at (18380437): [<c0526027>] __slab_alloc.clone.3+0x67/0x5f0 hardirqs last disabled at (18380436): [<c0525ff3>] __slab_alloc.clone.3+0x33/0x5f0 softirqs last  enabled at (18377616): [<c0449eb3>] __do_softirq+0x123/0x1e0 softirqs last disabled at (18377611): [<c041278d>] do_softirq+0x9d/0xe0  other info that might help us debug this:  Possible unsafe locking scenario:         CPU0        ----   lock(&(&intf->seqlock)->rlock);   <Interrupt>     lock(&(&intf->seqlock)->rlock);   *** DEADLOCK ***  4 locks held by kworker/u:2/30374:  #0:  (wiphy_name(local->hw.wiphy)){++++.+}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #1:  ((&sdata->work)){+.+.+.}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #2:  (&ifibss->mtx){+.+.+.}, at: [<f98f005b>] ieee80211_ibss_work+0x1b/0x470 [mac80211]  #3:  (&intf->beacon_skb_mutex){+.+...}, at: [<f997a644>] rt2x00queue_update_beacon+0x24/0x50 [rt2x00lib]  stack backtrace: Pid: 30374, comm: kworker/u:2 Not tainted 3.4.0-wl+ #4 Call Trace:  [<c04962a6>] print_usage_bug+0x1f6/0x220  [<c0496a12>] mark_lock+0x2c2/0x300  [<c0495ff0>] ? check_usage_forwards+0xc0/0xc0  [<c04978ec>] __lock_acquire+0x4bc/0x1050  [<c0527890>] ? __kmalloc_track_caller+0x1c0/0x1d0  [<c0777fb6>] ? copy_skb_header+0x26/0x90  [<c0498504>] lock_acquire+0x84/0xf0  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<c0835733>] _raw_spin_lock+0x33/0x40  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f997a5cf>] rt2x00queue_update_beacon_locked+0x5f/0xb0 [rt2x00lib]  [<f997a64d>] rt2x00queue_update_beacon+0x2d/0x50 [rt2x00lib]  [<f9977e3a>] rt2x00mac_bss_info_changed+0x1ca/0x200 [rt2x00lib]  [<f9977c70>] ? rt2x00mac_remove_interface+0x70/0x70 [rt2x00lib]  [<f98e4dd0>] ieee80211_bss_info_change_notify+0xe0/0x1d0 [mac80211]  [<f98ef7b8>] __ieee80211_sta_join_ibss+0x3b8/0x610 [mac80211]  [<c0496ab4>] ? mark_held_locks+0x64/0xc0  [<c0440012>] ? virt_efi_query_capsule_caps+0x12/0x50  [<f98efb09>] ieee80211_sta_join_ibss+0xf9/0x140 [mac80211]  [<f98f0456>] ieee80211_ibss_work+0x416/0x470 [mac80211]  [<c0496d8b>] ? trace_hardirqs_on+0xb/0x10  [<c077683b>] ? skb_dequeue+0x4b/0x70  [<f98f207f>] ieee80211_iface_work+0x13f/0x230 [mac80211]  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<c045d015>] process_one_work+0x185/0x3f0  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<f98f1f40>] ? ieee80211_teardown_sdata+0xa0/0xa0 [mac80211]  [<c045ed86>] worker_thread+0x116/0x270  [<c045ec70>] ? manage_workers+0x1e0/0x1e0  [<c0462f64>] kthread+0x84/0x90  [<c0462ee0>] ? __init_kthread_worker+0x60/0x60  [<c083d382>] kernel_thread_helper+0x6/0x10  Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00dev.c | s | 33K | 1163 | Helmut Schaa | helmut.schaa@googlemail.com | 1335209729 |  | rt2x00: Use GFP_KERNEL for rx buffer allocation on USB devices  Since the RX path on USB devices is handled in process context we can use GFP_KERNEL for RX buffer allocation. This should reduce the likelihood of allocation failures.  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Tested-By: Marc Dietrich <marvin24@gmx.de> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Kconfig | g | 5.9K |  | John Li | chen-yang.li@mediatek.com | 1329940057 |  | rt2x00:Fix typo  Signed-off-by: John Li <chen-yang.li@mediatek.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt61pci.h | s | 41K | 1324 | Ivo van Doorn | ivdoorn@gmail.com | 1292271816 |  | rt2x00: Fix WMM Queue naming  The Queue names were incorrectly copied from the legacy drivers, as a result the queue names were inversed to what was expected.  This renames the queues using this mapping: 	QID_AC_BK -> QID_AC_VO (priority 0) 	QID_AC_BE -> QID_AC_VI (priority 1) 	QID_AC_VI -> QID_AC_BE (priority 2) 	QID_AC_VO -> QID_AC_BK (priority 3)  Note that this was a naming problem only, which didn't affect the assignment of frames to their respective queues.  Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00reg.h | s | 6.2K | 243 | Helmut Schaa | helmut.schaa@googlemail.com | 1296504384 |  | rt2x00: Remove STATE_RADIO_IRQ_OFF_ISR and STATE_RADIO_IRQ_ON_ISR  Remove STATE_RADIO_IRQ_OFF_ISR and STATE_RADIO_IRQ_ON_ISR as they are not used anymore.  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00debug.h | s | 2.0K | 60 | Anisse Astier | anisse@astier.eu | 1336528426 |  | rt2x00: Add debugfs access for rfcsr register  RFCSR is only used in rt2800. For other chipsets, the debug struct for rfcsr should be zeroed, which isn't be an issue, since the code can now cope with that.  Signed-off-by: Anisse Astier <anisse@astier.eu> Acked-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2500usb.h | s | 20K | 741 | Linus Torvalds | torvalds@linux-foundation.org | 1260416613 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (42 commits)   tree-wide: fix misspelling of "definition" in comments   reiserfs: fix misspelling of "journaled"   doc: Fix a typo in slub.txt.   inotify: remove superfluous return code check   hdlc: spelling fix in find_pvc() comment   doc: fix regulator docs cut-and-pasteism   mtd: Fix comment in Kconfig   doc: Fix IRQ chip docs   tree-wide: fix assorted typos all over the place   drivers/ata/libata-sff.c: comment spelling fixes   fix typos/grammos in Documentation/edac.txt   sysctl: add missing comments   fs/debugfs/inode.c: fix comment typos   sgivwfb: Make use of ARRAY_SIZE.   sky2: fix sky2_link_down copy/paste comment error   tree-wide: fix typos "couter" -> "counter"   tree-wide: fix typos "offest" -> "offset"   fix kerneldoc for set_irq_msi()   spidev: fix double "of of" in comment   comment typo fix: sybsystem -> subsystem   ...
f | rt2500pci.h | s | 35K | 1099 | Mark Einon | mark.einon@gmail.com | 1289845575 |  | rt2x00: checkpatch.pl error fixes for rt2500pci.h  rt2500pci.h:1091: ERROR: space prohibited after that open parenthesis '(' rt2500pci.h:1091: ERROR: space prohibited before that close parenthesis ')' rt2500pci.h:1092: ERROR: space prohibited after that open parenthesis '(' rt2500pci.h:1092: ERROR: space prohibited before that close parenthesis ')'  Signed-off-by: Mark Einon <mark.einon@gmail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00lib.h | s | 14K | 408 | Helmut Schaa | helmut.schaa@googlemail.com | 1335209729 |  | rt2x00: Use GFP_KERNEL for rx buffer allocation on USB devices  Since the RX path on USB devices is handled in process context we can use GFP_KERNEL for RX buffer allocation. This should reduce the likelihood of allocation failures.  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Tested-By: Marc Dietrich <marvin24@gmx.de> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2500pci.c | s | 64K | 1835 | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00dump.h | s | 4.3K | 115 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | rt2x00leds.c | s | 6.5K | 204 | Jakub Kicinski | kubakici@wp.pl | 1334002174 |  | rt2x00: increase led's name buffer length  With 9-letter driver names phy's number was truncated to two characters, which caused warnings when creating sysfs entries for leds on systems with multiple devices.  Signed-off-by: Jakub Kicinski <kubakici@wp.pl> Reviewed-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00mac.c | s | 24K | 741 | Stanislaw Gruszka | sgruszka@redhat.com | 1338837986 |  | rt2x00: use atomic variable for seqno  Remove spinlock as atomic_t can be used instead. Note we use only 16 lower bits, upper bits are changed but we impilcilty cast to u16.  This fix possible deadlock on IBSS mode reproted by lockdep:  ================================= [ INFO: inconsistent lock state ] 3.4.0-wl+ #4 Not tainted --------------------------------- inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage. kworker/u:2/30374 [HC0[0]:SC0[0]:HE1:SE1] takes:  (&(&intf->seqlock)->rlock){+.?...}, at: [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib] {IN-SOFTIRQ-W} state was registered at:   [<c04978ab>] __lock_acquire+0x47b/0x1050   [<c0498504>] lock_acquire+0x84/0xf0   [<c0835733>] _raw_spin_lock+0x33/0x40   [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]   [<f9979f2a>] rt2x00queue_write_tx_frame+0x1a/0x300 [rt2x00lib]   [<f997834f>] rt2x00mac_tx+0x7f/0x380 [rt2x00lib]   [<f98fe363>] __ieee80211_tx+0x1b3/0x300 [mac80211]   [<f98ffdf5>] ieee80211_tx+0x105/0x130 [mac80211]   [<f99000dd>] ieee80211_xmit+0xad/0x100 [mac80211]   [<f9900519>] ieee80211_subif_start_xmit+0x2d9/0x930 [mac80211]   [<c0782e87>] dev_hard_start_xmit+0x307/0x660   [<c079bb71>] sch_direct_xmit+0xa1/0x1e0   [<c0784bb3>] dev_queue_xmit+0x183/0x730   [<c078c27a>] neigh_resolve_output+0xfa/0x1e0   [<c07b436a>] ip_finish_output+0x24a/0x460   [<c07b4897>] ip_output+0xb7/0x100   [<c07b2d60>] ip_local_out+0x20/0x60   [<c07e01ff>] igmpv3_sendpack+0x4f/0x60   [<c07e108f>] igmp_ifc_timer_expire+0x29f/0x330   [<c04520fc>] run_timer_softirq+0x15c/0x2f0   [<c0449e3e>] __do_softirq+0xae/0x1e0 irq event stamp: 18380437 hardirqs last  enabled at (18380437): [<c0526027>] __slab_alloc.clone.3+0x67/0x5f0 hardirqs last disabled at (18380436): [<c0525ff3>] __slab_alloc.clone.3+0x33/0x5f0 softirqs last  enabled at (18377616): [<c0449eb3>] __do_softirq+0x123/0x1e0 softirqs last disabled at (18377611): [<c041278d>] do_softirq+0x9d/0xe0  other info that might help us debug this:  Possible unsafe locking scenario:         CPU0        ----   lock(&(&intf->seqlock)->rlock);   <Interrupt>     lock(&(&intf->seqlock)->rlock);   *** DEADLOCK ***  4 locks held by kworker/u:2/30374:  #0:  (wiphy_name(local->hw.wiphy)){++++.+}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #1:  ((&sdata->work)){+.+.+.}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #2:  (&ifibss->mtx){+.+.+.}, at: [<f98f005b>] ieee80211_ibss_work+0x1b/0x470 [mac80211]  #3:  (&intf->beacon_skb_mutex){+.+...}, at: [<f997a644>] rt2x00queue_update_beacon+0x24/0x50 [rt2x00lib]  stack backtrace: Pid: 30374, comm: kworker/u:2 Not tainted 3.4.0-wl+ #4 Call Trace:  [<c04962a6>] print_usage_bug+0x1f6/0x220  [<c0496a12>] mark_lock+0x2c2/0x300  [<c0495ff0>] ? check_usage_forwards+0xc0/0xc0  [<c04978ec>] __lock_acquire+0x4bc/0x1050  [<c0527890>] ? __kmalloc_track_caller+0x1c0/0x1d0  [<c0777fb6>] ? copy_skb_header+0x26/0x90  [<c0498504>] lock_acquire+0x84/0xf0  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<c0835733>] _raw_spin_lock+0x33/0x40  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f997a5cf>] rt2x00queue_update_beacon_locked+0x5f/0xb0 [rt2x00lib]  [<f997a64d>] rt2x00queue_update_beacon+0x2d/0x50 [rt2x00lib]  [<f9977e3a>] rt2x00mac_bss_info_changed+0x1ca/0x200 [rt2x00lib]  [<f9977c70>] ? rt2x00mac_remove_interface+0x70/0x70 [rt2x00lib]  [<f98e4dd0>] ieee80211_bss_info_change_notify+0xe0/0x1d0 [mac80211]  [<f98ef7b8>] __ieee80211_sta_join_ibss+0x3b8/0x610 [mac80211]  [<c0496ab4>] ? mark_held_locks+0x64/0xc0  [<c0440012>] ? virt_efi_query_capsule_caps+0x12/0x50  [<f98efb09>] ieee80211_sta_join_ibss+0xf9/0x140 [mac80211]  [<f98f0456>] ieee80211_ibss_work+0x416/0x470 [mac80211]  [<c0496d8b>] ? trace_hardirqs_on+0xb/0x10  [<c077683b>] ? skb_dequeue+0x4b/0x70  [<f98f207f>] ieee80211_iface_work+0x13f/0x230 [mac80211]  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<c045d015>] process_one_work+0x185/0x3f0  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<f98f1f40>] ? ieee80211_teardown_sdata+0xa0/0xa0 [mac80211]  [<c045ed86>] worker_thread+0x116/0x270  [<c045ec70>] ? manage_workers+0x1e0/0x1e0  [<c0462f64>] kthread+0x84/0x90  [<c0462ee0>] ? __init_kthread_worker+0x60/0x60  [<c083d382>] kernel_thread_helper+0x6/0x10  Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00crypto.c | s | 6.8K | 212 | Gertjan van Wingerde | gwingerde@gmail.com | 1310059258 |  | rt2x00: Don't use queue entry as parameter when creating TX descriptor.  The functions that create the tx descriptor structure do not operate on a queue entry at all. Signal this fact in the code by not providing a queue entry as a parameter, but the rt2x00 device structure and the skb directly.  This patch is a preparation for reducing the time a queue is locked for a tx operation.  Signed-off-by: Gertjan van Wingerde <gwingerde@gmail.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00pci.c | s | 8.6K | 317 | Helmut Schaa | helmut.schaa@googlemail.com | 1335209729 |  | rt2x00: Use GFP_KERNEL for rx buffer allocation on USB devices  Since the RX path on USB devices is handled in process context we can use GFP_KERNEL for RX buffer allocation. This should reduce the likelihood of allocation failures.  Signed-off-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Tested-By: Marc Dietrich <marvin24@gmx.de> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2x00firmware.c | s | 3.3K | 108 | Ivo van Doorn | IvDoorn@gmail.com | 1303241951 |  | rt2x00: Split rt2x00dev->flags  The number of flags defined for the rt2x00dev->flags field, has been growing over the years. Currently we are approaching the maximum number of bits which are available in the field.  A secondary problem, is that one part of the field are initialized only during boot, because the driver requirements are initialized or device requirements are loaded from the EEPROM. In both cases, the flags are fixed and will not change during device operation. The other flags are the device state, and will change frequently. So far this resulted in the fact that for some flags, the atomic bit accessors are used, while for the others the non-atomic variants are used.  By splitting the flags up into a "flags" and "cap_flags" we can put all flags which are fixed inside "cap_flags". This field can then be read non-atomically. In the "flags" field we keep the device state, which is going to be read atomically.  This adds more room for more flags in the future, and sanitizes the field access methods.  Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rt2500usb.c | s | 60K | 1735 | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
