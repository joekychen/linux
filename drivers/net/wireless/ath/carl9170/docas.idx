f | cmd.h | s | 5.7K | 156 | Joe Perches | joe@perches.com | 1334175836 |  | wireless: Remove unnecessary ; from while (0) macros  Semicolons are not necessary after macros that end in while (0). Remove them.  Simplify the macros with tests of do { if (foo>size) memset1; else memset2;} while (0); to a single line memset(,,min_t(size_t, foo, size))  Signed-off-by: Joe Perches <joe@perches.com> Acked-by: Arend van Spriel <arend@broadcom.com> Acked-by: Larry Finger <Larry.Finger@lwfinger.net> Acked-by: Bing Zhao <bzhao@marvell.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | version.h | s | 256B | 7 | Christian Lamparter | chunkeey@googlemail.com | 1314211302 |  | carl9170: import updated firmware headers  Import new headers from our firmware branch: git://git.kernel.org/pub/scm/linux/kernel/git/chr/carl9170fw.git  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Makefile | g | 154B |  | Christian Lamparter | chunkeey@googlemail.com | 1284494622 |  | carl9170: Makefile, Kconfig files and MAINTAINERS  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debug.h | s | 4.4K | 115 | Christian Lamparter | chunkeey@googlemail.com | 1284494622 |  | carl9170: firmware parser and debugfs code  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | tx.c | s | 39K | 1280 | John W. Linville | linville@tuxdriver.com | 1330546113 |  | carl9170: fix breakage from "mac80211: handle non-bufferable MMPDUs correctly"  That commit intended for 3.4 renamed IEEE80211_TX_CTL_POLL_RESPONSE as IEEE80211_TX_CTL_NO_PS_BUFFER.  Meanwhile, "carl9170: fix frame delivery if sta is in powersave mode" added a reference to IEEE80211_TX_CTL_POLL_RESPONSE in the fixes stream for 3.3.  This simple patch fixes that merge boo-boo.  Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | debug.c | s | 23K | 731 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hw.h | s | 35K | 688 | Christian Lamparter | chunkeey@googlemail.com | 1311013783 |  | carl9170 firmware: update firmware headers   * reserves feature bit for CCA counters   * extends hardware register file definitions  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | mac.c | s | 13K | 419 | Christian Lamparter | chunkeey@googlemail.com | 1327694217 |  | carl9170: allow users to lower output power level  This patch implements a simple way of reducing the output power of the device by a configurable upper limit.  Requested-by: Harshal Chhaya <harshal@gmail.com> Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | carl9170.h | s | 17K | 572 | Christian Lamparter | chunkeey@googlemail.com | 1327694217 |  | carl9170: allow users to lower output power level  This patch implements a simple way of reducing the output power of the device by a configurable upper limit.  Requested-by: Harshal Chhaya <harshal@gmail.com> Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | fw.c | s | 11K | 340 | Johannes Berg | johannes.berg@intel.com | 1334084044 |  | mac80211: don't always advertise remain-on-channel  Not all devices are really capable of implementing remain-on-channel, even if it is implemented in SW, as they can't necessarily deal with channel changes while associated.  Remove the WIPHY_FLAG_HAS_REMAIN_ON_CHANNEL and add it only if either the driver has remain_on_channel implemented in the driver/device.  Also add it to all drivers that advertise P2P right now since those definitely have to have it working.  Signed-off-by: Johannes Berg <johannes.berg@intel.com> Acked-by: Luciano Coelho <coelho@ti.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | fwdesc.h | s | 7.4K | 225 | Christian Lamparter | chunkeey@googlemail.com | 1311013783 |  | carl9170 firmware: update firmware headers   * reserves feature bit for CCA counters   * extends hardware register file definitions  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | eeprom.h | s | 6.2K | 186 | Christian Lamparter | chunkeey@googlemail.com | 1284494621 |  | carl9170: Register maps, tx/rx descriptor formats and eeprom layout  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | cmd.c | s | 5.7K | 189 | Christian Lamparter | chunkeey@googlemail.com | 1314370078 |  | carl9170: Use do_div for 64-bit division to fix 32-bit kernels  Use the do_div macro for 64-bit division. Otherwise, the module will reference __udivdi3 under 32-bit kernels, which is not allowed in kernel space.  drivers/built-in.o: In function `carl9170_collect_tally': cmd.c:191: undefined reference to `__udivdi3' cmd.c:192: undefined reference to `__udivdi3' cmd.c:193: undefined reference to `__udivdi3'  Reported-by: Kalle Valo <kvalo@adurom.com> Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Tested-by: Kalle Valo <kvalo@adurom.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rx.c | s | 21K | 764 | Joe Perches | joe@perches.com | 1336707181 |  | drivers/net: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | phy.h | s | 24K | 475 | Christian Lamparter | chunkeey@googlemail.com | 1289845529 |  | carl9170: import hw/fw header updates  This patch imports all shared header changes from carl9170fw.git.   * add some strategic __aligned(4).    This allows the compiler generate optimized code for    architectures which can't access (unaligned/packed)    data efficiently.    ("ath9k_hw: optimize all descriptor access functions")   * add a forgotten __CARL9170FW__ ifdef around    a private firmware-internal struct.   * GET_VAL macro helper    Very useful for extracting data out of the    bit-packed PHY registers.   * cosmetic changes    e.g.: _CCA_MINCCA_ to just _CCA_MIN_.   * version bump 1.8.8.3 -> 1.9.0.  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wlan.h | s | 11K | 368 | Christian Lamparter | chunkeey@googlemail.com | 1309894011 |  | carl9170: import 1.9.4 firmware headers  This patch imports all shared header changes from carl9170fw.git.   * update copyright boilerplate   * add some more strategic __aligned(4).   * WoWLAN  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | usb.c | s | 25K | 934 | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
f | main.c | s | 46K | 1655 | Christian Lamparter | chunkeey@googlemail.com | 1327694217 |  | carl9170: allow users to lower output power level  This patch implements a simple way of reducing the output power of the device by a configurable upper limit.  Requested-by: Harshal Chhaya <harshal@gmail.com> Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | phy.c | s | 55K | 1593 | Christian Lamparter | chunkeey@googlemail.com | 1327694217 |  | carl9170: allow users to lower output power level  This patch implements a simple way of reducing the output power of the device by a configurable upper limit.  Requested-by: Harshal Chhaya <harshal@gmail.com> Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Kconfig | g | 1.5K |  | Christian Lamparter | chunkeey@googlemail.com | 1314211302 |  | carl9170: export HW random number generator  All AR9170 hardware have a 16-Bit random number generator. The documentation claims the values are suitable for "security keys".  The "throughput" is around 320Kibit/s. It's slow, but it does work without introducing any special offload firmware commands.  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | fwcmd.h | s | 8.1K | 276 | Christian Lamparter | chunkeey@googlemail.com | 1314211302 |  | carl9170: import updated firmware headers  Import new headers from our firmware branch: git://git.kernel.org/pub/scm/linux/kernel/git/chr/carl9170fw.git  Signed-off-by: Christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | led.c | s | 4.9K | 155 | Pavel Roskin | proski@gnu.org | 1310751514 |  | carl9170: fix formatting issues found by checkpatch  Signed-off-by: Pavel Roskin <proski@gnu.org> Acked-By: christian Lamparter <chunkeey@googlemail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
