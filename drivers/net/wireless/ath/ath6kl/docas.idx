f | Makefile | g | 1.5K |  | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: Add HTC pipe implementation  This is needed for USB.  Based on code by Kevin Fang.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | debug.h | s | 4.4K | 125 | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: add full USB support  Now, with HTC pipe, it's possible to fully support USB version of AR6004.  Based on code by Kevin Fang.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | htc_pipe.c | s | 42K | 1394 | Kevin Fang | chienf@qca.qualcomm.com | 1335509400 |  | ath6kl: assign Tx packet drop threshold per endpoint on htc pipe layer  On the htc mbox layer, it will assign each endpoint (AC) with a different Tx-packet-drop threshold, so lower priority AC is more likely to drop packets and the cookies become more available to higher priority AC.  On the htc pipe layer, assign the tx packet drop threshold as well, it will let AC to drop packets when cookies below the tx packet drop threshold.  Signed-off-by: Kevin Fang <kevin.fang@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | init.c | s | 41K | 1389 | Kalle Valo | kvalo@qca.qualcomm.com | 1334556531 |  | ath6kl: merge split format strings into one  Found by checkpatch:  WARNING: quoted string split across lines  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | debug.c | s | 44K | 1483 | John W. Linville | linville@tuxdriver.com | 1337180252 |  | Merge branch 'for-linville' of git://github.com/kvalo/ath6kl
f | htc_mbox.c | s | 74K | 2377 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1335772584 |  | ath6kl: Complete failed tx packet in ath6kl_htc_tx_from_queue()  Return status of ath6kl_htc_tx_issue() is ignored in ath6kl_htc_tx_from_queue(), but failed tx packet is is not cleaned up. To fix memory leak in this case, call completion with error. Also, throw an error debug message when tx fails in ath6kl_sdio_write_async() due to shortage in bus request buffer.  kvalo: change the error message to WARN_ON_ONCE()  Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | cfg80211.c | s | 88K | 2974 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1335509125 |  | ath6kl: Fix bss filter setting while scanning  bss filter is configured to allow the frames from all the bss other than the currenly connected one, this is done when a scan is requested in connected state. There is no reason to filter out the currently connected bss, configure the filter to allow all the bss. This would fix the reporting of stale rssi of the current bss while scanning.  Reported-by: Naveen singh <navesing@qca.qualcomm.com> Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | testmode.h | s | 1.2K | 30 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1328693491 |  | ath6kl: Update license header  Update license header with the copyright to Qualcomm Atheros, Inc. for the year 2011-2012.  Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | core.h | s | 22K | 735 | Naveen Gangadharan | ngangadh@qca.qualcomm.com | 1335441690 |  | ath6kl: Multicast filter support in wow suspend and non-suspend  This patch enables all multicast packets in non suspend mode and enable multicast filtering in wow suspend mode. This also fixes a bug in multicast where the driver assumed disable multicast-all command disabled/filtered all multicast packets, which was wrong assumption, because firmware will apply the programmed filter.  Multicast requirements  - Enable forward all multicast packets(no filtering) in       non suspend mode.  - Enable multicast filtering in wow suspend mode for both       AP and CLIENT.  kvalo: fix a checkpatch warning and drop unrelated newline removal  Signed-off-by: Naveen Gangadharan <ngangadh@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | hif.h | s | 9.1K | 228 | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: Add HTC pipe implementation  This is needed for USB.  Based on code by Kevin Fang.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | hif-ops.h | s | 5.0K | 150 | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: Add HTC pipe implementation  This is needed for USB.  Based on code by Kevin Fang.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | target.h | s | 11K | 285 | Prasanna Kumar | kumarpra@qca.qualcomm.com | 1328693992 |  | ath6kl: add support for AR6003 2048 byte board file  AR6003 2.1.1 supports both 1792 and 2048 byte board files. Add support for 2048 byte board file.  kvalo: add ath6kl prefix to the title  Signed-off-by: Prasanna Kumar <kumarpra@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | sdio.c | s | 36K | 1163 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1335772584 |  | ath6kl: Complete failed tx packet in ath6kl_htc_tx_from_queue()  Return status of ath6kl_htc_tx_issue() is ignored in ath6kl_htc_tx_from_queue(), but failed tx packet is is not cleaned up. To fix memory leak in this case, call completion with error. Also, throw an error debug message when tx fails in ath6kl_sdio_write_async() due to shortage in bus request buffer.  kvalo: change the error message to WARN_ON_ONCE()  Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | wmi.c | s | 99K | 3110 | Vivek Natarajan | nataraja@qca.qualcomm.com | 1336157137 |  | ath6kl_sdio: Fix the EAPOL out of order issue  Send the EAPOL and management frames in the same AC_VO queue. The issue happens when the AP supports QOS, the management frames are sent to AC_VO queue and EAP frame goes to AC_BE queue. Even though the EAP frame is queued before the DEAUTH management frame, as they are queued on different h/w queues, order of delivery between these frames cannot be controlled.  This fixes the connection failure seen in P2P case.  Signed-off-by: Vivek Natarajan <nataraja@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | cfg80211.h | s | 2.4K | 53 | Thomas Pedersen | c_tpeder@qca.qualcomm.com | 1334213752 |  | ath6kl: handle concurrent AP-STA channel switches  If an ath6kl AP vif is beaconing on one channel, and a STA vif associates on a different channel, a WMI_DISCONNECT event will be sent to the AP vif. Make the AP vif follow the STA interface, and notify userspace.  kvalo: fix a sparse warning with vif->next_chan  Signed-off-by: Thomas Pedersen <c_tpeder@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | bmi.h | s | 7.9K | 245 | Kalle Valo | kvalo@qca.qualcomm.com | 1331143440 |  | ath6kl: make ath6kl_bmi_[read||write]_hi32() endian safe  ath6kl_bmi_[read||write]_hi32() did not have endian support, fix that.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | txrx.c | s | 44K | 1520 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1335772492 |  | ath6kl: Update netstats for some of the tx failrues in ath6kl_data_tx()  There are few cases where the tx skb is dropped but netstats is not updated, fix this.  Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | htc.h | s | 16K | 545 | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: Add HTC pipe implementation  This is needed for USB.  Based on code by Kevin Fang.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | hif.c | s | 18K | 572 | Kalle Valo | kvalo@qca.qualcomm.com | 1331143437 |  | ath6kl: alignment should match open parenthesis  Fix the issues which checkpatch found and were easy to fix. Especially callers of ath6kl_bmi_write() are tricky and that needs to be fixed separately.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | Kconfig | g | 949B |  | Kalle Valo | kvalo@qca.qualcomm.com | 1326887991 |  | ath6kl: add back beginnings of USB support  John Linville had to revert the part of USB support which was already in ath6kl due to build problems in commit cb00ec382b ("ath6kl: revert USB support"). Now that I fixed the build problems properly by adding ath6kl_core.ko kernel module it's possible to add back the (incomplete) USB support. This patch is a revert of John's patch and adds back the USB code which as already in ath6kl, only difference being minor changes in Makefile and adapting usb.c to new core function names.  Note that USB support in ath6kl is not complete yet. This code only makes it possible to boot firmware but as HTC layer does not yet support USB it's not possible to send any WMI commands nor data packets to the firmware. That will be added soon.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | core.c | s | 7.8K | 254 | Vivek Natarajan | nataraja@qca.qualcomm.com | 1333477561 |  | ath6kl: Use vmalloc instead of kmalloc for fw  Sometimes it has been observed that allocating a contiguous memory of more than 100K fails with kmalloc. This has been modified to use vmalloc instead.  Signed-off-by: PingYang Zhang <pingzhan@qca.qualcomm.com> Signed-off-by: Vivek Natarajan <nataraja@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | bmi.c | s | 12K | 453 | Kalle Valo | kvalo@qca.qualcomm.com | 1331143437 |  | ath6kl: alignment should match open parenthesis  Fix the issues which checkpatch found and were easy to fix. Especially callers of ath6kl_bmi_write() are tricky and that needs to be fixed separately.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | testmode.c | s | 2.7K | 82 | David S. Miller | davem@davemloft.net | 1333355624 |  | ath6kl: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | htc-ops.h | s | 3.1K | 93 | Kalle Valo | kvalo@qca.qualcomm.com | 1332769006 |  | ath6kl: add htc ops  In preparation for adding HTC pipe implementation add htc-ops.h to make it possible dynamically choose which HTC type is used.  Needed for full USB support.  Based on the code by Ray Chen <raychen@qca.qualcomm.com>.  Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com> Signed-off-by: Ray Chen <raychen@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | main.c | s | 33K | 1056 | Naveen Gangadharan | ngangadh@qca.qualcomm.com | 1335441690 |  | ath6kl: Multicast filter support in wow suspend and non-suspend  This patch enables all multicast packets in non suspend mode and enable multicast filtering in wow suspend mode. This also fixes a bug in multicast where the driver assumed disable multicast-all command disabled/filtered all multicast packets, which was wrong assumption, because firmware will apply the programmed filter.  Multicast requirements  - Enable forward all multicast packets(no filtering) in       non suspend mode.  - Enable multicast filtering in wow suspend mode for both       AP and CLIENT.  kvalo: fix a checkpatch warning and drop unrelated newline removal  Signed-off-by: Naveen Gangadharan <ngangadh@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | wmi.h | s | 57K | 2136 | Vivek Natarajan | nataraja@qca.qualcomm.com | 1336157137 |  | ath6kl_sdio: Fix the EAPOL out of order issue  Send the EAPOL and management frames in the same AC_VO queue. The issue happens when the AP supports QOS, the management frames are sent to AC_VO queue and EAP frame goes to AC_BE queue. Even though the EAP frame is queued before the DEAUTH management frame, as they are queued on different h/w queues, order of delivery between these frames cannot be controlled.  This fixes the connection failure seen in P2P case.  Signed-off-by: Vivek Natarajan <nataraja@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
f | usb.c | s | 30K | 1010 | Linus Torvalds | torvalds@linux-foundation.org | 1337885669 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net  Pull more networking updates from David Miller:  "Ok, everything from here on out will be bug fixes."  1) One final sync of wireless and bluetooth stuff from John Linville.    These changes have all been in his tree for more than a week, and    therefore have had the necessary -next exposure.  John was just away    on a trip and didn't have a change to send the pull request until a    day or two ago.  2) Put back some defines in user exposed header file areas that were    removed during the tokenring purge.  From Stephen Hemminger and Paul    Gortmaker.  3) A bug fix for UDP hash table allocation got lost in the pile due to    one of those "you got it..  no I've got it.." situations.  :-)     From Tim Bird.  4) SKB coalescing in TCP needs to have stricter checks, otherwise we'll    try to coalesce overlapping frags and crash.  Fix from Eric Dumazet.  5) RCU routing table lookups can race with free_fib_info(), causing    crashes when we deref the device pointers in the route.  Fix by    releasing the net device in the RCU callback.  From Yanmin Zhang.  * git://git.kernel.org/pub/scm/linux/kernel/git/davem/net: (293 commits)   tcp: take care of overlaps in tcp_try_coalesce()   ipv4: fix the rcu race between free_fib_info and ip_route_output_slow   mm: add a low limit to alloc_large_system_hash   ipx: restore token ring define to include/linux/ipx.h   if: restore token ring ARP type to header   xen: do not disable netfront in dom0   phy/micrel: Fix ID of KSZ9021   mISDN: Add X-Tensions USB ISDN TA XC-525   gianfar:don't add FCB length to hard_header_len   Bluetooth: Report proper error number in disconnection   Bluetooth: Create flags for bt_sk()   Bluetooth: report the right security level in getsockopt   Bluetooth: Lock the L2CAP channel when sending   Bluetooth: Restore locking semantics when looking up L2CAP channels   Bluetooth: Fix a redundant and problematic incoming MTU check   Bluetooth: Add support for Foxconn/Hon Hai AR5BBU22 0489:E03C   Bluetooth: Fix EIR data generation for mgmt_device_found   Bluetooth: Fix Inquiry with RSSI event mask   Bluetooth: improve readability of l2cap_seq_list code   Bluetooth: Fix skb length calculation   ...
f | common.h | s | 2.4K | 71 | Vasanthakumar Thiagarajan | vthiagar@qca.qualcomm.com | 1333985156 |  | ath6kl: Configure htcap in fw based on the channel type in AP mode  This patch disables HT in start_ap if the type of the channel on which the AP mode is going to be operating is non-HT. HT is enabled with default ht cap setting if the operating channel is going to be 11n.  Signed-off-by: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
