f | ipw2100.h | s | 40K | 967 | John W. Linville | linville@tuxdriver.com | 1334256119 |  | Merge branch 'master' into for-davem  Conflicts: 	drivers/net/wireless/iwlwifi/iwl-testmode.c 	net/wireless/nl80211.c
f | libipw_wx.c | s | 19K | 633 | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1325705446 |  | ipw2x00: remove reset_port functionality  Removes reset_port since it isn't used anywhere as suggested by Johannes Berg.  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Makefile | g | 255B |  | John W. Linville | linville@tuxdriver.com | 1227283698 |  | net/ieee80211 -> drivers/net/ipw2x00/libipw_* rename  The old ieee80211 code only remains as a support library for the ipw2100 and ipw2200 drivers.  So, move the code and rename it appropriately to reflects it's true purpose and status.  Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | ipw.h | s | 556B | 19 | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1334257848 |  | net/wireless: ipw2x00: add supported cipher suites to wiphy initialization  Driver doesn't report its supported cipher suites through cfg80211 interface. It still uses wext interface and probably will not work through nl80211, but will at least correctly advertise supported features.  Bug was reported by Omar Siam. https://bugzilla.kernel.org/show_bug.cgi?id=43049  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | ipw2100.c | s | 226K | 7148 | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1339177437 |  | net/wireless: ipw2100: Fix WARN_ON occurring in wiphy_register called by ipw2100_pci_init_one  The problem was found by Larry Finger: http://marc.info/?l=linux-wireless&m=133702401700614&w=2  The problem is identical to the one for ipw2200 which is already fixed: http://marc.info/?l=linux-wireless&m=133457257407196&w=2  [   17.766431] ------------[ cut here ]------------ [   17.766467] WARNING: at net/wireless/core.c:562 wiphy_register+0x34c/0x3c0 [cfg80211]() [   17.766471] Hardware name: Latitude D600 [   17.766474] Modules linked in: ipw2100(+) libipw pcmcia cfg80211 ppdev parport_pc yenta_socket sr_mod pcmcia_rsrc parport iTCO_wdt cdrom sg rfkill pcmcia_ core lib80211 tg3 video button battery ac iTCO_vendor_support joydev shpchp pcspkr pciehp pci_hotplug autofs4 radeon ttm drm_kms_helper uhci_hcd ehci_hcd rtc _cmos thermal drm hwmon i2c_algo_bit i2c_core processor usbcore usb_common ata_generic ata_piix ahci libahci libata [   17.766525] Pid: 474, comm: modprobe Not tainted 3.4.0-rc7-wl+ #6 [   17.766528] Call Trace: [   17.766541]  [<c066ad08>] ? printk+0x28/0x2a [   17.766552]  [<c0230edd>] warn_slowpath_common+0x6d/0xa0 [   17.766563]  [<e0b253bc>] ? wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766573]  [<e0b253bc>] ? wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766578]  [<c0230f2d>] warn_slowpath_null+0x1d/0x20 [   17.766588]  [<e0b253bc>] wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766605]  [<e0b5b0d6>] ipw2100_wdev_init+0x196/0x1c0 [ipw2100] [   17.766616]  [<e0b5d962>] ipw2100_pci_init_one+0x2b2/0x694 [ipw2100] [   17.766632]  [<c047ce52>] local_pci_probe+0x42/0xb0 [   17.766637]  [<c047e2b0>] pci_device_probe+0x60/0x90 [   17.766645]  [<c0376de2>] ? sysfs_create_link+0x12/0x20 [   17.766654]  [<c050f1f6>] really_probe+0x56/0x2e0 [   17.766659]  [<c037636d>] ? create_dir+0x5d/0xa0 [   17.766667]  [<c0518c6b>] ? pm_runtime_barrier+0x3b/0xa0 [   17.766672]  [<c050f5e4>] driver_probe_device+0x44/0xa0 [   17.766677]  [<c047e227>] ? pci_match_device+0x97/0xa0 [   17.766681]  [<c050f6c9>] __driver_attach+0x89/0x90 [   17.766686]  [<c050f640>] ? driver_probe_device+0xa0/0xa0 [   17.766691]  [<c050da2a>] bus_for_each_dev+0x3a/0x70 [   17.766695]  [<c050ee6c>] driver_attach+0x1c/0x30 [   17.766699]  [<c050f640>] ? driver_probe_device+0xa0/0xa0 [   17.766704]  [<c050ea77>] bus_add_driver+0x187/0x280 [   17.766710]  [<c045b9cd>] ? kset_find_obj+0x2d/0x60 [   17.766715]  [<c047e2e0>] ? pci_device_probe+0x90/0x90 [   17.766719]  [<c047e2e0>] ? pci_device_probe+0x90/0x90 [   17.766724]  [<c050fb85>] driver_register+0x65/0x110 [   17.766729]  [<c047e09d>] __pci_register_driver+0x3d/0xa0 [   17.766738]  [<e09f705c>] ipw2100_init+0x5c/0x1000 [ipw2100] [   17.766743]  [<c020110f>] do_one_initcall+0x2f/0x170 [   17.766749]  [<e09f7000>] ? 0xe09f6fff [   17.766757]  [<c0287ce8>] sys_init_module+0xa8/0x210 [   17.766766]  [<c067a075>] syscall_call+0x7/0xb [   17.766769] ---[ end trace 559898c6bb0d1c75 ]--- [   17.767093] ipw2100: probe of 0000:02:03.0 failed with error -5  This warning appears only if we apply Ben Hutchings' fix http://marc.info/?l=linux-wireless&m=132720204412667&w=2 for the bug reported by Cesare Leonardi http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=656813 with cfg80211 warning during device registration ("cfg80211: failed to add phy80211 symlink to netdev!").  We separate device bring up and registration with network stack to avoid the problem.  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Tested-by: Larry Finger <Larry.Finger@lwfinger.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | ipw2200.c | s | 326K | 10325 | Ben Hutchings | ben@decadent.org.uk | 1336528427 |  | ipw2200: Fix order of device registration  Currently cfg80211 fails to create a "phy80211" symlink in sysfs from the net device to the wiphy device.  The latter needs to be registered first.  Compile-tested only.  Reported-by: Cesare Leonardi <celeonar@gmail.com> Signed-off-by: Ben Hutchings <ben@decadent.org.uk> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | libipw_rx.c | s | 50K | 1569 | Joe Perches | joe@perches.com | 1336707181 |  | drivers/net: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | libipw_module.c | s | 8.8K | 272 | Joe Perches | joe@perches.com | 1328044848 |  | drivers/net: Remove alloc_etherdev error messages  alloc_etherdev has a generic OOM/unable to alloc message. Remove the duplicative messages after alloc_etherdev calls.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | ipw2200.h | s | 57K | 1704 | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1331576377 |  | net/wireless: ipw2x00: remove unused definitions for regulatory domain  ipw2200 driver does not use these defines, it uses geo struct instead. Therefore remove them from its header.  Note: we keep them in the ipw2100 driver's header, because the driver still uses them.  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Kconfig | g | 6.7K |  | John W. Linville | linville@tuxdriver.com | 1256935835 |  | wireless: remove WLAN_80211 and WLAN_PRE80211 from Kconfig  With the WLAN_PRE80211 drivers moved to drivers/staging, this distinction becomes unnecessary.  Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | libipw_tx.c | s | 15K | 455 | Justin P. Mattock | justinmattock@gmail.com | 1316089231 |  | ipw2x00: comment typo fix encryptiong to encryption  The below patch fixes a typo.  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | libipw_geo.c | s | 5.4K | 155 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | libipw.h | s | 27K | 869 | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1334175840 |  | net/wireless: ipw2x00: remove unused libipw_measurement_report struct  and all referenced structs and corresponding enums because the driver does not use it.  Note: keep libipw_info_element struct since it is still in use.  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
