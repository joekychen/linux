d | b43 |  | 59 items |  | Anatol Pomozov | anatol.pomozov@gmail.com | 1340561032 |  | Fix typo in printed messages  Coult -> Could  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
d | iwmc3200wifi |  | 27 items |  | Arnd Bergmann | arnd@arndb.de | 1335036527 |  | drivers/net: iwmc3200 depends on EXPERIMENTAL  The iwmc3200 driver selects other code in Kconfig that depends on EXPERIMENTAL. Kconfig warns about this when CONFIG_EXPERIMENTAL is not already set, so logically, these options should also be marked experimental or promoted to stable.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org> Signed-off-by: David S. Miller <davem@davemloft.net>
d | iwlegacy |  | 20 items |  | Joe Perches | joe@perches.com | 1336707181 |  | drivers/net: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Makefile | g | 1.4K |  | Luciano Coelho | coelho@ti.com | 1334209435 |  | wireless/wl12xx/wl1251: move TI WLAN modules to a common ti subdirectory  Move wl12xx and wl1251 modules into a new drivers/net/wireless/ti directory.  Add a TI WLAN Kconfig option and Makefile to support this change.  Signed-off-by: Luciano Coelho <coelho@ti.com> Cc: John W. Linville <linville@tuxdriver.com>
d | ath |  | 15 items |  | Tom Hughes | tom@compton.nu | 1340822893 |  | ath9k: fix panic caused by returning a descriptor we have queued for reuse  Commit 3a2923e83c introduced a bug when a corrupt descriptor is encountered - although the following descriptor is discarded and returned to the queue for reuse the associated frame is also returned for processing. This leads to a panic:  BUG: unable to handle kernel NULL pointer dereference at 000000000000003a IP: [<ffffffffa02599a5>] ath_rx_tasklet+0x165/0x1b00 [ath9k] Call Trace: <IRQ> [<ffffffff812d7fa0>] ? map_single+0x60/0x60 [<ffffffffa028f044>] ? ath9k_ioread32+0x34/0x90 [ath9k] [<ffffffffa0292eec>] athk9k_tasklet+0xdc/0x160 [ath9k] [<ffffffff8105e133>] tasklet_action+0x63/0xd0 [<ffffffff8105dbc0>] __do_softirq+0xc0/0x1e0 [<ffffffff8101a873>] ? native_sched_clock+0x13/0x80 [<ffffffff815f9d5c>] call_softirq+0x1c/0x30 [<ffffffff810151f5>] do_softirq+0x75/0xb0 [<ffffffff8105df95>] irq_exit+0xb5/0xc0 [<ffffffff815fa5b3>] do_IRQ+0x63/0xe0 [<ffffffff815f0cea>] common_interrupt+0x6a/0x6a <EOI> [<ffffffff8131840a>] ? intel_idle+0xea/0x150 [<ffffffff813183eb>] ? intel_idle+0xcb/0x150 [<ffffffff814a1db9>] cpuidle_enter+0x19/0x20 [<ffffffff814a23d9>] cpuidle_idle_call+0xa9/0x240 [<ffffffff8101c4bf>] cpu_idle+0xaf/0x120 [<ffffffff815cda8e>] rest_init+0x72/0x74 [<ffffffff81cf4c1a>] start_kernel+0x3b7/0x3c4 [<ffffffff81cf4662>] ? repair_env_string+0x5e/0x5e [<ffffffff81cf4346>] x86_64_start_reservations+0x131/0x135 [<ffffffff81cf444a>] x86_64_start_kernel+0x100/0x10f  Making sure bf is cleared to NULL in this case restores the old behaviour.  Signed-off-by: Tom Hughes <tom@compton.nu> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | brcm80211 |  | 6 items |  | Joe Perches | joe@perches.com | 1338837971 |  | brcmfmac: Fix likely misuse of || for &  Using || with a constant is always true. Likely this should have be &.  Signed-off-by: Joe Perches <joe@perches.com> Acked-by: Arend van Spriel <arend@broadcom.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | libertas |  | 31 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
f | ray_cs.c | s | 85K | 2508 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
d | mwifiex |  | 41 items |  | Avinash Patil | patila@marvell.com | 1340827234 |  | mwifiex: fix memory leak associated with IE manamgement  Free ap_custom_ie before return from function.  Signed-off-by: Avinash Patil <patila@marvell.com> Signed-off-by: Bing Zhao <bzhao@marvell.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | rtlwifi |  | 28 items |  | Larry Finger | Larry.Finger@lwfinger.net | 1340822892 |  | rtlwifi: rtl8192cu: New USB IDs  The latest Realtek driver for the RTL8188CU and RTL8192CU chips adds three new USB IDs.  Reported-by: Xose Vazquez Perez <xose.vazquez@gmail.com> Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net> Cc: Stable <stable@vger.kernel.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | atmel.c | s | 130K | 3935 | Jesper Juhl | jj@chaosbits.net | 1334257567 |  | wireless, atmel: remove pointless test for NULL before release_firmware() call  release_firmware() does its own test. Explicitly checking before the call is redundant.  Signed-off-by: Jesper Juhl <jj@chaosbits.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | wl3501_cs.c | s | 53K | 1820 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | mac80211_hwsim.c | s | 54K | 1725 | Qasim Javed | qasimj@gmail.com | 1339177438 |  | mac80211_hwsim: Set IEEE80211_STAT_ACK flag when userspace indicates that the frame has been acknowledged.  The station fail average is not updated correctly since the IEEE80211_STAT_ACK flag is not set when using wmediumd with mac80211_hwsim. Set this flag when wmediumd indicates that the frame was successfully transmitted (eventually).  Signed-off-by: Qasim Javed <qasimj@gmail.com> Signed-off-by: Javier Cardona <javier@cozybit.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | p54 |  | 18 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
f | ray_cs.h | s | 2.1K | 65 | Dominik Brodowski | linux@dominikbrodowski.net | 1285773621 |  | pcmcia: do not use win_req_t when calling pcmcia_request_window()  Instead of win_req_t, drivers are now requested to fill out struct pcmcia_device *p_dev->resource[2,3,4,5] for up to four iomem ranges. After a call to pcmcia_request_window(), the windows found there are reserved and may be used until pcmcia_release_window() is called.  CC: netdev@vger.kernel.org CC: linux-wireless@vger.kernel.org CC: linux-mtd@lists.infradead.org CC: Jiri Kosina <jkosina@suse.cz> CC: linux-scsi@vger.kernel.org Tested-by: Wolfram Sang <w.sang@pengutronix.de> Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
f | adm8211.h | s | 17K | 537 | Eric Dumazet | eric.dumazet@gmail.com | 1275560303 |  | drivers/net: use __packed annotation  cleanup patch.  Use new __packed annotation in drivers/net/  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | rt2x00 |  | 41 items |  | Stanislaw Gruszka | sgruszka@redhat.com | 1338837986 |  | rt2x00: use atomic variable for seqno  Remove spinlock as atomic_t can be used instead. Note we use only 16 lower bits, upper bits are changed but we impilcilty cast to u16.  This fix possible deadlock on IBSS mode reproted by lockdep:  ================================= [ INFO: inconsistent lock state ] 3.4.0-wl+ #4 Not tainted --------------------------------- inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage. kworker/u:2/30374 [HC0[0]:SC0[0]:HE1:SE1] takes:  (&(&intf->seqlock)->rlock){+.?...}, at: [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib] {IN-SOFTIRQ-W} state was registered at:   [<c04978ab>] __lock_acquire+0x47b/0x1050   [<c0498504>] lock_acquire+0x84/0xf0   [<c0835733>] _raw_spin_lock+0x33/0x40   [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]   [<f9979f2a>] rt2x00queue_write_tx_frame+0x1a/0x300 [rt2x00lib]   [<f997834f>] rt2x00mac_tx+0x7f/0x380 [rt2x00lib]   [<f98fe363>] __ieee80211_tx+0x1b3/0x300 [mac80211]   [<f98ffdf5>] ieee80211_tx+0x105/0x130 [mac80211]   [<f99000dd>] ieee80211_xmit+0xad/0x100 [mac80211]   [<f9900519>] ieee80211_subif_start_xmit+0x2d9/0x930 [mac80211]   [<c0782e87>] dev_hard_start_xmit+0x307/0x660   [<c079bb71>] sch_direct_xmit+0xa1/0x1e0   [<c0784bb3>] dev_queue_xmit+0x183/0x730   [<c078c27a>] neigh_resolve_output+0xfa/0x1e0   [<c07b436a>] ip_finish_output+0x24a/0x460   [<c07b4897>] ip_output+0xb7/0x100   [<c07b2d60>] ip_local_out+0x20/0x60   [<c07e01ff>] igmpv3_sendpack+0x4f/0x60   [<c07e108f>] igmp_ifc_timer_expire+0x29f/0x330   [<c04520fc>] run_timer_softirq+0x15c/0x2f0   [<c0449e3e>] __do_softirq+0xae/0x1e0 irq event stamp: 18380437 hardirqs last  enabled at (18380437): [<c0526027>] __slab_alloc.clone.3+0x67/0x5f0 hardirqs last disabled at (18380436): [<c0525ff3>] __slab_alloc.clone.3+0x33/0x5f0 softirqs last  enabled at (18377616): [<c0449eb3>] __do_softirq+0x123/0x1e0 softirqs last disabled at (18377611): [<c041278d>] do_softirq+0x9d/0xe0  other info that might help us debug this:  Possible unsafe locking scenario:         CPU0        ----   lock(&(&intf->seqlock)->rlock);   <Interrupt>     lock(&(&intf->seqlock)->rlock);   *** DEADLOCK ***  4 locks held by kworker/u:2/30374:  #0:  (wiphy_name(local->hw.wiphy)){++++.+}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #1:  ((&sdata->work)){+.+.+.}, at: [<c045cf99>] process_one_work+0x109/0x3f0  #2:  (&ifibss->mtx){+.+.+.}, at: [<f98f005b>] ieee80211_ibss_work+0x1b/0x470 [mac80211]  #3:  (&intf->beacon_skb_mutex){+.+...}, at: [<f997a644>] rt2x00queue_update_beacon+0x24/0x50 [rt2x00lib]  stack backtrace: Pid: 30374, comm: kworker/u:2 Not tainted 3.4.0-wl+ #4 Call Trace:  [<c04962a6>] print_usage_bug+0x1f6/0x220  [<c0496a12>] mark_lock+0x2c2/0x300  [<c0495ff0>] ? check_usage_forwards+0xc0/0xc0  [<c04978ec>] __lock_acquire+0x4bc/0x1050  [<c0527890>] ? __kmalloc_track_caller+0x1c0/0x1d0  [<c0777fb6>] ? copy_skb_header+0x26/0x90  [<c0498504>] lock_acquire+0x84/0xf0  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<c0835733>] _raw_spin_lock+0x33/0x40  [<f9979a20>] ? rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f9979a20>] rt2x00queue_create_tx_descriptor+0x380/0x490 [rt2x00lib]  [<f997a5cf>] rt2x00queue_update_beacon_locked+0x5f/0xb0 [rt2x00lib]  [<f997a64d>] rt2x00queue_update_beacon+0x2d/0x50 [rt2x00lib]  [<f9977e3a>] rt2x00mac_bss_info_changed+0x1ca/0x200 [rt2x00lib]  [<f9977c70>] ? rt2x00mac_remove_interface+0x70/0x70 [rt2x00lib]  [<f98e4dd0>] ieee80211_bss_info_change_notify+0xe0/0x1d0 [mac80211]  [<f98ef7b8>] __ieee80211_sta_join_ibss+0x3b8/0x610 [mac80211]  [<c0496ab4>] ? mark_held_locks+0x64/0xc0  [<c0440012>] ? virt_efi_query_capsule_caps+0x12/0x50  [<f98efb09>] ieee80211_sta_join_ibss+0xf9/0x140 [mac80211]  [<f98f0456>] ieee80211_ibss_work+0x416/0x470 [mac80211]  [<c0496d8b>] ? trace_hardirqs_on+0xb/0x10  [<c077683b>] ? skb_dequeue+0x4b/0x70  [<f98f207f>] ieee80211_iface_work+0x13f/0x230 [mac80211]  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<c045d015>] process_one_work+0x185/0x3f0  [<c045cf99>] ? process_one_work+0x109/0x3f0  [<f98f1f40>] ? ieee80211_teardown_sdata+0xa0/0xa0 [mac80211]  [<c045ed86>] worker_thread+0x116/0x270  [<c045ec70>] ? manage_workers+0x1e0/0x1e0  [<c0462f64>] kthread+0x84/0x90  [<c0462ee0>] ? __init_kthread_worker+0x60/0x60  [<c083d382>] kernel_thread_helper+0x6/0x10  Cc: stable@vger.kernel.org Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Helmut Schaa <helmut.schaa@googlemail.com> Acked-by: Gertjan van Wingerde <gwingerde@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | b43legacy |  | 25 items |  | Anatol Pomozov | anatol.pomozov@gmail.com | 1340561032 |  | Fix typo in printed messages  Coult -> Could  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
d | hostap |  | 20 items |  | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rayctl.h | s | 25K | 665 | David S. Miller | davem@davemloft.net | 1322340089 |  | ray_cs: Fix array bounds warnings.  rx_msg is defined to have a 1 entry array at the end, so gcc warns:  drivers/net/wireless/ray_cs.c: In function ‘rx_authenticate’: drivers/net/wireless/ray_cs.c:2436:3: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2436:3: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2436:3: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2436:3: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2436:3: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2439:15: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2452:16: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2453:18: warning: array subscript is above array bounds [-Warray-bounds] drivers/net/wireless/ray_cs.c:2453:32: warning: array subscript is above array bounds [-Warray-bounds]  Use a zero length array and rename to "ray_rx_msg" to make sure we hit all of the necessary cases.  Signed-off-by: David S. Miller <davem@davemloft.net>
d | ti |  | 5 items |  | Randy Dunlap | rdunlap@xenotime.net | 1340651653 |  | wlcore: drop INET dependency  Mainline build reports:  warning: (WL12XX) selects WLCORE which has unmet direct dependencies (NETDEVICES && WLAN && WL_TI && GENERIC_HARDIRQS && MAC80211 && INET)  The INET dependency was added in commit 3c6af5b54fe74b6e56efadc22927e4055d00e9fc:     wl1271_main.c:(.text+0x271052): undefined reference to `unregister_inetaddr_ notifier'     wl1271_main.c:(.text+0x2714d7): undefined reference to `register_inetaddr_no tifier'      Driver is doing some filtering based on IP addresses...  but this driver no longer has that code and it builds fine even when CONFIG_INET is not enabled, so drop that dependency and eliminate the kconfig warning message.  Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Cc: Luciano Coelho <luciano.coelho@nokia.com> Cc: John W. Linville <linville@tuxdriver.com> Acked-by: Luciano Coelho <coelho@ti.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
d | zd1211rw |  | 15 items |  | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
d | libertas_tf |  | 7 items |  | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
f | adm8211.c | s | 53K | 1654 | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | rndis_wlan.c | s | 99K | 3113 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1339439355 |  | rndis_wlan: fix matching bssid check in rndis_check_bssid_list()  rndis_check_bssid_list() originally tried to check if bssid->mac and match_bssid are equal using compare_ether_addr() when it should use !compare_ether_addr(). This check was added by commit b5257c952dda24df7078c74b7b811b44c6e49206 as part of workaround for hardware issue.  Commit 2e42e4747ea72943c21551d8a206b51a9893b1e0 that replaced compare_ether_addr with ether_addr_equal relieved that this compare to be inverse of what it should be.  Compare was added as response to hardware bug, where bssid-list does not contain BSSID and other information of currently connected AP (spec insists that device must provide this information in the list when connected). Lack bssid-data on current connection then causes WARN_ON somewhere in cfg80211. Workaround was to check if bssid-list returns current bssid and if it does not, manually construct bssid information in other ways. And this workaround worked, with inverse check. Which must mean that when hardware is experiencing the problem, it's actually returning empty bssid-list and this check didn't make any difference for workaround.  However inverse check causes workaround be activated when bssid-list returns only entry, currently connected BSSID. That does not cause problems in itself, just slightly more inaccurate information in scan-list.  Cc: Joe Perches <joe@perches.com> Cc: David S. Miller <davem@davemloft.net> Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | airo.c | s | 218K | 7280 | Dan Carpenter | dan.carpenter@oracle.com | 1340132186 |  | airo: copying wrong data in airo_get_aplist()  "qual" used to be declared on the stack, but then in 998a5a7d6a ("airo: reduce stack memory footprint") we made it dynamically allocated. Unfortunately the memcpy() here was missed and it's still copying stack memory instead of the data that we want.  In other words, "&qual" should be "qual".  Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | airo_cs.c | s | 6.6K | 181 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | zd1201.c | s | 45K | 1636 | Sarah Sharp | sarah.a.sharp@linux.intel.com | 1337380975 |  | USB: Disable hub-initiated LPM for comms devices.  Hub-initiated LPM is not good for USB communications devices.  Comms devices should be able to tell when their link can go into a lower power state, because they know when an incoming transmission is finished. Ideally, these devices would slam their links into a lower power state, using the device-initiated LPM, after finishing the last packet of their data transfer.  If we enable the idle timeouts for the parent hubs to enable hub-initiated LPM, we will get a lot of useless LPM packets on the bus as the devices reject LPM transitions when they're in the middle of receiving data.  Worse, some devices might blindly accept the hub-initiated LPM and power down their radios while they're in the middle of receiving a transmission.  The Intel Windows folks are disabling hub-initiated LPM for all USB communications devices under a xHCI USB 3.0 host.  In order to keep the Linux behavior as close as possible to Windows, we need to do the same in Linux.  Set the disable_hub_initiated_lpm flag for for all USB communications drivers.  I know there aren't currently any USB 3.0 devices that implement these class specifications, but we should be ready if they do.  Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com> Cc: Marcel Holtmann <marcel@holtmann.org> Cc: Gustavo Padovan <gustavo@padovan.org> Cc: Johan Hedberg <johan.hedberg@gmail.com> Cc: Hansjoerg Lipp <hjlipp@web.de> Cc: Tilman Schmidt <tilman@imap.cc> Cc: Karsten Keil <isdn@linux-pingi.de> Cc: Peter Korsgaard <jacmet@sunsite.dk> Cc: Jan Dumon <j.dumon@option.com> Cc: Petko Manolov <petkan@users.sourceforge.net> Cc: Steve Glendinning <steve.glendinning@smsc.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Kalle Valo <kvalo@qca.qualcomm.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Jouni Malinen <jouni@qca.qualcomm.com> Cc: Vasanthakumar Thiagarajan <vthiagar@qca.qualcomm.com> Cc: Senthil Balasubramanian <senthilb@qca.qualcomm.com> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Brett Rudley <brudley@broadcom.com> Cc: Roland Vossen <rvossen@broadcom.com> Cc: Arend van Spriel <arend@broadcom.com> Cc: "Franky (Zhenhui) Lin" <frankyl@broadcom.com> Cc: Kan Yan <kanyan@broadcom.com> Cc: Dan Williams <dcbw@redhat.com> Cc: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Gertjan van Wingerde <gwingerde@gmail.com> Cc: Helmut Schaa <helmut.schaa@googlemail.com> Cc: Herton Ronaldo Krzesinski <herton@canonical.com> Cc: Hin-Tak Leung <htl10@users.sourceforge.net> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: Chaoming Li <chaoming_li@realsil.com.cn> Cc: Daniel Drake <dsd@gentoo.org> Cc: Ulrich Kunitz <kune@deine-taler.de> Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
d | rtl818x |  | 5 items |  | Stanislaw Gruszka | sgruszka@redhat.com | 1339177437 |  | rtl8187: ->brightness_set can not sleep  Fix:  BUG: sleeping function called from invalid context at kernel/workqueue.c:2547 in_atomic(): 1, irqs_disabled(): 0, pid: 629, name: wpa_supplicant 2 locks held by wpa_supplicant/629:  #0:  (rtnl_mutex){+.+.+.}, at: [<c08b2b84>] rtnl_lock+0x14/0x20  #1:  (&trigger->leddev_list_lock){.+.?..}, at: [<c0867f41>] led_trigger_event+0x21/0x80 Pid: 629, comm: wpa_supplicant Not tainted 3.3.0-0.rc3.git5.1.fc17.i686 Call Trace:  [<c046a9f6>] __might_sleep+0x126/0x1d0  [<c0457d6c>] wait_on_work+0x2c/0x1d0  [<c045a09a>] __cancel_work_timer+0x6a/0x120  [<c045a160>] cancel_delayed_work_sync+0x10/0x20  [<f7dd3c22>] rtl8187_led_brightness_set+0x82/0xf0 [rtl8187]  [<c0867f7c>] led_trigger_event+0x5c/0x80  [<f7ff5e6d>] ieee80211_led_radio+0x1d/0x40 [mac80211]  [<f7ff3583>] ieee80211_stop_device+0x13/0x230 [mac80211]  Removing _sync is ok, because if led_on work is currently running it will be finished before led_off work start to perform, since they are always queued on the same mac80211 local->workqueue.  Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=795176  Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com> Acked-by: Larry Finger <Larry.Finger@lwfinger.net> Acked-by: Hin-Tak Leung <htl10@users.sourceforge.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | atmel_pci.c | s | 2.3K | 58 | Axel Lin | axel.lin@gmail.com | 1334601530 |  | net/wireless: use module_pci_driver  This patch converts the drivers in drivers/net/wireless/* to use module_pci_driver() macro which makes the code smaller and a bit simpler.  Signed-off-by: Axel Lin <axel.lin@gmail.com> Cc: "John W. Linville" <linville@tuxdriver.com> Cc: Jiri Slaby <jirislaby@gmail.com> Cc: Nick Kossifidis <mickflemm@gmail.com> Cc: "Luis R. Rodriguez" <mcgrof@qca.qualcomm.com> Cc: Simon Kelley <simon@thekelleys.org.uk> Cc: Jouni Malinen <j@w1.fi> Cc: Lennert Buytenhek <buytenh@wantstofly.org> Cc: Christian Lamparter <chunkeey@googlemail.com> Cc: Ivo van Doorn <IvDoorn@gmail.com> Cc: Larry Finger <Larry.Finger@lwfinger.net> Cc: linux-wireless@vger.kernel.org Acked-by: Lennert Buytenhek <buytenh@wantstofly.org> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | airo.h | s | 272B | 7 | Adrian Bunk | bunk@stusta.de | 1131242403 |  | [PATCH] airo.c/airo_cs.c: correct prototypes  This patch creates a file airo.h containing prototypes of the global functions in airo.c used by airo_cs.c .  If you got strange problems with either airo_cs devices or in any other completely unrelated part of the kernel shortly or long after a airo_cs device was detected by the kernel, this might have been caused by the fact that caller and callee disagreed regarding the size of the first argument to init_airo_card()...  Signed-off-by: Adrian Bunk <bunk@stusta.de> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | atmel.h | s | 1.5K | 33 | simon@thekelleys.org.uk | simon@thekelleys.org.uk | 1131714737 |  | [PATCH] Atmel wireless update  * Merge PCMCIA card table with new Brodowski PCMCIA id table. * Add missing entries to PCMCIA id table. * Other tweaks to conform with Documentation/driver-changes.txt   (types, call request_region, etc) * Fix size of requested IO region. * Reduce printk verbosity. * Remove EXPERIMENTAL * tweak to association code - don't force shared key authentication   when wep in use.  Signed-off-by: Jeff Garzik <jgarzik@pobox.com>
d | orinoco |  | 31 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
d | ipw2x00 |  | 13 items |  | Stanislav Yakovlev | stas.yakovlev@gmail.com | 1339177437 |  | net/wireless: ipw2100: Fix WARN_ON occurring in wiphy_register called by ipw2100_pci_init_one  The problem was found by Larry Finger: http://marc.info/?l=linux-wireless&m=133702401700614&w=2  The problem is identical to the one for ipw2200 which is already fixed: http://marc.info/?l=linux-wireless&m=133457257407196&w=2  [   17.766431] ------------[ cut here ]------------ [   17.766467] WARNING: at net/wireless/core.c:562 wiphy_register+0x34c/0x3c0 [cfg80211]() [   17.766471] Hardware name: Latitude D600 [   17.766474] Modules linked in: ipw2100(+) libipw pcmcia cfg80211 ppdev parport_pc yenta_socket sr_mod pcmcia_rsrc parport iTCO_wdt cdrom sg rfkill pcmcia_ core lib80211 tg3 video button battery ac iTCO_vendor_support joydev shpchp pcspkr pciehp pci_hotplug autofs4 radeon ttm drm_kms_helper uhci_hcd ehci_hcd rtc _cmos thermal drm hwmon i2c_algo_bit i2c_core processor usbcore usb_common ata_generic ata_piix ahci libahci libata [   17.766525] Pid: 474, comm: modprobe Not tainted 3.4.0-rc7-wl+ #6 [   17.766528] Call Trace: [   17.766541]  [<c066ad08>] ? printk+0x28/0x2a [   17.766552]  [<c0230edd>] warn_slowpath_common+0x6d/0xa0 [   17.766563]  [<e0b253bc>] ? wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766573]  [<e0b253bc>] ? wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766578]  [<c0230f2d>] warn_slowpath_null+0x1d/0x20 [   17.766588]  [<e0b253bc>] wiphy_register+0x34c/0x3c0 [cfg80211] [   17.766605]  [<e0b5b0d6>] ipw2100_wdev_init+0x196/0x1c0 [ipw2100] [   17.766616]  [<e0b5d962>] ipw2100_pci_init_one+0x2b2/0x694 [ipw2100] [   17.766632]  [<c047ce52>] local_pci_probe+0x42/0xb0 [   17.766637]  [<c047e2b0>] pci_device_probe+0x60/0x90 [   17.766645]  [<c0376de2>] ? sysfs_create_link+0x12/0x20 [   17.766654]  [<c050f1f6>] really_probe+0x56/0x2e0 [   17.766659]  [<c037636d>] ? create_dir+0x5d/0xa0 [   17.766667]  [<c0518c6b>] ? pm_runtime_barrier+0x3b/0xa0 [   17.766672]  [<c050f5e4>] driver_probe_device+0x44/0xa0 [   17.766677]  [<c047e227>] ? pci_match_device+0x97/0xa0 [   17.766681]  [<c050f6c9>] __driver_attach+0x89/0x90 [   17.766686]  [<c050f640>] ? driver_probe_device+0xa0/0xa0 [   17.766691]  [<c050da2a>] bus_for_each_dev+0x3a/0x70 [   17.766695]  [<c050ee6c>] driver_attach+0x1c/0x30 [   17.766699]  [<c050f640>] ? driver_probe_device+0xa0/0xa0 [   17.766704]  [<c050ea77>] bus_add_driver+0x187/0x280 [   17.766710]  [<c045b9cd>] ? kset_find_obj+0x2d/0x60 [   17.766715]  [<c047e2e0>] ? pci_device_probe+0x90/0x90 [   17.766719]  [<c047e2e0>] ? pci_device_probe+0x90/0x90 [   17.766724]  [<c050fb85>] driver_register+0x65/0x110 [   17.766729]  [<c047e09d>] __pci_register_driver+0x3d/0xa0 [   17.766738]  [<e09f705c>] ipw2100_init+0x5c/0x1000 [ipw2100] [   17.766743]  [<c020110f>] do_one_initcall+0x2f/0x170 [   17.766749]  [<e09f7000>] ? 0xe09f6fff [   17.766757]  [<c0287ce8>] sys_init_module+0xa8/0x210 [   17.766766]  [<c067a075>] syscall_call+0x7/0xb [   17.766769] ---[ end trace 559898c6bb0d1c75 ]--- [   17.767093] ipw2100: probe of 0000:02:03.0 failed with error -5  This warning appears only if we apply Ben Hutchings' fix http://marc.info/?l=linux-wireless&m=132720204412667&w=2 for the bug reported by Cesare Leonardi http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=656813 with cfg80211 warning during device registration ("cfg80211: failed to add phy80211 symlink to netdev!").  We separate device bring up and registration with network stack to avoid the problem.  Signed-off-by: Stanislav Yakovlev <stas.yakovlev@gmail.com> Tested-by: Larry Finger <Larry.Finger@lwfinger.net> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | at76c50x-usb.h | s | 11K | 399 | Bing Zhao | bzhao@marvell.com | 1299705056 |  | ieee80211: add IEEE80211_COUNTRY_STRING_LEN definition  and make use of it in wireless drivers  Signed-off-by: Bing Zhao <bzhao@marvell.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | zd1201.h | s | 4.1K | 124 | Stephen Hemminger | shemminger@vyatta.com | 1237701080 |  | zd1201: convert to internal net_device_stats  Signed-off-by: Stephen Hemminger <shemminger@vyatta.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mwl8k.c | s | 141K | 4872 | Joe Perches | joe@perches.com | 1336707181 |  | drivers/net: Convert compare_ether_addr to ether_addr_equal  Use the new bool function ether_addr_equal to add some clarity and reduce the likelihood for misuse of compare_ether_addr for sorting.  Done via cocci script:  $ cat compare_ether_addr.cocci @@ expression a,b; @@ -	!compare_ether_addr(a, b) +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	compare_ether_addr(a, b) +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) == 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!ether_addr_equal(a, b) != 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) == 0 +	!ether_addr_equal(a, b)  @@ expression a,b; @@ -	ether_addr_equal(a, b) != 0 +	ether_addr_equal(a, b)  @@ expression a,b; @@ -	!!ether_addr_equal(a, b) +	ether_addr_equal(a, b)  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: David S. Miller <davem@davemloft.net>
d | prism54 |  | 16 items |  | Jim Cromie | jim.cromie@gmail.com | 1334257847 |  | prism54: replace open-coded ARRAY_SIZE with macro  Signed-off-by: Jim Cromie <jim.cromie@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | Kconfig | g | 9.1K |  | Luciano Coelho | coelho@ti.com | 1334209435 |  | wireless/wl12xx/wl1251: move TI WLAN modules to a common ti subdirectory  Move wl12xx and wl1251 modules into a new drivers/net/wireless/ti directory.  Add a TI WLAN Kconfig option and Makefile to support this change.  Signed-off-by: Luciano Coelho <coelho@ti.com> Cc: John W. Linville <linville@tuxdriver.com>
f | atmel_cs.c | s | 10K | 233 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
d | iwlwifi |  | 60 items |  | Johannes Berg | johannes.berg@intel.com | 1340651653 |  | iwlwifi: fix activating inactive stations  When authentication/association timed out, the driver would complain bitterly, printing the message ACTIVATE a non DRIVER active station id ... addr ...  The cause turns out to be that when the AP station is added but we don't associate, the IWL_STA_UCODE_INPROGRESS is set but never cleared. This then causes iwl_restore_stations() to attempt to resend it because it uses the flag internally and uploads even if it didn't set it itself.  To fix this issue and not upload the station again when it has already been removed by mac80211, clear the flag after adding it in case we add it only for association.  Cc: stable@vger.kernel.org Reviewed-by: Meenakshi Venkataraman <meenakshi.venkataraman@intel.com> Reviewed-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com> Signed-off-by: Johannes Berg <johannes.berg@intel.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
f | at76c50x-usb.c | s | 68K | 2093 | Linus Torvalds | torvalds@linux-foundation.org | 1337727046 |  | 
f | wl3501.h | s | 14K | 564 | Eric Dumazet | eric.dumazet@gmail.com | 1275560303 |  | drivers/net: use __packed annotation  cleanup patch.  Use new __packed annotation in drivers/net/  Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | mac80211_hwsim.h | s | 4.1K | 124 | Javier Lopez | jlopex@gmail.com | 1306955460 |  | mac80211_hwsim driver support userspace frame tx/rx  This patch adds to mac80211_hwsim the capability to send traffic via userspace.  Frame exchange between kernel and user spaces is done through generic netlink communication protocol. A new generic netlink family MAC80211_HWSIM is proposed, this family contains three basic commands HWSIM_CMD_REGISTER, which is the command used to register a new traffic listener, HWSIM_CMD_FRAME, to exchange the frames from kernel to user and vice-versa, and HWSIM_CMD_TX_INFO_FRAME which returns from user all the information about retransmissions, rates, rx signal, and so on.  How it works:  Once the driver is loaded the MAC80211_HWSIM family will be registered. In the absence of userspace daemon, the driver itselfs implements a perfect wireless medium as it did in the past. When a daemon sends a HWSIM_CMD_REGISTER command, the module stores the application PID, and from this moment all frames will be sent to the registered daemon.  The user space application will be in charge of process/forward all frames broadcast by any mac80211_hwsim radio. If the user application is stopped, the kernel module will detect the release of the socket and it will switch back to in-kernel perfect channel simulation.  The userspace daemon must be waiting for incoming HWSIM_CMD_FRAME commands sent from kernel, for each HWSIM_CMD_FRAME command the application will try to broadcast this frame to all mac80211_hwsim radios, however the application may decide to forward/drop this frame. In the case of forwarding the frame, a new HWSIM_CMD_FRAME command will be created, all necessary attributes will be populated and the frame will be sent back to the kernel.  Also after the frame broadcast phase, a HWSIM_CMD_TX_INFO_FRAME command will be sent from userspace to kernel, this command contains all the information regarding the transmission, such as number of tries, rates, ack signal, etc.  You can find the actual implementation of wireless mediumd daemon (wmediumd) at:  * Last version tarball: https://github.com/jlopex/cozybit/tarball/master * Or visiting my github tree: https://github.com/jlopex/cozybit/tree  Signed-off-by: Javier Lopez <jlopex@gmail.com> Signed-off-by: John W. Linville <linville@tuxdriver.com>
