d | ipu |  | 4 items |  | Sascha Hauer | s.hauer@pengutronix.de | 1335366223 |  | dmaengine i.MX ipu: clk_prepare/unprepare clock  Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
f | Makefile | g | 1.1K |  | Russell King | rmk+kernel@arm.linux.org.uk | 1331119941 |  | DMA: sa11x0: add SA-11x0 DMA driver  Add support for the SA-11x0 DMA driver, which replaces the private API version in arch/arm/mach-sa1100/dma.c.  We model this as a set of virtual DMA channels, one for each request signal, and assign the virtual DMA channel to a physical DMA channel when there is work to be done.  This allows DMA users to claim their channels, and hold them while not in use, without affecting the availability of the physical channels.  Another advantage over this approach, compared to the private version, is that a channel can be reconfigured on the fly without having to release and re-request it - which for the IrDA driver, allows us to use DMA for SIR mode transmit without eating up three physical channels.  As IrDA is half-duplex, we actually only need one physical channel, and this architecture allows us to achieve that.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | coh901318_lli.c | s | 6.3K | 246 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use sg_dma_address instead of sg_phys  dmaengine drivers should always use sg_dma_address instead of sg_phys to get the addresses for the transfer from a sg element.  To quote Russel King: 	sg_phys(sg) of course has nothing to do with DMA addresses. It's the 	physical address _to the CPU_ of the memory associated with the scatterlist 	entry. That may, or may not have the same value for the DMA engine, 	particularly if IOMMUs are involved.  	And if these drivers are used on ARM, they must be fixed, sooner rather 	than later.  There's patches in the works which will mean we will end up 	with IOMMU support in the DMA mapping later, which means everything I've 	said above will become reality.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; @@ -sg_phys(sg) +sg_dma_address(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | timb_dma.c | s | 20K | 668 | Alexandre Bounine | alexandre.bounine@idt.com | 1332337823 |  | dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic  Add context parameter to device_prep_slave_sg() and device_prep_dma_cyclic() interfaces to allow passing client/target specific information associated with the data transfer. Modify all affected DMA engine drivers.  Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | pl330.c | s | 66K | 2497 | Javi Merino | javi.merino@arm.com | 1339643392 |  | DMA: PL330: Fix racy mutex unlock  pl330_update() stores a pointer to the thrd->req that finished, which contains a pointer to the corresponding pl330_req.  This is done with the pl330_lock held.  Then, it iterates through the req_done list, calling the callback for each of the requests that are done.  The problem is that the driver releases the lock before calling the callback for each of the callbacks.  pl330_submit_req() running in another processor can then acquire the lock and insert another request in one of the thrd->req that hasn't been processed yet, replacing the pointer to pl330_req there.  When the callback returns in pl330_update() and the next rqdone is popped from the list, it dereferences the pl330_req pointer to the just scheduled pl330_req, instead of the one that has finished, calling pl330 with the wrong r.  This patch fixes this by storing the pointer to pl330_req directly in the list.  Signed-off-by: Javi Merino <javi.merino@arm.com> Cc: Jassi Brar <jaswinder.singh@linaro.org> Acked-by: Jassi Brar <jaswinder.singh@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | dw_dmac_regs.h | s | 6.5K | 210 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618766 |  | dmaengine: move last completed cookie into generic dma_chan structure  Every DMA engine implementation declares a last completed dma cookie in their private dma channel structures.  This is pointless, and forces driver specific code.  Move this out into the common dma_chan structure.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | TODO | g | 368B |  | Per Forlin | per.forlin@linaro.org | 1310596328 |  | dmaengine: remove ste_dma40 from issue_pending TODO  ste_dma40 now implements issue_pending according to documentation. Submit adds descriptos to a pending queue with are flushed down to the DMAC at issue_pending.  Signed-off-by: Per Forlin <per.forlin@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@intel.com>
f | coh901318_lli.h | s | 3.4K | 111 | Vinod Koul | vinod.koul@linux.intel.com | 1319729023 |  | dmaengine: move drivers to dma_transfer_direction  fixup usage of dma direction by introducing dma_transfer_direction, this patch moves dma/drivers/* to use new enum  Cc: Jassi Brar <jaswinder.singh@linaro.org> Cc: Russell King <rmk+kernel@arm.linux.org.uk> Cc: Viresh Kumar <viresh.kumar@st.com> Cc: Linus Walleij <linus.walleij@linaro.org> Cc: Nicolas Ferre <nicolas.ferre@atmel.com> Cc: Mika Westerberg <mika.westerberg@iki.fi> Cc: H Hartley Sweeten <hartleys@visionengravers.com> Cc: Li Yang <leoli@freescale.com> Cc: Zhang Wei <zw@zh-kernel.org> Cc: Sascha Hauer <s.hauer@pengutronix.de> Cc: Guennadi Liakhovetski <g.liakhovetski@gmx.de> Cc: Shawn Guo <shawn.guo@freescale.com> Cc: Yong Wang <yong.y.wang@intel.com> Cc: Tomoya MORINAGA <tomoya-linux@dsn.lapis-semi.com> Cc: Boojin Kim <boojin.kim@samsung.com> Cc: Barry Song <Baohua.Song@csr.com> Acked-by: Mika Westerberg <mika.westerberg@iki.fi> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Viresh Kumar <viresh.kumar@st.com> Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | intel_mid_dma.c | s | 39K | 1317 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use dma_sg_len(sg) instead of sg->length  sg->length may or may not contain the length of the dma region to transfer, depending on the architecture - dma_sg_len(sg) always will though. For the architectures which use the drivers modified by this patch it probably is the case that sg->length contains the dma transfer length. But to be consistent and future proof change them to use dma_sg_len.  To quote Russel King: 	sg->length is meaningless to something performing DMA.  	In cases where sg_dma_len(sg) and sg->length are the same storage, then 	there's no problem. But scatterlists _can_ (and one some architectures) do 	split them - especially when you have an IOMMU which can allow you to 	combine a scatterlist into fewer entries.  	So, anything using sg->length for the size of a scatterlist's DMA transfer 	_after_ a call to dma_map_sg() is almost certainly buggy.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; expression X; @@ -sg[X].length +sg_dma_len(&sg[X]) @@ struct scatterlist *sg; @@ -sg->length +sg_dma_len(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | dmaengine.h | s | 2.2K | 79 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618842 |  | dmaengine: consolidate initialization of cookies  Provide a common function to initialize a channels cookie values.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | sirf-dma.c | s | 18K | 572 | Alexandre Bounine | alexandre.bounine@idt.com | 1332337823 |  | dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic  Add context parameter to device_prep_slave_sg() and device_prep_dma_cyclic() interfaces to allow passing client/target specific information associated with the data transfer. Modify all affected DMA engine drivers.  Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | shdma.c | s | 38K | 1229 | Alexandre Bounine | alexandre.bounine@idt.com | 1332337823 |  | dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic  Add context parameter to device_prep_slave_sg() and device_prep_dma_cyclic() interfaces to allow passing client/target specific information associated with the data transfer. Modify all affected DMA engine drivers.  Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | ste_dma40.c | s | 85K | 2835 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use dma_sg_len(sg) instead of sg->length  sg->length may or may not contain the length of the dma region to transfer, depending on the architecture - dma_sg_len(sg) always will though. For the architectures which use the drivers modified by this patch it probably is the case that sg->length contains the dma transfer length. But to be consistent and future proof change them to use dma_sg_len.  To quote Russel King: 	sg->length is meaningless to something performing DMA.  	In cases where sg_dma_len(sg) and sg->length are the same storage, then 	there's no problem. But scatterlists _can_ (and one some architectures) do 	split them - especially when you have an IOMMU which can allow you to 	combine a scatterlist into fewer entries.  	So, anything using sg->length for the size of a scatterlist's DMA transfer 	_after_ a call to dma_map_sg() is almost certainly buggy.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; expression X; @@ -sg[X].length +sg_dma_len(&sg[X]) @@ struct scatterlist *sg; @@ -sg->length +sg_dma_len(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | pch_dma.c | s | 26K | 859 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use sg_dma_address instead of sg_phys  dmaengine drivers should always use sg_dma_address instead of sg_phys to get the addresses for the transfer from a sg element.  To quote Russel King: 	sg_phys(sg) of course has nothing to do with DMA addresses. It's the 	physical address _to the CPU_ of the memory associated with the scatterlist 	entry. That may, or may not have the same value for the DMA engine, 	particularly if IOMMUs are involved.  	And if these drivers are used on ARM, they must be fixed, sooner rather 	than later.  There's patches in the works which will mean we will end up 	with IOMMU support in the DMA mapping later, which means everything I've 	said above will become reality.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; @@ -sg_phys(sg) +sg_dma_address(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | dmaengine.c | s | 28K | 935 | Linus Torvalds | torvalds@linux-foundation.org | 1334097016 |  | 
f | dmatest.c | s | 17K | 577 | Dr. David Alan Gilbert | linux@treblig.org | 1327347798 |  | dmaengine: fix missing 'cnt' in ?: in dmatest  Hi,   On the latest tree my compiler has started giving the warning:  drivers/dma/dmatest.c:575:28: warning: the omitted middle operand in ?: will always be ?true?, suggest explicit middle operand [-Wparentheses]  The following patch fixes the missing middle clause with the same fix that Nicolas Ferre used in the similar clauses. (There seems to have been a race between him fixing that and the extra clause going in a little later).  I don't actually know the dmatest code/structures, nor do I own any hardware to test it on (assuming it needs a DMA engine);  but this patch builds, the existing code is almost certainly wrong and the fix is the same as the corresponding lines above it.  (WTH is x=y?:z legal C anyway?)  Signed-off-by: Dr. David Alan Gilbert <linux@treblig.org> Reported-by: Dan Carpenter <dan.carpenter@oracle.com> Reported-by: Paul Gortmaker <paul.gortmaker@windriver.com> Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | txx9dmac.c | s | 34K | 1150 | Alexandre Bounine | alexandre.bounine@idt.com | 1332337823 |  | dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic  Add context parameter to device_prep_slave_sg() and device_prep_dma_cyclic() interfaces to allow passing client/target specific information associated with the data transfer. Modify all affected DMA engine drivers.  Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | iop-adma.c | s | 48K | 1459 | Linus Torvalds | torvalds@linux-foundation.org | 1334097016 |  | 
f | mpc512x_dma.c | s | 22K | 700 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618842 |  | dmaengine: consolidate initialization of cookies  Provide a common function to initialize a channels cookie values.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | txx9dmac.h | s | 7.7K | 273 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618766 |  | dmaengine: move last completed cookie into generic dma_chan structure  Every DMA engine implementation declares a last completed dma cookie in their private dma channel structures.  This is pointless, and forces driver specific code.  Move this out into the common dma_chan structure.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | mxs-dma.c | s | 19K | 648 | Linus Torvalds | torvalds@linux-foundation.org | 1338062267 |  | 
f | coh901318.c | s | 38K | 1302 | Linus Torvalds | torvalds@linux-foundation.org | 1337963519 |  | Merge branch 'next' of git://git.infradead.org/users/vkoul/slave-dma  Pull slave-dmaengine updates from Vinod Koul:  "Nothing exciting this time, odd fixes in a bunch of drivers"  * 'next' of git://git.infradead.org/users/vkoul/slave-dma:   dmaengine: at_hdmac: take maxburst from slave configuration   dmaengine: at_hdmac: remove ATC_DEFAULT_CTRLA constant   dmaengine: at_hdmac: remove some at_dma_slave comments   dma: imx-sdma: make channel0 operations atomic   dmaengine: Fixup dmaengine_prep_slave_single() to be actually useful   dmaengine: Use dma_sg_len(sg) instead of sg->length   dmaengine: Use sg_dma_address instead of sg_phys   DMA: PL330: Remove duplicate header file inclusion   dma: imx-sdma: keep the callbacks invoked in the tasklet   dmaengine: dw_dma: add Device Tree probing capability   dmaengine: dw_dmac: Add clk_{un}prepare() support   dma/amba-pl08x: add support for the Nomadik variant   dma/amba-pl08x: check for terminal count status only
f | ep93xx_dma.c | s | 38K | 1240 | Linus Torvalds | torvalds@linux-foundation.org | 1338060147 |  | 
f | ste_dma40_ll.c | s | 10K | 355 | Rabin Vincent | rabin.vincent@stericsson.com | 1296455241 |  | dma40: cyclic xfer support  Support cyclic transfers, which are useful for ALSA drivers.  Acked-by: Per Forlin <per.forlin@stericsson.com> Acked-by: Jonas Aaberg <jonas.aberg@stericsson.com> Signed-off-by: Rabin Vincent <rabin.vincent@stericsson.com> Signed-off-by: Linus Walleij <linus.walleij@stericsson.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | dw_dmac.c | s | 41K | 1326 | Viresh Kumar | viresh.linux@gmail.com | 1340228376 |  | Viresh has moved  viresh.kumar@st.com email-id doesn't exist anymore as I have left the company.  Replace ST's id with viresh.linux@gmail.com.  It also updates .mailmap file to fix address for 'git shortlog'  Signed-off-by: Viresh Kumar <viresh.linux@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | at_hdmac_regs.h | s | 14K | 378 | Nicolas Ferre | nicolas.ferre@atmel.com | 1337051838 |  | dmaengine: at_hdmac: take maxburst from slave configuration  The maxburst/chunk size was taken from the private slave DMA data structure. Use the common API provided by DMA_SLAVE_CONFIG to setup src/dst maxburst values. The ctrla field is not needed anymore in the slave private structure nor the header constants that were located in an architecture specific directory. The at91sam9g45_devices.c file that was using this platform data is also modified to remove this now useless data.  Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
d | ppc4xx |  | 5 items |  | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618862 |  | dmaengine: ensure all DMA engine drivers initialize their cookies  Ensure all DMA engine drivers initialize their cookies in the same way, so that they all behave in a similar fashion.  This means their first issued cookie will be 2 rather than 1, and will increment to INT_MAX before returning 1 and starting over.  In connection with this, Dan Williams said: > Russell King wrote: > > Secondly, some DMA engine drivers initialize the dma_chan cookie to 0, > > others to 1.  Is there a reason for this, or are these all buggy? > > I know that ioat and iop-adma expect 0 to mean "I have cleaned up this > descriptor and it is idle", and would break if zero was an in-flight > cookie value.  The reserved usage of zero is an driver internal > concern, but I have no problem formalizing it as a reserved value.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | sa11x0-dma.c | s | 26K | 917 | Russell King | rmk+kernel@arm.linux.org.uk | 1333104380 |  | ARM: sa11x0: fix build errors from DMA engine API updates  The recent merge of the sa11x0 code into mainline had silent conflicts with further development of the DMA engine API, leading to build errors and warnings:  drivers/net/irda/sa1100_ir.c: In function 'sa1100_irda_dma_start': drivers/net/irda/sa1100_ir.c:151: error: too few arguments to function 'chan->device->device_prep_slave_sg' drivers/dma/sa11x0-dma.c: In function 'sa11x0_dma_probe': drivers/dma/sa11x0-dma.c:950: warning: assignment from incompatible pointer type  Fix these.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | ste_dma40_ll.h | s | 9.8K | 300 | Narayanan G | narayanan.gopalakrishnan@stericsson.com | 1335183977 |  | dma40: Improve the logic of stopping logical chan  can be directly stopped by issuing a SUSPEND_REQ on the EE bits. There is no need to suspend the physical channel and restart it.  Also, the support for pre-V2 hw is discontinued.  EE bits for writing:  00: disable only if AS=11 or AS=00 01: enable 10: suspend_req only if AS=01 & EE=01 or EE=11 11: round / no change for writing  Signed-off-by: Narayanan G <narayanan.gopalakrishnan@stericsson.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | mv_xor.h | s | 6.0K | 163 | Andrew Lunn | andrew@lunn.ch | 1336520042 |  | ARM: Orion: XOR: Add support for clk  Some orion platforms can gate the XOR driver clock. If the clock exisits, unable/disable it as appropriate.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Jamie Lentin <jm@lentin.co.uk> Signed-off-by: Mike Turquette <mturquette@linaro.org>
f | intel_mid_dma_regs.h | s | 8.5K | 268 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618766 |  | dmaengine: move last completed cookie into generic dma_chan structure  Every DMA engine implementation declares a last completed dma cookie in their private dma channel structures.  This is pointless, and forces driver specific code.  Move this out into the common dma_chan structure.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | fsldma.c | s | 36K | 1211 | Alexandre Bounine | alexandre.bounine@idt.com | 1332337823 |  | dmaengine: add context parameter to prep_slave_sg and prep_dma_cyclic  Add context parameter to device_prep_slave_sg() and device_prep_dma_cyclic() interfaces to allow passing client/target specific information associated with the data transfer. Modify all affected DMA engine drivers.  Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com> Acked-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Felipe Balbi <balbi@ti.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | amba-pl08x.c | s | 54K | 1802 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use dma_sg_len(sg) instead of sg->length  sg->length may or may not contain the length of the dma region to transfer, depending on the architecture - dma_sg_len(sg) always will though. For the architectures which use the drivers modified by this patch it probably is the case that sg->length contains the dma transfer length. But to be consistent and future proof change them to use dma_sg_len.  To quote Russel King: 	sg->length is meaningless to something performing DMA.  	In cases where sg_dma_len(sg) and sg->length are the same storage, then 	there's no problem. But scatterlists _can_ (and one some architectures) do 	split them - especially when you have an IOMMU which can allow you to 	combine a scatterlist into fewer entries.  	So, anything using sg->length for the size of a scatterlist's DMA transfer 	_after_ a call to dma_map_sg() is almost certainly buggy.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; expression X; @@ -sg[X].length +sg_dma_len(&sg[X]) @@ struct scatterlist *sg; @@ -sg->length +sg_dma_len(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | imx-dma.c | s | 31K | 953 | Lars-Peter Clausen | lars@metafoo.de | 1336718078 |  | dmaengine: Use dma_sg_len(sg) instead of sg->length  sg->length may or may not contain the length of the dma region to transfer, depending on the architecture - dma_sg_len(sg) always will though. For the architectures which use the drivers modified by this patch it probably is the case that sg->length contains the dma transfer length. But to be consistent and future proof change them to use dma_sg_len.  To quote Russel King: 	sg->length is meaningless to something performing DMA.  	In cases where sg_dma_len(sg) and sg->length are the same storage, then 	there's no problem. But scatterlists _can_ (and one some architectures) do 	split them - especially when you have an IOMMU which can allow you to 	combine a scatterlist into fewer entries.  	So, anything using sg->length for the size of a scatterlist's DMA transfer 	_after_ a call to dma_map_sg() is almost certainly buggy.  The patch has been generated using the following coccinelle patch: <smpl> @@ struct scatterlist *sg; expression X; @@ -sg[X].length +sg_dma_len(&sg[X]) @@ struct scatterlist *sg; @@ -sg->length +sg_dma_len(sg) </smpl>  Signed-off-by: Lars-Peter Clausen <lars@metafoo.de> Acked-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | Kconfig | g | 7.9K |  | Dong Aisheng | dong.aisheng@linaro.org | 1336800737 |  | dma: mxs-dma: use global stmp_device functionality  This can get rid of the mach-dependency.  Cc: Dan Williams <dan.j.williams@intel.com> Cc: Sascha Hauer <s.hauer@pengutronix.de> Cc: Huang Shijie <b32955@freescale.com> Signed-off-by: Dong Aisheng <dong.aisheng@linaro.org> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Acked-by: Wolfram Sang <w.sang@pengutronix.de> Acked-by: Marek Vasut <marex@denx.de> Acked-by: Vinod Koul <vinod.koul@intel.com>
f | shdma.h | s | 1.9K | 58 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618766 |  | dmaengine: move last completed cookie into generic dma_chan structure  Every DMA engine implementation declares a last completed dma cookie in their private dma channel structures.  This is pointless, and forces driver specific code.  Move this out into the common dma_chan structure.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | at_hdmac.c | s | 42K | 1321 | Nicolas Ferre | nicolas.ferre@atmel.com | 1337051838 |  | dmaengine: at_hdmac: take maxburst from slave configuration  The maxburst/chunk size was taken from the private slave DMA data structure. Use the common API provided by DMA_SLAVE_CONFIG to setup src/dst maxburst values. The ctrla field is not needed anymore in the slave private structure nor the header constants that were located in an architecture specific directory. The at91sam9g45_devices.c file that was using this platform data is also modified to remove this now useless data.  Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | mv_xor.c | s | 35K | 1142 | Andrew Lunn | andrew@lunn.ch | 1336520042 |  | ARM: Orion: XOR: Add support for clk  Some orion platforms can gate the XOR driver clock. If the clock exisits, unable/disable it as appropriate.  Signed-off-by: Andrew Lunn <andrew@lunn.ch> Tested-by: Jamie Lentin <jm@lentin.co.uk> Signed-off-by: Mike Turquette <mturquette@linaro.org>
f | fsldma.h | s | 6.4K | 177 | Russell King - ARM Linux | linux@arm.linux.org.uk | 1331618766 |  | dmaengine: move last completed cookie into generic dma_chan structure  Every DMA engine implementation declares a last completed dma cookie in their private dma channel structures.  This is pointless, and forces driver specific code.  Move this out into the common dma_chan structure.  Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk> Tested-by: Linus Walleij <linus.walleij@linaro.org> Reviewed-by: Linus Walleij <linus.walleij@linaro.org> Acked-by: Jassi Brar <jassisinghbrar@gmail.com> [imx-sdma.c & mxs-dma.c] Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
f | iovlock.c | s | 7.3K | 232 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | imx-sdma.c | s | 36K | 1239 | Richard Zhao | richard.zhao@freescale.com | 1339057122 |  | dma: imx-sdma: buf_tail should be initialize in prepare function  This fix audio underrun issue. When SNDRV_PCM_TRIGGER_STOP and SNDRV_PCM_TRIGGER_START, it calls prepare again. buf_tail should be reset to zero. So move buf_tail initialization into prepare function.  Signed-off-by: Richard Zhao <richard.zhao@freescale.com> Acked-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>
d | ioat |  | 10 items |  | Linus Torvalds | torvalds@linux-foundation.org | 1334097016 |  | 
