d | isapnp |  | 5 items |  | Len Brown | len.brown@intel.com | 1294826384 |  | Merge branch 'pnp' into release
f | driver.c | s | 5.4K | 233 | Rafael J. Wysocki | rjw@sisk.pl | 1294777240 |  | PNP / ACPI: Use DEVICE_ACPI_HANDLE() for device ACPI handle access  The PNP ACPI driver squirrels the ACPI handles of PNP devices' ACPI companions, but this isn't correct, because those handles should be accessed using the DEVICE_ACPI_HANDLE() macro operating on struct device objects.  Using DEVICE_ACPI_HANDLE() in the PNP ACPI driver instead of the driver's own copies of the ACPI handles allows us to avoid a problem with docking stations where a machine docked before suspend to RAM and undocked while suspended crashes during the subsequent resume (in that case the ACPI companion of the PNP device in question doesn't exist any more while the device is being resumed).  It also allows us to avoid the problem where suspend to RAM fails when the machine was undocked while suspended before (again, the ACPI companion of the PNP device is not present any more while it is being suspended).  This change doesn't fix all of the the PNP ACPI driver's problems with PNP devices in docking stations (generally speaking, the driver has no idea that devices can come and go and doesn't even attempt to handle such events), but at least it makes suspend work for the users of docking stations who don't use the PNP devices located in there.  References: https://bugzilla.kernel.org/show_bug.cgi?id=15100  Reported-and-tested-by: Toralf FÃ¶rster <toralf.foerster@gmx.de> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Acked-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | support.c | s | 4.8K | 166 | Bjorn Helgaas | bjorn.helgaas@hp.com | 1268611718 |  | PNPACPI: add bus number support  Add support for bus number resources.  This is for bridges with a range of bus numbers behind them.  Previously, PNP ignored bus number resources.  Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | Makefile | g | 331B |  | Thomas Renninger | trenn@suse.de | 1288160624 |  | PNP: Compile all pnp built-in stuff in one module namespace  This is cleanup mostly, nothing urgent. I came up with it when looking at dynamic debug which can enable pr_debug messages at runtime or boot param for a specific module.  Advantages:   - Any pnp code can make use of the moduleparam.h interface, the modules     will show up as pnp.param.   - Passing pnp.ddebug as kernel boot param will enable all pnp debug messages     with my previous patch and CONFIG_DYNAMIC_DEBUG enabled.  Signed-off-by: Thomas Renninger <trenn@suse.de> Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | interface.c | s | 10K | 391 | Bjorn Helgaas | bjorn.helgaas@hp.com | 1268611718 |  | PNPACPI: add bus number support  Add support for bus number resources.  This is for bridges with a range of bus numbers behind them.  Previously, PNP ignored bus number resources.  Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Len Brown <len.brown@intel.com>
f | quirks.c | s | 10K | 334 | Bjorn Helgaas | bhelgaas@google.com | 1325880680 |  | PNP: work around Dell 1536/1546 BIOS MMCONFIG bug that breaks USB  Some Dell BIOSes have MCFG tables that don't report the entire MMCONFIG area claimed by the chipset.  If we move PCI devices into that claimed-but-unreported area, they don't work.  This quirk reads the AMD MMCONFIG MSRs and adds PNP0C01 resources as needed to cover the entire area.  Example problem scenario:    BIOS-e820: 00000000cfec5400 - 00000000d4000000 (reserved)   Fam 10h mmconf [d0000000, dfffffff]   PCI: MMCONFIG for domain 0000 [bus 00-3f] at [mem 0xd0000000-0xd3ffffff] (base 0xd0000000)   pnp 00:0c: [mem 0xd0000000-0xd3ffffff]   pci 0000:00:12.0: reg 10: [mem 0xffb00000-0xffb00fff]   pci 0000:00:12.0: no compatible bridge window for [mem 0xffb00000-0xffb00fff]   pci 0000:00:12.0: BAR 0: assigned [mem 0xd4000000-0xd40000ff]  Reported-by: Lisa Salimbas <lisa.salimbas@canonical.com> Reported-by: <thuban@singularity.fr> Tested-by: dann frazier <dann.frazier@canonical.com> References: https://bugzilla.kernel.org/show_bug.cgi?id=31602 References: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/647043 References: https://bugzilla.redhat.com/show_bug.cgi?id=770308 Cc: stable@kernel.org	# 2.6.34+ Signed-off-by: Bjorn Helgaas <bhelgaas@google.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | system.c | s | 2.7K | 97 | Bjorn Helgaas | bjorn.helgaas@hp.com | 1257368801 |  | vsprintf: use %pR, %pr instead of %pRt, %pRf  Jesse accidentally applied v1 [1] of the patchset instead of v2 [2].  This is the diff between v1 and v2.  The changes in this patch are:     - tidied vsprintf stack buffer to shrink and compute size more       accurately     - use %pR for decoding and %pr for "raw" (with type and flags) instead       of adding %pRt and %pRf  [1] http://lkml.org/lkml/2009/10/6/491 [2] http://lkml.org/lkml/2009/10/13/441  Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | card.c | s | 10.0K | 385 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
d | pnpbios |  | 7 items |  | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
f | resource.c | s | 16K | 615 | David Rientjes | rientjes@google.com | 1300841056 |  | pnp: only assign IORESOURCE_DMA if CONFIG_ISA_DMA_API is enabled  IORESOURCE_DMA cannot be assigned without utilizing the interface provided by CONFIG_ISA_DMA_API, specifically request_dma() and free_dma().  Thus, there's a strict dependency on the config option and limits IORESOURCE_DMA only to architectures that support ISA-style DMA.  ia64 is not one of those architectures, so pnp_check_dma() no longer needs to be special-cased for that architecture.  pnp_assign_resources() will now return -EINVAL if IORESOURCE_DMA is attempted on such a kernel.  Signed-off-by: David Rientjes <rientjes@google.com> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Bjorn Helgaas <bjorn.helgaas@hp.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: "Luck, Tony" <tony.luck@intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | base.h | s | 5.7K | 150 | David Rientjes | rientjes@google.com | 1300841056 |  | pnp: only assign IORESOURCE_DMA if CONFIG_ISA_DMA_API is enabled  IORESOURCE_DMA cannot be assigned without utilizing the interface provided by CONFIG_ISA_DMA_API, specifically request_dma() and free_dma().  Thus, there's a strict dependency on the config option and limits IORESOURCE_DMA only to architectures that support ISA-style DMA.  ia64 is not one of those architectures, so pnp_check_dma() no longer needs to be special-cased for that architecture.  pnp_assign_resources() will now return -EINVAL if IORESOURCE_DMA is attempted on such a kernel.  Signed-off-by: David Rientjes <rientjes@google.com> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Bjorn Helgaas <bjorn.helgaas@hp.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: "Luck, Tony" <tony.luck@intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 1.3K |  | Bjorn Helgaas | bjorn.helgaas@hp.com | 1223696133 |  | PNP: remove old CONFIG_PNP_DEBUG option  CONFIG_PNP_DEBUG is no longer used to turn on dev_dbg() in PNP, since we have pnp_dbg() which can be enabled at boot-time, so this patch removes the config option.  Note that pnp_dock_event() checks "#ifdef DEBUG".  But there's never been a clear path for enabling that via configgery.  It happened that CONFIG_PNP_DEBUG enabled it after 1bd17e63a068db6, but that was accidental and only in 2.6.26.  Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com> Signed-off-by: Andi Kleen <ak@linux.intel.com> Signed-off-by: Len Brown <len.brown@intel.com>
d | pnpacpi |  | 5 items |  | Yinghai Lu | yinghai@kernel.org | 1333093120 |  | PNPACPI: Fix device ref leaking in acpi_pnp_match  During testing pci root bus removal, found some root bus bridge is not freed. If booting with pnpacpi=off, those hostbridge could be freed without problem. It turns out that some devices reference are not released during acpi_pnp_match. that match should not hold one device ref during every calling. Add pu_device calling before returning.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Cc: stable@vger.kernel.org Signed-off-by: Len Brown <len.brown@intel.com>
f | core.c | s | 4.8K | 187 | Len Brown | len.brown@intel.com | 1294826384 |  | Merge branch 'pnp' into release
f | manager.c | s | 9.3K | 348 | David Rientjes | rientjes@google.com | 1300841056 |  | pnp: only assign IORESOURCE_DMA if CONFIG_ISA_DMA_API is enabled  IORESOURCE_DMA cannot be assigned without utilizing the interface provided by CONFIG_ISA_DMA_API, specifically request_dma() and free_dma().  Thus, there's a strict dependency on the config option and limits IORESOURCE_DMA only to architectures that support ISA-style DMA.  ia64 is not one of those architectures, so pnp_check_dma() no longer needs to be special-cased for that architecture.  pnp_assign_resources() will now return -EINVAL if IORESOURCE_DMA is attempted on such a kernel.  Signed-off-by: David Rientjes <rientjes@google.com> Cc: Ingo Molnar <mingo@redhat.com> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Bjorn Helgaas <bjorn.helgaas@hp.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: "Luck, Tony" <tony.luck@intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
