d | mxs |  | 9 items |  | Marc Kleine-Budde | mkl@pengutronix.de | 1340668308 |  | clk: mxs: fix clock lookup after freeing init memory  The struct clk_lookup are marked as __initdata, resulting in being removed from memory after the kernel finished booting. However this leads to a NULL pointer de-ref if loading a module which uses clk_get.  This patch removes the __initdata from the struct clk_lookup.  Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de> Signed-off-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Mike Turquette <mturquette@linaro.org>
f | Makefile | g | 238B |  | Arnd Bergmann | arnd@arndb.de | 1336860666 |  | Merge branch 'spear/clock' into next/clock  Viresh Kumar <viresh.kumar@st.com> writes:   This is rebased over a (merge of Mike's/clk-next & SPEAr's DT) + Russell's  patch: CLKDEV: provide helpers for common clock framework rebased over them.  * spear/clock:   SPEAr: Switch to common clock framework   SPEAr: Call clk_prepare() before calling clk_enable   SPEAr: clk: Add General Purpose Timer Synthesizer clock   SPEAr: clk: Add Fractional Synthesizer clock   SPEAr: clk: Add Auxiliary Synthesizer clock   SPEAr: clk: Add VCO-PLL Synthesizer clock  Conflicts: 	drivers/clk/Makefile  [Arnd: rebased again without the spear/dt branch]  Signed-off-by: Arnd Bergmann <arnd@arndb.de>
f | clk-mux.c | s | 3.2K | 103 | Mike Turquette | mturquette@linaro.org | 1336511587 |  | clk: mux: assign init data  The original conversion to struct clk_hw_init failed to add the pointer assignment in clk_register_mux.  Signed-off-by: Mike Turquette <mturquette@linaro.org> Reported-by: Sascha Hauer <s.hauer@pengutronix.de>
f | clk-fixed-rate.c | s | 2.2K | 69 | Saravana Kannan | skannan@codeaurora.org | 1335921200 |  | clk: Use a separate struct for holding init data.  Create a struct clk_init_data to hold all data that needs to be passed from the platfrom specific driver to the common clock framework during clock registration. Add a pointer to this struct inside clk_hw.  This has several advantages: * Completely hides struct clk from many clock platform drivers and static   clock initialization code that don't care for static initialization of   the struct clks. * For platforms that want to do complete static initialization, it removed   the need to directly mess with the struct clk's fields while still   allowing to statically allocate struct clk. This keeps the code more   future proof even if they include clk-private.h. * Simplifies the generic clk_register() function and allows adding optional   fields in the future without modifying the function signature. * Simplifies the static initialization of clocks on all platforms by   removing the need for forward delcarations or convoluted macros.  Signed-off-by: Saravana Kannan <skannan@codeaurora.org> [mturquette@linaro.org: kept DEFINE_CLK_* macros and __clk_init] Signed-off-by: Mike Turquette <mturquette@linaro.org> Cc: Andrew Lunn <andrew@lunn.ch> Cc: Rob Herring <rob.herring@calxeda.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Jeremy Kerr <jeremy.kerr@canonical.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Arnd Bergman <arnd.bergmann@linaro.org> Cc: Paul Walmsley <paul@pwsan.com> Cc: Shawn Guo <shawn.guo@freescale.com> Cc: Sascha Hauer <s.hauer@pengutronix.de> Cc: Jamie Iles <jamie@jamieiles.com> Cc: Richard Zhao <richard.zhao@linaro.org> Cc: Saravana Kannan <skannan@codeaurora.org> Cc: Magnus Damm <magnus.damm@gmail.com> Cc: Mark Brown <broonie@opensource.wolfsonmicro.com> Cc: Linus Walleij <linus.walleij@stericsson.com> Cc: Stephen Boyd <sboyd@codeaurora.org> Cc: Amit Kucheria <amit.kucheria@linaro.org> Cc: Deepak Saxena <dsaxena@linaro.org> Cc: Grant Likely <grant.likely@secretlab.ca>
d | spear |  | 11 items |  | Stefan Roese | sr@denx.de | 1340668307 |  | clk: SPEAr600: Fix ethernet clock name for DT based probing  Signed-off-by: Stefan Roese <sr@denx.de> Cc: Viresh Kumar <viresh.kumar@st.com> Cc: Viresh Kumar <viresh.kumar@linaro.org> Signed-off-by: Mike Turquette <mturquette@linaro.org>
f | clk-gate.c | s | 3.6K | 124 | Saravana Kannan | skannan@codeaurora.org | 1335921200 |  | clk: Use a separate struct for holding init data.  Create a struct clk_init_data to hold all data that needs to be passed from the platfrom specific driver to the common clock framework during clock registration. Add a pointer to this struct inside clk_hw.  This has several advantages: * Completely hides struct clk from many clock platform drivers and static   clock initialization code that don't care for static initialization of   the struct clks. * For platforms that want to do complete static initialization, it removed   the need to directly mess with the struct clk's fields while still   allowing to statically allocate struct clk. This keeps the code more   future proof even if they include clk-private.h. * Simplifies the generic clk_register() function and allows adding optional   fields in the future without modifying the function signature. * Simplifies the static initialization of clocks on all platforms by   removing the need for forward delcarations or convoluted macros.  Signed-off-by: Saravana Kannan <skannan@codeaurora.org> [mturquette@linaro.org: kept DEFINE_CLK_* macros and __clk_init] Signed-off-by: Mike Turquette <mturquette@linaro.org> Cc: Andrew Lunn <andrew@lunn.ch> Cc: Rob Herring <rob.herring@calxeda.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Jeremy Kerr <jeremy.kerr@canonical.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Arnd Bergman <arnd.bergmann@linaro.org> Cc: Paul Walmsley <paul@pwsan.com> Cc: Shawn Guo <shawn.guo@freescale.com> Cc: Sascha Hauer <s.hauer@pengutronix.de> Cc: Jamie Iles <jamie@jamieiles.com> Cc: Richard Zhao <richard.zhao@linaro.org> Cc: Saravana Kannan <skannan@codeaurora.org> Cc: Magnus Damm <magnus.damm@gmail.com> Cc: Mark Brown <broonie@opensource.wolfsonmicro.com> Cc: Linus Walleij <linus.walleij@stericsson.com> Cc: Stephen Boyd <sboyd@codeaurora.org> Cc: Amit Kucheria <amit.kucheria@linaro.org> Cc: Deepak Saxena <dsaxena@linaro.org> Cc: Grant Likely <grant.likely@secretlab.ca>
f | clk-divider.c | s | 5.0K | 164 | Saravana Kannan | skannan@codeaurora.org | 1335921200 |  | clk: Use a separate struct for holding init data.  Create a struct clk_init_data to hold all data that needs to be passed from the platfrom specific driver to the common clock framework during clock registration. Add a pointer to this struct inside clk_hw.  This has several advantages: * Completely hides struct clk from many clock platform drivers and static   clock initialization code that don't care for static initialization of   the struct clks. * For platforms that want to do complete static initialization, it removed   the need to directly mess with the struct clk's fields while still   allowing to statically allocate struct clk. This keeps the code more   future proof even if they include clk-private.h. * Simplifies the generic clk_register() function and allows adding optional   fields in the future without modifying the function signature. * Simplifies the static initialization of clocks on all platforms by   removing the need for forward delcarations or convoluted macros.  Signed-off-by: Saravana Kannan <skannan@codeaurora.org> [mturquette@linaro.org: kept DEFINE_CLK_* macros and __clk_init] Signed-off-by: Mike Turquette <mturquette@linaro.org> Cc: Andrew Lunn <andrew@lunn.ch> Cc: Rob Herring <rob.herring@calxeda.com> Cc: Russell King <linux@arm.linux.org.uk> Cc: Jeremy Kerr <jeremy.kerr@canonical.com> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Arnd Bergman <arnd.bergmann@linaro.org> Cc: Paul Walmsley <paul@pwsan.com> Cc: Shawn Guo <shawn.guo@freescale.com> Cc: Sascha Hauer <s.hauer@pengutronix.de> Cc: Jamie Iles <jamie@jamieiles.com> Cc: Richard Zhao <richard.zhao@linaro.org> Cc: Saravana Kannan <skannan@codeaurora.org> Cc: Magnus Damm <magnus.damm@gmail.com> Cc: Mark Brown <broonie@opensource.wolfsonmicro.com> Cc: Linus Walleij <linus.walleij@stericsson.com> Cc: Stephen Boyd <sboyd@codeaurora.org> Cc: Amit Kucheria <amit.kucheria@linaro.org> Cc: Deepak Saxena <dsaxena@linaro.org> Cc: Grant Likely <grant.likely@secretlab.ca>
f | Kconfig | g | 896B |  | Mike Turquette | mturquette@linaro.org | 1336511562 |  | clk: remove COMMON_CLK_DISABLE_UNUSED  Exposing this option generates confusion and incorrect behavior for single-image builds across platforms.  Enable this behavior permanently.  Signed-off-by: Mike Turquette <mturquette@linaro.org> Acked-by: Saravana Kannan <skannan@codeaurora.org>
f | clk.c | s | 37K | 1275 | Rajendra Nayak | rnayak@ti.com | 1341342314 |  | clk: fix parent validation in __clk_set_parent()  The below commit introduced a bug in __clk_set_parent() which could cause it to *skip* the parent validation which makes sure the parent passed to the api is a valid one.      commit 7975059db572eb47f0fb272a62afeae272a4b209     Author: Rajendra Nayak <rnayak@ti.com>     Date:   Wed Jun 6 14:41:31 2012 +0530          clk: Allow late cache allocation for clk->parents  This was identified by the following compiler warning..      drivers/clk/clk.c: In function '__clk_set_parent':     drivers/clk/clk.c:1083:5: warning: 'i' may be used uninitialized in this function [-Wuninitialized]  .. as reported by Marc Kleine-Budde.  There were various options discussed on how to fix this, one being initing 'i' to clk->num_parents, but the below approach was found to be more appropriate as it also makes the 'parent validation' code simpler to read.  Reported-by: Marc Kleine-Budde <mkl@pengutronix.de> Signed-off-by: Rajendra Nayak <rnayak@ti.com> Signed-off-by: Mike Turquette <mturquette@linaro.org> Cc: stable@kernel.org
f | clkdev.c | s | 6.3K | 251 | Russell King | rmk+kernel@arm.linux.org.uk | 1335947432 |  | CLKDEV: provide helpers for common clock framework  The common clock framework allocates clocks dynamically.  Provide a set of helpers to streamline the clkdev registration of the clock lookups to avoid repetitive code sequences.  Reviewed-by: Viresh Kumar <viresh.kumar@st.com> Tested-by: Shawn Guo <shawn.guo@linaro.org> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | clk-fixed-factor.c | s | 2.4K | 78 | Sascha Hauer | s.hauer@pengutronix.de | 1336511605 |  | clk: add a fixed factor clock  Having fixed factors/dividers in hardware is a common pattern, so add a basic clock type doing this. It basically describes a fixed factor clock using a nominator and a denominator.  Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de> Reviewed-by: Viresh Kumar <viresh.kumar@st.com> Tested-by: Shawn Guo <shawn.guo@linaro.org> [mturquette@linaro.org: constify parent_names in static init macro] [mturquette@linaro.org: copy/paste bug from mux in static init macro] [mturquette@linaro.org: fix error handling in clk_register_fixed_factor] [mturquette@linaro.org: improve division accuracy; thanks to Saravana] Signed-off-by: Mike Turquette <mturquette@linaro.org>
