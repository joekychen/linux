f | x38_edac.c | s | 12K | 426 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i3200_edac.c | s | 12K | 431 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | Makefile | g | 1.9K |  | Mauro Carvalho Chehab | mchehab@redhat.com | 1320148914 |  | edac: sb_edac: Add it to the building system  Some changes on it were required due to changeset cd90cc84c6bf0, that changed the glue with the MCE logic.  Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | amd64_edac_inj.c | s | 5.0K | 182 | Borislav Petkov | borislav.petkov@amd.com | 1300369571 |  | amd64_edac: Add support for F15h DCT PCI config accesses  F15h "multiplexes" between the configuration space of the two DRAM controllers by toggling D18F1x10C[DctCfgSel] while F10h has a different set of registers for DCT0, and DCT1 in extended PCI config space.  Add DCT configuration space accessors per family thus wrapping all the different access prerequisites. Clean up code while at it, shorten names.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | cpc925_edac.c | s | 31K | 926 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | mv64x60_edac.c | s | 22K | 743 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | mce_amd.c | s | 16K | 660 | Borislav Petkov | borislav.petkov@amd.com | 1333547411 |  | MCE, AMD: Drop too granulary family model checks  MCA details seldom change inbetween the models of a family so don't be too conservative and enable decoding on everything starting from K8 onwards. Minor adjustments can come in later but most importantly, we have some decoding infrastructure in place for upcoming models by default.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | mpc85xx_edac.h | s | 4.6K | 143 | Michal Marek | mmarek@suse.cz | 1303165402 |  | edac: Drop __DATE__ usage  The kernel already prints its build timestamp during boot, no need to repeat it in random drivers and produce different object files each time.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: bluesmoke-devel@lists.sourceforge.net Cc: linux-edac@vger.kernel.org Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | edac_device.c | s | 19K | 608 | Linus Torvalds | torvalds@linux-foundation.org | 1338341557 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac  Pull EDAC internal API changes from Mauro Carvalho Chehab:  "This changeset is the first part of a series of patches that fixes the   EDAC sybsystem.  On this set, it changes the Kernel EDAC API in order   to properly represent the Intel i3/i5/i7, Xeon 3xxx/5xxx/7xxx, and   Intel E5-xxxx memory controllers.    The EDAC core used to assume that:         - the DRAM chip select pin is directly accessed by the memory          controller         - when multiple channels are used, they're all filled with the          same type of memory.    None of the above premises is true on Intel memory controllers since   2002, when RAMBUS and FB-DIMMs were introduced, and Advanced Memory   Buffer or by some similar technologies hides the direct access to the   DRAM pins.    So, the existing drivers for those chipsets had to lie to the EDAC   core, in general telling that just one channel is filled.  That   produces some hard to understand error messages like:         EDAC MC0: CE row 3, channel 0, label "DIMM1": 1 Unknown error(s): memory read error on FATAL area : cpu=0 Err=0008:00c2 (ch=2), addr = 0xad1f73480 => socket=0, Channel=0(mask=2), rank=1    The location information there (row3 channel 0) is completely bogus:   it has no physical meaning, and are just some random values that the   driver uses to talk with the EDAC core.  The error actually happened   at CPU socket 0, channel 0, slot 1, but this is not reported anywhere,   as the EDAC core doesn't know anything about the memory layout.  So,   only advanced users that know how the EDAC driver works and that tests   their systems to see how DIMMs are mapped can actually benefit for   such error logs.    This patch series fixes the error report logic, in order to allow the   EDAC to expose the memory architecture used by them to the EDAC core.   So, as the EDAC core now understands how the memory is organized, it   can provide an useful report:         EDAC MC0: CE memory read error on DIMM1 (channel:0 slot:1 page:0x364b1b offset:0x600 grain:32 syndrome:0x0 - count:1 area:DRAM err_code:0001:0090 socket:0 channel_mask:1 rank:4)    The location of the DIMM where the error happened is reported by "MC0"   (cpu socket #0), at "channel:0 slot:1" location, and matches the   physical location of the DIMM.    There are two remaining issues not covered by this patch series:         - The EDAC sysfs API will still report bogus values.  So,          userspace tools like edac-utils will still use the bogus data;         - Add a new tracepoint-based way to get the binary information          about the errors.    Those are on a second series of patches (also at -next), but will   probably miss the train for 3.5, due to the slow review process."  Fix up trivial conflict (due to spelling correction of removed code) in drivers/edac/edac_device.c  * git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac: (42 commits)   i7core: fix ranks information at the per-channel struct   i5000: Fix the fatal error handling   i5100_edac: Fix a warning when compiled with 32 bits   i82975x_edac: Test nr_pages earlier to save a few CPU cycles   e752x_edac: provide more info about how DIMMS/ranks are mapped   i5000_edac: Fix the logic that retrieves memory information   i5400_edac: improve debug messages to better represent the filled memory   edac: Cleanup the logs for i7core and sb edac drivers   edac: Initialize the dimm label with the known information   edac: Remove the legacy EDAC ABI   x38_edac: convert driver to use the new edac ABI   tile_edac: convert driver to use the new edac ABI   sb_edac: convert driver to use the new edac ABI   r82600_edac: convert driver to use the new edac ABI   ppc4xx_edac: convert driver to use the new edac ABI   pasemi_edac: convert driver to use the new edac ABI   mv64x60_edac: convert driver to use the new edac ABI   mpc85xx_edac: convert driver to use the new edac ABI   i82975x_edac: convert driver to use the new edac ABI   i82875p_edac: convert driver to use the new edac ABI   ...
f | ppc4xx_edac.c | s | 39K | 1250 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | mce_amd_inj.c | s | 4.2K | 139 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | edac_module.c | s | 3.0K | 123 | Michal Marek | mmarek@suse.cz | 1303165402 |  | edac: Drop __DATE__ usage  The kernel already prints its build timestamp during boot, no need to repeat it in random drivers and produce different object files each time.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: bluesmoke-devel@lists.sourceforge.net Cc: linux-edac@vger.kernel.org Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | mce_amd.h | s | 1.8K | 75 | Borislav Petkov | borislav.petkov@amd.com | 1337786202 |  | x86/bitops: Move BIT_64() for a wider use  Needed for shifting 64-bit values on 32-bit, like MSR values, for example.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Frank Arnold <frank.arnold@amd.com> Link: http://lkml.kernel.org/r/1337684026-19740-1-git-send-email-bp@amd64.org Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | amd8111_edac.c | s | 16K | 493 | Michal Marek | mmarek@suse.cz | 1303165402 |  | edac: Drop __DATE__ usage  The kernel already prints its build timestamp during boot, no need to repeat it in random drivers and produce different object files each time.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: bluesmoke-devel@lists.sourceforge.net Cc: linux-edac@vger.kernel.org Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | mv64x60_edac.h | s | 3.2K | 96 | Michal Marek | mmarek@suse.cz | 1303165402 |  | edac: Drop __DATE__ usage  The kernel already prints its build timestamp during boot, no need to repeat it in random drivers and produce different object files each time.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: bluesmoke-devel@lists.sourceforge.net Cc: linux-edac@vger.kernel.org Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | ppc4xx_edac.h | s | 7.2K | 161 | Grant Erickson | gerickson@nuovations.com | 1238724303 |  | edac: new ppc4xx driver module  This adds support for an EDAC memory controller adaptation driver for the "ibm,sdram-4xx-ddr2" ECC controller realized in the AMCC PowerPC 405EX[r].  At present, this driver has been developed and tested against the controller realization in the AMCC PPC405EX[r] on the AMCC Kilauea and Haleakala boards (256 MiB w/o ECC memory soldered onto the board) and a proprietary board based on those designs (128 MiB ECC memory, also soldered onto the board).  In the future, dynamic feature detection and handling needs to be added for the other realizations of this controller found in the 440SP, 440SPe, 460EX, 460GT and 460SX.  Eventually, this driver will likely be evolved and adapted to the above variant realizations of this controller as well as broken apart to handle the other known ECC-capable controllers prevalent in other PPC4xx processors:    - IBM SDRAM (405GP, 405CR and 405EP) "ibm,sdram-4xx"   - IBM DDR1 (440GP, 440GX, 440EP and 440GR) "ibm,sdram-4xx-ddr"   - Denali DDR1/DDR2 (440EPX and 440GRX) "denali,sdram-4xx-ddr2"  [akpm@linux-foundation.org: coding-style fixes] Signed-off-by: Grant Erickson <gerickson@nuovations.com> Signed-off-by: Doug Thompson <dougthompson@xmission.com> Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | r82600_edac.c | s | 11K | 361 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | pasemi_edac.c | s | 8.6K | 264 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i82975x_edac.c | s | 18K | 605 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243233 |  | i82975x_edac: Test nr_pages earlier to save a few CPU cycles  Avoid test nr_pages twice, and initializing some data that won't be used.  Cleanup patch only.  Reported-by: Aristeu Rozanski Filho <arozansk@redhat.com> Reviewed-by: Aristeu Rozanski <arozansk@redhat.com> Cc: Ranganathan Desikan <ravi@jetztechnologies.com> Cc: "Arvind R." <arvino55@gmail.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_mc_sysfs.c | s | 27K | 886 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Initialize the dimm label with the known information  While userspace doesn't fill the dimm labels, add there the dimm location, as described by the used memory model. This could eventually match what is described at the dmidecode, making easier for people to identify the memory.  For example, on an Intel motherboard where the DMI table is reliable, the first memory stick is described as:  Memory Device 	Array Handle: 0x0029 	Error Information Handle: Not Provided 	Total Width: 64 bits 	Data Width: 64 bits 	Size: 2048 MB 	Form Factor: DIMM 	Set: 1 	Locator: A1_DIMM0 	Bank Locator: A1_Node0_Channel0_Dimm0 	Type: <OUT OF SPEC> 	Type Detail: Synchronous 	Speed: 800 MHz 	Manufacturer: A1_Manufacturer0 	Serial Number: A1_SerNum0 	Asset Tag: A1_AssetTagNum0 	Part Number: A1_PartNum0  The memory named as "A1_DIMM0" is physically located at the first memory controller (node 0), at channel 0, dimm slot 0.  After this patch, the memory label will be filled with: 	/sys/devices/system/edac/mc/csrow0/ch0_dimm_label:mc#0channel#0slot#0  And (after the new EDAC API patches) as: 	/sys/devices/system/edac/mc/mc0/dimm0/dimm_label:mc#0channel#0slot#0  So, even if the memory label is not initialized on userspace, an useful information with the error location is filled there, expecially since several systems/motherboards are provided with enough info to map from channel/slot (or branch/channel/slot) into the DIMM label. So, letting the EDAC core fill it by default is a good thing.  It should noticed that, as the label filling happens at the edac_mc_alloc(), drivers can override it to better describe the memories (and some actually do it).  Cc: Aristeu Rozanski <arozansk@redhat.com> Cc: Doug Thompson <norsk5@yahoo.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_mc.c | s | 29K | 976 | Chris Metcalf | cmetcalf@tilera.com | 1339429396 |  | edac: Do alignment logic properly in edac_align_ptr()  The logic was checking the sizeof the structure being allocated to determine whether an alignment fixup was required.  This isn't right; what we actually care about is the alignment of the actual pointer that's about to be returned.  This became an issue recently because struct edac_mc_layer has a size that is not zero modulo eight, so we were taking the correctly-aligned pointer and forcing it to be misaligned. On Tile this caused an alignment exception.  Signed-off-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_core.h | s | 14K | 420 | Linus Torvalds | torvalds@linux-foundation.org | 1338341557 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac  Pull EDAC internal API changes from Mauro Carvalho Chehab:  "This changeset is the first part of a series of patches that fixes the   EDAC sybsystem.  On this set, it changes the Kernel EDAC API in order   to properly represent the Intel i3/i5/i7, Xeon 3xxx/5xxx/7xxx, and   Intel E5-xxxx memory controllers.    The EDAC core used to assume that:         - the DRAM chip select pin is directly accessed by the memory          controller         - when multiple channels are used, they're all filled with the          same type of memory.    None of the above premises is true on Intel memory controllers since   2002, when RAMBUS and FB-DIMMs were introduced, and Advanced Memory   Buffer or by some similar technologies hides the direct access to the   DRAM pins.    So, the existing drivers for those chipsets had to lie to the EDAC   core, in general telling that just one channel is filled.  That   produces some hard to understand error messages like:         EDAC MC0: CE row 3, channel 0, label "DIMM1": 1 Unknown error(s): memory read error on FATAL area : cpu=0 Err=0008:00c2 (ch=2), addr = 0xad1f73480 => socket=0, Channel=0(mask=2), rank=1    The location information there (row3 channel 0) is completely bogus:   it has no physical meaning, and are just some random values that the   driver uses to talk with the EDAC core.  The error actually happened   at CPU socket 0, channel 0, slot 1, but this is not reported anywhere,   as the EDAC core doesn't know anything about the memory layout.  So,   only advanced users that know how the EDAC driver works and that tests   their systems to see how DIMMs are mapped can actually benefit for   such error logs.    This patch series fixes the error report logic, in order to allow the   EDAC to expose the memory architecture used by them to the EDAC core.   So, as the EDAC core now understands how the memory is organized, it   can provide an useful report:         EDAC MC0: CE memory read error on DIMM1 (channel:0 slot:1 page:0x364b1b offset:0x600 grain:32 syndrome:0x0 - count:1 area:DRAM err_code:0001:0090 socket:0 channel_mask:1 rank:4)    The location of the DIMM where the error happened is reported by "MC0"   (cpu socket #0), at "channel:0 slot:1" location, and matches the   physical location of the DIMM.    There are two remaining issues not covered by this patch series:         - The EDAC sysfs API will still report bogus values.  So,          userspace tools like edac-utils will still use the bogus data;         - Add a new tracepoint-based way to get the binary information          about the errors.    Those are on a second series of patches (also at -next), but will   probably miss the train for 3.5, due to the slow review process."  Fix up trivial conflict (due to spelling correction of removed code) in drivers/edac/edac_device.c  * git://git.kernel.org/pub/scm/linux/kernel/git/mchehab/linux-edac: (42 commits)   i7core: fix ranks information at the per-channel struct   i5000: Fix the fatal error handling   i5100_edac: Fix a warning when compiled with 32 bits   i82975x_edac: Test nr_pages earlier to save a few CPU cycles   e752x_edac: provide more info about how DIMMS/ranks are mapped   i5000_edac: Fix the logic that retrieves memory information   i5400_edac: improve debug messages to better represent the filled memory   edac: Cleanup the logs for i7core and sb edac drivers   edac: Initialize the dimm label with the known information   edac: Remove the legacy EDAC ABI   x38_edac: convert driver to use the new edac ABI   tile_edac: convert driver to use the new edac ABI   sb_edac: convert driver to use the new edac ABI   r82600_edac: convert driver to use the new edac ABI   ppc4xx_edac: convert driver to use the new edac ABI   pasemi_edac: convert driver to use the new edac ABI   mv64x60_edac: convert driver to use the new edac ABI   mpc85xx_edac: convert driver to use the new edac ABI   i82975x_edac: convert driver to use the new edac ABI   i82875p_edac: convert driver to use the new edac ABI   ...
f | amd64_edac.c | s | 73K | 2347 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i5100_edac.c | s | 25K | 886 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243234 |  | i5100_edac: Fix a warning when compiled with 32 bits  drivers/edac/i5100_edac.c: In function ‘i5100_init_csrows’: drivers/edac/i5100_edac.c:862:3: warning: format ‘%zd’ expects argument of type ‘signed size_t’, but argument 5 has type ‘long unsigned int’ [-Wformat]  Reviewed-by: Aristeu Rozanski <arozansk@redhat.com> Cc: "Niklas Söderlund" <niklas.soderlund@ericsson.com> Cc: Borislav Petkov <borislav.petkov@amd.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i7300_edac.c | s | 35K | 1028 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i82875p_edac.c | s | 15K | 504 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i5400_edac.c | s | 40K | 1263 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243231 |  | i5400_edac: improve debug messages to better represent the filled memory  Improves the debug output message, in order to better represent the memory controller hierarchy, when outputing the debug messages.  No functional changes when debug is disabled.  Reviewed-by: Aristeu Rozanski <arozansk@redhat.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | amd64_edac.h | s | 13K | 378 | Borislav Petkov | borislav.petkov@amd.com | 1303827536 |  | amd64_edac: Erratum #637 workaround  F15h CPUs may report a non-DRAM address when reporting an error address belonging to a CC6 state save area. Add a workaround to detect this condition and compute the actual DRAM address of the error as documented in the Revision Guide for AMD Family 15h Models 00h-0Fh Processors.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | e752x_edac.c | s | 41K | 1244 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243233 |  | e752x_edac: provide more info about how DIMMS/ranks are mapped  No funtional changes here. Only the comments got updated.  Reviewed-by: Aristeu Rozanski <arozansk@redhat.com> Cc: Mark Gross <mark.gross@intel.com> Cc: Doug Thompson <norsk5@yahoo.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | amd76x_edac.c | s | 9.5K | 321 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | cell_edac.c | s | 7.8K | 248 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | amd8111_edac.h | s | 4.1K | 120 | Harry Ciao | qingtao.cao@windriver.com | 1238724303 |  | edac: AMD8111 driver header file  Introduce AMD8111 EDAC driver header file, which adds register and bits definitions for the LPC Bridge Controller and PCI Bridge Controller on the AMD8111 HyperTransport I/O Hub.  Signed-off-by: Harry Ciao <qingtao.cao@windriver.com> Cc: Doug Thompson <norsk5@yahoo.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | i82860_edac.c | s | 9.3K | 300 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | e7xxx_edac.c | s | 16K | 508 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i3000_edac.c | s | 13K | 474 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | amd8131_edac.h | s | 3.7K | 106 | Uwe Kleine-König | u.kleine-koenig@pengutronix.de | 1288640314 |  | tree-wide: fix comment/printk typos  "gadget", "through", "command", "maintain", "maintain", "controller", "address", "between", "initiali[zs]e", "instead", "function", "select", "already", "equal", "access", "management", "hierarchy", "registration", "interest", "relative", "memory", "offset", "already",  Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | tile_edac.c | s | 6.5K | 227 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | mpc85xx_edac.c | s | 32K | 1041 | Kim Phillips | kim.phillips@freescale.com | 1339426191 |  | mpc85xx_edac: fix error: too few arguments to function 'edac_mc_alloc'  commit ca0907b "edac: Remove the legacy EDAC ABI" broke mpc85xx_edac in the following manner:  mpc85xx_edac.c:983:35: error: too few arguments to function 'edac_mc_alloc'  this patch puts back the missing 'layers' argument.  [mchehab@redhat.com: As Ben sent a similar fix, I added his SOB on this patch] Signed-off-by: Kim Phillips <kim.phillips@freescale.com> Signed-off-by: Ben Collins <bcollins@ubuntu.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_pci_sysfs.c | s | 19K | 629 | Kay Sievers | kay.sievers@vrfy.org | 1323904867 |  | edac: convert sysdev_class to a regular subsystem  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Cc: Lucas De Marchi <lucas.demarchi@profusion.mobi> Cc: Borislav Petkov <borislav.petkov@amd.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | amd64_edac_dbg.c | s | 1.3K | 65 | Borislav Petkov | borislav.petkov@amd.com | 1287665279 |  | EDAC, MCE: Rework MCE injection  Add sysfs injection facilities for testing of the MCE decoding code. Remove large parts of amd64_edac_dbg.c, as a result, which did only NB MCE injection anyway and the new injection code supports that functionality already.  Add an injection module so that MCE decoding code in production kernels like those in RHEL and SLES can be tested.  Signed-off-by: Borislav Petkov <borislav.petkov@amd.com>
f | sb_edac.c | s | 44K | 1564 | Chen Gong | gong.chen@linux.intel.com | 1339426191 |  | edac: fix the error about memory type detection on SandyBridge  On SandyBridge, DDRIOA(Dev: 17 Func: 0 Offset: 328) is used to detect whether DIMM is RDIMM/LRDIMM, not TA(Dev: 15 Func: 0).  Signed-off-by: Chen Gong <gong.chen@linux.intel.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | Kconfig | g | 9.0K |  | Hui Wang | jason77.wang@gmail.com | 1332353996 |  | edac: sb_edac: Let the driver depend on PCI_MMCONFIG  This driver needs to access PCIe Extended Configuration Space Registers (0x100~0xfff), to correctly access those registers, we need to enable PCI_MMCONFIG option. Since this option is not enabled for X86_64 by default, we let the driver depend on it to prevent users forgetting to enable this option.  Signed-off-by: Hui Wang <jason77.wang@gmail.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_stub.c | s | 2.1K | 78 | Paul Gortmaker | paul.gortmaker@windriver.com | 1331490457 |  | device.h: cleanup users outside of linux/include (C files)  For files that are actively using linux/device.h, make sure that they call it out.  This will allow us to clean up some of the implicit uses of linux/device.h within include/* without introducing build regressions.  Yes, this was created by "cheating" -- i.e. the headers were cleaned up, and then the fallout was found and fixed, and then the two commits were reordered.  This ensures we don't introduce build regressions into the git history.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | edac_module.h | s | 2.7K | 72 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243059 |  | edac: rewrite edac_align_ptr()  The edac_align_ptr() function is used to prepare data for a single memory allocation kzalloc() call. It counts how many bytes are needed by some data structure.  Using it as-is is not that trivial, as the quantity of memory elements reserved is not there, but, instead, it is on a next call.  In order to avoid mistakes when using it, move the number of allocated elements into it, making easier to use it.  Reviewed-by: Borislav Petkov <bp@amd64.org> Cc: Aristeu Rozanski <arozansk@redhat.com> Cc: Doug Thompson <norsk5@yahoo.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i7core_edac.c | s | 61K | 2018 | Chen Gong | gong.chen@linux.intel.com | 1339426191 |  | edac: avoid mce decoding crash after edac driver unloaded  Some edac drivers register themselves as mce decoders via notifier_chain. But in current notifier_chain implementation logic, it doesn't accept same notifier registered twice. If so, it will be wrong when adding/removing the element from the list. For example, on one SandyBridge platform, remove module sb_edac and then trigger one error, it will hit oops because it has no mce decoder registered but related notifier_chain still points to an invalid callback function. Here is an example:  Call Trace:  [<ffffffff8150ef6a>] atomic_notifier_call_chain+0x1a/0x20  [<ffffffff8102b936>] mce_log+0x46/0x180  [<ffffffff8102eaea>] apei_mce_report_mem_error+0x4a/0x60  [<ffffffff812e19d2>] ghes_do_proc+0x192/0x210  [<ffffffff812e2066>] ghes_proc+0x46/0x70  [<ffffffff812e20d8>] ghes_notify_sci+0x48/0x80  [<ffffffff8150ef05>] notifier_call_chain+0x55/0x80  [<ffffffff81076f1a>] __blocking_notifier_call_chain+0x5a/0x80  [<ffffffff812aea11>] ? acpi_os_wait_events_complete+0x23/0x23  [<ffffffff81076f56>] blocking_notifier_call_chain+0x16/0x20  [<ffffffff812ddc4d>] acpi_hed_notify+0x19/0x1b  [<ffffffff812b16bd>] acpi_device_notify+0x19/0x1b  [<ffffffff812beb38>] acpi_ev_notify_dispatch+0x67/0x7f  [<ffffffff812aea3a>] acpi_os_execute_deferred+0x29/0x36  [<ffffffff81069dc2>] process_one_work+0x132/0x450  [<ffffffff8106bbcb>] worker_thread+0x17b/0x3c0  [<ffffffff8106ba50>] ? manage_workers+0x120/0x120  [<ffffffff81070aee>] kthread+0x9e/0xb0  [<ffffffff81514724>] kernel_thread_helper+0x4/0x10  [<ffffffff81070a50>] ? kthread_freezable_should_stop+0x70/0x70  [<ffffffff81514720>] ? gs_change+0x13/0x13 Code: f3 49 89 d4 45 85 ed 4d 89 c6 48 8b 0f 74 48 48 85 c9 75 17 eb 41 0f 1f 80 00 00 00 00 41 83 ed 01 4c 89 f9 74 22 4d 85 ff 74 1d <4c> 8b 79 08 4c 89 e2 48 89 de 48 89 cf ff 11 4d 85 f6 74 04 41 RIP  [<ffffffff8150eef6>] notifier_call_chain+0x46/0x80  RSP <ffff88042868fb20> CR2: ffffffffa01af838 ---[ end trace 0100930068e73e6f ]--- BUG: unable to handle kernel paging request at fffffffffffffff8 IP: [<ffffffff810705b0>] kthread_data+0x10/0x20 PGD 1a0d067 PUD 1a0e067 PMD 0 Oops: 0000 [#2] SMP  Only i7core_edac and sb_edac have such issues because they have more than one memory controller which means they have to register mce decoder many times.  Cc: <stable@vger.kernel.org> # 3.2 and upper Signed-off-by: Chen Gong <gong.chen@linux.intel.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_pci.c | s | 11K | 414 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243059 |  | edac: rewrite edac_align_ptr()  The edac_align_ptr() function is used to prepare data for a single memory allocation kzalloc() call. It counts how many bytes are needed by some data structure.  Using it as-is is not that trivial, as the quantity of memory elements reserved is not there, but, instead, it is on a next call.  In order to avoid mistakes when using it, move the number of allocated elements into it, making easier to use it.  Reviewed-by: Borislav Petkov <bp@amd64.org> Cc: Aristeu Rozanski <arozansk@redhat.com> Cc: Doug Thompson <norsk5@yahoo.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | edac_device_sysfs.c | s | 23K | 737 | Kay Sievers | kay.sievers@vrfy.org | 1323904867 |  | edac: convert sysdev_class to a regular subsystem  After all sysdev classes are ported to regular driver core entities, the sysdev implementation will be entirely removed from the kernel.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: Paul Gortmaker <paul.gortmaker@windriver.com> Cc: Lucas De Marchi <lucas.demarchi@profusion.mobi> Cc: Borislav Petkov <borislav.petkov@amd.com> Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | amd8131_edac.c | s | 10K | 316 | Michal Marek | mmarek@suse.cz | 1303165402 |  | edac: Drop __DATE__ usage  The kernel already prints its build timestamp during boot, no need to repeat it in random drivers and produce different object files each time.  Cc: Doug Thompson <dougthompson@xmission.com> Cc: bluesmoke-devel@lists.sourceforge.net Cc: linux-edac@vger.kernel.org Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | i5000_edac.c | s | 42K | 1366 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243234 |  | i5000: Fix the fatal error handling  The fatal error channel bits point to a single channel, and not to a range of channels. Fix the code to properly report it, instead of printing messages like: 	kernel: EDAC MC0: INTERNAL ERROR: channel-b out of range (4 >= 4)  Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | i82443bxgx_edac.c | s | 14K | 392 | Mauro Carvalho Chehab | mchehab@redhat.com | 1338243230 |  | edac: Remove the legacy EDAC ABI  Now that all drivers got converted to use the new ABI, we can drop the old one.  Acked-by: Chris Metcalf <cmetcalf@tilera.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
