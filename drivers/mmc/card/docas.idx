f | block.c | s | 46K | 1635 | Subhash Jadavani | subhashj@codeaurora.org | 1340741429 |  | mmc: block: fix the data timeout issue with ACMD22  If multi block write operation fails for SD card, during error handling we send the SD_APP_SEND_NUM_WR_BLKS (ACMD22) to know how many blocks were already programmed by card.  But mmc_sd_num_wr_blocks() function which sends the ACMD22 calculates the data timeout value from csd.tacc_ns and csd.tacc_clks parameters which will be 0 for block addressed (>2GB cards) SD card. This would result in timeout_ns and timeout_clks being 0 in the mmc_request passed to host driver. This means host controller would program its data timeout timer value with 0 which could result in DATA TIMEOUT errors from controller.  To fix this issue, mmc_sd_num_wr_blocks() should instead just call the mmc_set_data_timeout() to calculate the data timeout value. mmc_set_data_timeout() function ensures that non zero timeout value is set even for block addressed SD cards.  Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org> Reviewed-by: Venkatraman S <svenkatr@ti.com> Signed-off-by: Chris Ball <cjb@laptop.org>
f | mmc_test.c | s | 67K | 2528 | Linus Torvalds | torvalds@linux-foundation.org | 1326516075 |  | 
f | queue.h | s | 1.2K | 42 | Per Forlin | per.forlin@linaro.org | 1311196875 |  | mmc: block: add handling for two parallel block requests in issue_rw_rq  Change mmc_blk_issue_rw_rq() to become asynchronous. The execution flow looks like this:  * The mmc-queue calls issue_rw_rq(), which sends the request   to the host and returns back to the mmc-queue. * The mmc-queue calls issue_rw_rq() again with a new request. * This new request is prepared in issue_rw_rq(), then it waits for   the active request to complete before pushing it to the host. * When the mmc-queue is empty it will call issue_rw_rq() with a NULL   req to finish off the active request without starting a new request.  Signed-off-by: Per Forlin <per.forlin@linaro.org> Acked-by: Kyungmin Park <kyungmin.park@samsung.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Reviewed-by: Venkatraman S <svenkatr@ti.com> Tested-by: Sourav Poddar <sourav.poddar@ti.com> Tested-by: Linus Walleij <linus.walleij@linaro.org> Signed-off-by: Chris Ball <cjb@laptop.org>
f | Makefile | g | 196B |  | matt mooney | mfm@muteddisk.com | 1287839475 |  | mmc: Makefile: Fix EXTRA_CFLAGS assignment  The EXTRA_CFLAGS assignment in mmc/Makefile was not accomplishing anything because this flag only has effect on sources at the same level as the makefile (i.e., per directory). Since card/, core/, and host/ rely on MMC_DEBUG, the subdir-ccflags-y variant seems to be the appropriate choice.  Signed-off-by: matt mooney <mfm@muteddisk.com> Signed-off-by: Chris Ball <cjb@laptop.org>
f | queue.c | s | 10K | 354 | Venkatraman S | svenkatr@ti.com | 1336572646 |  | mmc: queue: remove redundant memsets  Not needed to memset, as they are pointers and are assigned to proper values in the next line anyway.  Signed-off-by: Venkatraman S <svenkatr@ti.com> Reviewed-by: Namjae Jeon <linkinjeon@gmail.com> Signed-off-by: Chris Ball <cjb@laptop.org>
f | sdio_uart.c | s | 29K | 1042 | Jiri Slaby | jslaby@suse.cz | 1331235478 |  | TTY: remove re-assignments to tty_driver members  All num, magic and owner are set by alloc_tty_driver. No need to re-set them on each allocation site.  pti driver sets something different to what it passes to alloc_tty_driver. It is not a bug, since we don't use the lines parameter in any way. Anyway this is fixed, and now we do the right thing.  Signed-off-by: Jiri Slaby <jslaby@suse.cz> Acked-by: Tilman Schmidt <tilman@imap.cc> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | Kconfig | g | 2.1K |  | Will Newton | will.newton@gmail.com | 1300211336 |  | mmc: Improve MMC_TEST config text.  The test file is created under debugfs, not sysfs. Also remove the unnecessary default n.  Signed-off-by: Will Newton <will.newton@imgtec.com> Reviewed-by: Chris Ball <cjb@laptop.org> Signed-off-by: Chris Ball <cjb@laptop.org>
