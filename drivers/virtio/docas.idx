f | virtio_pci.c | s | 20K | 666 | Amit Shah | amit.shah@redhat.com | 1333161591 |  | virtio-pci: switch to PM ops macro to initialise PM functions  Use the SET_SYSTEM_SLEEP_PM_OPS macro to initialise the suspend/resume functions in the new PM API.  Signed-off-by: Amit Shah <amit.shah@redhat.com>
f | virtio_ring.c | s | 19K | 619 | Jason Wang | jasowang@redhat.com | 1327700423 |  | virtio: correct the memory barrier in virtqueue_kick_prepare()  Use virtio_mb() to make sure the available index to be exposed before checking the the avail event. Otherwise we may get stale value of avail event in guest and never kick the host after.  Note: this fixes a bug introduced by ee7cd8981e15bcb365fc762afe3fc47b8242f630.  Signed-off-by: Jason Wang <jasowang@redhat.com> Acked-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Cc: stable@kernel.org
f | virtio.c | s | 6.7K | 204 | Asias He | asias@redhat.com | 1337654772 |  | virtio: Use ida to allocate virtio index  Current index allocation in virtio is based on a monotonically increasing variable "index". This means we'll run out of numbers after a while. E.g. someone crazy doing this in host side.  while(1) { 	hot-plug a virtio device 	hot-unplug the virito devcie }  Signed-off-by: Asias He <asias@redhat.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | Makefile | g | 209B |  | Pawel Moll | pawel.moll@arm.com | 1320196261 |  | virtio: Add platform bus driver for memory mapped virtio device  This patch, based on virtio PCI driver, adds support for memory mapped (platform) virtio device. This should allow environments like qemu to use virtio-based block & network devices even on platforms without PCI support.  One can define and register a platform device which resources will describe memory mapped control registers and "mailbox" interrupt. Such device can be also instantiated using the Device Tree node with compatible property equal "virtio,mmio".  Cc: Anthony Liguori <aliguori@us.ibm.com> Cc: Michael S.Tsirkin <mst@redhat.com> Signed-off-by: Pawel Moll <pawel.moll@arm.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | virtio_balloon.c | s | 11K | 391 | Amit Shah | amit.shah@redhat.com | 1337654771 |  | virtio: balloon: separate out common code between remove and freeze functions  The remove and freeze functions have a lot of shared code; put it into a common function that gets called by both.  Signed-off-by: Amit Shah <amit.shah@redhat.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | virtio_mmio.c | s | 16K | 518 | Pawel Moll | pawel.moll@arm.com | 1337654775 |  | virtio-mmio: Devices parameter parsing  This patch adds an option to instantiate guest virtio-mmio devices basing on a kernel command line (or module) parameter, for example:  	virtio_mmio.devices=0x100@0x100b0000:48  Signed-off-by: Pawel Moll <pawel.moll@arm.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | Kconfig | g | 1.6K |  | Pawel Moll | pawel.moll@arm.com | 1337654775 |  | virtio-mmio: Devices parameter parsing  This patch adds an option to instantiate guest virtio-mmio devices basing on a kernel command line (or module) parameter, for example:  	virtio_mmio.devices=0x100@0x100b0000:48  Signed-off-by: Pawel Moll <pawel.moll@arm.com> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | config.c | s | 300B | 11 | David Howells | dhowells@redhat.com | 1332955803 |  | Remove all #inclusions of asm/system.h  Remove all #inclusions of asm/system.h preparatory to splitting and killing it.  Performed with the following command:  perl -p -i -e 's!^#\s*include\s*<asm/system[.]h>.*\n!!' `grep -Irl '^#\s*include\s*<asm/system[.]h>' *`  Signed-off-by: David Howells <dhowells@redhat.com>
