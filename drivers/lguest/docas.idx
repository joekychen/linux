f | lguest_device.c | s | 15K | 464 | Stratos Psomadakis | psomas@cslab.ece.ntua.gr | 1326345287 |  | lguest: Make sure interrupt is allocated ok by lguest_setup_irq  Make sure the interrupt is allocated correctly by lguest_setup_irq (check the return value of irq_alloc_desc_at for -ENOMEM)  Signed-off-by: Stratos Psomadakis <psomas@cslab.ece.ntua.gr> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> (cleanups and commentry)
f | Makefile | g | 1.2K |  | Davidlohr Bueso | dave@gnu.org | 1326345287 |  | lguest: move the lguest tool to the tools directory  This is a better location instead of having it in Documentation.  Signed-off-by: Davidlohr Bueso <dave@gnu.org> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> (fixed compile)
f | hypercalls.c | s | 9.3K | 286 | Rusty Russell | rusty@rustcorp.com.au | 1248935626 |  | lguest: update commentry  Every so often, after code shuffles, I need to go through and unbitrot the Lguest Journey (see drivers/lguest/README).  Since we now use RCU in a simple form in one place I took the opportunity to expand that explanation.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Cc: Ingo Molnar <mingo@redhat.com> Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
f | segments.c | s | 7.8K | 207 | Jacek Galowicz | jacek@galowicz.de | 1326345287 |  | lguest: switch segment-voodoo-numbers to readable symbols  When studying lguest's x86 segment descriptor code, it is not longer necessary to have the Intel x86 architecture manual open on the page with the segment descriptor illustration to understand the crazy numbers assigned to both descriptor structure halves a/b. Now the struct desc_struct's fields, like suggested by Glauber de Oliveira Costa in 2008, are used.  Signed-off-by: Jacek Galowicz <jacek@galowicz.de> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | interrupts_and_traps.c | s | 20K | 579 | Rusty Russell | rusty@rustcorp.com.au | 1311311390 |  | lguest: update comments  Also removes a long-unused #define and an extraneous semicolon.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | lguest_user.c | s | 15K | 475 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103933 |  | lguest: add export.h to lguest files for THIS_MODULE/EXPORT_SYMBOL  We need this in advance of the module.h cleanup, or we'll get compile errors like this:    CC      drivers/lguest/lguest_device.o drivers/lguest/lguest_device.c: In function ‘lguest_devices_init’: drivers/lguest/lguest_device.c:490: error: ‘THIS_MODULE’ undeclared (first use in this function)  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | lg.h | s | 8.1K | 216 | Rusty Russell | rusty@rustcorp.com.au | 1311311388 |  | lguest: use a special 1:1 linear pagetable mode until first switch.  The Host used to create some page tables for the Guest to use at the top of Guest memory; it would then tell the Guest where this was.  In particular, it created linear mappings for 0 and 0xC0000000 addresses because lguest used to switch to its real page tables quite late in boot.  However, since d50d8fe19 Linux initialized boot page tables in head_32.S even before the "are we lguest?" boot jump.  So, now we can simplify things: the Host pagetable code assumes 1:1 linear mapping until it first calls the LHCALL_NEW_PGTABLE hypercall, which we now do before we reach C code.  This also means that the Host doesn't need to know anything about the Guest's PAGE_OFFSET.  (Non-Linux guests might not even have such a thing).  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | README | g | 1.7K |  | Rusty Russell | rusty@rustcorp.com.au | 1185474916 |  | lguest: documentation I: Preparation  The netfilter code had very good documentation: the Netfilter Hacking HOWTO. Noone ever read it.  So this time I'm trying something different, using a bit of Knuthiness.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | core.c | s | 10K | 332 | Michal Hocko | mhocko@suse.cz | 1319675178 |  | lguest: move process freezing before pending signals check  run_guest tries to freeze the current process after it has handled pending interrupts and before it calls lguest_arch_run_guest. This doesn't work nicely if the task has been killed while being frozen and when we want to handle that signal as soon as possible. Let's move try_to_freeze before we check for pending signal so that we can get out of the loop as soon as possible.  Signed-off-by: Michal Hocko <mhocko@suse.cz> Acked-by: Rusty Russell <rusty@rustcorp.com.au> Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
d | x86 |  | 2 items |  | Seiichi Ikarashi | s.ikarashi@jp.fujitsu.com | 1323162158 |  | x86: Fix rflags in FAKE_STACK_FRAME  The x86_64 kernel pushes the fake kernel stack in arch/x86/kernel/entry_64.S:FAKE_STACK_FRAME, and rflags register in it does not conform to the specification.  Although Intel's manual[1] says bit 1 of it shall be set to 1, this bit is cleared to 0 on pushing the fake stack.  [1] Intel(R) 64 and IA-32 Architectures Software Developer's Manual     Vol.1 3-21 Figure 3-8. EFLAGS Register  If it is not on purpose, it is better to be fixed, because it can lead some tools misunderstanding the stack frame. For example, "crash" utility[2] actually detects it and warns you like below:         RIP: ffffffff8005dfa2  RSP: ffff8104ce0c7f58  RFLAGS: 00000200        [...]         bt: WARNING: possibly bogus exception frame  Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com> Tested-by: Masayoshi MIZUMA <m.mizuma@jp.fujitsu.com> Cc: Jan Beulich <JBeulich@suse.com> Cc: Frederic Weisbecker <fweisbec@gmail.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | page_tables.c | s | 35K | 1034 | Rusty Russell | rusty@rustcorp.com.au | 1311311390 |  | lguest: update comments  Also removes a long-unused #define and an extraneous semicolon.  Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
f | Kconfig | g | 520B |  | Rob Landley | rob@landley.net | 1304699275 |  | Correct occurrences of - Documentation/kvm/ to Documentation/virtual/kvm - Documentation/uml/ to Documentation/virtual/uml - Documentation/lguest/ to Documentation/virtual/lguest throughout the kernel source tree.  Signed-off-by: Rob Landley <rob@landley.net> Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
