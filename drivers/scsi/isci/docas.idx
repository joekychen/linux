f | init.c | s | 21K | 617 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: Remove obviated host callback list.  Since the callbacks to libsas now occur under scic_lock, there is no longer any reason to save the completed requests in a separate list for completion to libsas.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | host.c | s | 80K | 2325 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: Remove obviated host callback list.  Since the callbacks to libsas now occur under scic_lock, there is no longer any reason to save the completed requests in a separate list for completion to libsas.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | Makefile | g | 254B |  | Dan Williams | dan.j.williams@intel.com | 1309691092 |  | isci: merge sata.[ch] into request.c  Undo some needless separation.  Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | scu_completion_codes.h | s | 11K | 263 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290417 |  | isci: Handle all suspending TC completions  Add comprehensive decode for all TC completions that generate RNC suspensions.  Note that this commit also removes unconditional resumptions of ATAPI devices when in the SCI_STP_DEV_ATAPI_ERROR state, and STP devices when in the SCI_STP_DEV_IDLE state. This is because the SCI_STP_DEV_IDLE and SCI_STP_DEV_ATAPI state entry functions manage the RNC resumption.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | remote_device.h | s | 13K | 351 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290423 |  | isci: Restore the ATAPI device RNC management code.  The ATAPI specific and STP general RNC suspension code had been incorrectly removed from the remote device code.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | port.h | s | 9.1K | 249 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290416 |  | isci: Manage the link layer hang detect timer for RNC suspensions.  For STP devices under certain protocol conditions, an RNC will not suspend until the current transfer state is broken with a SYNC/ESC sequence from the SCU.  The SYNC/ESC driven by expiration of the SCU link layer hang detect timer, which has too small a dynamic range to support slow SATA devices, so normally it is disabled.  This change enables the timer with the minimum period at the point when the suspension is requested.  Note that there is potential collateral damage to other open connections to slow SATA devices on the same port, since there is no alternative but to enable the LLHANG timer on every phy in the port for the current suspension request - there is no way to tell on which phy the RNC in question is currently active.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | remote_node_table.h | s | 6.3K | 168 | Dan Williams | dan.j.williams@intel.com | 1309691092 |  | isci: retire scic_sds_ and scic_ prefixes  The distinction between scic_sds_ scic_ and sci_ are no longer relevant so just unify the prefixes on sci_.  The distinction between isci_ and sci_ is historically significant, and useful for comparing the old 'core' to the current Linux driver. 'sci_' represents the former core as well as the routines that are closer to the hardware and protocol than their 'isci_' brethren. sci == sas controller interface.  Also unwind the 'sds1' out of the parameter structs.  Reported-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | scu_remote_node_context.h | s | 6.6K | 199 | Dan Williams | dan.j.williams@intel.com | 1309690838 |  | isci: move remote_device handling out of the core  Now that the core/lldd remote_device data structures are nominally unified merge the corresponding sources into the top-level directory.  Also move the remote_node_context infrastructure which has no analog at the lldd level.  Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | request.c | s | 102K | 2983 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: Remove obviated host callback list.  Since the callbacks to libsas now occur under scic_lock, there is no longer any reason to save the completed requests in a separate list for completion to libsas.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | probe_roms.h | s | 10K | 296 | Dan Williams | dan.j.williams@intel.com | 1337282832 |  | isci: refactor initialization for S3/S4  Based on an original implementation by Ed Nadolski and Artur Wojcik  In preparation for S3/S4 support refactor initialization so that driver-load and resume-from-suspend can share the common init path of isci_host_init().  Organize the initialization into objects that are self-contained to the driver (initialized by isci_host_init) versus those that have some upward registration (initialized at allocation time asd_sas_phy, asd_sas_port, dma allocations).  The largest change is moving the the validation of the oem and module parameters from isci_host_init() to isci_host_alloc().  The S3/S4 approach being taken is that libsas will be tasked with remembering the state of the domain and the lldd is free to be forgetful.  In the case of isci we'll just re-init using a subset of the normal driver load path.  [clean up some unused / mis-indented function definitions in host.h]  Signed-off-by: Ed Nadolski <edmund.nadolski@intel.com> Signed-off-by: Artur Wojcik <artur.wojcik@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | unsolicited_frame_control.h | s | 8.4K | 242 | Dan Williams | dan.j.williams@intel.com | 1337282832 |  | isci: refactor initialization for S3/S4  Based on an original implementation by Ed Nadolski and Artur Wojcik  In preparation for S3/S4 support refactor initialization so that driver-load and resume-from-suspend can share the common init path of isci_host_init().  Organize the initialization into objects that are self-contained to the driver (initialized by isci_host_init) versus those that have some upward registration (initialized at allocation time asd_sas_phy, asd_sas_port, dma allocations).  The largest change is moving the the validation of the oem and module parameters from isci_host_init() to isci_host_alloc().  The S3/S4 approach being taken is that libsas will be tasked with remembering the state of the domain and the lldd is free to be forgetful.  In the case of isci we'll just re-init using a subset of the normal driver load path.  [clean up some unused / mis-indented function definitions in host.h]  Signed-off-by: Ed Nadolski <edmund.nadolski@intel.com> Signed-off-by: Artur Wojcik <artur.wojcik@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | unsolicited_frame_control.c | s | 7.3K | 185 | Dan Williams | dan.j.williams@intel.com | 1337282832 |  | isci: refactor initialization for S3/S4  Based on an original implementation by Ed Nadolski and Artur Wojcik  In preparation for S3/S4 support refactor initialization so that driver-load and resume-from-suspend can share the common init path of isci_host_init().  Organize the initialization into objects that are self-contained to the driver (initialized by isci_host_init) versus those that have some upward registration (initialized at allocation time asd_sas_phy, asd_sas_port, dma allocations).  The largest change is moving the the validation of the oem and module parameters from isci_host_init() to isci_host_alloc().  The S3/S4 approach being taken is that libsas will be tasked with remembering the state of the domain and the lldd is free to be forgetful.  In the case of isci we'll just re-init using a subset of the normal driver load path.  [clean up some unused / mis-indented function definitions in host.h]  Signed-off-by: Ed Nadolski <edmund.nadolski@intel.com> Signed-off-by: Artur Wojcik <artur.wojcik@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | remote_node_context.c | s | 25K | 718 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: End the RNC resumption wait when the RNC is destroyed.  While the RNC is suspended for I/O cleanup, the remote device can be stopped and the RNC setup for destruction.  These changes accomodate that case in the abort path.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | task.c | s | 24K | 699 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290423 |  | isci: Check IDEV_GONE before performing abort path operations.  In the link fail path, set IDEV_GONE for every device on the domain when the last link in the port fails.  In the abort path functions like isci_reset_device, make sure that there has not already been a detected domain failure with the device by checking IDEV_GONE, before performing any kind of hard reset, SMP phy control, or TMF operation.  The check for IDEV_GONE makes sure that the device in the abort path really has control of the port with which it is associated.  This prevents starting hard resets at incorrect times and scheduling unnecessary LUN resets for SATA devices.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | phy.h | s | 13K | 406 | Dan Williams | dan.j.williams@intel.com | 1337282831 |  | isci: kill sci_phy_protocol and sci_request_protocol  Holdovers from the initial driver cleanup, replace with enum sas_protocol.  Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | sas.h | s | 6.3K | 189 | Dan Williams | dan.j.williams@intel.com | 1317578837 |  | [SCSI] isci: fix support for large smp requests  Kill the local smp response buffer.  Besides being unnecessary, it is too small (currently truncates responses to 60 bytes).  The mid-layer will have already allocated a sufficiently sized buffer, just kmap and copy into it directly.  Cc: <stable@kernel.org> Reported-by: Derick Marks <derick.w.marks@intel.com> Tested-by: Derick Marks <derick.w.marks@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | host.h | s | 16K | 450 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: End the RNC resumption wait when the RNC is destroyed.  While the RNC is suspended for I/O cleanup, the remote device can be stopped and the RNC setup for destruction.  These changes accomodate that case in the abort path.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | request.h | s | 11K | 291 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: Remove obviated host callback list.  Since the callbacks to libsas now occur under scic_lock, there is no longer any reason to save the completed requests in a separate list for completion to libsas.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | probe_roms.c | s | 5.3K | 190 | Dan Williams | dan.j.williams@intel.com | 1337282832 |  | isci: refactor initialization for S3/S4  Based on an original implementation by Ed Nadolski and Artur Wojcik  In preparation for S3/S4 support refactor initialization so that driver-load and resume-from-suspend can share the common init path of isci_host_init().  Organize the initialization into objects that are self-contained to the driver (initialized by isci_host_init) versus those that have some upward registration (initialized at allocation time asd_sas_phy, asd_sas_port, dma allocations).  The largest change is moving the the validation of the oem and module parameters from isci_host_init() to isci_host_alloc().  The S3/S4 approach being taken is that libsas will be tasked with remembering the state of the domain and the lldd is free to be forgetful.  In the case of isci we'll just re-init using a subset of the normal driver load path.  [clean up some unused / mis-indented function definitions in host.h]  Signed-off-by: Ed Nadolski <edmund.nadolski@intel.com> Signed-off-by: Artur Wojcik <artur.wojcik@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | registers.h | s | 69K | 1631 | Andrzej Jakowski | andrzej.jakowski@intel.com | 1337282848 |  | isci: Changes in COMSAS timings enabling ISCI to detect buggy disc drives.  This patch extends timings in COMSAS signaling, so ISCI can detect disc drives having issues to send COMSAS in correct time frame.  Signed-off-by: Andrzej Jakowski <andrzej.jakowski@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | remote_node_context.h | s | 8.6K | 215 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: End the RNC resumption wait when the RNC is destroyed.  While the RNC is suspended for I/O cleanup, the remote device can be stopped and the RNC setup for destruction.  These changes accomodate that case in the abort path.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | task.h | s | 5.6K | 163 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290418 |  | isci: Redesign device suspension, abort, cleanup.  This commit changes the means by which outstanding I/Os are handled for cleanup. The likelihood is that this commit will be broken into smaller pieces, however that will be a later revision.  Among the changes:  - All completion structures have been removed from the tmf and abort paths. - Now using one completed I/O list, with the I/O completed in host bit being used to select error or normal callback paths.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | port_config.c | s | 25K | 658 | Dan Williams | dan.j.williams@intel.com | 1337282832 |  | isci: fix 'link-up' events occur after 'start-complete'  The call to wait_for_start() is meant to ensure that all links have been given a chance to come up before letting the kernel proceed with probing.  However, the implementation is not correctly syncing with the port configuration agent.  In the MPC case the ports are hard-coded, in the APC case we need to wait for the port-configuration to form ports from the started phys.  Towards that end increase the timeout for the APC agent to form ports, and delay start complete until all phys are out of link-training.  Cc: <stable@vger.kernel.org> Cc: Richard Boyd <richard.g.boyd@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | scu_task_context.h | s | 24K | 812 | Dave Jiang | dave.jiang@intel.com | 1329664464 |  | [SCSI] isci: T10 DIF support  This allows the controller to do WRITE_INSERT and READ_STRIP for SAS disks that support protection information. SAS disks must be formatted with protection information to use this feature via sg_format.    sg3_utils-1.32 -- sg_format version 1.19 20110730   sg_format usage:   sg_format --format --verbose --pinfo /dev/sda  Acked-by: Martin K. Petersen <martin.petersen@oracle.com> Signed-off-by: Dave Jiang <dave.jiang@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | phy.c | s | 45K | 1272 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290422 |  | isci: Change the phy control and link reset interface for HW reasons.  There is an apparent HW lockup caused when the PE is disabled while there is an outstanding TC in progress.  This change puts the link into OOB to force the TC to end before the PE is disabled.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | port.c | s | 52K | 1488 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290423 |  | isci: Check IDEV_GONE before performing abort path operations.  In the link fail path, set IDEV_GONE for every device on the domain when the last link in the port fails.  In the abort path functions like isci_reset_device, make sure that there has not already been a detected domain failure with the device by checking IDEV_GONE, before performing any kind of hard reset, SMP phy control, or TMF operation.  The check for IDEV_GONE makes sure that the device in the abort path really has control of the port with which it is associated.  This prevents starting hard resets at incorrect times and scheduling unnecessary LUN resets for SATA devices.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | isci.h | s | 18K | 467 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1326699784 |  | [SCSI] isci: oem parameter format v1.3 (cable select)  v1.3 allows the attenuation of the attached cables to be specified to the driver in terms of 'short', 'medium', and 'long' (see probe_roms.h). These settings (per phy) are retrieved from the platform oem-parameters (BIOS rom) or via a module parameter override.  Reviewed-by: Jiangbi Liu <jiangbi.liu@intel.com> Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com> Signed-off-by: James Bottomley <JBottomley@Parallels.com>
f | remote_node_table.c | s | 19K | 524 | Dan Williams | dan.j.williams@intel.com | 1309691092 |  | isci: retire scic_sds_ and scic_ prefixes  The distinction between scic_sds_ scic_ and sci_ are no longer relevant so just unify the prefixes on sci_.  The distinction between isci_ and sci_ is historically significant, and useful for comparing the old 'core' to the current Linux driver. 'sci_' represents the former core as well as the routines that are closer to the hardware and protocol than their 'isci_' brethren. sci == sas controller interface.  Also unwind the 'sds1' out of the parameter structs.  Reported-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | remote_device.c | s | 52K | 1490 | Jeff Skirvin | jeffrey.d.skirvin@intel.com | 1337290424 |  | isci: End the RNC resumption wait when the RNC is destroyed.  While the RNC is suspended for I/O cleanup, the remote device can be stopped and the RNC setup for destruction.  These changes accomodate that case in the abort path.  Signed-off-by: Jeff Skirvin <jeffrey.d.skirvin@intel.com> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
f | scu_event_codes.h | s | 10K | 307 | Dan Williams | dan.j.williams@intel.com | 1309691087 |  | isci: uplevel register hardware data structures and unsolicited frame handling  Reported-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
