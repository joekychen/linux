f | cpia2_v4l.c | s | 33K | 1070 | Hans Verkuil | hans.verkuil@cisco.com | 1336997978 |  | [media] v4l2-dev: add flag to have the core lock all file operations  This used to be the default if the lock pointer was set, but now that lock is by default only used for ioctl serialization. Those drivers that already used core locking have this flag set explicitly, except for some drivers where it was obvious that there was no need to serialize any file operations other than ioctl.  The drivers that didn't need this flag were:  drivers/media/radio/dsbr100.c drivers/media/radio/radio-isa.c drivers/media/radio/radio-keene.c drivers/media/radio/radio-miropcm20.c drivers/media/radio/radio-mr800.c drivers/media/radio/radio-tea5764.c drivers/media/radio/radio-timb.c drivers/media/video/vivi.c sound/i2c/other/tea575x-tuner.c  The other drivers that use core locking and where it was not immediately obvious that this flag wasn't needed were changed so that the flag is set together with a comment that that driver needs work to avoid having to set that flag. This will often involve taking the core lock in the fops themselves.  Eventually this flag should go and it should not be used in new drivers.  There are a few reasons why we want to avoid core locking of non-ioctl fops: in the case of mmap this can lead to a deadlock in rare situations since when mmap is called the mmap_sem is held and it is possible for other parts of the code to take that lock as well (copy_from_user()/copy_to_user() perform a down_read(&mm->mmap_sem) when a page fault occurs).  It is very unlikely that that happens since the core lock serializes all fops, but the kernel warns about it if lock validation is turned on.  For poll it is also undesirable to take the core lock as that can introduce increased latency. The same is true for read/write.  While it was possible to make flags or something to turn on/off taking the core lock for each file operation, in practice it is much simpler to just not take it at all except for ioctl and leave it to the driver to take the lock. There are only a handful fops compared to the zillion ioctls we have.  I also wanted to make it obvious which drivers still take the lock for all fops, so that's why I chose to have drivers set it explicitly.  Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Acked-by: Hans de Goede <hdegoede@redhat.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | cpia2_usb.c | s | 26K | 842 | Hans Verkuil | hans.verkuil@cisco.com | 1336418465 |  | [media] cpia2: major overhaul to get it in a working state again  This driver was severely broken. This patch makes it work again, and updates it to the latest V4L2 frameworks (except for videobuf2). It passes the v4l2-compliance tests and it now handles suspend/resume correctly.  Several custom controls are replaced by new standard controls, only the USB_ALTERNATE control remains.  Tested with the Hanse HVS-CM500PC USB microscope.  Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | Makefile | g | 89B |  | Alan Cox | alan@redhat.com | 1141009745 |  | V4L/DVB (3376): Add cpia2 camera support  There has been a CPIA2 driver out of kernel for a long time and it has been pretty clean for some time too. This is an import of the sourceforge driver which has been stripped of - 2.4 back compatibility - 2.4 old style MJPEG ioctls A couple of functions have been made static and the docs have been repackaged into Documentation/video4linux.  The rvmalloc/free functions now match the cpia driver again.  Other than that this is the code as is. Tested on x86-64 with a QX5 microscope.  Signed-off-by: Alan Cox <alan@redhat.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>
f | cpia2_registers.h | s | 17K | 361 | Alan Cox | alan@redhat.com | 1141009745 |  | V4L/DVB (3376): Add cpia2 camera support  There has been a CPIA2 driver out of kernel for a long time and it has been pretty clean for some time too. This is an import of the sourceforge driver which has been stripped of - 2.4 back compatibility - 2.4 old style MJPEG ioctls A couple of functions have been made static and the docs have been repackaged into Documentation/video4linux.  The rvmalloc/free functions now match the cpia driver again.  Other than that this is the code as is. Tested on x86-64 with a QX5 microscope.  Signed-off-by: Alan Cox <alan@redhat.com> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>
f | cpia2.h | s | 12K | 427 | Hans Verkuil | hans.verkuil@cisco.com | 1336418465 |  | [media] cpia2: major overhaul to get it in a working state again  This driver was severely broken. This patch makes it work again, and updates it to the latest V4L2 frameworks (except for videobuf2). It passes the v4l2-compliance tests and it now handles suspend/resume correctly.  Several custom controls are replaced by new standard controls, only the USB_ALTERNATE control remains.  Tested with the Hanse HVS-CM500PC USB microscope.  Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | cpia2_core.c | s | 72K | 2132 | Hans Verkuil | hans.verkuil@cisco.com | 1336418465 |  | [media] cpia2: major overhaul to get it in a working state again  This driver was severely broken. This patch makes it work again, and updates it to the latest V4L2 frameworks (except for videobuf2). It passes the v4l2-compliance tests and it now handles suspend/resume correctly.  Several custom controls are replaced by new standard controls, only the USB_ALTERNATE control remains.  Tested with the Hanse HVS-CM500PC USB microscope.  Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
f | Kconfig | g | 360B |  | Hans Verkuil | hverkuil@xs4all.nl | 1287630377 |  | V4L/DVB: cpia2: remove V4L1 support from this driver  V4L1 is deprecated and will be removed completely soon.  Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl> Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
