f | dm-space-map-disk.c | s | 7.1K | 272 | Mike Snitzer | snitzer@redhat.com | 1341316535 |  | dm persistent data: handle space map checker creation failure  If CONFIG_DM_DEBUG_SPACE_MAPS is enabled and dm_sm_checker_create() fails, dm_tm_create_internal() would still return success even though it cleaned up all resources it was supposed to have created.  This will lead to a kernel crash:  general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC ... RIP: 0010:[<ffffffff81593659>]  [<ffffffff81593659>] dm_bufio_get_block_size+0x9/0x20 Call Trace:   [<ffffffff81599bae>] dm_bm_block_size+0xe/0x10   [<ffffffff8159b8b8>] sm_ll_init+0x78/0xd0   [<ffffffff8159c1a6>] sm_ll_new_disk+0x16/0xa0   [<ffffffff8159c98e>] dm_sm_disk_create+0xfe/0x160   [<ffffffff815abf6e>] dm_pool_metadata_open+0x16e/0x6a0   [<ffffffff815aa010>] pool_ctr+0x3f0/0x900   [<ffffffff8158d565>] dm_table_add_target+0x195/0x450   [<ffffffff815904c4>] table_load+0xe4/0x330   [<ffffffff815917ea>] ctl_ioctl+0x15a/0x2c0   [<ffffffff81591963>] dm_ctl_ioctl+0x13/0x20   [<ffffffff8116a4f8>] do_vfs_ioctl+0x98/0x560   [<ffffffff8116aa51>] sys_ioctl+0x91/0xa0   [<ffffffff81869f52>] system_call_fastpath+0x16/0x1b  Fix the space map checker code to return an appropriate ERR_PTR and have dm_sm_disk_create() and dm_tm_create_internal() check for it with IS_ERR.  Reported-by: Vivek Goyal <vgoyal@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-block-manager.c | s | 13K | 514 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-metadata.c | s | 12K | 466 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | Makefile | g | 290B |  | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-transaction-manager.c | s | 8.6K | 330 | Mike Snitzer | snitzer@redhat.com | 1341316535 |  | dm persistent data: handle space map checker creation failure  If CONFIG_DM_DEBUG_SPACE_MAPS is enabled and dm_sm_checker_create() fails, dm_tm_create_internal() would still return success even though it cleaned up all resources it was supposed to have created.  This will lead to a kernel crash:  general protection fault: 0000 [#1] SMP DEBUG_PAGEALLOC ... RIP: 0010:[<ffffffff81593659>]  [<ffffffff81593659>] dm_bufio_get_block_size+0x9/0x20 Call Trace:   [<ffffffff81599bae>] dm_bm_block_size+0xe/0x10   [<ffffffff8159b8b8>] sm_ll_init+0x78/0xd0   [<ffffffff8159c1a6>] sm_ll_new_disk+0x16/0xa0   [<ffffffff8159c98e>] dm_sm_disk_create+0xfe/0x160   [<ffffffff815abf6e>] dm_pool_metadata_open+0x16e/0x6a0   [<ffffffff815aa010>] pool_ctr+0x3f0/0x900   [<ffffffff8158d565>] dm_table_add_target+0x195/0x450   [<ffffffff815904c4>] table_load+0xe4/0x330   [<ffffffff815917ea>] ctl_ioctl+0x15a/0x2c0   [<ffffffff81591963>] dm_ctl_ioctl+0x13/0x20   [<ffffffff8116a4f8>] do_vfs_ioctl+0x98/0x560   [<ffffffff8116aa51>] sys_ioctl+0x91/0xa0   [<ffffffff81869f52>] system_call_fastpath+0x16/0x1b  Fix the space map checker code to return an appropriate ERR_PTR and have dm_sm_disk_create() and dm_tm_create_internal() check for it with IS_ERR.  Reported-by: Vivek Goyal <vgoyal@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Cc: stable@vger.kernel.org Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-btree-internal.h | s | 3.0K | 103 | Joe Thornber | ejt@redhat.com | 1332956485 |  | dm persistent data: remove redundant value_size arg from value_ptr  Now that the value_size is held within every node of the btrees we can remove this argument from value_ptr().  For the last few months a BUG_ON has been checking this argument is the same as that held in the node.  No issues were reported.  So this is a safe change.  Signed-off-by: Joe Thornber <ejt@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-common.c | s | 15K | 553 | Joe Thornber | ejt@redhat.com | 1332956487 |  | dm persistent data: remove space map ref_count entries if redundant  Save space by removing entries from the space map ref_count tree if they're no longer needed.  Ref counts are stored in two places: a bitmap if the ref_count is below 3, or a btree of uint32_t if 3 or above.  When a ref_count that was above 3 drops below we can remove it from the tree and save some metadata space.  This removal was commented out before because I was unsure why this was causing under-populated btree nodes.  Earlier patches have fixed this issue.  Signed-off-by: Joe Thornber <ejt@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-disk.h | s | 603B | 19 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-checker.c | s | 9.5K | 357 | Mike Snitzer | snitzer@redhat.com | 1341316537 |  | dm persistent data: fix allocation failure in space map checker init  If CONFIG_DM_DEBUG_SPACE_MAPS is enabled and memory is fragmented and a sufficiently-large metadata device is used in a thin pool then the space map checker will fail to allocate the memory it requires.  Switch from kmalloc to vmalloc to allow larger virtually contiguous allocations for the space map checker's internal count arrays.  Reported-by: Vivek Goyal <vgoyal@redhat.com> Cc: stable@kernel.org Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-btree-remove.c | s | 14K | 488 | Joe Thornber | ejt@redhat.com | 1332956485 |  | dm persistent data: remove redundant value_size arg from value_ptr  Now that the value_size is held within every node of the btrees we can remove this argument from value_ptr().  For the last few months a BUG_ON has been checking this argument is the same as that held in the node.  No issues were reported.  So this is a safe change.  Signed-off-by: Joe Thornber <ejt@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-checker.h | s | 703B | 20 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-block-manager.h | s | 3.8K | 100 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-btree.c | s | 17K | 654 | Joe Thornber | ejt@redhat.com | 1332956485 |  | dm persistent data: remove redundant value_size arg from value_ptr  Now that the value_size is held within every node of the btrees we can remove this argument from value_ptr().  For the last few months a BUG_ON has been checking this argument is the same as that held in the node.  No issues were reported.  So this is a safe change.  Signed-off-by: Joe Thornber <ejt@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-btree.h | s | 3.9K | 122 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-persistent-data-internal.h | s | 407B | 14 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-metadata.h | s | 731B | 27 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | Kconfig | g | 279B |  | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-btree-spine.c | s | 5.0K | 191 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-transaction-manager.h | s | 4.9K | 110 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map.h | s | 3.6K | 108 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
f | dm-space-map-common.h | s | 3.3K | 101 | Joe Thornber | thornber@redhat.com | 1320092351 |  | dm: add persistent data library  The persistent-data library offers a re-usable framework for the storage and management of on-disk metadata in device-mapper targets.  It's used by the thin-provisioning target in the next patch and in an upcoming hierarchical storage target.  For further information, please read Documentation/device-mapper/persistent-data.txt  Signed-off-by: Joe Thornber <thornber@redhat.com> Signed-off-by: Mike Snitzer <snitzer@redhat.com> Signed-off-by: Alasdair G Kergon <agk@redhat.com>
