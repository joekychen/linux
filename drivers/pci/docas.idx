f | pci.c | s | 101K | 3399 | Alan Stern | stern@rowland.harvard.edu | 1339618299 |  | USB: add NO_D3_DURING_SLEEP flag and revert 151b61284776be2  This patch (as1558) fixes a problem affecting several ASUS computers: The machine crashes or corrupts memory when going into suspend if the ehci-hcd driver is bound to any controllers.  Users have been forced to unbind or unload ehci-hcd before putting their systems to sleep.  After extensive testing, it was determined that the machines don't like going into suspend when any EHCI controllers are in the PCI D3 power state.  Presumably this is a firmware bug, but there's nothing we can do about it except to avoid putting the controllers in D3 during system sleep.  The patch adds a new flag to indicate whether the problem is present, and avoids changing the controller's power state if the flag is set. Runtime suspend is unaffected; this matters only for system suspend. However as a side effect, the controller will not respond to remote wakeup requests while the system is asleep.  Hence USB wakeup is not functional -- but of course, this is already true in the current state of affairs.  A similar patch has already been applied as commit 151b61284776be2d6f02d48c23c3625678960b97 (USB: EHCI: fix crash during suspend on ASUS computers).  The patch supersedes that one and reverts it.  There are two differences:  	The old patch added the flag at the USB level; this patch 	adds it at the PCI level.  	The old patch applied to all chipsets with the same vendor, 	subsystem vendor, and product IDs; this patch makes an 	exception for a known-good system (based on DMI information).  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Tested-by: Dâniel Fraga <fragabr@gmail.com> Tested-by: Andrey Rahmatullin <wrar@wrar.name> Tested-by: Steven Rostedt <rostedt@goodmis.org> Cc: stable <stable@vger.kernel.org> Reviewed-by: Rafael J. Wysocki <rjw@sisk.pl> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pci.h | s | 10K | 285 | Yinghai Lu | yinghai@kernel.org | 1330123046 |  | PCI: Move "pci reassigndev resource alignment" out of quirks.c  This isn't really a quirk; calling it directly from pci_add_device makes more sense.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | Makefile | g | 1.9K |  | Linus Torvalds | torvalds@linux-foundation.org | 1337642694 |  | 
f | slot.c | s | 10K | 363 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103883 |  | pci: add module.h to files implicitly relying on its presence.  These were getting module.h implicitly from device.h but we want to clean that up, so we fix it here to avoid things like:  pci/slot.c: In function ‘pci_hp_create_module_link’: pci/slot.c:383: error: ‘module_kset’ undeclared (first use in this function)  Similarly, rpadlpar_core.c is modular, so add module.h to its includes.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | xen-pcifront.c | s | 26K | 957 | Linus Torvalds | torvalds@linux-foundation.org | 1333760093 |  | 
f | search.c | s | 11K | 326 | Kulikov Vasiliy | segooon@gmail.com | 1280508442 |  | PCI: use for_each_pci_dev()  Use for_each_pci_dev() to simplify the code.  Signed-off-by: Kulikov Vasiliy <segooon@gmail.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | syscall.c | s | 2.6K | 121 | Alexey Dobriyan | adobriyan@gmail.com | 1247426554 |  | headers: smp_lock.h redux  * Remove smp_lock.h from files which don't need it (including some headers!) * Add smp_lock.h to files which do need it * Make smp_lock.h include conditional in hardirq.h   It's needed only for one kernel_locked() usage which is under CONFIG_PREEMPT    This will make hardirq.h inclusion cheaper for every PREEMPT=n config   (which includes allmodconfig/allyesconfig, BTW)  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | hotplug.c | s | 926B | 29 | Kay Sievers | kay.sievers@vrfy.org | 1192225861 |  | Driver core: change add_uevent_var to use a struct  This changes the uevent buffer functions to use a struct instead of a long list of parameters. It does no longer require the caller to do the proper buffer termination and size accounting, which is currently wrong in some places. It fixes a known bug where parts of the uevent environment are overwritten because of wrong index calculations.  Many thanks to Mathieu Desnoyers for finding bugs and improving the error handling.  Signed-off-by: Kay Sievers <kay.sievers@vrfy.org> Cc: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca> Cc: Cornelia Huck <cornelia.huck@de.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | quirks.c | s | 110K | 2822 | Alan Stern | stern@rowland.harvard.edu | 1339618299 |  | USB: add NO_D3_DURING_SLEEP flag and revert 151b61284776be2  This patch (as1558) fixes a problem affecting several ASUS computers: The machine crashes or corrupts memory when going into suspend if the ehci-hcd driver is bound to any controllers.  Users have been forced to unbind or unload ehci-hcd before putting their systems to sleep.  After extensive testing, it was determined that the machines don't like going into suspend when any EHCI controllers are in the PCI D3 power state.  Presumably this is a firmware bug, but there's nothing we can do about it except to avoid putting the controllers in D3 during system sleep.  The patch adds a new flag to indicate whether the problem is present, and avoids changing the controller's power state if the flag is set. Runtime suspend is unaffected; this matters only for system suspend. However as a side effect, the controller will not respond to remote wakeup requests while the system is asleep.  Hence USB wakeup is not functional -- but of course, this is already true in the current state of affairs.  A similar patch has already been applied as commit 151b61284776be2d6f02d48c23c3625678960b97 (USB: EHCI: fix crash during suspend on ASUS computers).  The patch supersedes that one and reverts it.  There are two differences:  	The old patch added the flag at the USB level; this patch 	adds it at the PCI level.  	The old patch applied to all chipsets with the same vendor, 	subsystem vendor, and product IDs; this patch makes an 	exception for a known-good system (based on DMI information).  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Tested-by: Dâniel Fraga <fragabr@gmail.com> Tested-by: Andrey Rahmatullin <wrar@wrar.name> Tested-by: Steven Rostedt <rostedt@goodmis.org> Cc: stable <stable@vger.kernel.org> Reviewed-by: Rafael J. Wysocki <rjw@sisk.pl> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | pci-label.c | s | 8.2K | 315 | Al Viro | viro@zeniv.linux.org.uk | 1325649295 |  | switch ->is_visible() to returning umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | proc.c | s | 9.9K | 416 | Arnd Bergmann | arnd@arndb.de | 1290013172 |  | BKL: remove extraneous #include <smp_lock.h>  The big kernel lock has been removed from all these files at some point, leaving only the #include.  Remove this too as a cleanup.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | rom.c | s | 7.3K | 243 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103882 |  | pci: Fix files needing export.h for EXPORT_SYMBOL/THIS_MODULE  They were implicitly getting it from device.h --> module.h but we want to clean that up.  So add the minimal header for these macros.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | pci-acpi.c | s | 9.6K | 318 | Rafael J. Wysocki | rjw@sisk.pl | 1337296576 |  | ACPI / PCI / PM: Fix device PM regression related to D3hot/D3cold  Commit 1cc0c998fdf2 ("ACPI: Fix D3hot v D3cold confusion") introduced a bug in __acpi_bus_set_power() and changed the behavior of acpi_pci_set_power_state() in such a way that it generally doesn't work as expected if PCI_D3hot is passed to it as the second argument.  First off, if ACPI_STATE_D3 (equal to ACPI_STATE_D3_COLD) is passed to __acpi_bus_set_power() and the explicit_set flag is set for the D3cold state, the function will try to execute AML method called "_PS4", which doesn't exist.  Fix this by adding a check to ensure that the name of the AML method to execute for transitions to ACPI_STATE_D3_COLD is correct in __acpi_bus_set_power().  Also make sure that the explicit_set flag for ACPI_STATE_D3_COLD will be set if _PS3 is present and modify acpi_power_transition() to avoid accessing power resources for ACPI_STATE_D3_COLD, because they don't exist.  Second, if PCI_D3hot is passed to acpi_pci_set_power_state() as the target state, the function will request a transition to ACPI_STATE_D3_HOT instead of ACPI_STATE_D3.  However, ACPI_STATE_D3_HOT is now only marked as supported if the _PR3 AML method is defined for the given device, which is rare.  This causes problems to happen on systems where devices were successfully put into ACPI D3 by pci_set_power_state(PCI_D3hot) which doesn't work now.  In particular, some unused graphics adapters are not turned off as a result.  To fix this issue restore the old behavior of acpi_pci_set_power_state(), which is to request a transition to ACPI_STATE_D3 (equal to ACPI_STATE_D3_COLD) if either PCI_D3hot or PCI_D3cold is passed to it as the argument.  This approach is not ideal, because generally power should not be removed from devices if PCI_D3hot is the target power state, but since this behavior is relied on, we have no choice but to restore it at the moment and spend more time on designing a better solution in the future.  References: https://bugzilla.kernel.org/show_bug.cgi?id=43228 Reported-by: rocko <rockorequin@hotmail.com> Reported-by: Cristian Rodríguez <crrodriguez@opensuse.org> Reported-and-tested-by: Peter <lekensteyn@gmail.com> Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
d | pcie |  | 10 items |  | Chunhe Lan | Chunhe.Lan@freescale.com | 1336404446 |  | PCI: fix uninitialized variable 'cap_mask'  Get rid of these:  drivers/pci/pcie/portdrv_core.c: In function 'pcie_port_device_register': drivers/pci/pcie/portdrv_core.c:275:16: warning: 'cap_mask' may be used uninitialized in this function [-Wuninitialized] drivers/pci/pcie/portdrv_core.c:240:6: note: 'cap_mask' was declared here  In some cases, 'cap_mask' may be not set in pcie_port_platform_notify, holding a garbage value.  Signed-off-by: Chunhe Lan <Chunhe.Lan@freescale.com> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | pci-driver.c | s | 30K | 1058 | Khalid Aziz | khalid.aziz@hp.com | 1336151238 |  | PCI: disable Bus Master on PCI device shutdown  Disable Bus Master bit on the device in pci_device_shutdown() to ensure PCI devices do not continue to DMA data after shutdown.  This can cause memory corruption in case of a kexec where the current kernel shuts down and transfers control to a new kernel while a PCI device continues to DMA to memory that does not belong to it any more in the new kernel.  I have tested this code on two laptops, two workstations and a 16-socket server.  kexec worked correctly on all of them.  Signed-off-by: Khalid Aziz <khalid.aziz@hp.com> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | irq.c | s | 1.8K | 56 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103882 |  | pci: Fix files needing export.h for EXPORT_SYMBOL/THIS_MODULE  They were implicitly getting it from device.h --> module.h but we want to clean that up.  So add the minimal header for these macros.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | remove.c | s | 4.4K | 157 | Yinghai Lu | yinghai@kernel.org | 1330373815 |  | PCI: export __pci_remove_bus_device  Don't switch to pci_remove_bus_device yet, keep the __ prefix for now (the behavior is still the same: remove without stopping first).  This allows other out of tree users or pending patches to get notified from compiler warning.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | setup-res.c | s | 8.3K | 290 | Yinghai Lu | yinghai@kernel.org | 1330123046 |  | PCI: Move "pci reassigndev resource alignment" out of quirks.c  This isn't really a quirk; calling it directly from pci_add_device makes more sense.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | msi.h | s | 928B | 20 | Sheng Yang | sheng@linux.intel.com | 1293137587 |  | PCI: MSI: Move MSI-X entry definition to pci_regs.h  Then it can be used by others.  Reviewed-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com> Reviewed-by: Matthew Wilcox <willy@linux.intel.com> Signed-off-by: Sheng Yang <sheng@linux.intel.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | hotplug-pci.c | s | 365B | 15 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103882 |  | pci: Fix files needing export.h for EXPORT_SYMBOL/THIS_MODULE  They were implicitly getting it from device.h --> module.h but we want to clean that up.  So add the minimal header for these macros.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | ats.c | s | 10K | 371 | Linus Torvalds | torvalds@linux-foundation.org | 1326336626 |  | Merge branch 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci  * 'linux-next' of git://git.kernel.org/pub/scm/linux/kernel/git/jbarnes/pci: (80 commits)   x86/PCI: Expand the x86_msi_ops to have a restore MSIs.   PCI: Increase resource array mask bit size in pcim_iomap_regions()   PCI: DEVICE_COUNT_RESOURCE should be equal to PCI_NUM_RESOURCES   PCI: pci_ids: add device ids for STA2X11 device (aka ConneXT)   PNP: work around Dell 1536/1546 BIOS MMCONFIG bug that breaks USB   x86/PCI: amd: factor out MMCONFIG discovery   PCI: Enable ATS at the device state restore   PCI: msi: fix imbalanced refcount of msi irq sysfs objects   PCI: kconfig: English typo in pci/pcie/Kconfig   PCI/PM/Runtime: make PCI traces quieter   PCI: remove pci_create_bus()   xtensa/PCI: convert to pci_scan_root_bus() for correct root bus resources   x86/PCI: convert to pci_create_root_bus() and pci_scan_root_bus()   x86/PCI: use pci_scan_bus() instead of pci_scan_bus_parented()   x86/PCI: read Broadcom CNB20LE host bridge info before PCI scan   sparc32, leon/PCI: convert to pci_scan_root_bus() for correct root bus resources   sparc/PCI: convert to pci_create_root_bus()   sh/PCI: convert to pci_scan_root_bus() for correct root bus resources   powerpc/PCI: convert to pci_create_root_bus()   powerpc/PCI: split PHB part out of pcibios_map_io_space()   ...  Fix up conflicts in drivers/pci/msi.c and include/linux/pci_regs.h due to the same patches being applied in other branches.
f | pci-sysfs.c | s | 33K | 1152 | Matthew Garrett | mjg@redhat.com | 1335257415 |  | vgaarb: Add support for setting the default video device (v2)  The default VGA device is a somewhat fluid concept on platforms with multiple GPUs. Add support for setting it so switching code can update things appropriately, and make sure that the sysfs code returns the right device if it's changed.  v2: Updated to fix builds when __ARCH_HAS_VGA_DEFAULT_DEVICE is false.  Signed-off-by: Matthew Garrett <mjg@redhat.com> Acked-by: H. Peter Anvin <hpa@zytor.com> Acked-by: benh@kernel.crashing.org Cc: airlied@redhat.com Signed-off-by: Dave Airlie <airlied@redhat.com>
f | of.c | s | 1.5K | 54 | David Daney | david.daney@cavium.com | 1313769097 |  | PCI: OF: Don't crash when bridge parent is NULL.  In pcibios_get_phb_of_node(), we will crash while booting if bus->bridge->parent is NULL.  Check for this case and avoid dereferencing the NULL pointer.  Signed-off-by: David Daney <david.daney@cavium.com> Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org> Acked-by: Grant Likely <grant.likely@secretlab.ca> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | setup-irq.c | s | 1.6K | 53 | Ralf Baechle | ralf@linux-mips.org | 1311348366 |  | PCI: Make the struct pci_dev * argument of pci_fixup_irqs const.  Aside of the usual motivation for constification,  this function has a history of being abused a hook for interrupt and other fixups so I turned this function const ages ago in the MIPS code but it should be done treewide.  Due to function pointer passing in varous places a few other functions had to be constified as well.  Signed-off-by: Ralf Baechle <ralf@linux-mips.org> To: Anton Vorontsov <avorontsov@mvista.com> To: Chris Metcalf <cmetcalf@tilera.com> To: Colin Cross <ccross@android.com> Acked-by: "David S. Miller" <davem@davemloft.net> To: Eric Miao <eric.y.miao@gmail.com> To: Erik Gilling <konkers@android.com> Acked-by: Guan Xuetao <gxt@mprc.pku.edu.cn> To: "H. Peter Anvin" <hpa@zytor.com> To: Imre Kaloz <kaloz@openwrt.org> To: Ingo Molnar <mingo@redhat.com> To: Ivan Kokshaysky <ink@jurassic.park.msu.ru> To: Jesse Barnes <jbarnes@virtuousgeek.org> To: Krzysztof Halasa <khc@pm.waw.pl> To: Lennert Buytenhek <kernel@wantstofly.org> To: Matt Turner <mattst88@gmail.com> To: Nicolas Pitre <nico@fluxnic.net> To: Olof Johansson <olof@lixom.net> Acked-by: Paul Mundt <lethal@linux-sh.org> To: Richard Henderson <rth@twiddle.net> To: Russell King <linux@arm.linux.org.uk> To: Thomas Gleixner <tglx@linutronix.de> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: linux-alpha@vger.kernel.org Cc: linux-arm-kernel@lists.infradead.org Cc: linux-kernel@vger.kernel.org Cc: linux-mips@linux-mips.org Cc: linux-pci@vger.kernel.org Cc: linux-sh@vger.kernel.org Cc: linux-tegra@vger.kernel.org Cc: sparclinux@vger.kernel.org Cc: x86@kernel.org Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | probe.c | s | 45K | 1514 | Bjorn Helgaas | bhelgaas@google.com | 1336404207 |  | Merge branch 'topic/stratus' into next
f | Kconfig | g | 3.3K |  | Yinghai Lu | yinghai@kernel.org | 1330105139 |  | PCI: add a PCI resource reallocation config option  Add a new config option, PCI_REALLOC_ENABLE_AUTO, which will automatically try to re-allocate PCI resources if PCI_IOV support is enabled and the SR-IOV resources are unassigned.  Behavior can still be controlled using the pci=realloc= parameter.  -v2: According to Jesse, adding one CONFIG option for distribution to      disable it or enable it. -v3: update Kconfig text (jbarnes)  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | htirq.c | s | 4.3K | 151 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103882 |  | pci: Fix files needing export.h for EXPORT_SYMBOL/THIS_MODULE  They were implicitly getting it from device.h --> module.h but we want to clean that up.  So add the minimal header for these macros.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | pci-stub.c | s | 2.4K | 79 | Tejun Heo | tj@kernel.org | 1293137632 |  | PCI: pci-stub: ignore zero-length id parameters  pci-stub uses strsep() to separate list of ids and generates a warning message when it fails to parse an id.  However, not specifying the parameter results in ids set to an empty string.  strsep() happily returns the empty string as the first token and thus triggers the warning message spuriously.  Make the tokner ignore zero length ids.  Reported-by: Chris Wright <chrisw@sous-sol.org> Reported-by: Prasad Joshi <P.G.Joshi@student.reading.ac.uk> Cc: stable@kernel.org Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | host-bridge.c | s | 2.3K | 76 | Yinghai Lu | yinghai@kernel.org | 1335819163 |  | PCI: add host bridge release support  We need a hook to release host bridge resources allocated when creating root bus.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
f | iov.c | s | 16K | 601 | Yinghai Lu | yinghai@kernel.org | 1330373538 |  | PCI: Rename pci_remove_bus_device to pci_stop_and_remove_bus_device  The old pci_remove_bus_device actually did stop and remove.  Make the name reflect that to reduce confusion.  This patch is done by sed scripts and changes back some incorrect __pci_remove_bus_device changes.  Suggested-by: Jesse Barnes <jbarnes@virtuousgeek.org> Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | setup-bus.c | s | 40K | 1327 | Jesse Barnes | jbarnes@virtuousgeek.org | 1330122333 |  | Merge branch 'pci-next+probe_only+bus2res-fb127cb' of git://github.com/bjorn-helgaas/linux into linux-next
f | msi.c | s | 25K | 857 | Konrad Rzeszutek Wilk | konrad.wilk@oracle.com | 1325887346 |  | x86/PCI: Expand the x86_msi_ops to have a restore MSIs.  The MSI restore function will become a function pointer in an x86_msi_ops struct. It defaults to the implementation in the io_apic.c and msi.c. We piggyback on the indirection mechanism introduced by "x86: Introduce x86_msi_ops".  Cc: x86@kernel.org Cc: Thomas Gleixner <tglx@linutronix.de> Cc: "H. Peter Anvin" <hpa@zytor.com> Cc: linux-pci@vger.kernel.org Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
d | hotplug |  | 50 items |  | Yinghai Lu | yinghai@kernel.org | 1330373836 |  | PCI: make acpihp use __pci_remove_bus_device instead  pci_stop_bus_device gets called before in the same loop.  Signed-off-by: Yinghai Lu <yinghai@kernel.org> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | access.c | s | 11K | 407 | Jan Kiszka | jan.kiszka@siemens.com | 1325880634 |  | PCI: Introduce INTx check & mask API  These new PCI services allow to probe for 2.3-compliant INTx masking support and then use the feature from PCI interrupt handlers. The services are properly synchronized with concurrent config space access via sysfs or on device reset.  This enables generic PCI device drivers like uio_pci_generic or KVM's device assignment to implement the necessary kernel-side IRQ handling without any knowledge about device-specific interrupt status and control registers.  Acked-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com> Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>
f | ioapic.c | s | 2.8K | 103 | Jan Beulich | JBeulich@suse.com | 1323159665 |  | pci, x86/io-apic: Allow PCI_IOAPIC to be user configurable on x86  This adjusts PCI_IOAPIC to be user configurable (possibly as a module) on x86, since the base architecture code for adding IO-APICs dynamically isn't there yet (and hence having the code present everywhere is pretty pointless).  To make this consistent, a MODULE_DEVICE_TABLE() declaration gets added, the class specifications get corrected (by properly using PCI_DEVICE_CLASS() intended for purposes like this), and the probe and remove functions get their sections adjusted.  Signed-off-by: Jan Beulich <jbeulich@suse.com> Acked-by: Jesse Barnes <jbarnes@virtuousgeek.org> Cc: Bjorn Helgaas <bhelgaas@google.com> Link: http://lkml.kernel.org/r/4EDDD71A02000078000659F1@nat28.tlf.novell.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | vpd.c | s | 1.2K | 48 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103882 |  | pci: Fix files needing export.h for EXPORT_SYMBOL/THIS_MODULE  They were implicitly getting it from device.h --> module.h but we want to clean that up.  So add the minimal header for these macros.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | bus.c | s | 7.9K | 289 | Bjorn Helgaas | bhelgaas@google.com | 1330053540 |  | PCI: add struct pci_host_bridge_window with CPU/bus address offset  Some PCI host bridges apply an address offset, so bus addresses on PCI are different from CPU addresses.  This patch adds a way for architectures to tell the PCI core about this offset.  For example:      LIST_HEAD(resources);     pci_add_resource_offset(&resources, host->io_space, host->io_offset);     pci_add_resource_offset(&resources, host->mem_space, host->mem_offset);     pci_scan_root_bus(parent, bus, ops, sysdata, &resources);  Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
