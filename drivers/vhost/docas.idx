f | vhost.h | s | 6.7K | 187 | Michael S. Tsirkin | mst@redhat.com | 1334336959 |  | skbuff: struct ubuf_info callback type safety  The skb struct ubuf_info callback gets passed struct ubuf_info itself, not the arg value as the field name and the function signature seem to imply. Rename the arg field to ctx to match usage, add documentation and change the callback argument type to make usage clear and to have compiler check correctness.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | test.c | s | 7.2K | 280 | Zhi Yong Wu | wuzhy@linux.vnet.ibm.com | 1334216142 |  | tools/virtio: fix up vhost/test module build  commit ea5d404655ba3b356d0c06d6a3c4f24112124522 broke build for the vhost test module used by tools/virtio. Fix it up.  Signed-off-by: Zhi Yong Wu <wuzhy@linux.vnet.ibm.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
f | Makefile | g | 68B |  | Michael S. Tsirkin | mst@redhat.com | 1263548609 |  | vhost_net: a kernel-level virtio server  What it is: vhost net is a character device that can be used to reduce the number of system calls involved in virtio networking. Existing virtio net code is used in the guest without modification.  There's similarity with vringfd, with some differences and reduced scope - uses eventfd for signalling - structures can be moved around in memory at any time (good for   migration, bug work-arounds in userspace) - write logging is supported (good for migration) - support memory table and not just an offset (needed for kvm)  common virtio related code has been put in a separate file vhost.c and can be made into a separate module if/when more backends appear.  I used Rusty's lguest.c as the source for developing this part : this supplied me with witty comments I wouldn't be able to write myself.  What it is not: vhost net is not a bus, and not a generic new system call. No assumptions are made on how guest performs hypercalls. Userspace hypervisors are supported as well as kvm.  How it works: Basically, we connect virtio frontend (configured by userspace) to a backend. The backend could be a network device, or a tap device.  Backend is also configured by userspace, including vlan/mac etc.  Status: This works for me, and I haven't see any crashes. Compared to userspace, people reported improved latency (as I save up to 4 system calls per packet), as well as better bandwidth and CPU utilization.  Features that I plan to look at in the future: - mergeable buffers - zero copy - scalability tuning: figure out the best threading model to use  Note on RCU usage (this is also documented in vhost.h, near private_pointer which is the value protected by this variant of RCU): what is happening is that the rcu_dereference() is being used in a workqueue item.  The role of rcu_read_lock() is taken on by the start of execution of the workqueue item, of rcu_read_unlock() by the end of execution of the workqueue item, and of synchronize_rcu() by flush_workqueue()/flush_work(). In the future we might need to apply some gcc attribute or sparse annotation to the function passed to INIT_WORK(). Paul's ack below is for this RCU usage.  (Includes fixes by Alan Cox <alan@linux.intel.com>, David L Stevens <dlstevens@us.ibm.com>, Chris Wright <chrisw@redhat.com>)  Acked-by: Rusty Russell <rusty@rustcorp.com.au> Acked-by: Arnd Bergmann <arnd@arndb.de> Acked-by: "Paul E. McKenney" <paulmck@linux.vnet.ibm.com> Signed-off-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | test.h | s | 187B | 5 | Michael S. Tsirkin | mst@redhat.com | 1291903221 |  | vhost test module  This adds a test module for vhost infrastructure. Intentionally not tied to kbuild to prevent people from installing and loading it accidentally.  Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
f | net.c | s | 21K | 800 | David S. Miller | davem@davemloft.net | 1337221057 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | vhost.c | s | 40K | 1445 | Jens Freimann | jfrei@linux.vnet.ibm.com | 1340770256 |  | vhost: use USER_DS in vhost_worker thread  On some architectures address spaces are set up in a way that this is not necessary to work properly but on some others (like s390) it is. Make sure we operate on the user address space to allow copy_xxx_user() from the vhost_worker() thread by setting it explicitly before calling use_mm() and revert it after unuse_mm().  Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com> Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com> Acked-by: Michael S. Tsirkin <mst@redhat.com> Signed-off-by: David S. Miller <davem@davemloft.net>
f | Kconfig | g | 472B |  | Arnd Bergmann | arnd@arndb.de | 1266530918 |  | net/macvtap: add vhost support  This adds support for passing a macvtap file descriptor into vhost-net, much like we already do for tun/tap.  Most of the new code is taken from the respective patch in the tun driver and may get consolidated in the future.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Acked-by: Sridhar Samudrala <sri@us.ibm.com> Signed-off-by: David S. Miller <davem@davemloft.net>
