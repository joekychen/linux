f | intel_idle.c | s | 15K | 504 | Marcos Paulo de Souza | marcos.mage@gmail.com | 1332377694 |  | drivers/idle/intel_idle.c: fix confusing code identation  Fix a code indentation in the function intel_idle_cpu_init that looks confusing.o  Suggested-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Signed-off-by: Marcos Paulo de Souza <marcos.mage@gmail.com> Cc: "Brown, Len" <len.brown@intel.com> Cc: Len Brown <lenb@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | i7300_idle.c | s | 15K | 493 | Stephen Boyd | sboyd@codeaurora.org | 1333664750 |  | simple_open: automatically convert to simple_open()  Many users of debugfs copy the implementation of default_open() when they want to support a custom read/write function op.  This leads to a proliferation of the default_open() implementation across the entire tree.  Now that the common implementation has been consolidated into libfs we can replace all the users of this function with simple_open().  This replacement was done with the following semantic patch:  <smpl> @ open @ identifier open_f != simple_open; identifier i, f; @@ -int open_f(struct inode *i, struct file *f) -{ ( -if (i->i_private) -f->private_data = i->i_private; || -f->private_data = i->i_private; ) -return 0; -}  @ has_open depends on open @ identifier fops; identifier open.open_f; @@ struct file_operations fops = { ... -.open = open_f, +.open = simple_open, ... }; </smpl>  [akpm@linux-foundation.org: checkpatch fixes] Signed-off-by: Stephen Boyd <sboyd@codeaurora.org> Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Julia Lawall <Julia.Lawall@lip6.fr> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 810B |  | Len Brown | len.brown@intel.com | 1281811448 |  | intel_idle: no longer EXPERIMENTAL  This is a fully supported driver.  Signed-off-by: Len Brown <len.brown@intel.com>
f | Makefile | g | 87B |  | Len Brown | len.brown@intel.com | 1275071180 |  | intel_idle: native hardware cpuidle driver for latest Intel processors  This EXPERIMENTAL driver supersedes acpi_idle on Intel Atom Processors, Intel Core i3/i5/i7 Processors and associated Intel Xeon processors.  It does not support the Intel Core2 processor or earlier.  For kernels configured with ACPI, CONFIG_INTEL_IDLE=y allows intel_idle to probe before the ACPI processor driver. Booting with "intel_idle.max_cstate=0" disables intel_idle and the system will fall back on ACPI's "acpi_idle".  Typical Linux distributions load ACPI processor module early, making CONFIG_INTEL_IDLE=m not easily useful on ACPI platforms.  intel_idle probes all processors at module_init time. Processors that are hot-added later will be limited to using C1 in idle.  Signed-off-by: Len Brown <len.brown@intel.com>
