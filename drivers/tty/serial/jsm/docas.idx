f | jsm_driver.c | s | 6.9K | 230 | Lucas Kannebley Tavares | lucaskt@linux.vnet.ibm.com | 1327438536 |  | jsm: Fixed EEH recovery error  There was an error on the jsm driver that would cause it to be unable to recover after a second error is detected.  At the first error, the device recovers properly:  [72521.485691] EEH: Detected PCI bus error on device 0003:02:00.0 [72521.485695] EEH: This PCI device has failed 1 times in the last hour: ... [72532.035693] ttyn3 at MMIO 0x0 (irq = 49) is a jsm [72532.105689] jsm: Port 3 added  However, at the second error, it cascades until EEH disables the device:  [72631.229549] Call Trace: ... [72641.725687] jsm: Port 3 added [72641.725695] EEH: Detected PCI bus error on device 0003:02:00.0 [72641.725698] EEH: This PCI device has failed 3 times in the last hour:  It was caused because the PCI state was not being saved after the first restore. Therefore, at the second recovery the PCI state would not be restored.  Signed-off-by: Lucas Kannebley Tavares <lucaskt@linux.vnet.ibm.com> Signed-off-by: Breno Leitao <brenohl@br.ibm.com> Acked-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | jsm_neo.c | s | 36K | 1149 | Thadeu Lima de Souza Cascardo | cascardo@linux.vnet.ibm.com | 1314224984 |  | jsm: print byte we are dequeing  Instead of printing the head of the buffer, we should print the tail, which is the byte we are sending to the device.  Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | jsm_tty.c | s | 20K | 685 | Thadeu Lima de Souza Cascardo | cascardo@linux.vnet.ibm.com | 1314224984 |  | jsm: remove buggy write queue  jsm uses a write queue that copies from uart_core circular buffer. This copying however has some bugs, like not wrapping the head counter. Since this write queue is also a circular buffer, the consumer function is ready to use the uart_core circular buffer directly.  This buggy copying function was making some bytes be dropped when transmitting to a raw tty, doing something like this.  [root@hostname ~]$ cat /dev/ttyn1 > cascardo/dump & [1] 2658 [root@hostname ~]$ cat /proc/tty/drivers > /dev/ttyn0 [root@hostname ~]$ cat /proc/tty/drivers /dev/tty             /dev/tty        5       0 system:/dev/tty /dev/console         /dev/console    5       1 system:console /dev/ptmx            /dev/ptmx       5       2 system /dev/vc/0            /dev/vc/0       4       0 system:vtmaster jsm                  /dev/ttyn     250 0-31 serial serial               /dev/ttyS       4 64-95 serial hvc                  /dev/hvc      229 0-7 system pty_slave            /dev/pts      136 0-1048575 pty:slave pty_master           /dev/ptm      128 0-1048575 pty:master unknown              /dev/tty        4 1-63 console [root@hostname ~]$ cat cascardo/dump /dev/tty             /dev/tty        5       0 system:/dev/tty /dev/console         /dev/console    5       1 system:console /dev/ptmx            /dev/ptmx       5       2 system /dev/vc/0            /dev/vc/0       4       0 system:vtmaste[root@hostname ~]$  This patch drops the driver write queue entirely, using the circular buffer from uart_core only.  Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | Makefile | g | 120B |  | Greg Kroah-Hartman | gregkh@suse.de | 1294949418 |  | tty: move drivers/serial/ to drivers/tty/serial/  The serial drivers are really just tty drivers, so move them to drivers/tty/ to make things a bit neater overall.  This is part of the tty/serial driver movement proceedure as proposed by Arnd Bergmann and approved by everyone involved a number of months ago.  Cc: Arnd Bergmann <arnd@arndb.de> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Cc: Rogier Wolff <R.E.Wolff@bitwizard.nl> Cc: Michael H. Warfield <mhw@wittsend.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | jsm.h | s | 13K | 312 | Thadeu Lima de Souza Cascardo | cascardo@linux.vnet.ibm.com | 1314224984 |  | jsm: remove buggy write queue  jsm uses a write queue that copies from uart_core circular buffer. This copying however has some bugs, like not wrapping the head counter. Since this write queue is also a circular buffer, the consumer function is ready to use the uart_core circular buffer directly.  This buggy copying function was making some bytes be dropped when transmitting to a raw tty, doing something like this.  [root@hostname ~]$ cat /dev/ttyn1 > cascardo/dump & [1] 2658 [root@hostname ~]$ cat /proc/tty/drivers > /dev/ttyn0 [root@hostname ~]$ cat /proc/tty/drivers /dev/tty             /dev/tty        5       0 system:/dev/tty /dev/console         /dev/console    5       1 system:console /dev/ptmx            /dev/ptmx       5       2 system /dev/vc/0            /dev/vc/0       4       0 system:vtmaster jsm                  /dev/ttyn     250 0-31 serial serial               /dev/ttyS       4 64-95 serial hvc                  /dev/hvc      229 0-7 system pty_slave            /dev/pts      136 0-1048575 pty:slave pty_master           /dev/ptm      128 0-1048575 pty:master unknown              /dev/tty        4 1-63 console [root@hostname ~]$ cat cascardo/dump /dev/tty             /dev/tty        5       0 system:/dev/tty /dev/console         /dev/console    5       1 system:console /dev/ptmx            /dev/ptmx       5       2 system /dev/vc/0            /dev/vc/0       4       0 system:vtmaste[root@hostname ~]$  This patch drops the driver write queue entirely, using the circular buffer from uart_core only.  Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
