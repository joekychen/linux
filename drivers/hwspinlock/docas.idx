f | hwspinlock_core.c | s | 17K | 517 | Ohad Ben-Cohen | ohad@wizery.com | 1316623534 |  | hwspinlock/core: register a bank of hwspinlocks in a single API call  Hardware Spinlock devices usually contain numerous locks (known devices today support between 32 to 256 locks).  Originally hwspinlock core required drivers to register (and later, when needed, unregister) each lock separately.  That worked, but required hwspinlocks drivers to do a bit extra work when they were probed/removed.  This patch changes hwspin_lock_{un}register() to allow a bank of hwspinlocks to be {un}registered in a single invocation.  A new 'struct hwspinlock_device', which contains an array of 'struct hwspinlock's is now being passed to the core upon registration (so instead of wrapping each struct hwspinlock, a priv member has been added to allow drivers to piggyback their private data with each hwspinlock).  While at it, several per-lock members were moved to be per-device: 1. struct device *dev 2. struct hwspinlock_ops *ops  In addition, now that the array of locks is handled by the core, there's no reason to maintain a per-lock 'int id' member: the id of the lock anyway equals to its index in the bank's array plus the bank's base_id. Remove this per-lock id member too, and instead use a simple pointers arithmetic to derive it.  As a result of this change, hwspinlocks drivers are now simpler and smaller (about %20 code reduction) and the memory footprint of the hwspinlock framework is reduced.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
f | u8500_hsem.c | s | 4.9K | 161 | Linus Torvalds | torvalds@linux-foundation.org | 1320806056 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/paulg/linux:   drivers/media: video/a5k6aa is a module and so needs module.h   mfd: fix build failures in recently added ab5500 code   hwspinlock/u8500: include linux/module.h   MTD: MAPS: bcm963xx-flash.c: explicitly include module.h
f | hwspinlock_internal.h | s | 2.4K | 68 | Ohad Ben-Cohen | ohad@wizery.com | 1316623534 |  | hwspinlock/core: register a bank of hwspinlocks in a single API call  Hardware Spinlock devices usually contain numerous locks (known devices today support between 32 to 256 locks).  Originally hwspinlock core required drivers to register (and later, when needed, unregister) each lock separately.  That worked, but required hwspinlocks drivers to do a bit extra work when they were probed/removed.  This patch changes hwspin_lock_{un}register() to allow a bank of hwspinlocks to be {un}registered in a single invocation.  A new 'struct hwspinlock_device', which contains an array of 'struct hwspinlock's is now being passed to the core upon registration (so instead of wrapping each struct hwspinlock, a priv member has been added to allow drivers to piggyback their private data with each hwspinlock).  While at it, several per-lock members were moved to be per-device: 1. struct device *dev 2. struct hwspinlock_ops *ops  In addition, now that the array of locks is handled by the core, there's no reason to maintain a per-lock 'int id' member: the id of the lock anyway equals to its index in the bank's array plus the bank's base_id. Remove this per-lock id member too, and instead use a simple pointers arithmetic to derive it.  As a result of this change, hwspinlocks drivers are now simpler and smaller (about %20 code reduction) and the memory footprint of the hwspinlock framework is reduced.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
f | Makefile | g | 184B |  | Mathieu J. Poirier | mathieu.poirier@linaro.org | 1316624265 |  | hwspinlock/u8500: add hwspinlock driver  Add hwspinlock driver for U8500's Hsem hardware.  At this point only HSem's protocol 1 is used (i.e. no interrupts).  Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org> Acked-by: Linus Walleij <linus.walleij@linaro.org> [ohad@wizery.com: adopt recent hwspin_lock_{un}register API changes] [ohad@wizery.com: set the owner member of the driver] [ohad@wizery.com: mark ->remove() function as __devexit] [ohad@wizery.com: write commit log] [ohad@wizery.com: small cleanups] Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
f | Kconfig | g | 683B |  | Mathieu J. Poirier | mathieu.poirier@linaro.org | 1316624265 |  | hwspinlock/u8500: add hwspinlock driver  Add hwspinlock driver for U8500's Hsem hardware.  At this point only HSem's protocol 1 is used (i.e. no interrupts).  Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org> Acked-by: Linus Walleij <linus.walleij@linaro.org> [ohad@wizery.com: adopt recent hwspin_lock_{un}register API changes] [ohad@wizery.com: set the owner member of the driver] [ohad@wizery.com: mark ->remove() function as __devexit] [ohad@wizery.com: write commit log] [ohad@wizery.com: small cleanups] Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
f | omap_hwspinlock.c | s | 4.8K | 157 | Ohad Ben-Cohen | ohad@wizery.com | 1316624265 |  | hwspinlock/omap: omap_hwspinlock_remove should be __devexit  Mark omap_hwspinlock_remove with __devexit (and use __devexit_p appropriately) so the function can be discarded when the conditions are met.  Signed-off-by: Ohad Ben-Cohen <ohad@wizery.com>
