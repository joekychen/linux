f | timekeeping.c | s | 33K | 1072 | John Stultz | john.stultz@linaro.org | 1338839189 |  | timekeeping: Fix CLOCK_MONOTONIC inconsistency during leapsecond  Commit 6b43ae8a61 (ntp: Fix leap-second hrtimer livelock) broke the leapsecond update of CLOCK_MONOTONIC. The missing leapsecond update to wall_to_monotonic causes discontinuities in CLOCK_MONOTONIC.  Adjust wall_to_monotonic when NTP inserted a leapsecond.  Reported-by: Richard Cochran <richardcochran@gmail.com> Signed-off-by: John Stultz <john.stultz@linaro.org> Tested-by: Richard Cochran <richardcochran@gmail.com> Cc: stable@kernel.org Link: http://lkml.kernel.org/r/1338400497-12420-1-git-send-email-john.stultz@linaro.org Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | tick-internal.h | s | 4.6K | 128 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1315473056 |  | clockevents: Make minimum delay adjustments configurable  The automatic increase of the min_delta_ns of a clockevents device should be done in the clockevents code as the minimum delay is an attribute of the clockevents device.  In addition not all architectures want the automatic adjustment, on a massively virtualized system it can happen that the programming of a clock event fails several times in a row because the virtual cpu has been rescheduled quickly enough. In that case the minimum delay will erroneously be increased with no way back. The new config symbol GENERIC_CLOCKEVENTS_MIN_ADJUST is used to enable the automatic adjustment. The config option is selected only for x86.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: john stultz <johnstul@us.ibm.com> Link: http://lkml.kernel.org/r/20110823133142.494157493@de.ibm.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | Makefile | g | 439B |  | John Stultz | john.stultz@linaro.org | 1303851704 |  | timers: Introduce in-kernel alarm-timer interface  This provides the in kernel interface and infrastructure for alarm-timers.  Alarm-timers are a hybrid style timer, similar to hrtimers, but when the system is suspended, the RTC device is set to fire and wake the system for when the soonest alarm-timer expires.  The concept for Alarm-timers was inspired by the Android Alarm driver (by Arve Hjønnevåg) found in the Android kernel tree.  See: http://android.git.kernel.org/?p=kernel/common.git;a=blob;f=drivers/rtc/alarm.c;h=1250edfbdf3302f5e4ea6194847c6ef4bb7beb1c;hb=android-2.6.36  This in-kernel interface should be fairly compatible with the Android alarm driver in-kernel interface, but has the advantage of utilizing the new RTC timerqueue code instead of doing direct RTC manipulation.  CC: Arve Hjønnevåg <arve@android.com> CC: Thomas Gleixner <tglx@linutronix.de> CC: Alessandro Zummo <a.zummo@towertech.it> Acked-by: Arnd Bergmann <arnd@arndb.de> Signed-off-by: John Stultz <john.stultz@linaro.org>
f | timeconv.c | s | 3.5K | 109 | Zhaolei | zhaolei@cn.fujitsu.com | 1253802056 |  | time: add function to convert between calendar time and broken-down time for universal use  There are many similar code in kernel for one object: convert time between calendar time and broken-down time.  Here is some source I found:   fs/ncpfs/dir.c   fs/smbfs/proc.c   fs/fat/misc.c   fs/udf/udftime.c   fs/cifs/netmisc.c   net/netfilter/xt_time.c   drivers/scsi/ips.c   drivers/input/misc/hp_sdc_rtc.c   drivers/rtc/rtc-lib.c   arch/ia64/hp/sim/boot/fw-emu.c   arch/m68k/mac/misc.c   arch/powerpc/kernel/time.c   arch/parisc/include/asm/rtc.h   ...  We can make a common function for this type of conversion, At least we can get following benefit:  1: Make kernel simple and unify 2: Easy to fix bug in converting code 3: Reduce clone of code in future    For example, I'm trying to make ftrace display walltime,    this patch will make me easy.  This code is based on code from glibc-2.6  Signed-off-by: Zhao Lei <zhaolei@cn.fujitsu.com> Cc: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Pavel Machek <pavel@ucw.cz> Cc: Andi Kleen <andi@firstfloor.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | tick-sched.c | s | 23K | 794 | Ingo Molnar | mingo@kernel.org | 1339403423 |  | Merge branch 'rcu/urgent' of git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu into core/urgent  Merge RCU fixes from Paul E. McKenney:   " This series has four patches, the major point of which is to eliminate    some slowdowns (including boot-time slowdowns) resulting from some    RCU_FAST_NO_HZ changes.  The issue with the changes is that posting timers    from the idle loop has no effect if the CPU has entered dyntick-idle    mode because the CPU has already computed its wakeup time, and posting    a timer does not cause it to be recomputed.  The short-term fix is for    RCU to precompute the timeout value so that the CPU's calculation is    correct. "  Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | timer_stats.c | s | 9.9K | 357 | Thomas Gleixner | tglx@linutronix.de | 1315905120 |  | locking, timer_stats: Annotate table_lock as raw  The table_lock lock can be taken in atomic context and therefore cannot be preempted on -rt - annotate it.  In mainline this change documents the low level nature of the lock - otherwise there's no functional difference. Lockdep and Sparse checking will work as usual.  Reported-by: Andreas Sundebo <kernel@sundebo.dk> Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Tested-by: Andreas Sundebo <kernel@sundebo.dk>  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | tick-common.c | s | 9.5K | 359 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1315473056 |  | clockevents: Make minimum delay adjustments configurable  The automatic increase of the min_delta_ns of a clockevents device should be done in the clockevents code as the minimum delay is an attribute of the clockevents device.  In addition not all architectures want the automatic adjustment, on a massively virtualized system it can happen that the programming of a clock event fails several times in a row because the virtual cpu has been rescheduled quickly enough. In that case the minimum delay will erroneously be increased with no way back. The new config symbol GENERIC_CLOCKEVENTS_MIN_ADJUST is used to enable the automatic adjustment. The config option is selected only for x86.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: john stultz <johnstul@us.ibm.com> Link: http://lkml.kernel.org/r/20110823133142.494157493@de.ibm.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | timer_list.c | s | 7.5K | 263 | Kees Cook | kees.cook@canonical.com | 1297516316 |  | timer debug: Hide kernel addresses via %pK in /proc/timer_list  In the continuing effort to avoid kernel addresses leaking to unprivileged users, this patch switches to %pK for /proc/timer_list reporting.  Signed-off-by: Kees Cook <kees.cook@canonical.com> Cc: John Stultz <johnstul@us.ibm.com> Cc: Dan Rosenberg <drosenberg@vsecurity.com> Cc: Eugene Teo <eugeneteo@kernel.org> Cc: Linus Torvalds <torvalds@linux-foundation.org> LKML-Reference: <20110212032125.GA23571@outflux.net> Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | tick-broadcast.c | s | 15K | 537 | Suresh Siddha | suresh.b.siddha@intel.com | 1334863670 |  | tick: Fix the spurious broadcast timer ticks after resume  During resume, tick_resume_broadcast() programs the broadcast timer in oneshot mode unconditionally. On the platforms where broadcast timer is not really required, this will generate spurious broadcast timer ticks upon resume. For example, on the always running apic timer platforms with HPET, I see spurious hpet tick once every ~5minutes (which is the 32-bit hpet counter wraparound time).  Similar to boot time, during resume make the oneshot mode setting of the broadcast clock event device conditional on the state of active broadcast users.  Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com> Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com> Tested-by: svenjoac@gmx.de Cc: torvalds@linux-foundation.org Cc: rjw@sisk.pl Link: http://lkml.kernel.org/r/1334802459.28674.209.camel@sbsiddha-desk.sc.intel.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | alarmtimer.c | s | 20K | 704 | John Stultz | john.stultz@linaro.org | 1334958996 |  | alarmtimer: Provide accessor to alarmtimer rtc device  The Android alarm interface provides a settime call that sets both the alarmtimer RTC device and CLOCK_REALTIME to the same value.  Since there may be multiple rtc devices, provide a hook to access the one the alarmtimer infrastructure is using.  CC: Colin Cross <ccross@android.com> CC: Thomas Gleixner <tglx@linutronix.de> CC: Android Kernel Team <kernel-team@android.com> Signed-off-by: John Stultz <john.stultz@linaro.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | tick-oneshot.c | s | 2.8K | 102 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1315473056 |  | clockevents: Make minimum delay adjustments configurable  The automatic increase of the min_delta_ns of a clockevents device should be done in the clockevents code as the minimum delay is an attribute of the clockevents device.  In addition not all architectures want the automatic adjustment, on a massively virtualized system it can happen that the programming of a clock event fails several times in a row because the virtual cpu has been rescheduled quickly enough. In that case the minimum delay will erroneously be increased with no way back. The new config symbol GENERIC_CLOCKEVENTS_MIN_ADJUST is used to enable the automatic adjustment. The config option is selected only for x86.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: john stultz <johnstul@us.ibm.com> Link: http://lkml.kernel.org/r/20110823133142.494157493@de.ibm.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | jiffies.c | s | 3.0K | 86 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | Kconfig | g | 1.8K |  | Thomas Gleixner | tglx@linutronix.de | 1337636626 |  | timers: Fixup the Kconfig consolidation fallout  Sigh, I missed to check which architecture Kconfig files actually include the core Kconfig file. There are a few which did not. So we broke them.  Instead of adding the includes to those, we are better off to move the include to init/Kconfig like we did already with irqs and others.  This does not change anything for the architectures using the old style periodic timer mode. It just solves the build wreckage there.  For those architectures which use the clock events infrastructure it moves the include of the core Kconfig file to "General setup" which is a way more logical place than having it at random locations specified by the architecture specific Kconfigs.  Reported-by: Ingo Molnar <mingo@kernel.org> Cc: Anna-Maria Gleixner <anna-maria@glx-um.de> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | clocksource.c | s | 26K | 840 | Jim Cromie | jim.cromie@gmail.com | 1332546561 |  | kernel-time: fix s/then/than/ spelling errors  Use than for comparisons, like more than.  CC: John Stultz <john.stultz@linaro.org> Signed-off-by: Jim Cromie <jim.cromie@gmail.com> Signed-off-by: John Stultz <john.stultz@linaro.org>
f | clockevents.c | s | 11K | 376 | Magnus Damm | magnus.damm@gmail.com | 1337903091 |  | clockevents: Make clockevents_config() a global symbol  Make clockevents_config() into a global symbol to allow it to be used by compiled-in clockevent drivers. This is needed by drivers that want to update the timer frequency after registration time.  Signed-off-by: Magnus Damm <damm@opensource.se> Tested-by: Simon Horman <horms@verge.net.au> Cc: arnd@arndb.de Cc: johnstul@us.ibm.com Cc: rjw@sisk.pl Cc: lethal@linux-sh.org Cc: gregkh@linuxfoundation.org Cc: olof@lixom.net Cc: Magnus Damm <magnus.damm@gmail.com> Link: http://lkml.kernel.org/r/20120509143934.27521.46553.sendpatchset@w520 Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | timecompare.c | s | 4.8K | 170 | Nikitas Angelinas | nikitasangelinas@googlemail.com | 1287675006 |  | time: Use ARRAY_SIZE macro in timecompare.c  Replace sizeof(buffer)/sizeof(buffer[0]) with ARRAY_SIZE(buffer) in kernel/time/timecompare.c  Signed-off-by: Nikitas Angelinas <nikitasangelinas@googlemail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | ntp.c | s | 23K | 794 | Richard Cochran | richardcochran@gmail.com | 1337642216 |  | ntp: Fix a stale comment and a few stray newlines.  Signed-off-by: Richard Cochran <richardcochran@gmail.com> Signed-off-by: John Stultz <john.stultz@linaro.org>
f | posix-clock.c | s | 8.4K | 343 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103805 |  | kernel: Fix files explicitly needing EXPORT_SYMBOL infrastructure  These files were getting <linux/module.h> via an implicit non-obvious path, but we want to crush those out of existence since they cost time during compiles of processing thousands of lines of headers for no reason.  Give them the lightweight header that just contains the EXPORT_SYMBOL infrastructure.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
