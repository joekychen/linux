f | Makefile | g | 194B |  | Ingo Molnar | mingo@elte.hu | 1329905280 |  | uprobes: Move to kernel/events/  Consolidate the uprobes code under kernel/events/, where the various core kernel event handling routines live.  Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com> Cc: Jim Keniston <jkenisto@us.ibm.com> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Anton Arapov <anton@redhat.com> Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com> Link: http://lkml.kernel.org/n/tip-biuyhhwohxgbp2vzbap5yr8o@git.kernel.org Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | hw_breakpoint.c | s | 15K | 554 | Stephane Eranian | eranian@google.com | 1330955742 |  | perf: Disable PERF_SAMPLE_BRANCH_* when not supported  PERF_SAMPLE_BRANCH_* is disabled for:   - SW events (sw counters, tracepoints)  - HW breakpoints  - ALL but Intel x86 architecture  - AMD64 processors  Signed-off-by: Stephane Eranian <eranian@google.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Link: http://lkml.kernel.org/r/1328826068-11713-10-git-send-email-eranian@google.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | internal.h | s | 2.9K | 108 | Ingo Molnar | mingo@elte.hu | 1323150229 |  | Merge branch 'perf/urgent' into perf/core  Merge reason: Add these cherry-picked commits so that future changes               on perf/core don't conflict.  Signed-off-by: Ingo Molnar <mingo@elte.hu>
f | ring_buffer.c | s | 7.9K | 295 | Linus Torvalds | torvalds@linux-foundation.org | 1326057682 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jikos/trivial: (53 commits)   Kconfig: acpi: Fix typo in comment.   misc latin1 to utf8 conversions   devres: Fix a typo in devm_kfree comment   btrfs: free-space-cache.c: remove extra semicolon.   fat: Spelling s/obsolate/obsolete/g   SCSI, pmcraid: Fix spelling error in a pmcraid_err() call   tools/power turbostat: update fields in manpage   mac80211: drop spelling fix   types.h: fix comment spelling for 'architectures'   typo fixes: aera -> area, exntension -> extension   devices.txt: Fix typo of 'VMware'.   sis900: Fix enum typo 'sis900_rx_bufer_status'   decompress_bunzip2: remove invalid vi modeline   treewide: Fix comment and string typo 'bufer'   hyper-v: Update MAINTAINERS   treewide: Fix typos in various parts of the kernel, and fix some comments.   clockevents: drop unknown Kconfig symbol GENERIC_CLOCKEVENTS_MIGR   gpio: Kconfig: drop unknown symbol 'CS5535_GPIO'   leds: Kconfig: Fix typo 'D2NET_V2'   sound: Kconfig: drop unknown symbol ARCH_CLPS7500   ...  Fix up trivial conflicts in arch/powerpc/platforms/40x/Kconfig (some new kconfig additions, close to removed commented-out old ones)
f | uprobes.c | s | 39K | 1376 | Srikar Dronamraju | srikar@linux.vnet.ibm.com | 1334402748 |  | uprobes/core: Decrement uprobe count before the pages are unmapped  Uprobes has a callback (uprobe_munmap()) in the unmap path to maintain the uprobes count.  In the exit path this callback gets called in unlink_file_vma(). However by the time unlink_file_vma() is called, the pages would have been unmapped (in unmap_vmas()) and the task->rss_stat counts accounted (in zap_pte_range()).  If the exiting process has probepoints, uprobe_munmap() checks if the breakpoint instruction was around before decrementing the probe count.  This results in a file backed page being reread by uprobe_munmap() and hence it does not find the breakpoint.  This patch fixes this problem by moving the callback to unmap_single_vma(). Since unmap_single_vma() may not unmap the complete vma, add start and end parameters to uprobe_munmap().  This bug became apparent courtesy of commit c3f0327f8e9d ("mm: add rss counters consistency check").  Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com> Cc: Jim Keniston <jkenisto@linux.vnet.ibm.com> Cc: Linux-mm <linux-mm@kvack.org> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Christoph Hellwig <hch@infradead.org> Cc: Steven Rostedt <rostedt@goodmis.org> Cc: Arnaldo Carvalho de Melo <acme@infradead.org> Cc: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com> Cc: Anton Arapov <anton@redhat.com> Cc: Peter Zijlstra <peterz@infradead.org> Link: http://lkml.kernel.org/r/20120411103527.23245.9835.sendpatchset@srdronam.in.ibm.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | core.c | s | 166K | 5912 | Salman Qazi | sqazi@google.com | 1340012757 |  | perf: Use css_tryget() to avoid propping up css refcount  An rmdir pushes css's ref count to zero.  However, if the associated directory is open at the time, the dentry ref count is non-zero.  If the fd for this directory is then passed into perf_event_open, it does a css_get().  This bounces the ref count back up from zero.  This is a problem by itself.  But what makes it turn into a crash is the fact that we end up doing an extra dput, since we perform a dput when css_put sees the ref count go down to zero.  css_tryget() does not fall into that trap. So, we use that instead.  Reproduction test-case for the bug:   #include <unistd.h>  #include <sys/types.h>  #include <sys/stat.h>  #include <fcntl.h>  #include <linux/unistd.h>  #include <linux/perf_event.h>  #include <string.h>  #include <errno.h>  #include <stdio.h>   #define PERF_FLAG_PID_CGROUP    (1U << 2)   int perf_event_open(struct perf_event_attr *hw_event_uptr,                      pid_t pid, int cpu, int group_fd, unsigned long flags) {          return syscall(__NR_perf_event_open,hw_event_uptr, pid, cpu,                  group_fd, flags);  }   /*   * Directly poke at the perf_event bug, since it's proving hard to repro   * depending on where in the kernel tree.  what moved?   */  int main(int argc, char **argv)  {         int fd;         struct perf_event_attr attr;         memset(&attr, 0, sizeof(attr));         attr.exclude_kernel = 1;         attr.size = sizeof(attr);         mkdir("/dev/cgroup/perf_event/blah", 0777);         fd = open("/dev/cgroup/perf_event/blah", O_RDONLY);         perror("open");         rmdir("/dev/cgroup/perf_event/blah");         sleep(2);         perf_event_open(&attr, fd, 0, -1,  PERF_FLAG_PID_CGROUP);         perror("perf_event_open");         close(fd);         return 0;  }  Signed-off-by: Salman Qazi <sqazi@google.com> Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl> Acked-by: Tejun Heo <tj@kernel.org> Link: http://lkml.kernel.org/r/20120614223108.1025.2503.stgit@dungbeetle.mtv.corp.google.com Signed-off-by: Ingo Molnar <mingo@kernel.org>
f | callchain.c | s | 3.9K | 146 | Namhyung Kim | namhyung.kim@lge.com | 1327134821 |  | perf: Don't call release_callchain_buffers() if allocation fails  When alloc_callchain_buffers() fails, it frees all of entries before return. In addition, calling the release_callchain_buffers() will cause a NULL pointer dereference since callchain_cpu_entries is not set.  Signed-off-by: Namhyung Kim <namhyung.kim@lge.com> Acked-by: Frederic Weisbecker <fweisbec@gmail.com> Cc: Namhyung Kim <namhyung@gmail.com> Cc: Peter Zijlstra <a.p.zijlstra@chello.nl> Cc: Paul Mackerras <paulus@samba.org> Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net> Link: http://lkml.kernel.org/r/1327021966-27688-1-git-send-email-namhyung.kim@lge.com Signed-off-by: Ingo Molnar <mingo@elte.hu>
