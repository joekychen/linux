f | paride.txt | g | 16K |  | Justin P. Mattock | justinmattock@gmail.com | 1280928100 |  | Documentation: update broken web addresses.  Below you will find an updated version from the original series bunching all patches into one big patch updating broken web addresses that are located in Documentation/* Some of the addresses date as far far back as 1995 etc... so searching became a bit difficult, the best way to deal with these is to use web.archive.org to locate these addresses that are outdated. Now there are also some addresses pointing to .spec files some are located, but some(after searching on the companies site)where still no where to be found. In this case I just changed the address to the company site this way the users can contact the company and they can locate them for the users.  Signed-off-by: Justin P. Mattock <justinmattock@gmail.com> Signed-off-by: Thomas Weber <weber@corscience.de> Signed-off-by: Mike Frysinger <vapier.adi@gmail.com> Cc: Paulo Marques <pmarques@grupopie.com> Cc: Randy Dunlap <rdunlap@xenotime.net> Cc: Michael Neuling <mikey@neuling.org> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
d | drbd |  | 7 items |  | Philipp Reisner | philipp.reisner@linbit.com | 1254424669 |  | The DRBD driver  Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com> Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
f | nbd.txt | g | 1.9K |  | Randy Dunlap | randy.dunlap@oracle.com | 1226683733 |                   Network Block Device (TCP version) | Create/use more directory structure in the Documentation/ tree.  Create Documentation/blockdev/ sub-directory and populate it. Populate the Documentation/serial/ sub-directory. Move MSI-HOWTO.txt to Documentation/PCI/. Move ioctl-number.txt to Documentation/ioctl/. Update all relevant 00-INDEX files. Update all relevant Kconfig files and source files.  Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
f | mflash.txt | g | 2.4K |  | unsik Kim | donari75@gmail.com | 1239084758 |  | mflash: initial support  This driver supports mflash IO mode for linux.  Mflash is embedded flash drive and mainly targeted mobile and consumer electronic devices.  Internally, mflash has nand flash and other hardware logics and supports 2 different operation (ATA, IO) modes.  ATA mode doesn't need any new driver and currently works well under standard IDE subsystem.  Actually it's one chip SSD.  IO mode is ATA-like custom mode for the host that doesn't have IDE interface.  Followings are brief descriptions about IO mode. A. IO mode based on ATA protocol and uses some custom command. (read confirm, write confirm) B. IO mode uses SRAM bus interface. C. IO mode supports 4kB boot area, so host can boot from mflash.  This driver is quitely similar to a standard ATA driver, but because of following reasons it is currently seperated with ATA layer.  1. ATA layer deals standard ATA protocol.  ATA layer have many low-    level device specific interface, but data transfer keeps ATA rule.    But, mflash IO mode doesn't.  2. Even though currently not used in mflash driver code, mflash has    some custom command and modes.  (nand fusing, firmware patch, etc) If    this feature supported in linux kernel, ATA layer more altered.  3. Currently PATA platform device driver doesn't support interrupt.    (I'm not sure) But, mflash uses interrupt (polling mode is just for    debug).  4. mflash is somewhat under-develop product.  Even though some company    already using mflash their own product, I think more time is needed for    standardization of custom command and mode.  That time (maybe October)    I will talk to with ATA people.  If they accept integration, I will    integrate.  Signed-off-by: unsik Kim <donari75@gmail.com> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
f | 00-INDEX | g | 582B |  | unsik Kim | donari75@gmail.com | 1239084758 |  | mflash: initial support  This driver supports mflash IO mode for linux.  Mflash is embedded flash drive and mainly targeted mobile and consumer electronic devices.  Internally, mflash has nand flash and other hardware logics and supports 2 different operation (ATA, IO) modes.  ATA mode doesn't need any new driver and currently works well under standard IDE subsystem.  Actually it's one chip SSD.  IO mode is ATA-like custom mode for the host that doesn't have IDE interface.  Followings are brief descriptions about IO mode. A. IO mode based on ATA protocol and uses some custom command. (read confirm, write confirm) B. IO mode uses SRAM bus interface. C. IO mode supports 4kB boot area, so host can boot from mflash.  This driver is quitely similar to a standard ATA driver, but because of following reasons it is currently seperated with ATA layer.  1. ATA layer deals standard ATA protocol.  ATA layer have many low-    level device specific interface, but data transfer keeps ATA rule.    But, mflash IO mode doesn't.  2. Even though currently not used in mflash driver code, mflash has    some custom command and modes.  (nand fusing, firmware patch, etc) If    this feature supported in linux kernel, ATA layer more altered.  3. Currently PATA platform device driver doesn't support interrupt.    (I'm not sure) But, mflash uses interrupt (polling mode is just for    debug).  4. mflash is somewhat under-develop product.  Even though some company    already using mflash their own product, I think more time is needed for    standardization of custom command and mode.  That time (maybe October)    I will talk to with ATA people.  If they accept integration, I will    integrate.  Signed-off-by: unsik Kim <donari75@gmail.com> Cc: Alan Cox <alan@lxorguk.ukuu.org.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Jens Axboe <jens.axboe@oracle.com>
f | README.DAC960 | g | 33K |  | Wanlong Gao | wanlong.gao@gmail.com | 1307965385 |  | doc: fix wrong arch/i386 references  Change all "arch/i386" to "arch/x86" in Documentaion/, since the directory has changed.  Also update the files which have changed their filename in the meantime accordingly.  Signed-off-by: Wanlong Gao <wanlong.gao@gmail.com> [jkosina@suse.cz: reword changelog] Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | floppy.txt | g | 8.3K |  | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1333148595 |  | Documentation: remove references to /etc/modprobe.conf  Usage of /etc/modprobe.conf file was deprecated by module-init-tools and is no longer parsed by new kmod tool. References to this file are replaced in Documentation, comments and Kconfig according to the context.  There are also some references to the old /etc/modules.conf from 2.4 kernels that are being removed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi> Acked-by: Takashi Iwai <tiwai@suse.de> Acked-by: Mauro Carvalho Chehab <mchehab@redhat.com> Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ramdisk.txt | g | 6.2K |  | Wanlong Gao | wanlong.gao@gmail.com | 1307965385 |  | doc: fix wrong arch/i386 references  Change all "arch/i386" to "arch/x86" in Documentaion/, since the directory has changed.  Also update the files which have changed their filename in the meantime accordingly.  Signed-off-by: Wanlong Gao <wanlong.gao@gmail.com> [jkosina@suse.cz: reword changelog] Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | cciss.txt | g | 7.3K |  | Stephen M. Cameron | scameron@beardog.cce.hp.com | 1321431709 |  | cciss: auto engage SCSI mid layer at driver load time  A long time ago, probably in 2002, one of the distros, or maybe more than one, loaded block drivers prior to loading the SCSI mid layer.  This meant that the cciss driver, being a block driver, could not engage the SCSI mid layer at init time without panicking, and relied on being poked by a userland program after the system was up (and the SCSI mid layer was therefore present) to engage the SCSI mid layer.  This is no longer the case, and cciss can safely rely on the SCSI mid layer being present at init time and engage the SCSI mid layer straight away.  This means that users will see their tape drives and medium changers at driver load time without need for a script in /etc/rc.d that does this:  for x in /proc/driver/cciss/cciss* do 	echo "engage scsi" > $x done  However, if no tape drives or medium changers are detected, the SCSI mid layer will not be engaged.  If a tape drive or medium change is later hot-added to the system it will then be necessary to use the above script or similar for the device(s) to be acceesible.  Signed-off-by: Stephen M. Cameron <scameron@beardog.cce.hp.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Jens Axboe <axboe@kernel.dk>
f | cpqarray.txt | g | 2.2K |  | Randy Dunlap | randy.dunlap@oracle.com | 1226683733 |  | Create/use more directory structure in the Documentation/ tree.  Create Documentation/blockdev/ sub-directory and populate it. Populate the Documentation/serial/ sub-directory. Move MSI-HOWTO.txt to Documentation/PCI/. Move ioctl-number.txt to Documentation/ioctl/. Update all relevant 00-INDEX files. Update all relevant Kconfig files and source files.  Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
