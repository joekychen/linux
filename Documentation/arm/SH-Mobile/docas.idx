f | zboot-rom-sdhi.txt | g | 1.6K |  | Simon Horman | horms@verge.net.au | 1309338052 |  | ARM: 6886/1: mmc, Add zboot from eSD support for SuperH Mobile ARM  This allows a ROM-able zImage to be written to eSD and for SuperH Mobile ARM to boot directly from the SDHI hardware block.  This is achieved by the MaskROM loading the first portion of the image into MERAM and then jumping to it.  This portion contains loader code which copies the entire image to SDRAM and jumps to it. From there the zImage boot code proceeds as normal, uncompressing the image into its final location and then jumping to it.  Cc: Paul Mundt <lethal@linux-sh.org> Acked-by: Magnus Damm <magnus.damm@gmail.com> Acked-by: Paul Mundt <lethal@linux-sh.org> Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | zboot-rom-mmcif.txt | g | 1.0K |  | Simon Horman | horms@verge.net.au | 1295968012 |  | ARM: 6617/1: mmc, Add zboot from MMC support for SuperH Mobile ARM  This allows a ROM-able zImage to be written to MMC and for SuperH Mobile ARM to boot directly from the MMCIF hardware block.  This is achieved by the MaskROM loading the first portion of the image into MERAM and then jumping to it. This portion contains loader code which copies the entire image to SDRAM and jumps to it. From there the zImage boot code proceeds as normal, uncompressing the image into its final location and then jumping to it.  Cc: Magnus Damm <magnus.damm@gmail.com>  Russell, please consider merging this for 2.6.38.  This patch depends on: * "mmc, sh: Move MMCIF_PROGRESS_* into sh_mmcif.h"   which will be merged though Paul Mundt's rmobile sh-2.6.   The absence of this patch will break the build if   the (new) CONFIG_ZBOOT_ROM_MMCIF option is set.   There are no subtle side-effects.  v2: Addressed comments by Magnus Damm * Fix copyright in vrl4.c * Fix use of #define CONFIG_ZBOOT_ROM_MMCIF in mmcif-sh7372.c * Initialise LED GPIO lines in head-ap4evb.txt instead of mmcif-sh7372.c   as this is considered board-specific.  v3: Addressed comments made in person by Magnus Damm * Move mmcif_loader to be earlier in the image and   reduce the number of blocks of boot program loaded by the MaskRom   from 40 to 8 accordingly. * Move LED GPIO initialisation into mmcif_progress_init   - This leaves the partner jet script unbloated Other * inline mmcif_update_progress so it is a static inline in a header file  v4: * Use htole16() and htole32() in v4rl.c to ensure   that the output is little endian  v5: Addressed comments by Russell King * Simplify assembly code * Jump to code rather than an address <- bug fix * Use (void __iomem *) as appropriate Roll in mackerel support * This was previously a separate patch, only because of the order   in which this code was developed Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | vrl4.c | s | 3.9K | 145 | Simon Horman | horms@verge.net.au | 1295968012 |  | ARM: 6617/1: mmc, Add zboot from MMC support for SuperH Mobile ARM  This allows a ROM-able zImage to be written to MMC and for SuperH Mobile ARM to boot directly from the MMCIF hardware block.  This is achieved by the MaskROM loading the first portion of the image into MERAM and then jumping to it. This portion contains loader code which copies the entire image to SDRAM and jumps to it. From there the zImage boot code proceeds as normal, uncompressing the image into its final location and then jumping to it.  Cc: Magnus Damm <magnus.damm@gmail.com>  Russell, please consider merging this for 2.6.38.  This patch depends on: * "mmc, sh: Move MMCIF_PROGRESS_* into sh_mmcif.h"   which will be merged though Paul Mundt's rmobile sh-2.6.   The absence of this patch will break the build if   the (new) CONFIG_ZBOOT_ROM_MMCIF option is set.   There are no subtle side-effects.  v2: Addressed comments by Magnus Damm * Fix copyright in vrl4.c * Fix use of #define CONFIG_ZBOOT_ROM_MMCIF in mmcif-sh7372.c * Initialise LED GPIO lines in head-ap4evb.txt instead of mmcif-sh7372.c   as this is considered board-specific.  v3: Addressed comments made in person by Magnus Damm * Move mmcif_loader to be earlier in the image and   reduce the number of blocks of boot program loaded by the MaskRom   from 40 to 8 accordingly. * Move LED GPIO initialisation into mmcif_progress_init   - This leaves the partner jet script unbloated Other * inline mmcif_update_progress so it is a static inline in a header file  v4: * Use htole16() and htole32() in v4rl.c to ensure   that the output is little endian  v5: Addressed comments by Russell King * Simplify assembly code * Jump to code rather than an address <- bug fix * Use (void __iomem *) as appropriate Roll in mackerel support * This was previously a separate patch, only because of the order   in which this code was developed Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
f | Makefile | g | 77B |  | Simon Horman | horms@verge.net.au | 1295968012 |  | ARM: 6617/1: mmc, Add zboot from MMC support for SuperH Mobile ARM  This allows a ROM-able zImage to be written to MMC and for SuperH Mobile ARM to boot directly from the MMCIF hardware block.  This is achieved by the MaskROM loading the first portion of the image into MERAM and then jumping to it. This portion contains loader code which copies the entire image to SDRAM and jumps to it. From there the zImage boot code proceeds as normal, uncompressing the image into its final location and then jumping to it.  Cc: Magnus Damm <magnus.damm@gmail.com>  Russell, please consider merging this for 2.6.38.  This patch depends on: * "mmc, sh: Move MMCIF_PROGRESS_* into sh_mmcif.h"   which will be merged though Paul Mundt's rmobile sh-2.6.   The absence of this patch will break the build if   the (new) CONFIG_ZBOOT_ROM_MMCIF option is set.   There are no subtle side-effects.  v2: Addressed comments by Magnus Damm * Fix copyright in vrl4.c * Fix use of #define CONFIG_ZBOOT_ROM_MMCIF in mmcif-sh7372.c * Initialise LED GPIO lines in head-ap4evb.txt instead of mmcif-sh7372.c   as this is considered board-specific.  v3: Addressed comments made in person by Magnus Damm * Move mmcif_loader to be earlier in the image and   reduce the number of blocks of boot program loaded by the MaskRom   from 40 to 8 accordingly. * Move LED GPIO initialisation into mmcif_progress_init   - This leaves the partner jet script unbloated Other * inline mmcif_update_progress so it is a static inline in a header file  v4: * Use htole16() and htole32() in v4rl.c to ensure   that the output is little endian  v5: Addressed comments by Russell King * Simplify assembly code * Jump to code rather than an address <- bug fix * Use (void __iomem *) as appropriate Roll in mackerel support * This was previously a separate patch, only because of the order   in which this code was developed Signed-off-by: Simon Horman <horms@verge.net.au> Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
