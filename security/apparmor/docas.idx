f | path.c | s | 6.3K | 214 | John Johansen | john.johansen@canonical.com | 1337364592 |  | apparmor: fix long path failure due to disconnected path  BugLink: http://bugs.launchpad.net/bugs/955892  All failures from __d_path where being treated as disconnected paths, however __d_path can also fail when the generated pathname is too long.  The initial ENAMETOOLONG error was being lost, and ENAMETOOLONG was only returned if the subsequent dentry_path call resulted in that error.  Other wise if the path was split across a mount point such that the dentry_path fit within the buffer when the __d_path did not the failure was treated as a disconnected path.  Signed-off-by: John Johansen <john.johansen@canonical.com>
f | policy_unpack.c | s | 17K | 649 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | domain.c | s | 22K | 768 | John Johansen | john.johansen@canonical.com | 1334365998 |  | Fix execve behavior apparmor for PR_{GET,SET}_NO_NEW_PRIVS  Add support for AppArmor to explicitly fail requested domain transitions if NO_NEW_PRIVS is set and the task is not unconfined.  Transitions from unconfined are still allowed because this always results in a reduction of privileges.  Acked-by: Eric Paris <eparis@redhat.com> Signed-off-by: Will Drewry <wad@chromium.org> Signed-off-by: John Johansen <john.johansen@canonical.com> Signed-off-by: Andy Lutomirski <luto@amacapital.net>  v18: new acked-by, new description Signed-off-by: James Morris <james.l.morris@oracle.com>
f | Makefile | g | 2.3K |  | Tetsuo Handa | penguin-kernel@i-love.sakura.ne.jp | 1332206566 |  | AppArmor: Fix location of const qualifier on generated string tables  Signed-off-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp> Signed-off-by: John Johansen <john.johansen@canonical.com>
d | include |  | 15 items |  | Eric Paris | eparis@redhat.com | 1333988582 |  | apparmor: move task from common_audit_data to apparmor_audit_data  apparmor is the only LSM that uses the common_audit_data tsk field. Instead of making all LSMs pay for the stack space move the aa usage into the apparmor_audit_data.  Signed-off-by: Eric Paris <eparis@redhat.com>
f | lib.c | s | 3.4K | 125 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | apparmorfs.c | s | 8.4K | 298 | Kees Cook | kees@ubuntu.com | 1330371499 |  | AppArmor: export known rlimit names/value mappings in securityfs  Since the parser needs to know which rlimits are known to the kernel, export the list via a mask file in the "rlimit" subdirectory in the securityfs "features" directory.  Signed-off-by: Kees Cook <kees@ubuntu.com> Signed-off-by: John Johansen <john.johansen@canonical.com>
f | context.c | s | 5.4K | 196 | John Johansen | john.johansen@canonical.com | 1280727312 |  | AppArmor: contexts used in attaching policy to system objects  AppArmor contexts attach profiles and state to tasks, files, etc. when a direct profile reference is not sufficient.  Signed-off-by: John Johansen <john.johansen@canonical.com> Signed-off-by: James Morris <jmorris@namei.org>
f | audit.c | s | 4.7K | 190 | Eric Paris | eparis@redhat.com | 1333988582 |  | apparmor: move task from common_audit_data to apparmor_audit_data  apparmor is the only LSM that uses the common_audit_data tsk field. Instead of making all LSMs pay for the stack space move the aa usage into the apparmor_audit_data.  Signed-off-by: Eric Paris <eparis@redhat.com>
f | ipc.c | s | 3.2K | 104 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | procattr.c | s | 4.7K | 149 | James Morris | jmorris@namei.org | 1315612589 |  | apparmor: sparse fix: include procattr.h in procattr.c  Fix sparse warnings: security/apparmor/procattr.c:35:5: warning: symbol 'aa_getprocattr' was not declared. Should it be static? security/apparmor/procattr.c:113:5: warning: symbol 'aa_setprocattr_changehat' was not declared. Should it be static? security/apparmor/procattr.c:158:5: warning: symbol 'aa_setprocattr_changeprofile' was not declared. Should it be static? security/apparmor/procattr.c:166:5: warning: symbol 'aa_setprocattr_permipc' was not declared. Should it be static?  Signed-off-by: James Morris <jmorris@namei.org> Acked-by: John Johansen <john.johansen@canonical.com>
f | sid.c | s | 1.2K | 48 | John Johansen | john.johansen@canonical.com | 1280727517 |  | AppArmor: core policy routines  The basic routines and defines for AppArmor policy.  AppArmor policy is defined by a few basic components.       profiles - the basic unit of confinement contain all the information                  to enforce policy on a task                   Profiles tend to be named after an executable that they                  will attach to but this is not required.       namespaces - a container for a set of profiles that will be used                  during attachment and transitions between profiles.       sids - which provide a unique id for each profile  Signed-off-by: John Johansen <john.johansen@canonical.com> Signed-off-by: James Morris <jmorris@namei.org>
f | policy.c | s | 31K | 1051 | James Morris | james.l.morris@oracle.com | 1337649666 |  | Merge branch 'master' of git://git.infradead.org/users/eparis/selinux into next  Per pull request, for 3.5.
f | capability.c | s | 3.8K | 129 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | resource.c | s | 4.0K | 129 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | Kconfig | g | 1023B |  | Randy Dunlap | randy.dunlap@oracle.com | 1281008211 |  | apparmor: depends on NET  SECURITY_APPARMOR should depend on NET since AUDIT needs (depends on) NET.  Fixes 70-80 errors that occur when CONFIG_NET is not enabled, but APPARMOR selects AUDIT without qualification.  E.g.:  audit.c:(.text+0x33361): undefined reference to `netlink_unicast' (.text+0x333df): undefined reference to `netlink_unicast' audit.c:(.text+0x3341d): undefined reference to `skb_queue_tail' audit.c:(.text+0x33424): undefined reference to `kfree_skb' audit.c:(.text+0x334cb): undefined reference to `kfree_skb' audit.c:(.text+0x33597): undefined reference to `skb_put' audit.c:(.text+0x3369b): undefined reference to `__alloc_skb' audit.c:(.text+0x336d7): undefined reference to `kfree_skb' (.text+0x3374c): undefined reference to `__alloc_skb' auditfilter.c:(.text+0x35305): undefined reference to `skb_queue_tail' lsm_audit.c:(.text+0x2873): undefined reference to `init_net' lsm_audit.c:(.text+0x2878): undefined reference to `dev_get_by_index'  Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com> Signed-off-by: John Johansen <john.johansen@canonical.com> Signed-off-by: James Morris <jmorris@namei.org>
f | file.c | s | 12K | 403 | Eric Paris | eparis@redhat.com | 1333988584 |  | LSM: do not initialize common_audit_data to 0  It isn't needed.  If you don't set the type of the data associated with that type it is a pretty obvious programming bug.  So why waste the cycles?  Signed-off-by: Eric Paris <eparis@redhat.com>
f | lsm.c | s | 24K | 785 | Al Viro | viro@zeniv.linux.org.uk | 1338484314 |  | split ->file_mmap() into ->mmap_addr()/->mmap_file()  ... i.e. file-dependent and address-dependent checks.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | match.c | s | 10K | 383 | John Johansen | john.johansen@canonical.com | 1331730924 |  | AppArmor: Update dfa matching routines.  Update aa_dfa_match so that it doesn't result in an input string being walked twice (once to get its length and another time to match)  Add a single step functions   aa_dfa_next  Signed-off-by: John Johansen <john.johansen@canonical.com> Acked-by: Kees Cook <kees@ubuntu.com>
