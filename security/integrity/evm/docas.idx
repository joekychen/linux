f | evm_crypto.c | s | 6.1K | 230 | James Morris | jmorris@namei.org | 1326071808 |  | Merge branch 'next' into for-linus  Conflicts: 	security/integrity/evm/evm_crypto.c  Resolved upstream fix vs. next conflict manually.  Signed-off-by: James Morris <jmorris@namei.org>
f | Makefile | g | 185B |  | Mimi Zohar | zohar@linux.vnet.ibm.com | 1316028291 |  | evm: posix acls modify i_mode  The posix xattr acls are 'system' prefixed, which normally would not affect security.evm.  An interesting side affect of writing posix xattr acls is their modifying of the i_mode, which is included in security.evm.  This patch updates security.evm when posix xattr acls are written.  Signed-off-by: Mimi Zohar <zohar@us.ibm.com>
f | evm.h | s | 1.4K | 42 | Dmitry Kasatkin | dmitry.kasatkin@intel.com | 1320850274 |  | evm: digital signature verification support  This patch adds support for digital signature verification to EVM. With this feature file metadata can be protected using digital signature instead of an HMAC. When building an image, which has to be flashed to different devices, an HMAC cannot be used to sign file metadata, because the HMAC key should be different on every device.  Signed-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com> Acked-by: Mimi Zohar <zohar@us.ibm.com>
f | evm_posix_acl.c | s | 714B | 23 | Mimi Zohar | zohar@linux.vnet.ibm.com | 1316028291 |  | evm: posix acls modify i_mode  The posix xattr acls are 'system' prefixed, which normally would not affect security.evm.  An interesting side affect of writing posix xattr acls is their modifying of the i_mode, which is included in security.evm.  This patch updates security.evm when posix xattr acls are written.  Signed-off-by: Mimi Zohar <zohar@us.ibm.com>
f | Kconfig | g | 345B |  | Mimi Zohar | zohar@linux.vnet.ibm.com | 1316028289 |  | evm: remove TCG_TPM dependency  All tristates selected by EVM(boolean) are forced to be builtin, except in the TCG_TPM(tristate) dependency case. Arnaud Lacombe summarizes the Kconfig bug as, "So it would seem direct dependency state influence the state of reverse dependencies.."  For a detailed explanation, refer to Arnaud Lacombe's posting http://lkml.org/lkml/2011/8/23/498.  With the "encrypted-keys: remove trusted-keys dependency" patch, EVM can now be built without a dependency on TCG_TPM.  The trusted-keys dependency requires trusted-keys to either be builtin or not selected. This dependency will prevent the boolean/tristate mismatch from occuring.  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>,              Randy Dunlap <rdunlap@xenotimenet> Signed-off-by: Mimi Zohar <zohar@us.ibm.com>
f | evm_main.c | s | 11K | 404 | Dmitry Kasatkin | dmitry.kasatkin@intel.com | 1320850274 |  | evm: digital signature verification support  This patch adds support for digital signature verification to EVM. With this feature file metadata can be protected using digital signature instead of an HMAC. When building an image, which has to be flashed to different devices, an HMAC cannot be used to sign file metadata, because the HMAC key should be different on every device.  Signed-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com> Acked-by: Mimi Zohar <zohar@us.ibm.com>
f | evm_secfs.c | s | 2.4K | 91 | Mimi Zohar | zohar@linux.vnet.ibm.com | 1311006580 |  | evm: re-release  EVM protects a file's security extended attributes(xattrs) against integrity attacks.  This patchset provides the framework and an initial method.  The initial method maintains an HMAC-sha1 value across the security extended attributes, storing the HMAC value as the extended attribute 'security.evm'. Other methods of validating the integrity of a file's metadata will be posted separately (eg. EVM-digital-signatures).  While this patchset does authenticate the security xattrs, and cryptographically binds them to the inode, coming extensions will bind other directory and inode metadata for more complete protection.  To help simplify the review and upstreaming process, each extension will be posted separately (eg. IMA-appraisal, IMA-appraisal-directory).  For a general overview of the proposed Linux integrity subsystem, refer to Dave Safford's whitepaper: http://downloads.sf.net/project/linux-ima/linux-ima/Integrity_overview.pdf.  EVM depends on the Kernel Key Retention System to provide it with a trusted/encrypted key for the HMAC-sha1 operation. The key is loaded onto the root's keyring using keyctl.  Until EVM receives notification that the key has been successfully loaded onto the keyring (echo 1 > <securityfs>/evm), EVM can not create or validate the 'security.evm' xattr, but returns INTEGRITY_UNKNOWN. Loading the key and signaling EVM should be done as early as possible. Normally this is done in the initramfs, which has already been measured as part of the trusted boot.  For more information on creating and loading existing trusted/encrypted keys, refer to Documentation/keys-trusted-encrypted.txt.  A sample dracut patch, which loads the trusted/encrypted key and enables EVM, is available from http://linux-ima.sourceforge.net/#EVM.  Based on the LSMs enabled, the set of EVM protected security xattrs is defined at compile.  EVM adds the following three calls to the existing security hooks: evm_inode_setxattr(), evm_inode_post_setxattr(), and evm_inode_removexattr.  To initialize and update the 'security.evm' extended attribute, EVM defines three calls: evm_inode_post_init(), evm_inode_post_setattr() and evm_inode_post_removexattr() hooks.  To verify the integrity of a security xattr, EVM exports evm_verifyxattr().  Changelog v7: - Fixed URL in EVM ABI documentation  Changelog v6: (based on Serge Hallyn's review) - fix URL in patch description - remove evm_hmac_size definition - use SHA1_DIGEST_SIZE (removed both MAX_DIGEST_SIZE and evm_hmac_size) - moved linux include before other includes - test for crypto_hash_setkey failure - fail earlier for invalid key - clear entire encrypted key, even on failure - check xattr name length before comparing xattr names  Changelog: - locking based on i_mutex, remove evm_mutex - using trusted/encrypted keys for storing the EVM key used in the HMAC-sha1   operation. - replaced crypto hash with shash (Dmitry Kasatkin) - support for additional methods of verifying the security xattrs   (Dmitry Kasatkin) - iint not allocated for all regular files, but only for those appraised - Use cap_sys_admin in lieu of cap_mac_admin - Use __vfs_setxattr_noperm(), without permission checks, from EVM  Signed-off-by: Mimi Zohar <zohar@us.ibm.com> Acked-by: Serge Hallyn <serge.hallyn@canonical.com>
