f | itree.c | s | 11K | 436 | Al Viro | viro@zeniv.linux.org.uk | 1325909813 |  | vfs: prefer ->dentry->d_sb to ->mnt->mnt_sb  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | dir.c | s | 8.7K | 331 | Christoph Hellwig | hch@lst.de | 1281386851 |  | clean up write_begin usage for directories in pagecache  For filesystem that implement directories in pagecache we call block_write_begin with an already allocated page for this code, while the normal regular file write path uses the default block_write_begin behaviour.  Get rid of the __foofs_write_begin helper and opencode the normal write_begin call in foofs_write_begin, while adding a new foofs_prepare_chunk helper for the directory code.  The added benefit is that foofs_prepare_chunk has a much saner calling convention.  Note that the interruptible flag passed into block_write_begin is always ignored if we already pass in a page (see next patch for details), and we never were doing truncations of exessive blocks for this case either so we can switch directly to block_write_begin_newtrunc.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | Makefile | g | 195B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | balloc.c | s | 5.6K | 211 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | super.c | s | 14K | 511 | Al Viro | viro@zeniv.linux.org.uk | 1332293375 |  | switch open-coded instances of d_make_root() to new helper  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | inode.c | s | 9.6K | 338 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | sysv.h | s | 7.8K | 210 | Al Viro | viro@zeniv.linux.org.uk | 1332293372 |  | vfs: check i_nlink limits in vfs_{mkdir,rename_dir,link}  New field of struct super_block - ->s_max_links.  Maximal allowed value of ->i_nlink or 0; in the latter case all checks still need to be done in ->link/->mkdir/->rename instances.  Note that this limit applies both to directoris and to non-directories.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | symlink.c | s | 487B | 17 | Arjan van de Ven | arjan@linux.intel.com | 1171302526 |  | [PATCH] mark struct inode_operations const 3  Many struct inode_operations in the kernel can be "const".  Marking them const moves these to the .rodata section, which avoids false sharing with potential dirty data.  In addition it'll catch accidental writes at compile time to these shared resources.  Signed-off-by: Arjan van de Ven <arjan@linux.intel.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | namei.c | s | 5.8K | 245 | Al Viro | viro@zeniv.linux.org.uk | 1332293372 |  | vfs: check i_nlink limits in vfs_{mkdir,rename_dir,link}  New field of struct super_block - ->s_max_links.  Maximal allowed value of ->i_nlink or 0; in the latter case all checks still need to be done in ->link/->mkdir/->rename instances.  Note that this limit applies both to directoris and to non-directories.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | ialloc.c | s | 5.7K | 212 | Al Viro | viro@zeniv.linux.org.uk | 1325649300 |  | sysv: propagate umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | file.c | s | 1.2K | 51 | Christoph Hellwig | hch@lst.de | 1281386857 |  | remove inode_setattr  Replace inode_setattr with opencoded variants of it in all callers.  This moves the remaining call to vmtruncate into the filesystem methods where it can be replaced with the proper truncate sequence.  In a few cases it was obvious that we would never end up calling vmtruncate so it was left out in the opencoded variant:   spufs: explicitly checks for ATTR_SIZE earlier  btrfs,hugetlbfs,logfs,dlmfs: explicitly clears ATTR_SIZE earlier  ufs: contains an opencoded simple_seattr + truncate that sets the filesize just above  In addition to that ncpfs called inode_setattr with handcrafted iattrs, which allowed to trim down the opencoded variant.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | Kconfig | g | 1.7K |  | Alexey Dobriyan | adobriyan@gmail.com | 1232619359 |  | fs/Kconfig: move sysv out  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
