f | super.c | s | 15K | 567 | Al Viro | viro@zeniv.linux.org.uk | 1332293375 |  | switch open-coded instances of d_make_root() to new helper  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | storage.c | s | 6.4K | 260 | Artem Bityutskiy | artem.bityutskiy@linux.intel.com | 1332803970 |  | romfs: switch to new MTD API  We have changed the MTD API and now ROMFS should use 'mtd_read()' instead of mtd->read().  Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com> Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
f | internal.h | s | 1.3K | 41 | David Howells | dhowells@redhat.com | 1240604911 |  | ROMFS: romfs_lookup() shouldn't be doing a partial name comparison  romfs_lookup() should be using a routine akin to strcmp() on the backing store, rather than one akin to strncmp().  If it uses the latter, it's liable to match /bin/shutdown when looking up /bin/sh.  Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Michal Simek <monstr@monstr.eu> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 198B |  | David Howells | dhowells@redhat.com | 1237885292 |  | NOMMU: Make it possible for RomFS to use MTD devices directly  Change RomFS so that it can use MTD devices directly - without the intercession of the block layer - as well as using block devices.  This permits RomFS:   (1) to use the MTD direct mapping facility available under NOMMU conditions if      the underlying device is directly accessible by the CPU (including XIP);   (2) and thus to be used when the block layer is disabled.  RomFS can be configured with support just for MTD devices, just for Block devices or for both.  If RomFS is configured for both, then it will treat mtdblock device files as MTD backing stores, not block layer backing stores.  I tested this using a CONFIG_MMU=n CONFIG_BLOCK=n kernel running on my FRV board with a RomFS image installed on the mtdram test device.  I see my test program being run XIP:  	# cat /proc/maps 	... 	c0c000b0-c0c01f8c r-xs 00000000 1f:00 144        /mnt/doshm 	...  GDB on the kernel can be used to show that these addresses are within the set-aside RAM space.  Signed-off-by: David Howells <dhowells@redhat.com> Tested-by: Bernd Schmidt <bernd.schmidt@analog.com> Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
f | mmap-nommu.c | s | 2.2K | 66 | Artem Bityutskiy | artem.bityutskiy@linux.intel.com | 1326133572 |  | romfs: do not use mtd->get_unmapped_area directly  Remove direct usage of mtd->get_unmapped_area. Instead, just call 'mtd_get_unmapped_area()' which will return -EOPNOTSUPP if the function is not implemented, and then test for this code.  We also translate -EOPNOTSUPP to -ENOSYS because this return code is probably part of the kernel ABI which we do not want to break.  Cc: linux-fsdevel@vger.kernel.org Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com> Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
f | Kconfig | g | 1.8K |  | David Howells | dhowells@redhat.com | 1237885359 |  | NOMMU: Fix the RomFS Kconfig to ensure at least one backing store is selected  Fix the configuration of the RomFS to make sure that at least one backing store method is always selected.  This is done by rendering it down to a choice item that selects between Block, MTD and both.  This also works correctly in the case that CONFIG_MTD=m: MTD cannot be selected as a backing store unless CONFIG_ROMFS_FS is also 'm'.  Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>
