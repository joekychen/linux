f | internal.h | s | 5.1K | 129 | Cyrill Gorcunov | gorcunov@openvz.org | 1338511772 |  | fs, proc: introduce /proc/<pid>/task/<tid>/children entry  When we do checkpoint of a task we need to know the list of children the task, has but there is no easy and fast way to generate reverse parent->children chain from arbitrary <pid> (while a parent pid is provided in "PPid" field of /proc/<pid>/status).  So instead of walking over all pids in the system (creating one big process tree in memory, just to figure out which children a task has) -- we add explicit /proc/<pid>/task/<tid>/children entry, because the kernel already has this kind of information but it is not yet exported.  This is a first level children, not the whole process tree.  Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org> Reviewed-by: Oleg Nesterov <oleg@redhat.com> Reviewed-by: Kees Cook <keescook@chromium.org> Cc: Pavel Emelyanov <xemul@parallels.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | consoles.c | s | 2.2K | 98 | Torben Hohn | torbenh@gmx.de | 1296003006 |  | console: rename acquire/release_console_sem() to console_lock/unlock()  The -rt patches change the console_semaphore to console_mutex.  As a result, a quite large chunk of the patches changes all acquire/release_console_sem() to acquire/release_console_mutex()  This commit makes things use more neutral function names which dont make implications about the underlying lock.  The only real change is the return value of console_trylock which is inverted from try_acquire_console_sem()  This patch also paves the way to switching console_sem from a semaphore to a mutex.  [akpm@linux-foundation.org: coding-style fixes] [akpm@linux-foundation.org: make console_trylock return 1 on success, per Geert] Signed-off-by: Torben Hohn <torbenh@gmx.de> Cc: Thomas Gleixner <tglx@tglx.de> Cc: Greg KH <gregkh@suse.de> Cc: Ingo Molnar <mingo@elte.hu> Cc: Geert Uytterhoeven <geert@linux-m68k.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 741B |  | Eric W. Biederman | ebiederm@xmission.com | 1305063104 |  | ns: proc files for namespace naming policy.  Create files under /proc/<pid>/ns/ to allow controlling the namespaces of a process.  This addresses three specific problems that can make namespaces hard to work with. - Namespaces require a dedicated process to pin them in memory. - It is not possible to use a namespace unless you are the child   of the original creator. - Namespaces don't have names that userspace can use to talk about   them.  The namespace files under /proc/<pid>/ns/ can be opened and the file descriptor can be used to talk about a specific namespace, and to keep the specified namespace alive.  A namespace can be kept alive by either holding the file descriptor open or bind mounting the file someplace else.  aka: mount --bind /proc/self/ns/net /some/filesystem/path mount --bind /proc/self/fd/<N> /some/filesystem/path  This allows namespaces to be named with userspace policy.  It requires additional support to make use of these filedescriptors and that will be comming in the following patches.  Acked-by: Daniel Lezcano <daniel.lezcano@free.fr> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | devices.c | s | 1.4K | 61 | Alexey Dobriyan | adobriyan@gmail.com | 1294934596 |  | proc: use seq_puts()/seq_putc() where possible  For string without format specifiers, use seq_puts(). For seq_printf("\n"), use seq_putc('\n').     text	   data	    bss	    dec	    hex	filename   61866	    488	    112	  62466	   f402	fs/proc/proc.o   61729	    488	    112	  62329	   f379	fs/proc/proc.o   ----------------------------------------------------   			   -139  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | array.c | s | 17K | 623 | Cyrill Gorcunov | gorcunov@openvz.org | 1338511772 |  | c/r: procfs: add arg_start/end, env_start/end and exit_code members to /proc/$pid/stat  We would like to have an ability to restore command line arguments and program environment pointers but first we need to obtain them somehow. Thus we put these values into /proc/$pid/stat.  The exit_code is needed to restore zombie tasks.  Signed-off-by: Cyrill Gorcunov <gorcunov@openvz.org> Acked-by: Kees Cook <keescook@chromium.org> Cc: Pavel Emelyanov <xemul@parallels.com> Cc: Serge Hallyn <serge.hallyn@canonical.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: Tejun Heo <tj@kernel.org> Cc: Andrew Vagin <avagin@openvz.org> Cc: Vasiliy Kulikov <segoon@openwall.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | proc_tty.c | s | 4.7K | 169 | Alexey Dobriyan | adobriyan@gmail.com | 1294934596 |  | proc: use seq_puts()/seq_putc() where possible  For string without format specifiers, use seq_puts(). For seq_printf("\n"), use seq_putc('\n').     text	   data	    bss	    dec	    hex	filename   61866	    488	    112	  62466	   f402	fs/proc/proc.o   61729	    488	    112	  62329	   f379	fs/proc/proc.o   ----------------------------------------------------   			   -139  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | vmcore.c | s | 17K | 632 | Mahesh Salgaonkar | mahesh@linux.vnet.ibm.com | 1329954602 |  | fadump: Introduce cleanup routine to invalidate /proc/vmcore.  With the firmware-assisted dump support we don't require a reboot when we are in second kernel after crash. The second kernel after crash is a normal kernel boot and has knowledge about entire system RAM with the page tables initialized for entire system RAM. Hence once the dump is saved to disk, we can just release the reserved memory area for general use and continue with second kernel as production kernel.  Hence when we release the reserved memory that contains dump data, the '/proc/vmcore' will not be valid anymore. Hence this patch introduces a cleanup routine that invalidates and removes the /proc/vmcore file. This routine will be invoked before we release the reserved dump memory area.  Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com> Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
f | softirqs.c | s | 993B | 38 | Alexey Dobriyan | adobriyan@gmail.com | 1294934596 |  | proc: use seq_puts()/seq_putc() where possible  For string without format specifiers, use seq_puts(). For seq_printf("\n"), use seq_putc('\n').     text	   data	    bss	    dec	    hex	filename   61866	    488	    112	  62466	   f402	fs/proc/proc.o   61729	    488	    112	  62329	   f379	fs/proc/proc.o   ----------------------------------------------------   			   -139  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | base.c | s | 87K | 3217 | Linus Torvalds | torvalds@linux-foundation.org | 1338832845 |  | vfs: Fix /proc/<tid>/fdinfo/<fd> file handling  Cyrill Gorcunov reports that I broke the fdinfo files with commit 30a08bf2d31d ("proc: move fd symlink i_mode calculations into tid_fd_revalidate()"), and he's quite right.  The tid_fd_revalidate() function is not just used for the <tid>/fd symlinks, it's also used for the <tid>/fdinfo/<fd> files, and the permission model for those are different.  So do the dynamic symlink permission handling just for symlinks, making the fdinfo files once more appear as the proper regular files they are.  Of course, Al Viro argued (probably correctly) that we shouldn't do the symlink permission games at all, and make the symlinks always just be the normal 'lrwxrwxrwx'.  That would have avoided this issue too, but since somebody noticed that the permissions had changed (which was the reason for that original commit 30a08bf2d31d in the first place), people do apparently use this feature.  [ Basically, you can use the symlink permission data as a cheap "fdinfo"   replacement, since you see whether the file is open for reading and/or   writing by just looking at st_mode of the symlink.  So the feature   does make sense, even if the pain it has caused means we probably   shouldn't have done it to begin with. ]  Reported-and-tested-by: Cyrill Gorcunov <gorcunov@openvz.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | meminfo.c | s | 4.9K | 181 | Claudio Scordino | claudio@evidence.eu.com | 1323445828 |  | fs/proc/meminfo.c: fix compilation error  Fix the error message "directives may not be used inside a macro argument" which appears when the kernel is compiled for the cris architecture.  Signed-off-by: Claudio Scordino <claudio@evidence.eu.com> Cc: Andrea Arcangeli <aarcange@redhat.com> Cc: <stable@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | nommu.c | s | 3.3K | 117 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | loadavg.c | s | 1.1K | 38 | Thomas Gleixner | tglx@linutronix.de | 1242394365 |  | sched, timers: cleanup avenrun users  avenrun is an rough estimate so we don't have to worry about consistency of the three avenrun values. Remove the xtime lock dependency and provide a function to scale the values. Cleanup the users.  [ Impact: cleanup ]  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Acked-by: Peter Zijlstra <peterz@infradead.org>
f | inode.c | s | 12K | 435 | Linus Torvalds | torvalds@linux-foundation.org | 1338224085 |  | 
f | kcore.c | s | 15K | 550 | Djalal Harouni | tixxdz@opendz.org | 1332547122 |  | fs/proc/kcore.c: make get_sparsemem_vmemmap_info() static  get_sparsemem_vmemmap_info() is only used inside fs/proc/kcore.c  Signed-off-by: Djalal Harouni <tixxdz@opendz.org> Reviewed-by: WANG Cong <xiyou.wangcong@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cpuinfo.c | s | 564B | 21 | Alexey Dobriyan | adobriyan@gmail.com | 1224759911 |  | proc: move /proc/cpuinfo code to fs/proc/cpuinfo.c  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | mmu.c | s | 1.4K | 48 | Alexey Dobriyan | adobriyan@gmail.com | 1192635768 |  | fs/proc/mmu.c: headers butchery  fs/proc/mmu.c consists of only one function which uses only: 1) struct vmalloc_info * 2) struct vm_struct * 3) struct vmalloc_info 4) vmlist 5) VMALLOC_TOTAL, VMALLOC_START, VMALLOC_END 6) read_lock, read_unlock 7) vmlist_lock 8) struct vm_struct  This gives us linux/spinlock.h, asm/pgtable.h, "internal.h", linux/vmalloc.h. asm/pgtable.h uses PKMAP_BASE on i386, for which asm/highmem.h is needed. But, linux/highmem.h is actually used to make it compile everywhere. I'll deal later with this particular i386 surprise.  Cross-compile tested on many archs and configs.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | root.c | s | 5.6K | 236 | Linus Torvalds | torvalds@linux-foundation.org | 1337820159 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace  Pull user namespace enhancements from Eric Biederman:  "This is a course correction for the user namespace, so that we can   reach an inexpensive, maintainable, and reasonably complete   implementation.    Highlights:    - Config guards make it impossible to enable the user namespace and      code that has not been converted to be user namespace safe.     - Use of the new kuid_t type ensures the if you somehow get past the      config guards the kernel will encounter type errors if you enable      user namespaces and attempt to compile in code whose permission      checks have not been updated to be user namespace safe.     - All uids from child user namespaces are mapped into the initial      user namespace before they are processed.  Removing the need to add      an additional check to see if the user namespace of the compared      uids remains the same.     - With the user namespaces compiled out the performance is as good or      better than it is today.     - For most operations absolutely nothing changes performance or      operationally with the user namespace enabled.     - The worst case performance I could come up with was timing 1      billion cache cold stat operations with the user namespace code      enabled.  This went from 156s to 164s on my laptop (or 156ns to      164ns per stat operation).     - (uid_t)-1 and (gid_t)-1 are reserved as an internal error value.      Most uid/gid setting system calls treat these value specially      anyway so attempting to use -1 as a uid would likely cause      entertaining failures in userspace.     - If setuid is called with a uid that can not be mapped setuid fails.      I have looked at sendmail, login, ssh and every other program I      could think of that would call setuid and they all check for and      handle the case where setuid fails.     - If stat or a similar system call is called from a context in which      we can not map a uid we lie and return overflowuid.  The LFS      experience suggests not lying and returning an error code might be      better, but the historical precedent with uids is different and I      can not think of anything that would break by lying about a uid we      can't map.     - Capabilities are localized to the current user namespace making it      safe to give the initial user in a user namespace all capabilities.    My git tree covers all of the modifications needed to convert the core   kernel and enough changes to make a system bootable to runlevel 1."  Fix up trivial conflicts due to nearby independent changes in fs/stat.c  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace: (46 commits)   userns:  Silence silly gcc warning.   cred: use correct cred accessor with regards to rcu read lock   userns: Convert the move_pages, and migrate_pages permission checks to use uid_eq   userns: Convert cgroup permission checks to use uid_eq   userns: Convert tmpfs to use kuid and kgid where appropriate   userns: Convert sysfs to use kgid/kuid where appropriate   userns: Convert sysctl permission checks to use kuid and kgids.   userns: Convert proc to use kuid/kgid where appropriate   userns: Convert ext4 to user kuid/kgid where appropriate   userns: Convert ext3 to use kuid/kgid where appropriate   userns: Convert ext2 to use kuid/kgid where appropriate.   userns: Convert devpts to use kuid/kgid where appropriate   userns: Convert binary formats to use kuid/kgid where appropriate   userns: Add negative depends on entries to avoid building code that is userns unsafe   userns: signal remove unnecessary map_cred_ns   userns: Teach inode_capable to understand inodes whose uids map to other namespaces.   userns: Fail exec for suid and sgid binaries with ids outside our user namespace.   userns: Convert stat to return values mapped from kuids and kgids   userns: Convert user specfied uids and gids in chown into kuids and kgid   userns: Use uid_eq gid_eq helpers when comparing kuids and kgids in the vfs   ...
f | generic.c | s | 19K | 749 | Al Viro | viro@zeniv.linux.org.uk | 1325649296 |  | switch procfs to umode_t use  both proc_dir_entry ->mode and populating functions  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | proc_net.c | s | 4.6K | 196 | Al Viro | viro@zeniv.linux.org.uk | 1325649296 |  | switch procfs to umode_t use  both proc_dir_entry ->mode and populating functions  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | interrupts.c | s | 1.1K | 46 | Alexey Dobriyan | adobriyan@gmail.com | 1224760546 |  | proc: move /proc/interrupts boilerplate code to fs/proc/interrupts.c  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | namespaces.c | s | 4.1K | 172 | Andrew Morton | akpm@linux-foundation.org | 1332980077 |  | fs/proc/namespaces.c: prevent crash when ns_entries[] is empty  If CONFIG_NET_NS, CONFIG_UTS_NS and CONFIG_IPC_NS are disabled, ns_entries[] becomes empty and things like ns_entries[ARRAY_SIZE(ns_entries) - 1] will explode.  Reported-by: Richard Weinberger <richard@nod.at> Cc: "Eric W. Biederman" <ebiederm@xmission.com> Cc: Daniel Lezcano <daniel.lezcano@free.fr> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 2.8K |  | David Rientjes | rientjes@google.com | 1295571725 |  | kconfig: rename CONFIG_EMBEDDED to CONFIG_EXPERT  The meaning of CONFIG_EMBEDDED has long since been obsoleted; the option is used to configure any non-standard kernel with a much larger scope than only small devices.  This patch renames the option to CONFIG_EXPERT in init/Kconfig and fixes references to the option throughout the kernel.  A new CONFIG_EMBEDDED option is added that automatically selects CONFIG_EXPERT when enabled and can be used in the future to isolate options that should only be considered for embedded systems (RISC architectures, SLOB, etc).  Calling the option "EXPERT" more accurately represents its intention: only expert users who understand the impact of the configuration changes they are making should enable it.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Acked-by: David Woodhouse <david.woodhouse@intel.com> Signed-off-by: David Rientjes <rientjes@google.com> Cc: Greg KH <gregkh@suse.de> Cc: "David S. Miller" <davem@davemloft.net> Cc: Jens Axboe <axboe@kernel.dk> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Robin Holt <holt@sgi.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cmdline.c | s | 651B | 25 | Alexey Dobriyan | adobriyan@gmail.com | 1224757744 |  | proc: switch /proc/cmdline to seq_file  and move it to fs/proc/cmdline.c while I'm at it.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | version.c | s | 761B | 30 | Alexey Dobriyan | adobriyan@gmail.com | 1224757198 |  | proc: switch /proc/version to seq_file  and move it to fs/proc/version.c while I'm at it.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | stat.c | s | 5.8K | 186 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1333115013 |  | proc: stats: Use arch_idle_time for idle and iowait times if available  Git commit a25cac5198d4ff28 "proc: Consider NO_HZ when printing idle and iowait times" changes the code for /proc/stat to use get_cpu_idle_time_us and get_cpu_iowait_time_us if the system is running with nohz enabled. For architectures which define arch_idle_time (currently s390 only) this is a change for the worse. The result of arch_idle_time is supposed to be the exact sleep time of the target cpu and should be used instead of the value kept by the scheduler.  Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com> Reviewed-by: Michal Hocko <mhocko@suse.cz> Reviewed-by: Srivatsa S. Bhat <srivatsa.bhat@linux.vnet.ibm.com> Link: http://lkml.kernel.org/r/20120330122308.18720283@de.ibm.com Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
f | page.c | s | 4.9K | 180 | Naoya Horiguchi | n-horiguchi@ah.jp.nec.com | 1332377697 |  | pagemap: export KPF_THP  This flag shows that a given page is a subpage of a transparent hugepage. It helps us debug and test the kernel by showing physical address of thp.  Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com> Reviewed-by: Wu Fengguang <fengguang.wu@intel.com> Reviewed-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Acked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com> Cc: David Rientjes <rientjes@google.com> Cc: Andi Kleen <andi@firstfloor.org> Cc: Andrea Arcangeli <aarcange@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | proc_devtree.c | s | 5.3K | 202 | Paul Bolle | pebolle@tiscali.nl | 1299098718 |  | of/flattree: Drop an uninteresting message to pr_debug level  This message looks like an error (which it isn't) when booting with a flattened device tree.  Remove the message from normal kernel builds.  Signed-off-by: Paul Bolle <pebolle@tiscali.nl> Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
f | kmsg.c | s | 1.5K | 54 | Frederic Weisbecker | fweisbec@gmail.com | 1270823741 |  | procfs: Use generic_file_llseek in /proc/kmsg  No need to hold the bkl to seek here, none of the other fops callbacks use it.  Use generic_file_llseek explicitly.  Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com> Acked-by: Arnd Bergmann <arnd@arndb.de> Cc: Thomas Gleixner <tglx@linutronix.de> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Ingo Molnar <mingo@elte.hu> Cc: John Kacur <jkacur@redhat.com> Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com> Cc: Al Viro <viro@ZenIV.linux.org.uk>
f | task_mmu.c | s | 31K | 1130 | Konstantin Khlebnikov | khlebnikov@openvz.org | 1338511769 |  | proc/smaps: show amount of nonlinear ptes in vma  Currently, nonlinear mappings can not be distinguished from ordinary mappings.  This patch adds into /proc/pid/smaps line "Nonlinear: <size> kB", where size is amount of nonlinear ptes in vma, this line appears only if VM_NONLINEAR is set.  This information may be useful not only for checkpoint/restore project.  Requested by Pavel Emelyanov.  Signed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org> Cc: Andi Kleen <andi@firstfloor.org> Cc: Pavel Emelyanov <xemul@parallels.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | proc_sysctl.c | s | 39K | 1387 | Eric W. Biederman | ebiederm@xmission.com | 1337119168 |  | userns: Convert sysctl permission checks to use kuid and kgids.  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | task_nommu.c | s | 7.1K | 271 | Cong Wang | xiyou.wangcong@gmail.com | 1338511768 |  | proc: remove mm_for_maps()  mm_for_maps() is a simple wrapper for mm_access(), and the name is misleading, so just remove it and use mm_access() directly.  Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com> Cc: Oleg Nesterov <oleg@redhat.com> Cc: Alexey Dobriyan <adobriyan@gmail.com> Acked-by: Hugh Dickins <hughd@google.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | uptime.c | s | 1.3K | 47 | Martin Schwidefsky | schwidefsky@de.ibm.com | 1324318995 |  | Merge branch 'sched/core' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip into cputime-tip  Conflicts: 	drivers/cpufreq/cpufreq_conservative.c 	drivers/cpufreq/cpufreq_ondemand.c 	drivers/macintosh/rack-meter.c 	fs/proc/stat.c 	fs/proc/uptime.c 	kernel/sched/core.c
