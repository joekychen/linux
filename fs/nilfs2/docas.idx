f | dir.c | s | 17K | 627 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | gcinode.c | s | 5.6K | 179 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1340228375 |  | nilfs2: ensure proper cache clearing for gc-inodes  A gc-inode is a pseudo inode used to buffer the blocks to be moved by garbage collection.  Block caches of gc-inodes must be cleared every time a garbage collection function (nilfs_clean_segments) completes.  Otherwise, stale blocks buffered in the caches may be wrongly reused in successive calls of the GC function.  For user files, this is not a problem because their gc-inodes are distinguished by a checkpoint number as well as an inode number.  They never buffer different blocks if either an inode number, a checkpoint number, or a block offset differs.  However, gc-inodes of sufile, cpfile and DAT file can store different data for the same block offset.  Thus, the nilfs_clean_segments function can move incorrect block for these meta-data files if an old block is cached. I found this is really causing meta-data corruption in nilfs.  This fixes the issue by ensuring cache clear of gc-inodes and resolves reported GC problems including checkpoint file corruption, b-tree corruption, and the following warning during GC.    nilfs_palloc_freev: entry number 307234 already freed.   ...  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Cc: <stable@vger.kernel.org>	[2.6.37+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | sufile.c | s | 24K | 815 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | Makefile | g | 240B |  | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1287793478 |  | nilfs2: get rid of GCDAT inode  This applies prepared rollback function and redirect function of metadata file to DAT file, and eliminates GCDAT inode.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | nilfs.h | s | 11K | 287 | Al Viro | viro@zeniv.linux.org.uk | 1325649304 |  | nilfs: propagate umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | segment.h | s | 8.1K | 214 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033704 |  | nilfs2: get rid of private page allocator  Previously, nilfs was cloning pages for mmapped region to freeze their data and ensure consistency of checksum during writeback cycles.  A private page allocator was used for this page cloning.  But, we no longer need to do that since clear_page_dirty_for_io function sets up pte so that vm_ops->page_mkwrite function is called right before the mmapped pages are modified and nilfs_page_mkwrite function can safely wait for the pages to be written back to disk.  So, this stops making a copy of mmapped pages during writeback, and eliminates the private page allocation and deallocation functions from nilfs.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | the_nilfs.h | s | 10K | 313 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033706 |  | nilfs2: implement resize ioctl  This adds resize ioctl which makes online resize possible.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | alloc.h | s | 3.5K | 88 | Akinobu Mita | akinobu.mita@gmail.com | 1300934778 |  | nilfs2: use little-endian bitops  As a preparation for removing ext2 non-atomic bit operations from asm/bitops.h.  This converts ext2 non-atomic bit operations to little-endian bit operations.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | recovery.c | s | 24K | 851 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | sufile.h | s | 4.8K | 130 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033716 |  | nilfs2: get rid of NILFS_I_NILFS  This replaces all references of NILFS_I_NILFS(inode)->ns_bdev with inode->i_sb->s_bdev and unfolds remaining uses of NILFS_I_NILFS inline function.  Before 2.6.37, referring to a nilfs object from inodes needed a conditional judgement, and NILFS_I_NILFS was helpful to simplify it. But now we can simply do it by going through a super block instance like inode->i_sb->s_fs_info.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | segbuf.c | s | 13K | 463 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | ifile.h | s | 1.8K | 48 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1287793478 |  | nilfs2: use iget for all metadata files  This makes use of iget5_locked to allocate or get inode for metadata files to stop using own inode allocator.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | super.c | s | 35K | 1264 | Al Viro | viro@zeniv.linux.org.uk | 1332293375 |  | switch open-coded instances of d_make_root() to new helper  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | inode.c | s | 28K | 907 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | btnode.h | s | 1.8K | 47 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033717 |  | nilfs2: use mark_buffer_dirty to mark btnode or meta data dirty  This replaces nilfs_mdt_mark_buffer_dirty and nilfs_btnode_mark_dirty macros with mark_buffer_dirty and gets rid of nilfs_mark_buffer_dirty, an own mark buffer dirty function.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | bmap.h | s | 7.9K | 227 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1299563911 |  | nilfs2: record used amount of each checkpoint in checkpoint list  This records the number of used blocks per checkpoint in each checkpoint entry of cpfile.  Even though userland tools can get the block count via nilfs_get_cpinfo ioctl, it was not updated by the nilfs2 kernel code.  This fixes the issue and makes it available for userland tools to calculate used amount per checkpoint.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Cc: Jiro SEKIBA <jir@unicus.jp>
f | btree.c | s | 59K | 1958 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1307775075 |  | nilfs2: fix missing block address termination in btree node shrinking  nilfs_btree_delete function does not terminate part of virtual block addresses when shrinking the last remaining child node into the root node.  The missing address termination causes that dead btree node blocks persist and chip away free disk space.  This fixes the leak bug on the btree node deletion.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | btnode.c | s | 7.7K | 261 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033717 |  | nilfs2: use mark_buffer_dirty to mark btnode or meta data dirty  This replaces nilfs_mdt_mark_buffer_dirty and nilfs_btnode_mark_dirty macros with mark_buffer_dirty and gets rid of nilfs_mark_buffer_dirty, an own mark buffer dirty function.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | cpfile.c | s | 24K | 862 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | alloc.c | s | 21K | 646 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033717 |  | nilfs2: use mark_buffer_dirty to mark btnode or meta data dirty  This replaces nilfs_mdt_mark_buffer_dirty and nilfs_btnode_mark_dirty macros with mark_buffer_dirty and gets rid of nilfs_mark_buffer_dirty, an own mark buffer dirty function.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | dat.c | s | 12K | 447 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | btree.h | s | 2.7K | 69 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1279846934 |  | nilfs2: get rid of nilfs_bmap_union  This removes nilfs_bmap_union and finally unifies three structures and the union in bmap/btree code into one.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | direct.c | s | 8.9K | 312 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1299563911 |  | nilfs2: record used amount of each checkpoint in checkpoint list  This records the number of used blocks per checkpoint in each checkpoint entry of cpfile.  Even though userland tools can get the block count via nilfs_get_cpinfo ioctl, it was not updated by the nilfs2 kernel code.  This fixes the issue and makes it available for userland tools to calculate used amount per checkpoint.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Cc: Jiro SEKIBA <jir@unicus.jp>
f | cpfile.h | s | 1.7K | 40 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1287793478 |  | nilfs2: use iget for all metadata files  This makes use of iget5_locked to allocate or get inode for metadata files to stop using own inode allocator.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | segment.c | s | 71K | 2350 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1340228375 |  | nilfs2: ensure proper cache clearing for gc-inodes  A gc-inode is a pseudo inode used to buffer the blocks to be moved by garbage collection.  Block caches of gc-inodes must be cleared every time a garbage collection function (nilfs_clean_segments) completes.  Otherwise, stale blocks buffered in the caches may be wrongly reused in successive calls of the GC function.  For user files, this is not a problem because their gc-inodes are distinguished by a checkpoint number as well as an inode number.  They never buffer different blocks if either an inode number, a checkpoint number, or a block offset differs.  However, gc-inodes of sufile, cpfile and DAT file can store different data for the same block offset.  Thus, the nilfs_clean_segments function can move incorrect block for these meta-data files if an old block is cached. I found this is really causing meta-data corruption in nilfs.  This fixes the issue by ensuring cache clear of gc-inodes and resolves reported GC problems including checkpoint file corruption, b-tree corruption, and the following warning during GC.    nilfs_palloc_freev: entry number 307234 already freed.   ...  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Cc: <stable@vger.kernel.org>	[2.6.37+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bmap.c | s | 14K | 502 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033716 |  | nilfs2: get rid of NILFS_I_NILFS  This replaces all references of NILFS_I_NILFS(inode)->ns_bdev with inode->i_sb->s_bdev and unfolds remaining uses of NILFS_I_NILFS inline function.  Before 2.6.37, referring to a nilfs object from inodes needed a conditional judgement, and NILFS_I_NILFS was helpful to simplify it. But now we can simply do it by going through a super block instance like inode->i_sb->s_fs_info.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | dat.h | s | 2.3K | 50 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1287793478 |  | nilfs2: use iget for all metadata files  This makes use of iget5_locked to allocate or get inode for metadata files to stop using own inode allocator.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | direct.h | s | 1.5K | 42 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1279846934 |  | nilfs2: get rid of nilfs_bmap_union  This removes nilfs_bmap_union and finally unifies three structures and the union in bmap/btree code into one.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | ioctl.c | s | 21K | 759 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1338511767 |  | nilfs2: flush disk caches in syncing  There are two cases that the cache flush is needed to avoid data loss against unexpected hang or power failure.  One is sync file function (i.e.  nilfs_sync_file) and another is checkpointing ioctl.  This issues a cache flush request to device for such cases if barrier mount option is enabled, and makes sure data really is on persistent storage on their completion.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | page.h | s | 2.6K | 68 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033717 |  | nilfs2: use mark_buffer_dirty to mark btnode or meta data dirty  This replaces nilfs_mdt_mark_buffer_dirty and nilfs_btnode_mark_dirty macros with mark_buffer_dirty and gets rid of nilfs_mark_buffer_dirty, an own mark buffer dirty function.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | mdt.h | s | 3.8K | 96 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1305033717 |  | nilfs2: use mark_buffer_dirty to mark btnode or meta data dirty  This replaces nilfs_mdt_mark_buffer_dirty and nilfs_btnode_mark_dirty macros with mark_buffer_dirty and gets rid of nilfs_mark_buffer_dirty, an own mark buffer dirty function.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | Kconfig | g | 1.2K |  | Linus Torvalds | torvalds@linux-foundation.org | 1261085004 |  | Revert "task_struct: make journal_info conditional"  This reverts commit e4c570c4cb7a95dbfafa3d016d2739bf3fdfe319, as requested by Alexey:   "I think I gave a good enough arguments to not merge it.   To iterate:    * patch makes impossible to start using ext3 on EXT3_FS=n kernels      without reboot.    * this is done only for one pointer on task_struct"    None of config options which define task_struct are tristate directly   or effectively."  Requested-by: Alexey Dobriyan <adobriyan@gmail.com> Acked-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | namei.c | s | 13K | 486 | Al Viro | viro@zeniv.linux.org.uk | 1338348513 |  | ->encode_fh() API change  pass inode + parent's inode or NULL instead of dentry + bool saying whether we want the parent or not.  NOTE: that needs ceph fix folded in.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | the_nilfs.c | s | 20K | 675 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1331943284 |  | nilfs2: fix NULL pointer dereference in nilfs_load_super_block()  According to the report from Slicky Devil, nilfs caused kernel oops at nilfs_load_super_block function during mount after he shrank the partition without resizing the filesystem:   BUG: unable to handle kernel NULL pointer dereference at 00000048  IP: [<d0d7a08e>] nilfs_load_super_block+0x17e/0x280 [nilfs2]  *pde = 00000000  Oops: 0000 [#1] PREEMPT SMP  ...  Call Trace:   [<d0d7a87b>] init_nilfs+0x4b/0x2e0 [nilfs2]   [<d0d6f707>] nilfs_mount+0x447/0x5b0 [nilfs2]   [<c0226636>] mount_fs+0x36/0x180   [<c023d961>] vfs_kern_mount+0x51/0xa0   [<c023ddae>] do_kern_mount+0x3e/0xe0   [<c023f189>] do_mount+0x169/0x700   [<c023fa9b>] sys_mount+0x6b/0xa0   [<c04abd1f>] sysenter_do_call+0x12/0x28  Code: 53 18 8b 43 20 89 4b 18 8b 4b 24 89 53 1c 89 43 24 89 4b 20 8b 43  20 c7 43 2c 00 00 00 00 23 75 e8 8b 50 68 89 53 28 8b 54 b3 20 <8b> 72  48 8b 7a 4c 8b 55 08 89 b3 84 00 00 00 89 bb 88 00 00 00  EIP: [<d0d7a08e>] nilfs_load_super_block+0x17e/0x280 [nilfs2] SS:ESP 0068:ca9bbdcc  CR2: 0000000000000048  This turned out due to a defect in an error path which runs if the calculated location of the secondary super block was invalid.  This patch fixes it and eliminates the reported oops.  Reported-by: Slicky Devil <slicky.dvl@gmail.com> Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Tested-by: Slicky Devil <slicky.dvl@gmail.com> Cc: <stable@vger.kernel.org>	[2.6.30+] Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | page.c | s | 13K | 478 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | export.h | s | 253B | 12 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1287793474 |  | nilfs2: make snapshots in checkpoint tree exportable  The previous export operations cannot handle multiple versions of a filesystem if they belong to the same sb instance.  This adds a new type of file handle and extends export operations so that they can get the inode specified by a checkpoint number as well as an inode number and a generation number.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
f | file.c | s | 4.5K | 151 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1338511767 |  | nilfs2: flush disk caches in syncing  There are two cases that the cache flush is needed to avoid data loss against unexpected hang or power failure.  One is sync file function (i.e.  nilfs_sync_file) and another is checkpointing ioctl.  This issues a cache flush request to device for such cases if barrier mount option is enabled, and makes sure data really is on persistent storage on their completion.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | mdt.c | s | 14K | 496 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | ifile.c | s | 5.2K | 178 | Cong Wang | amwang@redhat.com | 1332251304 |  | nilfs2: remove the second argument of k[un]map_atomic()  Acked-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp> Signed-off-by: Cong Wang <amwang@redhat.com>
f | segbuf.h | s | 6.2K | 164 | Ryusuke Konishi | konishi.ryusuke@lab.ntt.co.jp | 1279846929 |  | nilfs2: get rid of macros for segment summary information  This removes macros to test segment summary flags and redefines a few relevant macros with inline functions.  Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
