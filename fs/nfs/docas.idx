f | pnfs_dev.c | s | 7.3K | 248 | Trond Myklebust | Trond.Myklebust@netapp.com | 1332336704 |  | NFS: Fix more NFS debug related build warnings  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | dir.c | s | 58K | 2069 | Miklos Szeredi | mszeredi@suse.cz | 1338567122 |  | nfs: don't open in ->d_revalidate  NFSv4 can't do reliable opens in d_revalidate, since it cannot know whether a mount needs to be followed or not.  It does check d_mountpoint() on the dentry, which can result in a weird error if the VFS found that the mount does not in fact need to be followed, e.g.:    # mount --bind /mnt/nfs /mnt/nfs-clone   # echo something > /mnt/nfs/tmp/bar   # echo x > /tmp/file   # mount --bind /tmp/file /mnt/nfs-clone/tmp/bar   # cat  /mnt/nfs/tmp/bar   cat: /mnt/nfs/tmp/bar: Not a directory  Which should, by any sane filesystem, result in "something" being printed.  So instead do the open in f_op->open() and in the unlikely case that the cached dentry turned out to be invalid, drop the dentry and return EOPENSTALE to let the VFS retry.  Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | nfs3xdr.c | s | 54K | 2348 | Bryan Schumaker | bjschuma@netapp.com | 1337042541 |  | NFS: Create an NFS v3 stat_to_errno()  In theory, NFS v3 can have different error versions than NFS v2. v4 is already using its own nfs4_stat_to_errno() to map error codes, so rather than create something in the generic client for v2 and v3 to share I instead give v3 its own function.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | Makefile | g | 952B |  | Bryan Schumaker | bjschuma@netapp.com | 1337042542 |  | NFS: Make v2 configurable  With this patch NFS v2 can be disabled during Kconfig.  I default the option to "y" to match the current behavior.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | internal.h | s | 14K | 453 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338489696 |  | NFS: Ensure that setattr and getattr wait for O_DIRECT write completion  Use the same mechanism as the block devices are using, but move the helper functions from fs/direct-io.c into fs/inode.c to remove the dependency on CONFIG_BLOCK.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Christoph Hellwig <hch@infradead.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Fred Isaman <iisaman@netapp.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | delegation.c | s | 18K | 637 | Trond Myklebust | Trond.Myklebust@netapp.com | 1336496001 |  | NFSv4: nfs_client_return_marked_delegations can't flush data  Since even filemap_flush() needs to lock pages that are dirty, we cannot risk calling it from the state manager context. Therefore, we need to move the call to filemap_flush() to nfs_async_inode_return_delegation().  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | dns_resolve.c | s | 9.5K | 377 | Trond Myklebust | Trond.Myklebust@netapp.com | 1331493256 |  | NFS: Fix a number of sparse warnings  Fix a number of "warning: symbol 'foo' was not declared. Should it be static?" conditions.  Fix 2 cases of "warning: Using plain integer as NULL pointer"  fs/nfs/delegation.c:263:31: warning: restricted fmode_t degrades to integer   - We want to allow upgrades to a WRITE delegation, but should otherwise     consider servers that hand out duplicate delegations to be borken.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs4state.c | s | 52K | 1783 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338906134 |  | NFSv4.1: Ensure we clear session state flags after a session creation  Both nfs4_reset_session and nfs41_init_clientid need to clear all the session related state flags on success.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | callback_xdr.c | s | 24K | 870 | Dan Carpenter | dan.carpenter@oracle.com | 1339509280 |  | NFS: add an endian notation for sparse  This is supposed to be a __be32 value.  Sparse complains a lot:  fs/nfs/callback_xdr.c:699:30: warning: incorrect type in initializer (different base types) fs/nfs/callback_xdr.c:699:30:    expected unsigned int [unsigned] status fs/nfs/callback_xdr.c:699:30:    got restricted __be32 const [usertype] csr_status fs/nfs/callback_xdr.c:715:9: warning: cast to restricted __be32 fs/nfs/callback_xdr.c:716:16: warning: incorrect type in return expression (different base types) fs/nfs/callback_xdr.c:716:16:    expected restricted __be32 fs/nfs/callback_xdr.c:716:16:    got unsigned int [unsigned] status  Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | pnfs.c | s | 45K | 1518 | Trond Myklebust | Trond.Myklebust@netapp.com | 1340127165 |  | NFSv4.1: Fix a race in set_pnfs_layoutdriver  The call to try_module_get() dereferences ld_type outside the spin locks, which means that it may be pointing to garbage if a module unload was in progress.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | fscache.h | s | 6.3K | 184 | Trond Myklebust | Trond.Myklebust@netapp.com | 1337189060 |  | NFS: Fix a compile issue when CONFIG_NFS_FSCACHE was undefined  Reported-by: Stephen Rothwell <sfr@canb.auug.org.au> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | mount_clnt.c | s | 11K | 443 | Trond Myklebust | Trond.Myklebust@netapp.com | 1332263306 |  | SUNRPC/NFS: Add Kbuild dependencies for NFS_DEBUG/RPC_DEBUG  This allows us to turn on/off the dprintk() debugging interfaces for those distributions that don't ship the 'rpcdebug' utility. It also allows us to add Kbuild dependencies. Specifically, we already know that dprintk() in general relies on CONFIG_SYSCTL. Now it turns out that the NFS dprintks depend on CONFIG_CRC32 after we added support for the filehandle hash.  Reported-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | callback.c | s | 10.0K | 366 | Stanislav Kinsbursky | skinsbursky@parallels.com | 1339696423 |  | NFS: hard-code init_net for NFS callback transports  In case of destroying mount namespace on child reaper exit, nsproxy is zeroed to the point already. So, dereferencing of it is invalid. This patch hard-code "init_net" for all network namespace references for NFS callback services. This will be fixed with proper NFS callback containerization.  Signed-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com> Signed-off-by: J. Bruce Fields <bfields@redhat.com>
f | proc.c | s | 19K | 699 | Sachin Prabhu | sprabhu@redhat.com | 1339449900 |  | NFSv2: EOF incorrectly set on short read  In cases where the server returns fewer bytes then those requested, we can incorrectly set the eof flag for the file. Fixing this allows the request to be retried with updated offset and count arguments.  Signed-off-by: Sachin Prabhu <sprabhu@redhat.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs4_fs.h | s | 12K | 326 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338904814 |  | NFSv4: Fix an Oops in the open recovery code  The open recovery code does not need to request a new value for the mdsthreshold, and so does not allocate a struct nfs4_threshold. The problem is that encode_getfattr_open() will still request an mdsthreshold, and so we end up Oopsing in decode_attr_mdsthreshold.  This patch fixes encode_getfattr_open so that it doesn't request an mdsthreshold when the caller isn't asking for one. It also fixes decode_attr_mdsthreshold so that it errors if the server returns an mdsthreshold that we didn't ask for (instead of Oopsing).  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Andy Adamson <andros@netapp.com>
f | nfs4namespace.c | s | 9.4K | 332 | Trond Myklebust | Trond.Myklebust@netapp.com | 1337609559 |  | Merge branch 'bugfixes' into nfs-for-next
f | nfs4filelayout.h | s | 5.0K | 141 | Andy Adamson | andros@netapp.com | 1337464533 |  | NFSv4.1 resend LAYOUTGET on data server invalid layout errors  The "invalid layout" class of errors is handled by destroying the layout and getting a new layout from the server.  Currently, the layout must be destroyed before a new layout can be obtained.  This means that all references (e.g.lsegs) to the "to be destroyed" layout header must be dropped before it can be destroyed. This in turn means waiting for all in flight RPC's using the old layout as well as draining the data server session slot table wait queue.  Set the NFS_LAYOUT_INVALID flag to redirect I/O to the MDS while waiting for the old layout to be destroyed.  Signed-off-by: Andy Adamson <andros@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | fscache.c | s | 13K | 446 | Bryan Schumaker | bjschuma@netapp.com | 1337041826 |  | NFS: Don't pass mount data to nfs_fscache_get_super_cookie()  I intend on creating a single nfs_fs_mount() function used by all our mount paths.  To avoid checking between new mounts and clone mounts, I instead pass both structures to a new function in super.c that finds the cache key and then looks up the super cookie.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | cache_lib.c | s | 3.9K | 140 | Stanislav Kinsbursky | skinsbursky@parallels.com | 1328052026 |  | NFS: remove RPC PipeFS mount point references from NFS cache routines  This is a cleanup patch. We don't need this reference anymore, because DNS resolver cache now creates it's dentries in per-net operations and on PipeFS mount/umount notification. Note that nfs_cache_register_net() now returns 0 instead of -ENOENT in case of PiepFS superblock absence. This is ok, Dns resolver cache will be regestered on PipeFS mount event.  Signed-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | dns_resolve.h | s | 812B | 28 | Stanislav Kinsbursky | skinsbursky@parallels.com | 1328052026 |  | NFS: DNS resolver cache per network namespace context introduced  This patch implements DNS resolver cache creation and registration for each alive network namespace context. This was done by registering NFS per-net operations, responsible for DNS cache allocation/register and unregister/destructioning instead of initialization and destruction of static "nfs_dns_resolve" cache detail (this one was removed). Pointer to network dns resolver cache is stored in new per-net "nfs_net" structure. This patch also changes nfs_dns_resolve_name() function prototype (and it's calls) by adding network pointer parameter, which is used to get proper DNS resolver cache pointer for do_cache_lookup_wait() call.  Note: empty nfs_dns_resolver_init() and nfs_dns_resolver_destroy() functions will be used in next patch in the series.  Signed-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs4proc.c | s | 181K | 6091 | Andy Adamson | andros@netapp.com | 1339449953 |  | NFSv4 do not send an empty SETATTR compound  Commit 536e43d12b9517bbbf6114cd1a12be27857a4d7a ATTR_OPEN check can result in an ia_valid with only ATTR_FILE set, and no NFS_VALID_ATTRS attributes to request from the server.  Signed-off-by: Andy Adamson <andros@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs3proc.c | s | 23K | 809 | Linus Torvalds | torvalds@linux-foundation.org | 1338313431 |  | 
f | nfs4renewd.c | s | 4.2K | 124 | Chuck Lever | chuck.lever@oracle.com | 1337719542 |  | NFS: Add NFSDBG_STATE  fs/nfs/nfs4state.c does not yet have any dprintk() call sites, and I'm about to introduce some.  We will need a new flag for enabling them.  Signed-off-by: Chuck Lever <chuck.lever@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | sysctl.c | s | 1.8K | 83 | Bryan Schumaker | bjschuma@netapp.com | 1328572081 |  | NFS: Fall back on old idmapper if request_key() fails  This patch removes the CONFIG_NFS_USE_NEW_IDMAPPER compile option. First, the idmapper will attempt to map the id using /sbin/request-key and nfsidmap.  If this fails (if /etc/request-key.conf is not configured properly) then the idmapper will call the legacy code to perform the mapping.  I left a comment stating where the legacy code begins to make it easier for somebody to remove in the future.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | read.c | s | 17K | 588 | Andy Adamson | andros@netapp.com | 1337890548 |  | NFSv4.1 add nfs_inode book keeping for mdsthreshold  Keep track of the number of bytes read or written via buffered, direct, and mem-mapped i/o for use by mdsthreshold size_io hints.  Signed-off-by: Andy Adamson <andros@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | super.c | s | 75K | 2612 | Bryan Schumaker | bjschuma@netapp.com | 1339267139 |  | NFS: Use the NFS_DEFAULT_VERSION for v2 and v3 mounts  Older versions of nfs utils don't always pass a "vers=" mount option for NFS.  This chould lead to attempts at using NFS v0 due to a zeroed out nfs_parsed_mount_data struct.  I solve this by setting the default NFS version to NFS_DEFAULT_VERSION in the v2 and v3 cases (v4 has already been taken care of by a similar patch).  Reported-by: Joerg Roedel <joro@&bytes.org> Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs3acl.c | s | 10K | 384 | Trond Myklebust | Trond.Myklebust@netapp.com | 1331493256 |  | NFS: Fix a number of sparse warnings  Fix a number of "warning: symbol 'foo' was not declared. Should it be static?" conditions.  Fix 2 cases of "warning: Using plain integer as NULL pointer"  fs/nfs/delegation.c:263:31: warning: restricted fmode_t degrades to integer   - We want to allow upgrades to a WRITE delegation, but should otherwise     consider servers that hand out duplicate delegations to be borken.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | fscache-index.c | s | 9.3K | 292 | Trond Myklebust | Trond.Myklebust@netapp.com | 1318954474 |  | NFS: Use the inode->i_version to cache NFSv4 change attribute information  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | inode.c | s | 47K | 1533 | Trond Myklebust | Trond.Myklebust@netapp.com | 1340145748 |  | NFS: Initialise commit_info.rpc_out when !defined(CONFIG_NFS_V4)  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Fred Isaman <iisaman@netapp.com>
f | delegation.h | s | 2.5K | 69 | Trond Myklebust | Trond.Myklebust@netapp.com | 1336496001 |  | NFS: nfs_inode_return_delegation() should always flush dirty data  The assumption is that if you are in a situation where you need to return the delegation, then you should probably stop caching the data anyway.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | unlink.c | s | 14K | 492 | Bryan Schumaker | bjschuma@netapp.com | 1332336706 |  | NFS: Remove nfs4_setup_sequence from generic rename code  This is an NFS v4 specific operation, so it belongs in the NFS v4 code and not the generic client.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | symlink.c | s | 1.6K | 69 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
d | objlayout |  | 5 items |  | Trond Myklebust | Trond.Myklebust@netapp.com | 1336157991 |  | NFS: Fix sparse warnings  Fix the following sparse warnings:  fs/nfs/direct.c:221:6: warning: symbol 'nfs_direct_readpage_release' was not declared. Should it be static? fs/nfs/read.c:38:43: warning: non-ANSI function declaration of function 'nfs_readhdr_alloc' fs/nfs/objlayout/objio_osd.c:214:5: warning: symbol '__alloc_objio_seg' was not declared. Should it be static?  Reported-by: Dan Carpenter <dan.carpenter@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Fred Isaman <iisaman@netapp.com> Cc: Boaz Harrosh <bharrosh@panasas.com>
f | nfs4filelayoutdev.c | s | 20K | 720 | Trond Myklebust | Trond.Myklebust@netapp.com | 1337800857 |  | NFSv4.1: Fix session initialisation races  Session initialisation is not complete until the lease manager has run. We need to ensure that both nfs4_init_session and nfs4_init_ds_session do so, and that they check for any resulting errors in clp->cl_cons_state.  Only after this is done, can nfs4_ds_connect check the contents of clp->cl_exchange_flags.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Andy Adamson <andros@netapp.com>
f | callback.h | s | 5.3K | 185 | Trond Myklebust | Trond.Myklebust@netapp.com | 1329283183 |  | NFSv4.1: Convert slotid from u8 to u32  It is perfectly legal to negotiate up to 2^32-1 slots in the protocol, and with 10GigE, we are already seeing that 255 slots is far too limiting.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfsroot.c | s | 9.5K | 274 | Trond Myklebust | Trond.Myklebust@netapp.com | 1332263306 |  | SUNRPC/NFS: Add Kbuild dependencies for NFS_DEBUG/RPC_DEBUG  This allows us to turn on/off the dprintk() debugging interfaces for those distributions that don't ship the 'rpcdebug' utility. It also allows us to add Kbuild dependencies. Specifically, we already know that dprintk() in general relies on CONFIG_SYSCTL. Now it turns out that the NFS dprintks depend on CONFIG_CRC32 after we added support for the filehandle hash.  Reported-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | direct.c | s | 26K | 864 | Trond Myklebust | Trond.Myklebust@netapp.com | 1340145734 |  | NFS: Fix a refcounting issue in O_DIRECT  In nfs_direct_write_reschedule(), the requests from nfs_scan_commit_list have a refcount of 2, whereas the operations in nfs_direct_write_completion_ops expect them to have a refcount of 1.  This patch adds a call to release the extra references.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Fred Isaman <iisaman@netapp.com>
f | nfs4xdr.c | s | 189K | 6580 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338904847 |  | NFSv4: Fix up decode_attr_mdsthreshold  Fix an incorrect use of 'likely()'. The FATTR4_WORD2_MDSTHRESHOLD bit is only expected in NFSv4.1 OPEN calls, and so is actually rather _unlikely_.  decode_attr_mdsthreshold needs to clear FATTR4_WORD2_MDSTHRESHOLD from the attribute bitmap after it has decoded the data.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Andy Adamson <andros@netapp.com>
f | callback_proc.c | s | 15K | 489 | Trond Myklebust | Trond.Myklebust@netapp.com | 1331047964 |  | NFSv4: Further clean-ups of delegation stateid validation  Change the name to reflect what we're really doing: testing two stateids for whether or not they match according the the rules in RFC3530 and RFC5661. Move the code from callback_proc.c to nfs4proc.c  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | iostat.h | s | 1.6K | 60 | Chuck Lever | chuck.lever@oracle.com | 1273864171 |  | NFS: Squelch compiler warning in nfs_add_server_stats()  Clean up:  fs/nfs/iostat.h: In function ‘nfs_add_server_stats’: fs/nfs/iostat.h:41: warning: comparison between signed and unsigned integer expressions fs/nfs/iostat.h:41: warning: comparison between signed and unsigned integer expressions fs/nfs/iostat.h:41: warning: comparison between signed and unsigned integer expressions fs/nfs/iostat.h:41: warning: comparison between signed and unsigned integer expressions  Commit fce22848 replaced the open-coded per-cpu logic in several functions in fs/nfs/iostat.h with a single invocation of this_cpu_ptr().  This macro assumes its second argument is signed, not unsigned.  Signed-off-by: Chuck Lever <chuck.lever@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
d | blocklayout |  | 6 items |  | Chuck Lever | chuck.lever@oracle.com | 1337719544 |  | NFS: Use proper naming conventions for the nfs_client.net field  Clean up:  When naming fields and data types, follow established conventions to facilitate accurate grep/cscope searches.  Introduced by commit e50a7a1a "NFS: make NFS client allocated per network namespace context," Tue Jan 10, 2012.  Signed-off-by: Chuck Lever <chuck.lever@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | Kconfig | g | 5.0K |  | Bryan Schumaker | bjschuma@netapp.com | 1337042542 |  | NFS: Turn v3 on by default  Most users will use NFS v3 or possibly v4 so this makes it easier for them.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | namespace.c | s | 6.8K | 242 | Bryan Schumaker | bjschuma@netapp.com | 1335550239 |  | NFS: Remove extra rpc_clnt argument to proc_lookup  Now that I'm doing secinfo automatically in the v4 code this extra argument isn't needed.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | idmap.c | s | 19K | 700 | Bryan Schumaker | bjschuma@netapp.com | 1340217491 |  | NFS: Force the legacy idmapper to be single threaded  It was initially coded under the assumption that there would only be one request at a time, so use a lock to enforce this requirement..  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> CC: stable@vger.kernel.org [3.4+] Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs2xdr.c | s | 26K | 1047 | Bryan Schumaker | bjschuma@netapp.com | 1337042541 |  | NFS: Create an NFS v3 stat_to_errno()  In theory, NFS v3 can have different error versions than NFS v2. v4 is already using its own nfs4_stat_to_errno() to map error codes, so rather than create something in the generic client for v2 and v3 to share I instead give v3 its own function.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | getroot.c | s | 4.6K | 158 | Bryan Schumaker | bjschuma@netapp.com | 1337041826 |  | NFS: Create a single nfs_get_root()  This patch splits out the NFS v4 specific functionality of nfs4_get_root() into its own rpc_op called by the generic client, and leaves nfs4_proc_get_rootfh() as its own stand alone function.  This also allows me to change nfs4_remote_mount(), nfs4_xdev_mount() and nfs4_remote_referral_mount() to use the generic client's nfs_get_root() function.  Later patches in this series will collapse these functions into one common function, so using the same get_root() function everywhere simplifies future changes.  Signed-off-by: Bryan Schumaker <bjschuma@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | cache_lib.h | s | 1.1K | 29 | Stanislav Kinsbursky | skinsbursky@parallels.com | 1328052026 |  | NFS: DNS resolver PipeFS notifier introduced  This patch subscribes DNS resolver caches to RPC pipefs notifications. Notifier is registering on NFS module load. This notifier callback is responsible for creation/destruction of PipeFS DNS resolver cache directory. Note that no locking required in notifier callback because PipeFS superblock pointer is passed as an argument from it's creation or destruction routine and thus we can be sure about it's validity.  Signed-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | netns.h | s | 660B | 26 | Chuck Lever | chuck.lever@oracle.com | 1337719546 |  | NFS: Always use the same SETCLIENTID boot verifier  Currently our NFS client assigns a unique SETCLIENTID boot verifier for each server IP address it knows about.  It's set to CURRENT_TIME when the struct nfs_client for that server IP is created.  During the SETCLIENTID operation, our client also presents an nfs_client_id4 string to servers, as an identifier on which the server can hang all of this client's NFSv4 state.  Our client's nfs_client_id4 string is unique for each server IP address.  An NFSv4 server is obligated to wipe all NFSv4 state associated with an nfs_client_id4 string when the client presents the same nfs_client_id4 string along with a changed SETCLIENTID boot verifier.  When our client unmounts the last of a server's shares, it destroys that server's struct nfs_client.  The next time the client mounts that NFS server, it creates a fresh struct nfs_client with a fresh boot verifier.  On seeing the fresh verifer, the server wipes any previous NFSv4 state associated with that nfs_client_id4.  However, NFSv4.1 clients are supposed to present the same nfs_client_id4 string to all servers.  And, to support Transparent State Migration, the same nfs_client_id4 string should be presented to all NFSv4.0 servers so they recognize that migrated state for this client belongs with state a server may already have for this client. (This is known as the Uniform Client String model).  If the nfs_client_id4 string is the same but the boot verifier changes for each server IP address, SETCLIENTID and EXCHANGE_ID operations from such a client could unintentionally result in a server wiping a client's previously obtained lease.  Thus, if our NFS client is going to use a fixed nfs_client_id4 string, either for NFSv4.0 or NFSv4.1 mounts, our NFS client should use a boot verifier that does not change depending on server IP address. Replace our current per-nfs_client boot verifier with a per-nfs_net boot verifier.  Signed-off-by: Chuck Lever <chuck.lever@oracle.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | pnfs.h | s | 15K | 434 | Fred Isaman | iisaman@netapp.com | 1339091064 |  | NFS4: Fix open bug when pnfs module blacklisted  Signed-off-by: Fred Isaman <iisaman@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | pagelist.c | s | 11K | 422 | Trond Myklebust | Trond.Myklebust@netapp.com | 1336591063 |  | NFS: Clean up - Rename nfs_unlock_request and nfs_unlock_request_dont_release  Function rename to ensure that the functionality of nfs_unlock_request() mirrors that of nfs_lock_request(). Then let nfs_unlock_and_release_request() do the work of what used to be called nfs_unlock_request()...  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Fred Isaman <iisaman@netapp.com>
f | write.c | s | 47K | 1625 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338935927 |  | NFS: Fix a commit bug  The new commit code fails to copy the verifier into the wb_verf field of _all_ the nfs_page structures; it only copies it into the first entry. The consequence is that most requests end up failing to match in nfs_commit_release.  Fix is to copy the verifier into the req->wb_verf field in nfs_write_completion.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com> Cc: Fred Isaman <iisaman@netapp.com>
f | file.c | s | 25K | 844 | Miklos Szeredi | mszeredi@suse.cz | 1338567122 |  | nfs: don't open in ->d_revalidate  NFSv4 can't do reliable opens in d_revalidate, since it cannot know whether a mount needs to be followed or not.  It does check d_mountpoint() on the dentry, which can result in a weird error if the VFS found that the mount does not in fact need to be followed, e.g.:    # mount --bind /mnt/nfs /mnt/nfs-clone   # echo something > /mnt/nfs/tmp/bar   # echo x > /tmp/file   # mount --bind /tmp/file /mnt/nfs-clone/tmp/bar   # cat  /mnt/nfs/tmp/bar   cat: /mnt/nfs/tmp/bar: Not a directory  Which should, by any sane filesystem, result in "something" being printed.  So instead do the open in f_op->open() and in the unlikely case that the cached dentry turned out to be invalid, drop the dentry and return EOPENSTALE to let the VFS retry.  Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> CC: Trond Myklebust <Trond.Myklebust@netapp.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | client.c | s | 52K | 1763 | Trond Myklebust | Trond.Myklebust@netapp.com | 1340023516 |  | NFSv4.1: Fix umount when filelayout DS is also the MDS  Currently there is a 'chicken and egg' issue when the DS is also the mounted MDS. The nfs_match_client() reference from nfs4_set_ds_client bumps the cl_count, the nfs_client is not freed at umount, and nfs4_deviceid_purge_client is not called to dereference the MDS usage of a deviceid which holds a reference to the DS nfs_client.  The result is the umount program returns, but the nfs_client is not freed, and the cl_session hearbeat continues.  The MDS (and all other nfs mounts) lose their last nfs_client reference in nfs_free_server when the last nfs_server (fsid) is umounted. The file layout DS lose their last nfs_client reference in destroy_ds when the last deviceid referencing the data server is put and destroy_ds is called. This is triggered by a call to nfs4_deviceid_purge_client which removes references to a pNFS deviceid used by an MDS mount.  The fix is to track how many pnfs enabled filesystems are mounted from this server, and then to purge the device id cache once that count reaches zero.  Reported-by: Jorge Mora <Jorge.Mora@netapp.com> Reported-by: Andy Adamson <andros@netapp.com> Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
f | nfs4filelayout.c | s | 35K | 1146 | Trond Myklebust | Trond.Myklebust@netapp.com | 1338143587 |  | NFSv4.1: Handle other occurrences of NFS4ERR_CONN_NOT_BOUND_TO_SESSION  Let nfs4_schedule_session_recovery() handle the details of choosing between resetting the session, and other session related recovery.  Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
