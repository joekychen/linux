f | dir.c | s | 24K | 912 | Alan Stern | stern@rowland.harvard.edu | 1337023196 |  | sysfs: get rid of some lockdep false positives  This patch (as1554) fixes a lockdep false-positive report.  The problem arises because lockdep is unable to deal with the tree-structured locks created by the device core and sysfs.  This particular problem involves a sysfs attribute method that unregisters itself, not from the device it was called for, but from a descendant device.  Lockdep doesn't understand the distinction and reports a possible deadlock, even though the operation is safe.  This is the sort of thing that would normally be handled by using a nested lock annotation; unfortunately it's not feasible to do that here.  There's no sensible way to tell sysfs when attribute removal occurs in the context of a parent attribute method.  As a workaround, the patch adds a new flag to struct attribute telling sysfs not to inform lockdep when it acquires a readlock on a sysfs_dirent instance for the attribute.  The readlock is still acquired, but lockdep doesn't know about it and hence does not complain about impossible deadlock scenarios.  Also added are macros for static initialization of attribute structures with the ignore_lockdep flag set.  The three offending attributes in the USB subsystem are converted to use the new macros.  Signed-off-by: Alan Stern <stern@rowland.harvard.edu> Acked-by: Tejun Heo <tj@kernel.org> CC: Eric W. Biederman <ebiederm@xmission.com> CC: Peter Zijlstra <peterz@infradead.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | mount.c | s | 4.5K | 172 | Linus Torvalds | torvalds@linux-foundation.org | 1332362201 |  | Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs  Pull vfs pile 1 from Al Viro:  "This is _not_ all; in particular, Miklos' and Jan's stuff is not there   yet."  * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs: (64 commits)   ext4: initialization of ext4_li_mtx needs to be done earlier   debugfs-related mode_t whack-a-mole   hfsplus: add an ioctl to bless files   hfsplus: change finder_info to u32   hfsplus: initialise userflags   qnx4: new helper - try_extent()   qnx4: get rid of qnx4_bread/qnx4_getblk   take removal of PF_FORKNOEXEC to flush_old_exec()   trim includes in inode.c   um: uml_dup_mmap() relies on ->mmap_sem being held, but activate_mm() doesn't hold it   um: embed ->stub_pages[] into mmu_context   gadgetfs: list_for_each_safe() misuse   ocfs2: fix leaks on failure exits in module_init   ecryptfs: make register_filesystem() the last potential failure exit   ntfs: forgets to unregister sysctls on register_filesystem() failure   logfs: missing cleanup on register_filesystem() failure   jfs: mising cleanup on register_filesystem() failure   make configfs_pin_fs() return root dentry on success   configfs: configfs_create_dir() has parent dentry in dentry->d_parent   configfs: sanitize configfs_create()   ...
f | bin.c | s | 10K | 396 | Eric W. Biederman | ebiederm@aristanetworks.com | 1287767803 |  | sysfs: only access bin file vm_ops with the active lock  bb->vm_ops is a cached copy of the vm_ops of the underlying sysfs bin file, which means that after sysfs_bin_remove_file completes it is only longer valid to deference bb->vm_ops.  So move all of the tests of bb->vm_ops inside of where we hold the sysfs active lock.  Signed-off-by: Eric W. Biederman <ebiederm@aristanetworks.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | Makefile | g | 119B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | inode.c | s | 8.3K | 296 | Linus Torvalds | torvalds@linux-foundation.org | 1338224085 |  | 
f | group.c | s | 5.4K | 184 | Bruno Prémont | bonbons@linux-vserver.org | 1334094531 |  | sysfs: Prevent crash on unset sysfs group attributes  Do not let the kernel crash when a device is registered with sysfs while group attributes are not set (aka NULL).  Warn about the offender with some information about the offending device.  This would warn instead of trying NULL pointer deref like:  BUG: unable to handle kernel NULL pointer dereference at (null)  IP: [<ffffffff81152673>] internal_create_group+0x83/0x1a0  PGD 0  Oops: 0000 [#1] SMP  CPU 0  Modules linked in:   Pid: 1, comm: swapper/0 Not tainted 3.4.0-rc1-x86_64 #3 HP ProLiant DL360 G4  RIP: 0010:[<ffffffff81152673>]  [<ffffffff81152673>] internal_create_group+0x83/0x1a0  RSP: 0018:ffff88019485fd70  EFLAGS: 00010202  RAX: 0000000000000001 RBX: 0000000000000000 RCX: 0000000000000001  RDX: ffff880192e99908 RSI: ffff880192e99630 RDI: ffffffff81a26c60  RBP: ffff88019485fdc0 R08: 0000000000000000 R09: 0000000000000000  R10: ffff880192e99908 R11: 0000000000000000 R12: ffffffff81a16a00  R13: ffff880192e99908 R14: ffffffff81a16900 R15: 0000000000000000  FS:  0000000000000000(0000) GS:ffff88019bc00000(0000) knlGS:0000000000000000  CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b  CR2: 0000000000000000 CR3: 0000000001a0c000 CR4: 00000000000007f0  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000  DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400  Process swapper/0 (pid: 1, threadinfo ffff88019485e000, task ffff880194878000)  Stack:   ffff88019485fdd0 ffff880192da9d60 0000000000000000 ffff880192e99908   ffff880192e995d8 0000000000000001 ffffffff81a16a00 ffff880192da9d60   0000000000000000 0000000000000000 ffff88019485fdd0 ffffffff811527be  Call Trace:   [<ffffffff811527be>] sysfs_create_group+0xe/0x10   [<ffffffff81376ca6>] device_add_groups+0x46/0x80   [<ffffffff81377d3d>] device_add+0x46d/0x6a0   ...  Signed-off-by: Bruno Prémont <bonbons@linux-vserver.org> Acked-by: Ingo Molnar <mingo@elte.hu> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | sysfs.h | s | 6.5K | 204 | Greg Kroah-Hartman | gregkh@linuxfoundation.org | 1331240590 |  | Revert "sysfs: Kill nlink counting."  This reverts commit 524b6c5b39b931311dfe5a2f5abae2f5c9731676.  It has shown to break userspace tools, which is not acceptable.  Reported-by: Jiri Slaby <jslaby@suse.cz> Cc: Eric W. Biederman <ebiederm@xmission.com> Cc: Linus Torvalds <torvalds@linux-foundation.org> Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
f | symlink.c | s | 7.1K | 260 | Eric W. Biederman | ebiederm@xmission.com | 1280170961 |  | sysfs: allow creating symlinks from untagged to tagged directories  Supporting symlinks from untagged to tagged directories is reasonable, and needed to support CONFIG_SYSFS_DEPRECATED.  So don't fail a prior allowing that case to work.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | file.c | s | 19K | 677 | Eric W. Biederman | ebiederm@xmission.com | 1327435952 |  | sysfs: Complain bitterly about attempts to remove files from nonexistent directories.  Recently an OOPS was observed from the usb serial io_ti driver when it tried to remove sysfs directories.  Upon investigation it turns out this driver was always buggy and that a recent sysfs change had stopped guarding itself against removing attributes from sysfs directories that had already been removed. :(  Historically we have been silent about attempting to files from nonexistent sysfs directories and have politely returned error codes.  That has resulted in people writing broken code that ignores the error codes.  Issue a kernel WARNING and a stack backtrace to make it clear in no uncertain terms that abusing sysfs is not ok, and the callers need to fix their code.  This change transforms the io_ti OOPS into a more comprehensible error message and stack backtrace.  Signed-off-by: Eric W. Biederman <ebiederm@xmission.com> Reported-by: Wolfgang Frisch <wfpub@roembden.net> Cc: stable <stable@vger.kernel.org> Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
f | Kconfig | g | 998B |  | David Rientjes | rientjes@google.com | 1295571725 |  | kconfig: rename CONFIG_EMBEDDED to CONFIG_EXPERT  The meaning of CONFIG_EMBEDDED has long since been obsoleted; the option is used to configure any non-standard kernel with a much larger scope than only small devices.  This patch renames the option to CONFIG_EXPERT in init/Kconfig and fixes references to the option throughout the kernel.  A new CONFIG_EMBEDDED option is added that automatically selects CONFIG_EXPERT when enabled and can be used in the future to isolate options that should only be considered for embedded systems (RISC architectures, SLOB, etc).  Calling the option "EXPERT" more accurately represents its intention: only expert users who understand the impact of the configuration changes they are making should enable it.  Reviewed-by: Ingo Molnar <mingo@elte.hu> Acked-by: David Woodhouse <david.woodhouse@intel.com> Signed-off-by: David Rientjes <rientjes@google.com> Cc: Greg KH <gregkh@suse.de> Cc: "David S. Miller" <davem@davemloft.net> Cc: Jens Axboe <axboe@kernel.dk> Cc: Arnd Bergmann <arnd@arndb.de> Cc: Robin Holt <holt@sgi.com> Cc: <linux-arch@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
