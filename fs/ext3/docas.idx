f | dir.c | s | 15K | 534 | Eric Sandeen | sandeen@redhat.com | 1337117679 |  | ext3: return 32/64-bit dir name hash according to usage type  This is based on commit d1f5273e9adb40724a85272f248f210dc4ce919a ext4: return 32/64-bit dir name hash according to usage type by Fan Yong <yong.fan@whamcloud.com>  Traditionally ext2/3/4 has returned a 32-bit hash value from llseek() to appease NFSv2, which can only handle a 32-bit cookie for seekdir() and telldir().  However, this causes problems if there are 32-bit hash collisions, since the NFSv2 server can get stuck resending the same entries from the directory repeatedly.  Allow ext3 to return a full 64-bit hash (both major and minor) for telldir to decrease the chance of hash collisions.  This patch does implement a new ext3_dir_llseek op, because with 64-bit hashes, nfs will attempt to seek to a hash "offset" which is much larger than ext3's s_maxbytes.  So for dx dirs, we call generic_file_llseek_size() with the appropriate max hash value as the maximum seekable size.  Otherwise we just pass through to generic_file_llseek().  Patch-updated-by: Bernd Schubert <bernd.schubert@itwm.fraunhofer.de> Patch-updated-by: Eric Sandeen <sandeen@redhat.com> (blame us if something is not correct)  Signed-off-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | ext3.h | s | 44K | 1162 | Linus Torvalds | torvalds@linux-foundation.org | 1337958899 |  | Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs  Pull ext2, ext3 and quota fixes from Jan Kara:  "Interesting bits are:    - removal of a special i_mutex locking subclass (I_MUTEX_QUOTA) since      quota code does not need i_mutex anymore in any unusual way.    - backport (from ext4) of a fix of a checkpointing bug (missing cache      flush) that could lead to fs corruption on power failure    The rest are just random small fixes & cleanups."  * 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:   ext2: trivial fix to comment for ext2_free_blocks   ext2: remove the redundant comment for ext2_export_ops   ext3: return 32/64-bit dir name hash according to usage type   quota: Get rid of nested I_MUTEX_QUOTA locking subclass   quota: Use precomputed value of sb_dqopt in dquot_quota_sync   ext2: Remove i_mutex use from ext2_quota_write()   reiserfs: Remove i_mutex use from reiserfs_quota_write()   ext4: Remove i_mutex use from ext4_quota_write()   ext3: Remove i_mutex use from ext3_quota_write()   quota: Fix double lock in add_dquot_ref() with CONFIG_QUOTA_DEBUG   jbd: Write journal superblock with WRITE_FUA after checkpointing   jbd: protect all log tail updates with j_checkpoint_mutex   jbd: Split updating of journal superblock and marking journal empty   ext2: do not register write_super within VFS   ext2: Remove s_dirt handling   ext2: write superblock only once on unmount   ext3: update documentation with barrier=1 default   ext3: remove max_debt in find_group_orlov()   jbd: Refine commit writeout logic
f | balloc.c | s | 61K | 1950 | Eric W. Biederman | ebiederm@xmission.com | 1337119167 |  | userns: Convert ext3 to use kuid/kgid where appropriate  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | Makefile | g | 388B |  | Andrew Morton | akpm@osdl.org | 1165509575 |  | [PATCH] ext3: uninline large functions  Saves nearly 4kbytes on x86.  Cc: Arnaldo Carvalho de Melo <acme@mandriva.com> Cc: <linux-ext4@vger.kernel.org> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | xattr_security.c | s | 1.9K | 67 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | xattr.c | s | 34K | 1214 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | resize.c | s | 33K | 990 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | xattr.h | s | 3.9K | 110 | Eric Paris | eparis@redhat.com | 1296576749 |  | fs/vfs/security: pass last path component to LSM on inode creation  SELinux would like to implement a new labeling behavior of newly created inodes.  We currently label new inodes based on the parent and the creating process.  This new behavior would also take into account the name of the new object when deciding the new label.  This is not the (supposed) full path, just the last component of the path.  This is very useful because creating /etc/shadow is different than creating /etc/passwd but the kernel hooks are unable to differentiate these operations.  We currently require that userspace realize it is doing some difficult operation like that and than userspace jumps through SELinux hoops to get things set up correctly.  This patch does not implement new behavior, that is obviously contained in a seperate SELinux patch, but it does pass the needed name down to the correct LSM hook.  If no such name exists it is fine to pass NULL.  Signed-off-by: Eric Paris <eparis@redhat.com>
f | inode.c | s | 105K | 3274 | Linus Torvalds | torvalds@linux-foundation.org | 1338224085 |  | 
f | super.c | s | 83K | 2772 | Linus Torvalds | torvalds@linux-foundation.org | 1337958899 |  | Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs  Pull ext2, ext3 and quota fixes from Jan Kara:  "Interesting bits are:    - removal of a special i_mutex locking subclass (I_MUTEX_QUOTA) since      quota code does not need i_mutex anymore in any unusual way.    - backport (from ext4) of a fix of a checkpointing bug (missing cache      flush) that could lead to fs corruption on power failure    The rest are just random small fixes & cleanups."  * 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:   ext2: trivial fix to comment for ext2_free_blocks   ext2: remove the redundant comment for ext2_export_ops   ext3: return 32/64-bit dir name hash according to usage type   quota: Get rid of nested I_MUTEX_QUOTA locking subclass   quota: Use precomputed value of sb_dqopt in dquot_quota_sync   ext2: Remove i_mutex use from ext2_quota_write()   reiserfs: Remove i_mutex use from reiserfs_quota_write()   ext4: Remove i_mutex use from ext4_quota_write()   ext3: Remove i_mutex use from ext3_quota_write()   quota: Fix double lock in add_dquot_ref() with CONFIG_QUOTA_DEBUG   jbd: Write journal superblock with WRITE_FUA after checkpointing   jbd: protect all log tail updates with j_checkpoint_mutex   jbd: Split updating of journal superblock and marking journal empty   ext2: do not register write_super within VFS   ext2: Remove s_dirt handling   ext2: write superblock only once on unmount   ext3: update documentation with barrier=1 default   ext3: remove max_debt in find_group_orlov()   jbd: Refine commit writeout logic
f | bitmap.c | s | 639B | 23 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | namei.h | s | 170B | 7 | Ben Dooks | ben@fluff.org.uk | 1130722645 |  | [PATCH] ext3: sparse fixes  Fix warnings from sparse due to un-declared functions that should either have a header file or have been declared static   fs/ext2/bitmap.c:14:15: warning: symbol 'ext2_count_free' was not declared. Should it be static?  fs/ext2/namei.c:92:15: warning: symbol 'ext2_get_parent' was not declared. Should it be static?  fs/ext3/bitmap.c:15:15: warning: symbol 'ext3_count_free' was not declared. Should it be static?  fs/ext3/namei.c:1013:15: warning: symbol 'ext3_get_parent' was not declared. Should it be static?  fs/ext3/xattr.c:214:1: warning: symbol 'ext3_xattr_block_get' was not declared. Should it be static?  fs/ext3/xattr.c:358:1: warning: symbol 'ext3_xattr_block_list' was not declared. Should it be static?  fs/ext3/xattr.c:630:1: warning: symbol 'ext3_xattr_block_find' was not declared. Should it be static?  fs/ext3/xattr.c:863:1: warning: symbol 'ext3_xattr_ibody_find' was not declared. Should it be static?  Signed-off-by: Ben Dooks <ben-linux@fluff.org> Signed-off-by: Andrew Morton <akpm@osdl.org> Signed-off-by: Linus Torvalds <torvalds@osdl.org>
f | xattr_trusted.c | s | 1.4K | 47 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | acl.h | s | 1.5K | 63 | Christoph Hellwig | hch@lst.de | 1311618623 |  | fs: take the ACL checks to common code  Replace the ->check_acl method with a ->get_acl method that simply reads an ACL from disk after having a cache miss.  This means we can replace the ACL checking boilerplate code with a single implementation in namei.c.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | symlink.c | s | 1.3K | 50 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | ext3_jbd.c | s | 1.5K | 52 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | hash.c | s | 4.3K | 184 | Eric Sandeen | sandeen@redhat.com | 1337117679 |  | ext3: return 32/64-bit dir name hash according to usage type  This is based on commit d1f5273e9adb40724a85272f248f210dc4ce919a ext4: return 32/64-bit dir name hash according to usage type by Fan Yong <yong.fan@whamcloud.com>  Traditionally ext2/3/4 has returned a 32-bit hash value from llseek() to appease NFSv2, which can only handle a 32-bit cookie for seekdir() and telldir().  However, this causes problems if there are 32-bit hash collisions, since the NFSv2 server can get stuck resending the same entries from the directory repeatedly.  Allow ext3 to return a full 64-bit hash (both major and minor) for telldir to decrease the chance of hash collisions.  This patch does implement a new ext3_dir_llseek op, because with 64-bit hashes, nfs will attempt to seek to a hash "offset" which is much larger than ext3's s_maxbytes.  So for dx dirs, we call generic_file_llseek_size() with the appropriate max hash value as the maximum seekable size.  Otherwise we just pass through to generic_file_llseek().  Patch-updated-by: Bernd Schubert <bernd.schubert@itwm.fraunhofer.de> Patch-updated-by: Eric Sandeen <sandeen@redhat.com> (blame us if something is not correct)  Signed-off-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | ialloc.c | s | 19K | 625 | Akira Fujita | a-fujita@rs.jp.nec.com | 1334135564 |  | ext3: remove max_debt in find_group_orlov()  max_debt, involved variables and calculations are no longer needed, clean them up.  Signed-off-by: Akira Fujita <a-fujita@rs.jp.nec.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | ioctl.c | s | 7.4K | 282 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | acl.c | s | 9.7K | 387 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | namei.c | s | 68K | 2313 | Linus Torvalds | torvalds@linux-foundation.org | 1336704875 |  | vfs: make it possible to access the dentry hash/len as one 64-bit entry  This allows comparing hash and len in one operation on 64-bit architectures.  Right now only __d_lookup_rcu() takes advantage of this, since that is the case we care most about.  The use of anonymous struct/unions hides the alternate 64-bit approach from most users, the exception being a few cases where we initialize a 'struct qstr' with a static initializer.  This makes the problematic cases use a new QSTR_INIT() helper function for that (but initializing just the name pointer with a "{ .name = xyzzy }" initializer remains valid, as does just copying another qstr structure).  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xattr_user.c | s | 1.5K | 51 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | fsync.c | s | 3.0K | 89 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | Kconfig | g | 3.4K |  | Dave Chinner | dchinner@redhat.com | 1279882255 |  | ext3: default to ordered mode  data=writeback mode is dangerous as it leads to higher data loss and stale data exposure when systems crash. It should not be the default, especially when all major distros ensure their ext3 filesystems default to ordered mode. Change the default mode to the safer data=ordered mode, because we should be caring far more about avoiding stale data exposure than performance.  CC: linux-ext4@vger.kernel.org Signed-off-by: Dave Chinner <dchinner@redhat.com> Acked-by: Eric Sandeen <sandeen@redhat.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | file.c | s | 2.1K | 74 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | ext3: move headers to fs/ext3/  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
