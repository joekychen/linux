f | inode.c | s | 6.7K | 248 | Al Viro | viro@zeniv.linux.org.uk | 1332293377 |  | tidy up after d_make_root() conversion  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | file-nommu.c | s | 6.6K | 223 | Bob Liu | lliubbo@gmail.com | 1302822416 |  | ramfs: fix memleak on no-mmu arch  On no-mmu arch, there is a memleak during shmem test.  The cause of this memleak is ramfs_nommu_expand_for_mapping() added page refcount to 2 which makes iput() can't free that pages.  The simple test file is like this:    int main(void)   { 	int i; 	key_t k = ftok("/etc", 42);  	for ( i=0; i<100; ++i) { 		int id = shmget(k, 10000, 0644||IPC_CREAT); 		if (id == -1) { 			printf("shmget error\n"); 		} 		if(shmctl(id, IPC_RMID, NULL ) == -1) { 			printf("shm  rm error\n"); 			return -1; 		} 	} 	printf("run ok...\n"); 	return 0;   }  And the result:    root:/> free                total         used         free       shared      buffers   Mem:         60320        17912        42408            0            0   -/+ buffers:              17912        42408   root:/> shmem   run ok...   root:/> free                total         used         free       shared      buffers   Mem:         60320        19096        41224            0            0   -/+ buffers:              19096        41224   root:/> shmem   run ok...   root:/> free                total         used         free       shared      buffers   Mem:         60320        20296        40024            0            0   -/+ buffers:              20296        40024   ...  After this patch the test result is:(no memleak anymore)    root:/> free                total         used         free       shared      buffers   Mem:         60320        16668        43652            0            0   -/+ buffers:              16668        43652   root:/> shmem   run ok...   root:/> free                total         used         free       shared      buffers   Mem:         60320        16668        43652            0            0   -/+ buffers:              16668        43652  Signed-off-by: Bob Liu <lliubbo@gmail.com> Acked-by: Hugh Dickins <hughd@google.com> Signed-off-by: David Howells <dhowells@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | internal.h | s | 536B | 12 | Adrian Bunk | bunk@kernel.org | 1209481560 |  | fs/ramfs/ extern cleanup  - internal.h shouldn't duplicate the extern declaration for   ramfs_file_operations already in include/linux/ramfs.h - file-mmu.c needs two #include's for seeing the extern declarations   of it's global struct's  Signed-off-by: Adrian Bunk <bunk@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 164B |  | Robert P. J. Day | rpjday@mindspring.com | 1192635776 |  | Remove valueless definition of hard-selected RAMFS option  Since CONFIG_RAMFS is currently hard-selected to "y", and since Documentation/filesystems/ramfs-rootfs-initramfs.txt reads as follows:  "The amount of code required to implement ramfs is tiny, because all the work is done by the existing Linux caching infrastructure.  Basically, you're mounting the disk cache as a filesystem.  Because of this, ramfs is not an optional component removable via menuconfig, since there would be negligible space savings."  It seems pointless to leave this as a Kconfig entry.  Signed-off-by: Robert P. J. Day <rpjday@mindspring.com> Cc: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | file-mmu.c | s | 1.5K | 49 | Nick Piggin | npiggin@suse.de | 1275012947 |  | fs: convert simple fs to new truncate  Convert simple filesystems: ramfs, configfs, sysfs, block_dev to new truncate sequence.  Cc: Christoph Hellwig <hch@lst.de> Signed-off-by: Nick Piggin <npiggin@suse.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
