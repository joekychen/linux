f | ecryptfs_kernel.h | s | 24K | 655 | Tyler Hicks | tyhicks@canonical.com | 1329429981 |  | eCryptfs: Improve statfs reporting  statfs() calls on eCryptfs files returned the wrong filesystem type and, when using filename encryption, the wrong maximum filename length.  If mount-wide filename encryption is enabled, the cipher block size and the lower filesystem's max filename length will determine the max eCryptfs filename length. Pre-tested, known good lengths are used when the lower filesystem's namelen is 255 and a cipher with 8 or 16 byte block sizes is used. In other, less common cases, we fall back to a safe rounded-down estimate when determining the eCryptfs namelen.  https://launchpad.net/bugs/885744  Signed-off-by: Tyler Hicks <tyhicks@canonical.com> Reported-by: Kees Cook <keescook@chromium.org> Reviewed-by: Kees Cook <keescook@chromium.org> Reviewed-by: John Johansen <john.johansen@canonical.com>
f | mmap.c | s | 16K | 531 | Cong Wang | amwang@redhat.com | 1329429987 |  | ecryptfs: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com> Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
f | Makefile | g | 218B |  | Tyler Hicks | tyhicks@linux.vnet.ibm.com | 1224181299 |  | eCryptfs: remove netlink transport  The netlink transport code has not worked for a while and the miscdev transport is a simpler solution.  This patch removes the netlink code and makes the miscdev transport the only eCryptfs kernel to userspace transport.  Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com> Cc: Michael Halcrow <mhalcrow@us.ibm.com> Cc: Dustin Kirkland <kirkland@canonical.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | debug.c | s | 3.8K | 115 | Michael Halcrow | mhalcrow@us.ibm.com | 1192552991 |  | eCryptfs: update comment and debug statement  Trivial updates to comment and debug statement.  Signed-off-by: Michael Halcrow <mhalcrow@us.ibm.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | super.c | s | 6.0K | 171 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | inode.c | s | 32K | 1066 | Al Viro | viro@zeniv.linux.org.uk | 1338348520 |  | get rid of pointless allocations and copying in ecryptfs_follow_link()  switch to generic_readlink(), while we are at it  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | keystore.c | s | 79K | 2453 | Tyler Hicks | tyhicks@canonical.com | 1329429981 |  | eCryptfs: Improve statfs reporting  statfs() calls on eCryptfs files returned the wrong filesystem type and, when using filename encryption, the wrong maximum filename length.  If mount-wide filename encryption is enabled, the cipher block size and the lower filesystem's max filename length will determine the max eCryptfs filename length. Pre-tested, known good lengths are used when the lower filesystem's namelen is 255 and a cipher with 8 or 16 byte block sizes is used. In other, less common cases, we fall back to a safe rounded-down estimate when determining the eCryptfs namelen.  https://launchpad.net/bugs/885744  Signed-off-by: Tyler Hicks <tyhicks@canonical.com> Reported-by: Kees Cook <keescook@chromium.org> Reviewed-by: Kees Cook <keescook@chromium.org> Reviewed-by: John Johansen <john.johansen@canonical.com>
f | kthread.c | s | 5.6K | 185 | Tyler Hicks | tyhicks@linux.vnet.ibm.com | 1303774357 |  | eCryptfs: Add reference counting to lower files  For any given lower inode, eCryptfs keeps only one lower file open and multiplexes all eCryptfs file operations through that lower file. The lower file was considered "persistent" and stayed open from the first lookup through the lifetime of the inode.  This patch keeps the notion of a single, per-inode lower file, but adds reference counting around the lower file so that it is closed when not currently in use. If the reference count is at 0 when an operation (such as open, create, etc.) needs to use the lower file, a new lower file is opened. Since the file is no longer persistent, all references to the term persistent file are changed to lower file.  Locking is added around the sections of code that opens the lower file and assign the pointer in the inode info, as well as the code the fputs the lower file when all eCryptfs users are done with it.  This patch is needed to fix issues, when mounted on top of the NFSv3 client, where the lower file is left silly renamed until the eCryptfs inode is destroyed.  Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
f | read_write.c | s | 8.7K | 267 | Cong Wang | amwang@redhat.com | 1329429987 |  | ecryptfs: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com> Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
f | file.c | s | 10K | 351 | Al Viro | viro@zeniv.linux.org.uk | 1332293381 |  | switch touch_atime to struct path  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | dentry.c | s | 3.0K | 97 | Tyler Hicks | tyhicks@linux.vnet.ibm.com | 1298321157 |  | eCryptfs: Handle NULL nameidata pointers  Allow for NULL nameidata pointers in eCryptfs create, lookup, and d_revalidate functions.  Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
f | Kconfig | g | 561B |  | Roberto Sassu | roberto.sassu@polito.it | 1312915366 |  | eCryptfs: fix compile error  This patch fixes the compile error reported at the address:  https://bugzilla.kernel.org/show_bug.cgi?id=40292  The problem arises when compiling eCryptfs as built-in and the 'encrypted' key type as a module. The patch prevents this combination from being set in the kernel configuration, by fixing the eCryptfs dependencies.  Signed-off-by: Roberto Sassu <roberto.sassu@polito.it> Reported-by: David Hill <hilld@binarystorm.net> Signed-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>
f | main.c | s | 24K | 797 | Al Viro | viro@zeniv.linux.org.uk | 1332293389 |  | ecryptfs: make register_filesystem() the last potential failure exit  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | crypto.c | s | 67K | 2147 | Tyler Hicks | tyhicks@canonical.com | 1329429981 |  | eCryptfs: Improve statfs reporting  statfs() calls on eCryptfs files returned the wrong filesystem type and, when using filename encryption, the wrong maximum filename length.  If mount-wide filename encryption is enabled, the cipher block size and the lower filesystem's max filename length will determine the max eCryptfs filename length. Pre-tested, known good lengths are used when the lower filesystem's namelen is 255 and a cipher with 8 or 16 byte block sizes is used. In other, less common cases, we fall back to a safe rounded-down estimate when determining the eCryptfs namelen.  https://launchpad.net/bugs/885744  Signed-off-by: Tyler Hicks <tyhicks@canonical.com> Reported-by: Kees Cook <keescook@chromium.org> Reviewed-by: Kees Cook <keescook@chromium.org> Reviewed-by: John Johansen <john.johansen@canonical.com>
f | miscdev.c | s | 16K | 530 | Randy Dunlap | rdunlap@xenotime.net | 1330476930 |  | ecryptfs: fix printk format warning for size_t  Fix printk format warning (from Linus's suggestion):  on i386:   fs/ecryptfs/miscdev.c:433:38: warning: format '%lu' expects type 'long unsigned int', but argument 4 has type 'unsigned int'  and on x86_64:   fs/ecryptfs/miscdev.c:433:38: warning: format '%u' expects type 'unsigned int', but argument 4 has type 'long unsigned int'  Signed-off-by: Randy Dunlap <rdunlap@xenotime.net> Cc:	Geert Uytterhoeven <geert@linux-m68k.org> Cc:	Tyler Hicks <tyhicks@canonical.com> Cc:	Dustin Kirkland <dustin.kirkland@gazzang.com> Cc:	ecryptfs@vger.kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | messaging.c | s | 17K | 549 | Eric W. Biederman | ebiederm@xmission.com | 1333842951 |  | userns: Use cred->user_ns instead of cred->user->user_ns  Optimize performance and prepare for the removal of the user_ns reference from user_struct.  Remove the slow long walk through cred->user->user_ns and instead go straight to cred->user_ns.  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
