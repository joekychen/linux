f | dir.c | s | 16K | 591 | Christoph Hellwig | hch@lst.de | 1281386851 |  | clean up write_begin usage for directories in pagecache  For filesystem that implement directories in pagecache we call block_write_begin with an already allocated page for this code, while the normal regular file write path uses the default block_write_begin behaviour.  Get rid of the __foofs_write_begin helper and opencode the normal write_begin call in foofs_write_begin, while adding a new foofs_prepare_chunk helper for the directory code.  The added benefit is that foofs_prepare_chunk has a much saner calling convention.  Note that the interruptible flag passed into block_write_begin is always ignored if we already pass in a page (see next patch for details), and we never were doing truncations of exessive blocks for this case either so we can switch directly to block_write_begin_newtrunc.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | balloc.c | s | 27K | 834 | Dan Carpenter | error27@gmail.com | 1306455153 |  | ufs: fix truncated values handling 64 bit metadata  Originally i_lastfrag was 32 bits but then we added support for handling 64 bit metadata and it became a 64 bit variable.  That was during 2007, in 54fb996ac15c "[PATCH] ufs2 write: block allocation update".  Unfortunately these casts got left behind so the value got truncated to 32 bit again.  [akpm@linux-foundation.org: remove now-unneeded min_t/max_t casting] Signed-off-by: Dan Carpenter <error27@gmail.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ufs_fs.h | s | 34K | 898 | Thomas Stewart | thomas@stewarts.org.uk | 1274976763 |  | ufs: permit mounting of BorderWare filesystems  I recently had to recover some files from an old broken machine that was running BorderWare Document Gateway.  It's basically a drop in web server for sharing files.  From the look of the init process and using strings on of a few files it seems to be based on FreeBSD 3.3.  The process turned out to be more difficult than I imagined, but to cut a long story short BorderWare in their wisdom use a nonstandard magic number in their UFS (ufstype=44bsd) file systems.  Thus Linux refuses to mount the file systems in order to recover the data.  After a bit of hunting I was able to make a quick fix to fs/ufs/super.c in order to detect the new magic number.  I assume that this number is the same for all installations.  It's quite easy to find out from ufs_fs.h.  The superblock sits 8k into the block device and the magic number its 1372 bytes into the superblock struct.  # dd if=/dev/sda5 skip=$(( 8192 + 1372 )) bs=1 count=4 2> /dev/null || hd 00000000  97 26 24 0f                                       ||.&$.|| #  Signed-off-by: Thomas Stewart <thomas@stewarts.org.uk> Cc: Evgeniy Dushistov <dushistov@mail.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 199B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | super.c | s | 43K | 1355 | Linus Torvalds | torvalds@linux-foundation.org | 1336704875 |  | vfs: make it possible to access the dentry hash/len as one 64-bit entry  This allows comparing hash and len in one operation on 64-bit architectures.  Right now only __d_lookup_rcu() takes advantage of this, since that is the case we care most about.  The use of anonymous struct/unions hides the alternate 64-bit approach from most users, the exception being a few cases where we initialize a 'struct qstr' with a static initializer.  This makes the problematic cases use a new QSTR_INIT() helper function for that (but initializing just the name pointer with a "{ .name = xyzzy }" initializer remains valid, as does just copying another qstr structure).  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | util.c | s | 6.1K | 253 | Arnd Bergmann | arnd@arndb.de | 1299101268 |  | ufs: remove the BKL  This introduces a new per-superblock mutex in UFS to replace the big kernel lock. I have been careful to avoid nested calls to lock_ufs and to get the lock order right with respect to other mutexes, in particular lock_super.  I did not make any attempt to prove that the big kernel lock is not needed in a particular place in the code, which is very possible.  The mutex has a significant performance impact, so it is only used on SMP or PREEMPT configurations.  As Nick Piggin noticed, any allocation inside of the lock may end up deadlocking when we get to ufs_getfrag_block in the reclaim task, so we now use GFP_NOFS.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Nick Bowler <nbowler@elliptictech.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Cc: Nick Piggin <npiggin@gmail.com>
f | truncate.c | s | 12K | 442 | Dan Carpenter | error27@gmail.com | 1306455153 |  | ufs: fix truncated values handling 64 bit metadata  Originally i_lastfrag was 32 bits but then we added support for handling 64 bit metadata and it became a 64 bit variable.  That was during 2007, in 54fb996ac15c "[PATCH] ufs2 write: block allocation update".  Unfortunately these casts got left behind so the value got truncated to 32 bit again.  [akpm@linux-foundation.org: remove now-unneeded min_t/max_t casting] Signed-off-by: Dan Carpenter <error27@gmail.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | cylinder.c | s | 5.7K | 185 | Mike Frysinger | vapier@gentoo.org | 1202491359 |  | drop linux/ufs_fs.h from userspace export and relocate it to fs/ufs/ufs_fs.h  Per previous discussions about cleaning up ufs_fs.h, people just want this straight up dropped from userspace export.  The only remaining consumer (silo) has been fixed a while ago to not rely on this header. This allows use to move it completely from include/linux/ to fs/ufs/ seeing as how the only in-kernel consumer is fs/ufs/.  Signed-off-by: Mike Frysinger <vapier@gentoo.org> Cc: Jan Kara <jack@ucw.cz> Cc: Christoph Hellwig <hch@lst.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | inode.c | s | 25K | 786 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | ialloc.c | s | 9.2K | 314 | Al Viro | viro@zeniv.linux.org.uk | 1325649299 |  | ufs: propagate umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | Kconfig | g | 1.7K |  | Arnd Bergmann | arnd@arndb.de | 1299101268 |  | ufs: remove the BKL  This introduces a new per-superblock mutex in UFS to replace the big kernel lock. I have been careful to avoid nested calls to lock_ufs and to get the lock order right with respect to other mutexes, in particular lock_super.  I did not make any attempt to prove that the big kernel lock is not needed in a particular place in the code, which is very possible.  The mutex has a significant performance impact, so it is only used on SMP or PREEMPT configurations.  As Nick Piggin noticed, any allocation inside of the lock may end up deadlocking when we get to ufs_getfrag_block in the reclaim task, so we now use GFP_NOFS.  Signed-off-by: Arnd Bergmann <arnd@arndb.de> Tested-by: Nick Bowler <nbowler@elliptictech.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Cc: Nick Piggin <npiggin@gmail.com>
f | symlink.c | s | 1.2K | 47 | Dmitry Monakhov | dmonakhov@openvz.org | 1274463040 |  | ufs: add ufs speciffic ->setattr call  generic setattr not longer responsible for quota transfer. use ufs_setattr for all ufs's inodes.  Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org> Signed-off-by: Jan Kara <jack@suse.cz>
f | namei.c | s | 7.3K | 296 | Al Viro | viro@zeniv.linux.org.uk | 1332293372 |  | vfs: check i_nlink limits in vfs_{mkdir,rename_dir,link}  New field of struct super_block - ->s_max_links.  Maximal allowed value of ->i_nlink or 0; in the latter case all checks still need to be done in ->link/->mkdir/->rename instances.  Note that this limit applies both to directoris and to non-directories.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | file.c | s | 1008B | 42 | Linus Torvalds | torvalds@linux-foundation.org | 1275235871 |  | Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs-2.6  * 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs-2.6:   quota: Convert quota statistics to generic percpu_counter   ext3 uses rb_node = NULL; to zero rb_root.   quota: Fixup dquot_transfer   reiserfs: Fix resuming of quotas on remount read-write   pohmelfs: Remove dead quota code   ufs: Remove dead quota code   udf: Remove dead quota code   quota: rename default quotactl methods to dquot_   quota: explicitly set ->dq_op and ->s_qcop   quota: drop remount argument to ->quota_on and ->quota_off   quota: move unmount handling into the filesystem   quota: kill the vfs_dq_off and vfs_dq_quota_on_remount wrappers   quota: move remount handling into the filesystem   ocfs2: Fix use after free on remount read-only  Fix up conflicts in fs/ext4/super.c and fs/ufs/file.c
f | util.h | s | 16K | 523 | Akinobu Mita | akinobu.mita@gmail.com | 1300934779 |  | ufs: use little-endian bitops  As a preparation for removing ext2 non-atomic bit operations from asm/bitops.h.  This converts ext2 non-atomic bit operations to little-endian bit operations.  Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | swab.h | s | 2.5K | 101 | Harvey Harrison | harvey.harrison@gmail.com | 1209398325 |  | ufs: replace __inline with inline  Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com> Cc: Evgeniy Dushistov <dushistov@mail.ru> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ufs.h | s | 5.0K | 141 | Al Viro | viro@zeniv.linux.org.uk | 1325649299 |  | ufs: propagate umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
