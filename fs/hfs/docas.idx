f | dir.c | s | 7.8K | 291 | Al Viro | viro@zeniv.linux.org.uk | 1325649293 |  | switch ->create() to umode_t  vfs_create() ignores everything outside of 16bit subset of its mode argument; switching it to umode_t is obviously equivalent and it's the only caller of the method  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | string.c | s | 3.8K | 103 | Nick Piggin | npiggin@kernel.dk | 1294383020 |  | fs: change d_hash for rcu-walk  Change d_hash so it may be called from lock-free RCU lookups. See similar patch for d_compare for details.  For in-tree filesystems, this is just a mechanical change.  Signed-off-by: Nick Piggin <npiggin@kernel.dk>
f | hfs.h | s | 9.1K | 254 | Eric Sandeen | sandeen@redhat.com | 1202323265 |  | address hfs on-disk corruption robustness review comments  Address Roman's review comments for the previously sent on-disk corruption hfs robustness patch.  - use 0 as a failure value, rather than making a new macro HFS_BAD_KEYLEN,   and use a switch statement instead of if's.  - Add new fail: target to __hfs_brec_find to skip assignments using bad   values when exiting with a failure.  [akpm@linux-foundation.org: coding-style fixes] Signed-off-by: Eric Sandeen <sandeen@redhat.com> Cc: Roman Zippel <zippel@linux-m68k.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Makefile | g | 251B |  | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | sysdep.c | s | 1.0K | 37 | Nick Piggin | npiggin@kernel.dk | 1294383029 |  | fs: rcu-walk aware d_revalidate method  Require filesystems be aware of .d_revalidate being called in rcu-walk mode (nd->flags & LOOKUP_RCU). For now do a simple push down, returning -ECHILD from all implementations.  Signed-off-by: Nick Piggin <npiggin@kernel.dk>
f | extent.c | s | 13K | 469 | Matthias Kaehlcke | matthias@kaehlcke.net | 1217008413 |  | hfs: convert extents_lock in a mutex  Apple Macintosh file system: The semaphore extens_lock is used as a mutex. Convert it to the mutex API  Signed-off-by: Matthias Kaehlcke <matthias@kaehlcke.net> Cc: Roman Zippel <zippel@linux-m68k.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bnode.c | s | 11K | 419 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | bitmap.c | s | 5.8K | 223 | Matthias Kaehlcke | matthias@kaehlcke.net | 1217008413 |  | hfs: convert bitmap_lock in a mutex  Apple Macintosh file system: The semaphore bitmap_lock is used as a mutex. Convert it to the mutex API  Signed-off-by: Matthias Kaehlcke <matthias@kaehlcke.net> Cc: Roman Zippel <zippel@linux-m68k.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | inode.c | s | 18K | 603 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | super.c | s | 12K | 442 | Al Viro | viro@zeniv.linux.org.uk | 1332293375 |  | switch open-coded instances of d_make_root() to new helper  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | brec.c | s | 13K | 456 | Al Viro | viro@ftp.linux.org.uk | 1205772415 |  | hfs_bnode_find() can fail, resulting in hfs_bnode_split() breakage  oops and fs corruption; the latter can happen even on valid fs in case of oom.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | part_tbl.c | s | 2.9K | 108 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | btree.c | s | 8.8K | 329 | Phillip Lougher | plougher@redhat.com | 1320275219 |  | hfs: fix hfs_find_init() sb->ext_tree NULL ptr oops  Clement Lecigne reports a filesystem which causes a kernel oops in hfs_find_init() trying to dereference sb->ext_tree which is NULL.  This proves to be because the filesystem has a corrupted MDB extent record, where the extents file does not fit into the first three extents in the file record (the first blocks).  In hfs_get_block() when looking up the blocks for the extent file (HFS_EXT_CNID), it fails the first blocks special case, and falls through to the extent code (which ultimately calls hfs_find_init()) which is in the process of being initialised.  Hfs avoids this scenario by always having the extents b-tree fitting into the first blocks (the extents B-tree can't have overflow extents).  The fix is to check at mount time that the B-tree fits into first blocks, i.e.  fail if HFS_I(inode)->alloc_blocks >= HFS_I(inode)->first_blocks  Note, the existing commit 47f365eb57573 ("hfs: fix oops on mount with corrupted btree extent records") becomes subsumed into this as a special case, but only for the extents B-tree (HFS_EXT_CNID), it is perfectly acceptable for the catalog B-Tree file to grow beyond three extents, with the remaining extent descriptors in the extents overfow.  This fixes CVE-2011-2203  Reported-by: Clement LECIGNE <clement.lecigne@netasq.com> Signed-off-by: Phillip Lougher <plougher@redhat.com> Cc: Jeff Mahoney <jeffm@suse.com> Cc: Christoph Hellwig <hch@lst.de> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | catalog.c | s | 9.2K | 317 | Amerigo Wang | amwang@redhat.com | 1260895990 |  | hfs: fix a potential buffer overflow  A specially-crafted Hierarchical File System (HFS) filesystem could cause a buffer overflow to occur in a process's kernel stack during a memcpy() call within the hfs_bnode_read() function (at fs/hfs/bnode.c:24).  The attacker can provide the source buffer and length, and the destination buffer is a local variable of a fixed length.  This local variable (passed as "&entry" from fs/hfs/dir.c:112 and allocated on line 60) is stored in the stack frame of hfs_bnode_read()'s caller, which is hfs_readdir(). Because the hfs_readdir() function executes upon any attempt to read a directory on the filesystem, it gets called whenever a user attempts to inspect any filesystem contents.  [amwang@redhat.com: modify this patch and fix coding style problems] Signed-off-by: WANG Cong <amwang@redhat.com> Cc: Eugene Teo <eteo@redhat.com> Cc: Roman Zippel <zippel@linux-m68k.org> Cc: Al Viro <viro@zeniv.linux.org.uk> Cc: Christoph Hellwig <hch@lst.de> Cc: Alexey Dobriyan <adobriyan@gmail.com> Cc: Dave Anderson <anderson@redhat.com> Cc: <stable@kernel.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | bfind.c | s | 4.6K | 205 | Thomas Gleixner | tglx@linutronix.de | 1286897771 |  | hfs: Convert tree_lock to mutex  tree_lock is used as mutex so make it a mutex.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Acked-by: Christoph Hellwig <hch@lst.de> Cc: Al Viro <viro@zeniv.linux.org.uk> LKML-Reference: <20100907125056.416332114@linutronix.de>
f | btree.h | s | 5.4K | 143 | Thomas Gleixner | tglx@linutronix.de | 1286897771 |  | hfs: Convert tree_lock to mutex  tree_lock is used as mutex so make it a mutex.  Signed-off-by: Thomas Gleixner <tglx@linutronix.de> Cc: Peter Zijlstra <peterz@infradead.org> Acked-by: Christoph Hellwig <hch@lst.de> Cc: Al Viro <viro@zeniv.linux.org.uk> LKML-Reference: <20100907125056.416332114@linutronix.de>
f | mdb.c | s | 10K | 316 | Christoph Hellwig | hch@lst.de | 1288055901 |  | hfs: use sync_dirty_buffer  Use sync_dirty_buffer instead of the incorrect opencoding it.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | attr.c | s | 2.6K | 105 | Linus Torvalds | torvalds@ppc970.osdl.org | 1113690036 |  | Linux-2.6.12-rc2  Initial git repository build. I'm not bothering with the full history, even though we have it. We can create a separate "historical" git archive of that later if we want to, and in the meantime it's about 3.2GB when imported into git - space that would just make the early git days unnecessarily complicated, when we don't have a lot of good infrastructure for it.  Let it rip!
f | trans.c | s | 3.4K | 139 | Dan Carpenter | dan.carpenter@oracle.com | 1321374582 |  | hfs: add sanity check for file name length  On a corrupted file system the ->len field could be wrong leading to a buffer overflow.  Reported-and-acked-by: Clement LECIGNE <clement.lecigne@netasq.com> Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com> Cc: stable@kernel.org Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | Kconfig | g | 473B |  | Alexey Dobriyan | adobriyan@gmail.com | 1232619357 |  | fs/Kconfig: move hfs, hfsplus out  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | hfs_fs.h | s | 8.4K | 230 | Al Viro | viro@zeniv.linux.org.uk | 1325649309 |  | hfs: propagate umode_t  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
