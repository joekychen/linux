f | balloc.c | s | 44K | 1406 | Linus Torvalds | torvalds@linux-foundation.org | 1337958899 |  | Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs  Pull ext2, ext3 and quota fixes from Jan Kara:  "Interesting bits are:    - removal of a special i_mutex locking subclass (I_MUTEX_QUOTA) since      quota code does not need i_mutex anymore in any unusual way.    - backport (from ext4) of a fix of a checkpointing bug (missing cache      flush) that could lead to fs corruption on power failure    The rest are just random small fixes & cleanups."  * 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:   ext2: trivial fix to comment for ext2_free_blocks   ext2: remove the redundant comment for ext2_export_ops   ext3: return 32/64-bit dir name hash according to usage type   quota: Get rid of nested I_MUTEX_QUOTA locking subclass   quota: Use precomputed value of sb_dqopt in dquot_quota_sync   ext2: Remove i_mutex use from ext2_quota_write()   reiserfs: Remove i_mutex use from reiserfs_quota_write()   ext4: Remove i_mutex use from ext4_quota_write()   ext3: Remove i_mutex use from ext3_quota_write()   quota: Fix double lock in add_dquot_ref() with CONFIG_QUOTA_DEBUG   jbd: Write journal superblock with WRITE_FUA after checkpointing   jbd: protect all log tail updates with j_checkpoint_mutex   jbd: Split updating of journal superblock and marking journal empty   ext2: do not register write_super within VFS   ext2: Remove s_dirt handling   ext2: write superblock only once on unmount   ext3: update documentation with barrier=1 default   ext3: remove max_debt in find_group_orlov()   jbd: Refine commit writeout logic
f | dir.c | s | 17K | 668 | Cong Wang | amwang@redhat.com | 1332251302 |  | ext2: remove the second argument of k[un]map_atomic()  Acked-by: Jan Kara <jack@suse.cz> Signed-off-by: Cong Wang <amwang@redhat.com>
f | xattr.h | s | 3.4K | 101 | Eric Paris | eparis@redhat.com | 1296576749 |  | fs/vfs/security: pass last path component to LSM on inode creation  SELinux would like to implement a new labeling behavior of newly created inodes.  We currently label new inodes based on the parent and the creating process.  This new behavior would also take into account the name of the new object when deciding the new label.  This is not the (supposed) full path, just the last component of the path.  This is very useful because creating /etc/shadow is different than creating /etc/passwd but the kernel hooks are unable to differentiate these operations.  We currently require that userspace realize it is doing some difficult operation like that and than userspace jumps through SELinux hoops to get things set up correctly.  This patch does not implement new behavior, that is obviously contained in a seperate SELinux patch, but it does pass the needed name down to the correct LSM hook.  If no such name exists it is fine to pass NULL.  Signed-off-by: Eric Paris <eparis@redhat.com>
f | Makefile | g | 380B |  | Al Viro | viro@zeniv.linux.org.uk | 1244770572 |  | switch ext2 to simple_fsync()  kill ext2_sync_file() (along with ext2/fsync.c), get rid of ext2_update_inode() - it's an alias of ext2_write_inode().  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | super.c | s | 40K | 1364 | Linus Torvalds | torvalds@linux-foundation.org | 1337958899 |  | Merge branch 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs  Pull ext2, ext3 and quota fixes from Jan Kara:  "Interesting bits are:    - removal of a special i_mutex locking subclass (I_MUTEX_QUOTA) since      quota code does not need i_mutex anymore in any unusual way.    - backport (from ext4) of a fix of a checkpointing bug (missing cache      flush) that could lead to fs corruption on power failure    The rest are just random small fixes & cleanups."  * 'for_linus' of git://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs:   ext2: trivial fix to comment for ext2_free_blocks   ext2: remove the redundant comment for ext2_export_ops   ext3: return 32/64-bit dir name hash according to usage type   quota: Get rid of nested I_MUTEX_QUOTA locking subclass   quota: Use precomputed value of sb_dqopt in dquot_quota_sync   ext2: Remove i_mutex use from ext2_quota_write()   reiserfs: Remove i_mutex use from reiserfs_quota_write()   ext4: Remove i_mutex use from ext4_quota_write()   ext3: Remove i_mutex use from ext3_quota_write()   quota: Fix double lock in add_dquot_ref() with CONFIG_QUOTA_DEBUG   jbd: Write journal superblock with WRITE_FUA after checkpointing   jbd: protect all log tail updates with j_checkpoint_mutex   jbd: Split updating of journal superblock and marking journal empty   ext2: do not register write_super within VFS   ext2: Remove s_dirt handling   ext2: write superblock only once on unmount   ext3: update documentation with barrier=1 default   ext3: remove max_debt in find_group_orlov()   jbd: Refine commit writeout logic
f | xattr.c | s | 27K | 942 | Jan Kara | jack@suse.cz | 1334135565 |  | ext2: Remove s_dirt handling  Places which modify superblock feature / state fields mark the superblock buffer dirty so it is written out by flusher thread. Thus there's no need to set s_dirt there.  The only other fields changing in the superblock are the numbers of free blocks, free inodes and s_wtime. There's no real need to write (or even compute) these periodically. Free blocks / inodes counters are recomputed on every mount from group counters anyway and value of s_wtime is only informational and imprecise anyway. So it should be enough to write these opportunistically on mount, remount, umount, and sync_fs times.  Signed-off-by: Jan Kara <jack@suse.cz>
f | xattr_security.c | s | 1.9K | 65 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | migrate ext2_fs.h guts to fs/ext2/ext2.h  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | xip.h | s | 759B | 24 | Nick Piggin | npiggin@suse.de | 1209398303 |  | xip: support non-struct page backed memory  Convert XIP to support non-struct page backed memory, using VM_MIXEDMAP for the user mappings.  This requires the get_xip_page API to be changed to an address based one. Improve the API layering a little bit too, while we're here.  This is required in order to support XIP filesystems on memory that isn't backed with struct page (but memory with struct page is still supported too).  Signed-off-by: Nick Piggin <npiggin@suse.de> Acked-by: Carsten Otte <cotte@de.ibm.com> Cc: Jared Hulbert <jaredeh@gmail.com> Cc: Martin Schwidefsky <schwidefsky@de.ibm.com> Cc: Heiko Carstens <heiko.carstens@de.ibm.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ext2.h | s | 27K | 732 | Eric W. Biederman | ebiederm@xmission.com | 1337119166 |  | userns: Convert ext2 to use kuid/kgid where appropriate.  Acked-by: Serge Hallyn <serge.hallyn@canonical.com> Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
f | inode.c | s | 44K | 1410 | Linus Torvalds | torvalds@linux-foundation.org | 1338224085 |  | 
f | xattr_trusted.c | s | 1.4K | 47 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | migrate ext2_fs.h guts to fs/ext2/ext2.h  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | symlink.c | s | 1.3K | 50 | Dmitry Monakhov | dmonakhov@openvz.org | 1271099485 |  | ext2: symlink must be handled via filesystem specific operation  generic setattr implementation is no longer responsible for quota transfer so synlinks must be handled via ext2_setattr.  Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org> Signed-off-by: Jan Kara <jack@suse.cz>
f | ioctl.c | s | 4.4K | 163 | Djalal Harouni | tixxdz@opendz.org | 1326285542 |  | ext2: protect inode changes in the SETVERSION and SETFLAGS ioctls  Unlock mutex after i_flags and i_ctime updates in the EXT2_IOC_SETFLAGS ioctl.  Use i_mutex in the EXT2_IOC_SETVERSION ioctl to protect i_ctime and i_generation updates and make the ioctl consistent since i_mutex is also used in other places to protect timestamps and inode changes.  Cc: Andreas Dilger <adilger.kernel@dilger.ca> Cc: Jan Kara <jack@suse.cz> Signed-off-by: Djalal Harouni <tixxdz@opendz.org> Signed-off-by: Jan Kara <jack@suse.cz>
f | acl.h | s | 1.5K | 63 | Linus Torvalds | torvalds@linux-foundation.org | 1312006910 |  | ext2: remove duplicate 'ext2_get_acl()' define  When commit 4e34e719e457 ("fs: take the ACL checks to common code") changed the xyz_check_acl() functions into the more natural xyz_get_acl() interface, we grew two copies of the    #define ext2_get_acl	NULL  define for the non-acl case.  Remove the extra one.  Reported-by: Marco Stornelli <marco.stornelli@gmail.com> Cc: Christoph Hellwig <hch@lst.de> Cc: Al Viro <viro@zeniv.linux.org.uk> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ialloc.c | s | 18K | 602 | Jan Kara | jack@suse.cz | 1334135565 |  | ext2: Remove s_dirt handling  Places which modify superblock feature / state fields mark the superblock buffer dirty so it is written out by flusher thread. Thus there's no need to set s_dirt there.  The only other fields changing in the superblock are the numbers of free blocks, free inodes and s_wtime. There's no real need to write (or even compute) these periodically. Free blocks / inodes counters are recomputed on every mount from group counters anyway and value of s_wtime is only informational and imprecise anyway. So it should be enough to write these opportunistically on mount, remount, umount, and sync_fs times.  Signed-off-by: Jan Kara <jack@suse.cz>
f | acl.c | s | 9.0K | 363 | Al Viro | viro@zeniv.linux.org.uk | 1312179006 |  | switch posix_acl_equiv_mode() to umode_t *  ... so that &inode->i_mode could be passed to it  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | namei.c | s | 9.3K | 355 | Linus Torvalds | torvalds@linux-foundation.org | 1336704875 |  | vfs: make it possible to access the dentry hash/len as one 64-bit entry  This allows comparing hash and len in one operation on 64-bit architectures.  Right now only __d_lookup_rcu() takes advantage of this, since that is the case we care most about.  The use of anonymous struct/unions hides the alternate 64-bit approach from most users, the exception being a few cases where we initialize a 'struct qstr' with a static initializer.  This makes the problematic cases use a new QSTR_INIT() helper function for that (but initializing just the name pointer with a "{ .name = xyzzy }" initializer remains valid, as does just copying another qstr structure).  Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | file.c | s | 2.8K | 100 | Christoph Hellwig | hch@lst.de | 1311618623 |  | fs: take the ACL checks to common code  Replace the ->check_acl method with a ->get_acl method that simply reads an ACL from disk after having a cache miss.  This means we can replace the ACL checking boilerplate code with a single implementation in namei.c.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | xattr_user.c | s | 1.5K | 53 | Paul Gortmaker | paul.gortmaker@windriver.com | 1326113530 |  | ext2/3/4: delete unneeded includes of module.h  Delete any instances of include module.h that were not strictly required.  In the case of ext2, the declaration of MODULE_LICENSE etc. were in inode.c but the module_init/exit were in super.c, so relocate the MODULE_LICENCE/AUTHOR block to super.c which makes it consistent with ext3 and ext4 at the same time.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | Kconfig | g | 1.7K |  | Alexey Dobriyan | adobriyan@gmail.com | 1224528239 |  | fs/Kconfig: move ext2, ext3, ext4, JBD, JBD2 out  Use fs/*/Kconfig more, which is good because everything related to one filesystem is in one place and fs/Kconfig is quite fat.  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | xip.c | s | 2.0K | 75 | Al Viro | viro@zeniv.linux.org.uk | 1333224196 |  | migrate ext2_fs.h guts to fs/ext2/ext2.h  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
