f | quota.c | s | 9.6K | 351 | Linus Torvalds | torvalds@linux-foundation.org | 1332519562 |  | Merge branch 'for-linus' of git://oss.sgi.com/xfs/xfs  Pull XFS updates from Ben Myers:  "Scalability improvements for dquots, log grant code cleanups, plus   bugfixes and cleanups large and small"  Fix up various trivial conflicts that were due to some of the earlier patches already having been integrated into v3.3 as bugfixes, and then there were development patches on top of those.  Easily merged by just taking the newer version from the pulled branch.  * 'for-linus' of git://oss.sgi.com/xfs/xfs: (45 commits)   xfs: fallback to vmalloc for large buffers in xfs_getbmap   xfs: fallback to vmalloc for large buffers in xfs_attrmulti_attr_get   xfs: remove remaining scraps of struct xfs_iomap   xfs: fix inode lookup race   xfs: clean up minor sparse warnings   xfs: remove the global xfs_Gqm structure   xfs: remove the per-filesystem list of dquots   xfs: use per-filesystem radix trees for dquot lookup   xfs: per-filesystem dquot LRU lists   xfs: use common code for quota statistics   xfs: reimplement fdatasync support   xfs: split in-core and on-disk inode log item fields   xfs: make xfs_inode_item_size idempotent   xfs: log timestamp updates   xfs: log file size updates at I/O completion time   xfs: log file size updates as part of unwritten extent conversion   xfs: do not require an ioend for new EOF calculation   xfs: use per-filesystem I/O completion workqueues   quota: make Q_XQUOTASYNC a noop   xfs: include reservations in quota reporting   ...
f | Makefile | g | 275B |  | Christoph Hellwig | hch@infradead.org | 1267744825 |  | quota: split out compat_sys_quotactl support from quota.c  Instead of adding ifdefs just split it into a new file.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Jan Kara <jack@suse.cz>
f | compat.c | s | 3.2K | 111 | Christoph Hellwig | hch@infradead.org | 1267744825 |  | quota: split out compat_sys_quotactl support from quota.c  Instead of adding ifdefs just split it into a new file.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Jan Kara <jack@suse.cz>
f | quotaio_v1.h | s | 1.2K | 28 | Jan Kara | jack@suse.cz | 1238030315 |  | quota: Move quota files into separate directory  Quota subsystem has more and more files. It's time to create a dir for it.  Signed-off-by: Jan Kara <jack@suse.cz>
f | dquot.c | s | 72K | 2422 | Jan Kara | jack@suse.cz | 1337117679 |  | quota: Get rid of nested I_MUTEX_QUOTA locking subclass  So far i_mutex was ranking above dqonoff_mutex and i_mutex on quota files was special and ranking below dqonoff_mutex (and several other locks). However there's no real need for i_mutex on quota files to be special. IO on quota files is serialized by dqio_mutex anyway so we don't need to take i_mutex when writing to quota files. Other places where we take i_mutex on quota file can accomodate standard i_mutex lock ranking, we only need to change the lock ranking to be dqonoff_mutex > i_mutex which is a matter of changing documentation because there's no place which would enforce ordering in the other direction.  Signed-off-by: Jan Kara <jack@suse.cz>
f | quota_tree.h | s | 689B | 20 | Jiaying Zhang | jiayingz@google.com | 1279721158 |  | quota: Change quota error message to print out disk and function name  The current quota error message doesn't always print the disk name, so it is hard to identify the "bad" disk when quota error happens.  This patch changes the standardized quota error message to print out disk name and function name. It also uses a combination of cpp macro and inline function to provide better type checking and to lower the text size of the message.  [Jan Kara: Export __quota_error]  Signed-off-by: Jiaying Zhang <jiayingz@google.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | quota_v1.c | s | 6.2K | 202 | Jiaying Zhang | jiayingz@google.com | 1279721158 |  | quota: Change quota error message to print out disk and function name  The current quota error message doesn't always print the disk name, so it is hard to identify the "bad" disk when quota error happens.  This patch changes the standardized quota error message to print out disk name and function name. It also uses a combination of cpp macro and inline function to provide better type checking and to lower the text size of the message.  [Jan Kara: Export __quota_error]  Signed-off-by: Jiaying Zhang <jiayingz@google.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | quotaio_v2.h | s | 2.5K | 63 | Jan Kara | jack@suse.cz | 1260453774 |  | quota: Implement quota format with 64-bit space and inode limits  So far the maximum quota space limit was 4TB. Apparently this isn't enough for Lustre guys anymore. So implement new quota format which raises block limits to 2^64 bytes. Also store number of inodes and inode limits in 64-bit variables as 2^32 files isn't that insanely high anymore.  The first version of the patch has been developed by Andrew Perepechko <Andrew.Perepechko@Sun.COM>.  CC: Andrew.Perepechko@Sun.COM Signed-off-by: Jan Kara <jack@suse.cz>
f | Kconfig | g | 2.3K |  | Jan Kara | jack@suse.cz | 1286273797 |  | quota: Make QUOTACTL config be selected by its users  Remove "depends on" line from QUOTACTL config option and rather select the option explicitely from config options which need it. It makes more sense this way and also fixes Kconfig warning due to GFS2 selecting QUOTACTL but QUOTACTL not depending on it.  Signed-off-by: Jan Kara <jack@suse.cz>
f | netlink.c | s | 2.6K | 88 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | quota_tree.c | s | 16K | 613 | Joe Perches | joe@perches.com | 1294682645 |  | quota: Use %pV and __attribute__((format (printf in __quota_error and fix fallout  Use %pV in __quota_error so a single printk can not be interleaved with other logging messages. Add __attribute__((format (printf, 3, 4))) so format and arguments can be verified by compiler. Make sure printk formats and arguments match.  Block # needed a pointer dereference.  Signed-off-by: Joe Perches <joe@perches.com> Signed-off-by: Jan Kara <jack@suse.cz>
f | quota_v2.c | s | 10K | 293 | Davidlohr Bueso | dave@gnu.org | 1298544164 |  | quota: return -ENOMEM when memory allocation fails  Signed-off-by: Davidlohr Bueso <dave@gnu.org> Signed-off-by: Jan Kara <jack@suse.cz>
