f | jfs_metapage.c | s | 19K | 737 | Jens Axboe | jaxboe@fusionio.com | 1299743527 |  | block: remove per-queue plugging  Code has been converted over to the new explicit on-stack plugging, and delay users have been converted to use the new API for that. So lets kill off the old plugging along with aops->sync_page().  Signed-off-by: Jens Axboe <jaxboe@fusionio.com>
f | jfs_xtree.h | s | 4.0K | 115 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1231537324 |  | jfs: remove xtLookupList()  xtLookupList() was a more generalized version of xtLookup() with a nastier interface.  Its only caller, extHint(), is actually better suited to using xtLookup() than xtLookupList().  This also lets us remove the definition of lxd_t, an obnoxious packed structure that was only used in-memory.  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_unicode.c | s | 3.3K | 124 | Dave Kleikamp | shaggy@austin.ibm.com | 1159800927 |  | JFS: White space cleanup  Removed trailing spaces & tabs, and spaces preceding tabs. Also a couple very minor comment cleanups.  Signed-off-by: Dave Kleikamp <shaggy@austin.ibm.com> (cherry picked from f74156539964d7b3d5164fdf8848e6a682f75b97 commit)
f | Makefile | g | 437B |  | matt mooney | mfm@muteddisk.com | 1300366977 |  | fs: change to new flag variable  Replace EXTRA_CFLAGS with ccflags-y. And change ntfs-objs to ntfs-y for cleaner conditional inclusion.  Signed-off-by: matt mooney <mfm@muteddisk.com> Acked-by: WANG Cong <xiyou.wangcong@gmail.com> Signed-off-by: Michal Marek <mmarek@suse.cz>
f | jfs_incore.h | s | 7.3K | 210 | Dave Kleikamp | dave.kleikamp@oracle.com | 1308610404 |  | jfs: agstart field must be 64 bits  The previous patch added the agstart field to jfs_ip, but declared it a long.  We need to make sure its 64 bits on every platform.  Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
f | resize.c | s | 14K | 479 | Dave Kleikamp | dave.kleikamp@oracle.com | 1308583804 |  | jfs: old_agsize should be 64 bits in jfs_extendfs  Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
f | jfs_debug.h | s | 3.4K | 107 | Alexey Dobriyan | adobriyan@gmail.com | 1210684930 |  | JFS: switch to seq_files  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_txnmgr.h | s | 8.2K | 264 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1181161715 |  | JFS: Whitespace cleanup and remove some dead code  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_inode.c | s | 4.0K | 144 | Miklos Szeredi | mszeredi@suse.cz | 1320234823 |  | filesystems: add missing nlink wrappers  Replace direct i_nlink updates with the respective updater function (inc_nlink, drop_nlink, clear_nlink, inode_dec_link_count).  Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
f | jfs_extent.c | s | 17K | 573 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | endian24.h | s | 1.5K | 45 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1181161715 |  | JFS: Whitespace cleanup and remove some dead code  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_filsys.h | s | 8.8K | 238 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1181161715 |  | JFS: Whitespace cleanup and remove some dead code  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | xattr.c | s | 27K | 986 | James Morris | jmorris@namei.org | 1312849863 |  | Merge branch 'next-evm' of git://git.kernel.org/pub/scm/linux/kernel/git/zohar/ima-2.6 into next  Conflicts: 	fs/attr.c  Resolve conflict manually.  Signed-off-by: James Morris <jmorris@namei.org>
f | jfs_inode.h | s | 2.5K | 50 | Josef Bacik | josef@redhat.com | 1311209279 |  | fs: push i_mutex and filemap_write_and_wait down into ->fsync() handlers  Btrfs needs to be able to control how filemap_write_and_wait_range() is called in fsync to make it less of a painful operation, so push down taking i_mutex and the calling of filemap_write_and_wait() down into the ->fsync() handlers.  Some file systems can drop taking the i_mutex altogether it seems, like ext3 and ocfs2.  For correctness sake I just pushed everything down in all cases to make sure that we keep the current behavior the same for everybody, and then each individual fs maintainer can make up their mind about what to do from there. Thanks,  Acked-by: Jan Kara <jack@suse.cz> Signed-off-by: Josef Bacik <josef@redhat.com> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | jfs_lock.h | s | 1.5K | 48 | Milind Arun Choudhary | milindchoudhary@gmail.com | 1177590629 |  | JFS: use __set_current_state()  use __set_current_state(TASK_*) instead of current->state = TASK_*  Signed-off-by: Milind Arun Choudhary <milindchoudhary@gmail.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_superblock.h | s | 4.1K | 103 | Dave Kleikamp | shaggy@austin.ibm.com | 1159800927 |  | JFS: White space cleanup  Removed trailing spaces & tabs, and spaces preceding tabs. Also a couple very minor comment cleanups.  Signed-off-by: Dave Kleikamp <shaggy@austin.ibm.com> (cherry picked from f74156539964d7b3d5164fdf8848e6a682f75b97 commit)
f | jfs_imap.c | s | 84K | 2810 | Miklos Szeredi | mszeredi@suse.cz | 1320234823 |  | filesystems: add set_nlink()  Replace remaining direct i_nlink updates with a new set_nlink() updater function.  Signed-off-by: Miklos Szeredi <mszeredi@suse.cz> Tested-by: Toshiyuki Okajima <toshi.okajima@jp.fujitsu.com> Signed-off-by: Christoph Hellwig <hch@lst.de>
f | jfs_debug.c | s | 2.8K | 94 | Alexey Dobriyan | adobriyan@gmail.com | 1238447684 |  | proc 2/2: remove struct proc_dir_entry::owner  Setting ->owner as done currently (pde->owner = THIS_MODULE) is racy as correctly noted at bug #12454. Someone can lookup entry with NULL ->owner, thus not pinning enything, and release it later resulting in module refcount underflow.  We can keep ->owner and supply it at registration time like ->proc_fops and ->data.  But this leaves ->owner as easy-manipulative field (just one C assignment) and somebody will forget to unpin previous/pin current module when switching ->owner. ->proc_fops is declared as "const" which should give some thoughts.  ->read_proc/->write_proc were just fixed to not require ->owner for protection.  rmmod'ed directories will be empty and return "." and ".." -- no harm. And directories with tricky enough readdir and lookup shouldn't be modular. We definitely don't want such modular code.  Removing ->owner will also make PDE smaller.  So, let's nuke it.  Kudos to Jeff Layton for reminding about this, let's say, oversight.  http://bugzilla.kernel.org/show_bug.cgi?id=12454  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
f | jfs_dtree.h | s | 6.6K | 217 | Adrian Bunk | bunk@kernel.org | 1213128778 |  | jfs: remove DIRENTSIZ  After fat gets fixed the unused DIRENTSIZ macro was the last user of struct dirent we should get rid of since the kernel and userspace versions differed.  Signed-off-by: Adrian Bunk <bunk@kernel.org> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_uniupr.c | s | 7.5K | 126 | Dave Kleikamp | shaggy@austin.ibm.com | 1159800927 |  | JFS: White space cleanup  Removed trailing spaces & tabs, and spaces preceding tabs. Also a couple very minor comment cleanups.  Signed-off-by: Dave Kleikamp <shaggy@austin.ibm.com> (cherry picked from f74156539964d7b3d5164fdf8848e6a682f75b97 commit)
f | super.c | s | 21K | 791 | Al Viro | viro@zeniv.linux.org.uk | 1332293388 |  | jfs: mising cleanup on register_filesystem() failure  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | inode.c | s | 9.9K | 356 | Jan Kara | jack@suse.cz | 1336283021 |  | vfs: Rename end_writeback() to clear_inode()  After we moved inode_sync_wait() from end_writeback() it doesn't make sense to call the function end_writeback() anymore. Rename it to clear_inode() which well says what the function really does - set I_CLEAR flag.  Signed-off-by: Jan Kara <jack@suse.cz> Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
f | jfs_mount.c | s | 12K | 438 | Paul Bolle | pebolle@tiscali.nl | 1281345917 |  | fix printk typo 'faild'  Signed-off-by: Paul Bolle <pebolle@tiscali.nl> Signed-off-by: Jiri Kosina <jkosina@suse.cz>
f | jfs_metapage.h | s | 4.2K | 133 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | jfs_dtree.c | s | 100K | 3937 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | jfs_dmap.h | s | 11K | 278 | Daniel Mack | daniel@caiaq.de | 1265142095 |  | jfs_dmap.[ch]: trivial typo fix: s/heigth/height/g  Signed-off-by: Daniel Mack <daniel@caiaq.de> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com> Cc: Jiri Kosina <trivial@kernel.org> Cc: André Goddard Rosa <andre.goddard@gmail.com> Cc: jfs-discussion@lists.sourceforge.net
f | symlink.c | s | 1.6K | 47 | Dmitry Monakhov | dmonakhov@openvz.org | 1271423150 |  | jfs: add jfs specific ->setattr call  generic setattr not longer responsible for quota transfer. use jfs_setattr for all jfs's inodes.  Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_unicode.h | s | 3.7K | 132 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | jfs_acl.h | s | 1.2K | 35 | Christoph Hellwig | hch@lst.de | 1311618623 |  | fs: take the ACL checks to common code  Replace the ->check_acl method with a ->get_acl method that simply reads an ACL from disk after having a cache miss.  This means we can replace the ACL checking boilerplate code with a single implementation in namei.c.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | jfs_txnmgr.c | s | 75K | 2737 | Tejun Heo | tj@kernel.org | 1321907542 |  | freezer: unexport refrigerator() and update try_to_freeze() slightly  There is no reason to export two functions for entering the refrigerator.  Calling refrigerator() instead of try_to_freeze() doesn't save anything noticeable or removes any race condition.  * Rename refrigerator() to __refrigerator() and make it return bool   indicating whether it scheduled out for freezing.  * Update try_to_freeze() to return bool and relay the return value of   __refrigerator() if freezing().  * Convert all refrigerator() users to try_to_freeze().  * Update documentation accordingly.  * While at it, add might_sleep() to try_to_freeze().  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Samuel Ortiz <samuel@sortiz.org> Cc: Chris Mason <chris.mason@oracle.com> Cc: "Theodore Ts'o" <tytso@mit.edu> Cc: Steven Whitehouse <swhiteho@redhat.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Jan Kara <jack@suse.cz> Cc: KONISHI Ryusuke <konishi.ryusuke@lab.ntt.co.jp> Cc: Christoph Hellwig <hch@infradead.org>
f | jfs_dmap.c | s | 108K | 3512 | Dave Kleikamp | dave.kleikamp@oracle.com | 1311609672 |  | jfs: clean up some compiler warnings  jfs has a few variables being set but never used.  Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
f | jfs_logmgr.h | s | 14K | 446 | Lucas De Marchi | lucas.demarchi@profusion.mobi | 1301581583 |  | Fix common misspellings  Fixes generated by 'codespell' and manually reviewed.  Signed-off-by: Lucas De Marchi <lucas.demarchi@profusion.mobi>
f | ioctl.c | s | 3.2K | 129 | Al Viro | viro@zeniv.linux.org.uk | 1325649160 |  | vfs: mnt_drop_write_file()  new helper (wrapper around mnt_drop_write()) to be used in pair with mnt_want_write_file().  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | acl.c | s | 4.0K | 154 | Al Viro | viro@zeniv.linux.org.uk | 1312178982 |  | switch posix_acl_create() to umode_t *  so we can pass &inode->i_mode to it  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | Kconfig | g | 1.6K |  | Randy Dunlap | randy.dunlap@oracle.com | 1233603808 |  | jfs: needs crc32_le  JFS needs crc32_le(), so select its library config symbol:  fs/built-in.o: In function `jfs_statfs': super.c:(.text+0x7c8c0): undefined reference to `crc32_le' super.c:(.text+0x7c8d5): undefined reference to `crc32_le'  Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_umount.c | s | 4.0K | 146 | Dave Kleikamp | dave.kleikamp@oracle.com | 1312220460 |  | jfs: flush journal completely before releasing metadata inodes  This fixes a race during unmount. We need to not only make sure that the journal is completely written, but that the metadata changes make it to disk before releasing ipimap and ipbmap.  Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
f | namei.c | s | 37K | 1372 | Al Viro | viro@zeniv.linux.org.uk | 1332293372 |  | vfs: check i_nlink limits in vfs_{mkdir,rename_dir,link}  New field of struct super_block - ->s_max_links.  Maximal allowed value of ->i_nlink or 0; in the latter case all checks still need to be done in ->link/->mkdir/->rename instances.  Note that this limit applies both to directoris and to non-directories.  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | jfs_xtree.c | s | 92K | 3395 | Christoph Hellwig | hch@infradead.org | 1267744828 |  | dquot: cleanup space allocation / freeing routines  Get rid of the alloc_space, free_space, reserve_space, claim_space and release_rsv dquot operations - they are always called from the filesystem and if a filesystem really needs their own (which none currently does) it can just call into it's own routine directly.  Move shared logic into the common __dquot_alloc_space, dquot_claim_space_nodirty and __dquot_free_space low-level methods, and rationalize the wrappers around it to move as much as possible code into the common block for CONFIG_QUOTA vs not.  Also rename all these helpers to be named dquot_* instead of vfs_dq_*.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Jan Kara <jack@suse.cz>
f | jfs_imap.h | s | 6.4K | 158 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1181161715 |  | JFS: Whitespace cleanup and remove some dead code  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_btree.h | s | 4.0K | 150 | Dave Kleikamp | shaggy@austin.ibm.com | 1159800927 |  | JFS: White space cleanup  Removed trailing spaces & tabs, and spaces preceding tabs. Also a couple very minor comment cleanups.  Signed-off-by: Dave Kleikamp <shaggy@austin.ibm.com> (cherry picked from f74156539964d7b3d5164fdf8848e6a682f75b97 commit)
f | jfs_logmgr.c | s | 59K | 2164 | Tejun Heo | tj@kernel.org | 1321907542 |  | freezer: unexport refrigerator() and update try_to_freeze() slightly  There is no reason to export two functions for entering the refrigerator.  Calling refrigerator() instead of try_to_freeze() doesn't save anything noticeable or removes any race condition.  * Rename refrigerator() to __refrigerator() and make it return bool   indicating whether it scheduled out for freezing.  * Update try_to_freeze() to return bool and relay the return value of   __refrigerator() if freezing().  * Convert all refrigerator() users to try_to_freeze().  * Update documentation accordingly.  * While at it, add might_sleep() to try_to_freeze().  Signed-off-by: Tejun Heo <tj@kernel.org> Cc: Samuel Ortiz <samuel@sortiz.org> Cc: Chris Mason <chris.mason@oracle.com> Cc: "Theodore Ts'o" <tytso@mit.edu> Cc: Steven Whitehouse <swhiteho@redhat.com> Cc: Andrew Morton <akpm@linux-foundation.org> Cc: Jan Kara <jack@suse.cz> Cc: KONISHI Ryusuke <konishi.ryusuke@lab.ntt.co.jp> Cc: Christoph Hellwig <hch@infradead.org>
f | file.c | s | 4.4K | 142 | Christoph Hellwig | hch@lst.de | 1311618623 |  | fs: take the ACL checks to common code  Replace the ->check_acl method with a ->get_acl method that simply reads an ACL from disk after having a cache miss.  This means we can replace the ACL checking boilerplate code with a single implementation in namei.c.  Signed-off-by: Christoph Hellwig <hch@lst.de> Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | jfs_xattr.h | s | 2.6K | 67 | Eric Paris | eparis@redhat.com | 1296576749 |  | fs/vfs/security: pass last path component to LSM on inode creation  SELinux would like to implement a new labeling behavior of newly created inodes.  We currently label new inodes based on the parent and the creating process.  This new behavior would also take into account the name of the new object when deciding the new label.  This is not the (supposed) full path, just the last component of the path.  This is very useful because creating /etc/shadow is different than creating /etc/passwd but the kernel hooks are unable to differentiate these operations.  We currently require that userspace realize it is doing some difficult operation like that and than userspace jumps through SELinux hoops to get things set up correctly.  This patch does not implement new behavior, that is obviously contained in a seperate SELinux patch, but it does pass the needed name down to the correct LSM hook.  If no such name exists it is fine to pass NULL.  Signed-off-by: Eric Paris <eparis@redhat.com>
f | jfs_extent.h | s | 1.3K | 28 | Dave Kleikamp | shaggy@austin.ibm.com | 1159800927 |  | JFS: White space cleanup  Removed trailing spaces & tabs, and spaces preceding tabs. Also a couple very minor comment cleanups.  Signed-off-by: Dave Kleikamp <shaggy@austin.ibm.com> (cherry picked from f74156539964d7b3d5164fdf8848e6a682f75b97 commit)
f | jfs_types.h | s | 4.0K | 138 | Dave Kleikamp | shaggy@linux.vnet.ibm.com | 1231537324 |  | jfs: remove xtLookupList()  xtLookupList() was a more generalized version of xtLookup() with a nastier interface.  Its only caller, extHint(), is actually better suited to using xtLookup() than xtLookupList().  This also lets us remove the definition of lxd_t, an obnoxious packed structure that was only used in-memory.  Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
f | jfs_dinode.h | s | 5.6K | 146 | Andi Kleen | ak@suse.de | 1202413529 |  | BKL-removal: Implement a compat_ioctl handler for JFS  The ioctls were already compatible except for the actual values so this was fairly easy to do.  Signed-off-by: Andi Kleen <ak@suse.de> Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>
