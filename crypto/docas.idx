f | crypto_user.c | s | 11K | 406 | David S. Miller | davem@davemloft.net | 1334082645 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | ahash.c | s | 12K | 423 | David S. Miller | davem@davemloft.net | 1333355622 |  | crypto: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | api.c | s | 13K | 491 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323206 |  | crypto: api - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | twofish_generic.c | s | 6.3K | 181 | Joachim Fritschi | jfritschi@freenet.de | 1275562971 |  | crypto: twofish: Rename twofish to twofish_generic and add an alias  This fixes the broken autoloading of the corresponding twofish assembler ciphers on x86 and x86_64 if they are available. The module name of the generic implementation was in conflict with the alias in the assembler modules. The generic twofish c implementation is renamed to twofish_generic according to the other algorithms with assembler implementations and an module alias is added for 'twofish'. You can now load 'twofish' giving you the best implementation by priority, 'twofish-generic' to get the c implementation or 'twofish-asm' to get the assembler version of cipher.  Signed-off-by: Joachim Fritschi <jfritschi@freenet.de> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | Makefile | g | 3.3K |  | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1331717155 |  | crypto: camellia - rename camellia.c to camellia_generic.c  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | internal.h | s | 4.0K | 121 | Steffen Klassert | steffen.klassert@secunet.com | 1319199843 |  | crypto: Export crypto_remove_final  The upcomming crypto usrerspace configuration api needs to remove the spawns on top on an algorithm, so export crypto_remove_final.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cast6.c | s | 21K | 512 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323385 |  | crypto: cast6 - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | seed.c | s | 17K | 448 | Hye-Shik Chang | perky@FreeBSD.org | 1192060538 |  | [CRYPTO] seed: New cipher algorithm  This patch adds support for the SEED cipher (RFC4269).  This patch have been used in few VPN appliance vendors in Korea for several years.  And it was verified by KISA, who developed the algorithm itself.  As its importance in Korean banking industry, it would be great if linux incorporates the support.  Signed-off-by: Hye-Shik Chang <perky@FreeBSD.org> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ctr.c | s | 10K | 337 | Julia Lawall | julia@diku.dk | 1274834211 |  | crypto: Use ERR_CAST  Use ERR_CAST(x) rather than ERR_PTR(PTR_ERR(x)).  The former makes more clear what is the purpose of the operation, which otherwise looks like a no-op.  The semantic patch that makes this change is as follows: (http://coccinelle.lip6.fr/)  // <smpl> @@ type T; T x; identifier f; @@  T f (...) { <+... - ERR_PTR(PTR_ERR(x)) + x  ...+> }  @@ expression x; @@  - ERR_PTR(PTR_ERR(x)) + ERR_CAST(x) // </smpl>  Signed-off-by: Julia Lawall <julia@diku.dk> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | xcbc.c | s | 7.2K | 238 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103871 |  | crypto: add module.h to those files that are explicitly using it  Part of the include cleanups means that the implicit inclusion of module.h via device.h is going away.  So fix things up in advance.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | lzo.c | s | 2.5K | 85 | Kamalesh Babulal | kamalesh@linux.vnet.ibm.com | 1208744374 |  | [CRYPTO] all: Clean up init()/fini()  On Thu, Mar 27, 2008 at 03:40:36PM +0100, Bodo Eggert wrote: > Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> wrote: > > > This patch cleanups the crypto code, replaces the init() and fini() > > with the <algorithm name>_init/_fini > > This part ist OK. > > > or init/fini_<algorithm name> (if the > > <algorithm name>_init/_fini exist) > > Having init_foo and foo_init won't be a good thing, will it? I'd start > confusing them. > > What about foo_modinit instead?  Thanks for the suggestion, the init() is replaced with  	<algorithm name>_mod_init ()  and fini () is replaced with <algorithm name>_mod_fini.  Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | authencesn.c | s | 23K | 672 | Steffen Klassert | steffen.klassert@secunet.com | 1300072947 |  | crypto: authencesn - Add algorithm to handle IPsec extended sequence numbers  ESP with separate encryption/authentication algorithms needs a special treatment for the associated data. This patch add a new algorithm that handles esp with extended sequence numbers.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | sha512_generic.c | s | 8.7K | 251 | Kent Yoder | key@linux.vnet.ibm.com | 1333629260 |  | crypto: sha512 - Fix byte counter overflow in SHA-512  The current code only increments the upper 64 bits of the SHA-512 byte counter when the number of bytes hashed happens to hit 2^64 exactly.  This patch increments the upper 64 bits whenever the lower 64 bits overflows.  Signed-off-by: Kent Yoder <key@linux.vnet.ibm.com> Cc: stable@kernel.org Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
d | async_tx |  | 9 items |  | Cong Wang | amwang@redhat.com | 1332251296 |  | crypto: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | ecb.c | s | 4.9K | 152 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323629 |  | crypto: ecb - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | arc4.c | s | 2.0K | 86 | Mati Vait | mativait@gmail.com | 1309391045 |  | crypto: arc4 - Fixed coding style issues  Fixed coding style issues: unnecessary spaces, parentheses on wrong lines.  Signed-off-by: Mati Vait <mativait@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | crc32c.c | s | 4.3K | 146 | Darrick J. Wong | djwong@us.ibm.com | 1332547118 |  | crypto: crc32c should use library implementation  Since lib/crc32.c now provides crc32c, remove the software implementation here and call the library function instead.  Signed-off-by: Darrick J. Wong <djwong@us.ibm.com> Cc: Herbert Xu <herbert@gondor.apana.org.au> Cc: Bob Pearson <rpearson@systemfabricworks.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | ansi_cprng.c | s | 11K | 412 | Jarod Wilson | jarod@redhat.com | 1320811446 |  | crypto: ansi_cprng - enforce key != seed in fips mode  Apparently, NIST is tightening up its requirements for FIPS validation with respect to RNGs. Its always been required that in fips mode, the ansi cprng not be fed key and seed material that was identical, but they're now interpreting FIPS 140-2, section AS07.09 as requiring that the implementation itself must enforce the requirement. Easy fix, we just do a memcmp of key and seed in fips_cprng_reset and call it a day.  v2: Per Neil's advice, ensure slen is sufficiently long before we compare key and seed to avoid looking at potentially unallocated mem.  CC: Stephan Mueller <smueller@atsec.com> CC: Steve Grubb <sgrubb@redhat.com> Signed-off-by: Jarod Wilson <jarod@redhat.com> Acked-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | algif_hash.c | s | 6.8K | 257 | Herbert Xu | herbert@gondor.apana.org.au | 1309391046 |  | crypto: algif_hash - Handle initial af_alg_make_sg error correctly  When the first call to af_alg_make_sg fails, we may return garbage instead of the real error.  This patch fixes it by setting the error if "copied" is zero.  Based on a patch by Jesper Juhl.  Reported-by: Jesper Juhl <jj@chaosbits.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | blowfish_common.c | s | 15K | 381 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1316690725 |  | crypto: blowfish - split generic and common c code  Patch splits up the blowfish crypto routine into a common part (key setup) which will be used by blowfish crypto modules (x86_64 assembly and generic-c).  Also fixes errors/warnings reported by checkpatch.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | blkcipher.c | s | 19K | 601 | David S. Miller | davem@davemloft.net | 1333355622 |  | crypto: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | proc.c | s | 3.7K | 135 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103871 |  | crypto: add module.h to those files that are explicitly using it  Part of the include cleanups means that the implicit inclusion of module.h via device.h is going away.  So fix things up in advance.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | compress.c | s | 1.3K | 42 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323464 |  | crypto: compress - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | camellia_generic.c | s | 34K | 1024 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1331717155 |  | crypto: camellia - rename camellia.c to camellia_generic.c  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | shash.c | s | 16K | 539 | David S. Miller | davem@davemloft.net | 1333355622 |  | crypto: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | lrw.c | s | 9.2K | 326 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810631 |  | crypto: lrw - add interface for parallelized cipher implementions  Export gf128mul table initialization routines and add lrw_crypt() function that can be used by cipher implementations that can benefit from parallelized cipher operations.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | af_alg.c | s | 9.3K | 381 | Arun Sharma | asharma@fb.com | 1311724187 |  | atomic: use <linux/atomic.h>  This allows us to move duplicated code in <asm/atomic.h> (atomic_inc_not_zero() for now) to <linux/atomic.h>  Signed-off-by: Arun Sharma <asharma@fb.com> Reviewed-by: Eric Dumazet <eric.dumazet@gmail.com> Cc: Ingo Molnar <mingo@elte.hu> Cc: David Miller <davem@davemloft.net> Cc: Eric Dumazet <eric.dumazet@gmail.com> Acked-by: Mike Frysinger <vapier@gentoo.org> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | seqiv.c | s | 8.6K | 280 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | gcm.c | s | 34K | 1106 | Steffen Klassert | steffen.klassert@secunet.com | 1291272436 |  | crypto: Use scatterwalk_crypto_chain  Use scatterwalk_crypto_chain in favor of locally defined chaining functions.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | aes_generic.c | s | 61K | 1423 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323699 |  | crypto: aes_generic - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | fcrypt.c | s | 18K | 392 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323647 |  | crypto: fcrypt - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | fips.c | s | 705B | 23 | Neil Horman | nhorman@tuxdriver.com | 1219989002 |  | crypto: api - Add fips_enable flag  Add the ability to turn FIPS-compliant mode on or off at boot  In order to be FIPS compliant, several check may need to be preformed that may be construed as unusefull in a non-compliant mode.  This patch allows us to set a kernel flag incating that we are running in a fips-compliant mode from boot up.  It also exports that mode information to user space via a sysctl (/proc/sys/crypto/fips_enabled).  Tested successfully by me.  Signed-off-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ablkcipher.c | s | 18K | 592 | David S. Miller | davem@davemloft.net | 1334082645 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | deflate.c | s | 5.4K | 199 | David S. Miller | davem@davemloft.net | 1309351721 |  | net+crypto: Use vmalloc for zlib inflate buffers.  They are 64K and result in order-4 allocations, even with SLUB.  Therefore, just like we always have for the deflate buffers, use vmalloc.  Reported-by: Martin Jackson <mjackson220.list@gmail.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | cryptd.c | s | 24K | 771 | Herbert Xu | herbert@gondor.apana.org.au | 1313827683 |  | crypto: cryptd - Use subsys_initcall to prevent races with aesni  As cryptd is depeneded on by other algorithms such as aesni-intel, it needs to be registered before them.  When everything is built as modules, this occurs naturally.  However, for this to work when they are built-in, we need to use subsys_initcall in cryptd.  Tested-by: Josh Boyer <jwboyer@redhat.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | des_generic.c | s | 35K | 930 | David Howells | dhowells@redhat.com | 1286456930 |  | Blackfin: Rename DES PC2() symbol to avoid collision  Rename the PC2() symbol in the generic DES crypto module to be prefixed with DES_ to avoid collision with arch code (Blackfin in this case).  Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Mike Frysinger <vapier@gentoo.org>
f | rng.c | s | 3.3K | 127 | David S. Miller | davem@davemloft.net | 1333355622 |  | crypto: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | tgr192.c | s | 30K | 651 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1230163341 |  | crypto: tgr192 - Switch to shash  This patch changes tgr192, tgr160 and tgr128 to the new shash interface.  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | hmac.c | s | 6.9K | 221 | Tejun Heo | tj@kernel.org | 1269954152 |  | include cleanup: Update gfp.h and slab.h includes to prepare for breaking implicit slab.h inclusion from percpu.h  percpu.h is included by sched.h and module.h and thus ends up being included when building most .c files.  percpu.h includes slab.h which in turn includes gfp.h making everything defined by the two files universally available and complicating inclusion dependencies.  percpu.h -> slab.h dependency is about to be removed.  Prepare for this change by updating users of gfp and slab facilities include those headers directly instead of assuming availability.  As this conversion needs to touch large number of source files, the following script is used as the basis of conversion.    http://userweb.kernel.org/~tj/misc/slabh-sweep.py  The script does the followings.  * Scan files for gfp and slab usages and update includes such that   only the necessary includes are there.  ie. if only gfp is used,   gfp.h, if slab is used, slab.h.  * When the script inserts a new include, it looks at the include   blocks and try to put the new include such that its order conforms   to its surrounding.  It's put in the include block which contains   core kernel includes, in the same order that the rest are ordered -   alphabetical, Christmas tree, rev-Xmas-tree or at the end if there   doesn't seem to be any matching order.  * If the script can't find a place to put a new include (mostly   because the file doesn't have fitting include block), it prints out   an error message indicating which .h file needs to be added to the   file.  The conversion was done in the following steps.  1. The initial automatic conversion of all .c files updated slightly    over 4000 files, deleting around 700 includes and adding ~480 gfp.h    and ~3000 slab.h inclusions.  The script emitted errors for ~400    files.  2. Each error was manually checked.  Some didn't need the inclusion,    some needed manual addition while adding it to implementation .h or    embedding .c file was more appropriate for others.  This step added    inclusions to around 150 files.  3. The script was run again and the output was compared to the edits    from #2 to make sure no file was left behind.  4. Several build tests were done and a couple of problems were fixed.    e.g. lib/decompress_*.c used malloc/free() wrappers around slab    APIs requiring slab.h to be added manually.  5. The script was run on all .h files but without automatically    editing them as sprinkling gfp.h and slab.h inclusions around .h    files could easily lead to inclusion dependency hell.  Most gfp.h    inclusion directives were ignored as stuff from gfp.h was usually    wildly available and often used in preprocessor macros.  Each    slab.h inclusion directive was examined and added manually as    necessary.  6. percpu.h was updated not to include slab.h.  7. Build test were done on the following configurations and failures    were fixed.  CONFIG_GCOV_KERNEL was turned off for all tests (as my    distributed build env didn't work with gcov compiles) and a few    more options had to be turned off depending on archs to make things    build (like ipr on powerpc/64 which failed due to missing writeq).     * x86 and x86_64 UP and SMP allmodconfig and a custom test config.    * powerpc and powerpc64 SMP allmodconfig    * sparc and sparc64 SMP allmodconfig    * ia64 SMP allmodconfig    * s390 SMP allmodconfig    * alpha SMP allmodconfig    * um on x86_64 SMP allmodconfig  8. percpu.h modifications were reverted so that it could be applied as    a separate patch and serve as bisection point.  Given the fact that I had only a couple of failures from tests on step 6, I'm fairly confident about the coverage of this conversion patch. If there is a breakage, it's likely to be something in one of the arch headers which should be easily discoverable easily on most builds of the specific arch.  Signed-off-by: Tejun Heo <tj@kernel.org> Guess-its-ok-by: Christoph Lameter <cl@linux-foundation.org> Cc: Ingo Molnar <mingo@redhat.com> Cc: Lee Schermerhorn <Lee.Schermerhorn@hp.com>
f | rmd320.c | s | 13K | 347 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1294144443 |  | crypto: ripemd - Set module author and update email address  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cast5.c | s | 33K | 770 | Nicolas Kaiser | nikai@nikai.net | 1289652475 |  | crypto: cast5 - simplify if-statements  I noticed that by factoring out common rounds from the branches of the if-statements in the encryption and decryption functions, the executable file size goes down significantly, for crypto/cast5.ko from 26688 bytes to 24336 bytes (amd64).  On my test system, I saw a slight speedup. This is the first time I'm doing such a benchmark - I found a similar one on the crypto mailing list, and I hope I did it right?  Before: # cryptsetup create dm-test /dev/hda2 -c cast5-cbc-plain -s 128 Passsatz eingeben: # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,43484 s, 21,5 MB/s # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,4089 s, 21,8 MB/s # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,41091 s, 21,7 MB/s  After: # cryptsetup create dm-test /dev/hda2 -c cast5-cbc-plain -s 128 Passsatz eingeben: # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,38128 s, 22,0 MB/s # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,29486 s, 22,8 MB/s # dd if=/dev/zero of=/dev/mapper/dm-test bs=1M count=50 52428800 Bytes (52 MB) kopiert, 2,37162 s, 22,1 MB/s  Signed-off-by: Nicolas Kaiser <nikai@nikai.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | crypto_null.c | s | 4.9K | 178 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323514 |  | crypto: crypto_null - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | rmd128.c | s | 10K | 286 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1294144443 |  | crypto: ripemd - Set module author and update email address  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | twofish_common.c | s | 37K | 665 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810812 |  | crypto: twofish-x86_64-3way - add lrw support  Patch adds LRW support for twofish-x86_64-3way by using lrw_crypt(). Patch has been tested with tcrypt and automated filesystem tests.  Tcrypt benchmarks results (twofish-3way/twofish-asm speed ratios):  Intel Celeron T1600 (fam:6, model:15, step:13):  size	lrw-enc	lrw-dec 16B	0.99x	1.00x 64B	1.17x	1.17x 256B	1.26x	1.27x 1024B	1.30x	1.31x 8192B	1.31x	1.32x  AMD Phenom II 1055T (fam:16, model:10):  size	lrw-enc	lrw-dec 16B	1.06x	1.01x 64B	1.08x	1.14x 256B	1.19x	1.20x 1024B	1.21x	1.22x 8192B	1.23x	1.24x  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | aead.c | s | 14K | 467 | David S. Miller | davem@davemloft.net | 1334082645 |  | Merge git://git.kernel.org/pub/scm/linux/kernel/git/davem/net
f | sha1_generic.c | s | 3.5K | 128 | Mathias Krause | minipli@googlemail.com | 1312974028 |  | crypto: sha1 - export sha1_update for reuse  Export the update function as crypto_sha1_update() to not have the need to reimplement the same algorithm for each SHA-1 implementation. This way the generic SHA-1 implementation can be used as fallback for other implementations that fail to run under certain circumstances, like the need for an FPU context while executing in IRQ context.  Signed-off-by: Mathias Krause <minipli@googlemail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | salsa20_generic.c | s | 6.7K | 220 | Harvey Harrison | harvey.harrison@gmail.com | 1230163350 |  | crypto: salsa20 - Remove private wrappers around various operations  ROTATE -> rol32 XOR was always used with the same destination, use ^= PLUS/PLUSONE use ++ or +=  Signed-off-by: Harvey Harrison <harvey.harrison@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cipher.c | s | 3.3K | 101 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323497 |  | crypto: cipher - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | algif_skcipher.c | s | 13K | 504 | Herbert Xu | herbert@gondor.apana.org.au | 1291107871 |  | crypto: algif_skcipher - Handle unaligned receive buffer  As it is if user-space passes through a receive buffer that's not aligned to to the cipher block size, we'll end up encrypting or decrypting a partial block which causes a spurious EINVAL to be returned.  This patch fixes this by moving the partial block test after the af_alg_make_sg call.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | scatterwalk.c | s | 2.9K | 102 | Cong Wang | amwang@redhat.com | 1332251296 |  | crypto: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | rmd160.c | s | 12K | 328 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1294144443 |  | crypto: ripemd - Set module author and update email address  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ripemd.h | s | 974B | 35 | Adrian-Ken Rueegsegger | rueegsegger@swiss-it.ch | 1215693312 |  | [CRYPTO] ripemd: Put all common RIPEMD values in header file  This patch puts all common RIPEMD values in the appropriate header file. Initial values and constants are the same for all variants of RIPEMD.  Signed-off-by: Adrian-Ken Rueegsegger <rueegsegger@swiss-it.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | crypto_wq.c | s | 968B | 34 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103871 |  | crypto: add module.h to those files that are explicitly using it  Part of the include cleanups means that the implicit inclusion of module.h via device.h is going away.  So fix things up in advance.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | sha256_generic.c | s | 12K | 345 | Herbert Xu | herbert@gondor.apana.org.au | 1247307814 |  | crypto: sha256_generic - Add export/import support  This patch adds export/import support to sha256_generic.  The exported type is defined by struct sha256_state, which is basically the entire descriptor state of sha256_generic.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | chainiv.c | s | 8.6K | 274 | Huang Ying | ying.huang@intel.com | 1235025842 |  | crypto: chainiv - Use kcrypto_wq instead of keventd_wq  keventd_wq has potential starvation problem, so use dedicated kcrypto_wq instead.  Signed-off-by: Huang Ying <ying.huang@intel.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cts.c | s | 9.8K | 293 | Alexey Dobriyan | adobriyan@gmail.com | 1212385611 |  | [CRYPTO] cts: Init SG tables  Steps to reproduce:  	modprobe tcrypt		# with CONFIG_DEBUG_SG=y  testing cts(cbc(aes)) encryption test 1 (128 bit key): ------------[ cut here ]------------ kernel BUG at include/linux/scatterlist.h:65! invalid opcode: 0000 [1] PREEMPT SMP DEBUG_PAGEALLOC CPU 0 Modules linked in: tea xts twofish twofish_common tcrypt(+) [maaaany] Pid: 16151, comm: modprobe Not tainted 2.6.26-rc4-fat #7 RIP: 0010:[<ffffffffa0bf032e>]  [<ffffffffa0bf032e>] :cts:cts_cbc_encrypt+0x151/0x355 RSP: 0018:ffff81016f497a88  EFLAGS: 00010286 RAX: ffffe20009535d58 RBX: ffff81016f497af0 RCX: 0000000087654321 RDX: ffff8100010d4f28 RSI: ffff81016f497ee8 RDI: ffff81016f497ac0 RBP: ffff81016f497c38 R08: 0000000000000000 R09: 0000000000000011 R10: ffffffff00000008 R11: ffff8100010d4f28 R12: ffff81016f497ac0 R13: ffff81016f497b30 R14: 0000000000000010 R15: 0000000000000010 FS:  00007fac6fa276f0(0000) GS:ffffffff8060e000(0000) knlGS:0000000000000000 CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b CR2: 00007f12ca7cc000 CR3: 000000016f441000 CR4: 00000000000026e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000ffff4ff0 DR7: 0000000000000400 Process modprobe (pid: 16151, threadinfo ffff81016f496000, task ffff8101755b4ae0) Stack:  0000000000000001 ffff81016f496000 ffffffff80719f78 0000000000000001  0000000000000001 ffffffff8020c87c ffff81016f99c918 20646c756f772049  65687420656b696c 0000000000000020 0000000000000000 0000000033341102 Call Trace:  [<ffffffff8020c87c>] ? restore_args+0x0/0x30  [<ffffffffa04aa311>] ? :aes_generic:crypto_aes_expand_key+0x311/0x369  [<ffffffff802ab453>] ? check_object+0x15a/0x213  [<ffffffff802aad22>] ? init_object+0x6e/0x76  [<ffffffff802ac3ae>] ? __slab_free+0xfc/0x371  [<ffffffffa0bf05ed>] :cts:crypto_cts_encrypt+0xbb/0xca  [<ffffffffa07108de>] ? :crypto_blkcipher:setkey+0xc7/0xec  [<ffffffffa07110b8>] :crypto_blkcipher:async_encrypt+0x38/0x3a  [<ffffffffa2ce9341>] :tcrypt:test_cipher+0x261/0x7c6  [<ffffffffa2cfd9df>] :tcrypt:tcrypt_mod_init+0x9df/0x1b30  [<ffffffff80261e35>] sys_init_module+0x9e/0x1b2  [<ffffffff8020c15a>] system_call_after_swapgs+0x8a/0x8f Code: 45 c0 e8 aa 24 63 df 48 c1 e8 0c 48 b9 00 00 00 00 00 e2 ff ff 48 8b 55 88 48 6b c0 68 48 01 c8 b9 21 43 65 87 48 39 4d 80 74 04 <0f> 0b eb fe f6 c2 01 74 04 0f 0b eb fe 83 e2 03 4c 89 ef 44 89 RIP  [<ffffffffa0bf032e>] :cts:cts_cbc_encrypt+0x151/0x355  RSP <ffff81016f497a88> ---[ end trace e8bahiarjand37fd ]---  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | pcrypt.c | s | 14K | 444 | Steffen Klassert | steffen.klassert@secunet.com | 1333021967 |  | crypto: pcrypt - Use the online cpumask as the default  We use the active cpumask to determine the superset of cpus to use for parallelization. However, the active cpumask is for internal usage of the scheduler and therefore not the appropriate cpumask for these purposes. So use the online cpumask instead.  Reported-by: Peter Zijlstra <peterz@infradead.org> Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ccm.c | s | 21K | 724 | Cong Wang | amwang@redhat.com | 1332251296 |  | crypto: remove the second argument of k[un]map_atomic()  Signed-off-by: Cong Wang <amwang@redhat.com>
f | tea.c | s | 7.1K | 252 | Kamalesh Babulal | kamalesh@linux.vnet.ibm.com | 1208744374 |  | [CRYPTO] all: Clean up init()/fini()  On Thu, Mar 27, 2008 at 03:40:36PM +0100, Bodo Eggert wrote: > Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> wrote: > > > This patch cleanups the crypto code, replaces the init() and fini() > > with the <algorithm name>_init/_fini > > This part ist OK. > > > or init/fini_<algorithm name> (if the > > <algorithm name>_init/_fini exist) > > Having init_foo and foo_init won't be a good thing, will it? I'd start > confusing them. > > What about foo_modinit instead?  Thanks for the suggestion, the init() is replaced with  	<algorithm name>_mod_init ()  and fini () is replaced with <algorithm name>_mod_fini.  Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | krng.c | s | 1.5K | 57 | Neil Horman | nhorman@tuxdriver.com | 1219989004 |  | crypto: rng - RNG interface and implementation  This patch adds a random number generator interface as well as a cryptographic pseudo-random number generator based on AES.  It is meant to be used in cases where a deterministic CPRNG is required.  One of the first applications will be as an input in the IPsec IV generation process.  Signed-off-by: Neil Horman <nhorman@tuxdriver.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | md5.c | s | 3.9K | 143 | David S. Miller | davem@davemloft.net | 1312680765 |  | crypto: Move md5_transform to lib/md5.c  We are going to use this for TCP/IP sequence number and fragment ID generation.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | wp512.c | s | 60K | 1138 | Alexey Dobriyan | adobriyan@gmail.com | 1319199856 |  | crypto: whirlpool - count rounds from 0  rc[0] is unused because rounds are counted from 1. Save an u64!  Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | anubis.c | s | 27K | 672 | Richard Hartmann | richih.mailinglist@gmail.com | 1266323139 |  | crypto: anubis - Fix checkpatch errors  Signed-off-by: Richard Hartmann <richih.mailinglist@gmail.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | blowfish_generic.c | s | 3.4K | 126 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1316690726 |  | crypto: blowfish - rename C-version to blowfish_generic  Rename blowfish to blowfish_generic so that assembler versions of blowfish cipher can autoload. Module alias 'blowfish' is added.  Also fix checkpatch warnings.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | vmac.c | s | 17K | 593 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103871 |  | crypto: add module.h to those files that are explicitly using it  Part of the include cleanups means that the implicit inclusion of module.h via device.h is going away.  So fix things up in advance.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | algboss.c | s | 6.3K | 242 | Herbert Xu | herbert@gondor.apana.org.au | 1281058828 |  | crypto: testmgr - Fix test disabling option  This patch fixes a serious bug in the test disabling patch where it can cause an spurious load of the cryptomgr module even when it's compiled in.  It also negates the test disabling option so that its absence causes tests to be enabled.  The Kconfig option is also now behind EMBEDDED.  Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | md4.c | s | 6.2K | 221 | Paul Gortmaker | paul.gortmaker@windriver.com | 1320103871 |  | crypto: add module.h to those files that are explicitly using it  Part of the include cleanups means that the implicit inclusion of module.h via device.h is going away.  So fix things up in advance.  Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
f | serpent_generic.c | s | 21K | 607 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1322640764 |  | crypto: serpent - rename serpent.c to serpent_generic.c  Now that serpent.c has been cleaned from checkpatch warnings, we can do clean rename.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | xor.c | s | 4.0K | 139 | Linus Torvalds | torvalds@linux-foundation.org | 1337818120 |  | 
f | Kconfig | g | 27K |  | Al Viro | viro@zeniv.linux.org.uk | 1333994533 |  | um: several x86 hw-dependent crypto modules won't build on uml  Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
f | testmgr.h | s | 506K | 14635 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1331717154 |  | crypto: testmgr - add more camellia test vectors  New ECB, CBC, CTR, LRW and XTS test vectors for camellia. Larger ECB/CBC test vectors needed for parallel 2-way camellia implementation.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | pcbc.c | s | 7.7K | 245 | David Howells | dhowells@redhat.com | 1202402546 |  | Convert ERR_PTR(PTR_ERR(p)) instances to ERR_CAST(p)  Convert instances of ERR_PTR(PTR_ERR(p)) to ERR_CAST(p) using:  perl -spi -e 's/ERR_PTR[(]PTR_ERR[(](.*)[)][)]/ERR_CAST(\1)/' `grep -rl 'ERR_PTR[(]*PTR_ERR' fs crypto net security`  Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | testmgr.c | s | 58K | 2553 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1331717154 |  | crypto: testmgr - add more camellia test vectors  New ECB, CBC, CTR, LRW and XTS test vectors for camellia. Larger ECB/CBC test vectors needed for parallel 2-way camellia implementation.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | authenc.c | s | 19K | 577 | Steffen Klassert | steffen.klassert@secunet.com | 1291272436 |  | crypto: Use scatterwalk_crypto_chain  Use scatterwalk_crypto_chain in favor of locally defined chaining functions.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | rmd256.c | s | 10K | 301 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1294144443 |  | crypto: ripemd - Set module author and update email address  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | michael_mic.c | s | 3.6K | 150 | Adrian-Ken Rueegsegger | ken@codelabs.ch | 1230163344 |  | crypto: michael_mic - Switch to shash  This patch changes michael_mic to the new shash interface.  Signed-off-by: Adrian-Ken Rueegsegger <ken@codelabs.ch> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | tcrypt.h | s | 3.5K | 107 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320811076 |  | crypto: tcrypt - add xts(serpent) tests  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | pcompress.c | s | 3.0K | 102 | David S. Miller | davem@davemloft.net | 1333355622 |  | crypto: Stop using NLA_PUT*().  These macros contain a hidden goto, and are thus extremely error prone and make code hard to audit.  Signed-off-by: David S. Miller <davem@davemloft.net>
f | gf128mul.c | s | 13K | 400 | Mathias Krause | minipli@googlemail.com | 1310116881 |  | crypto: gf128mul - fix call to memset()  In gf128mul_lle() and gf128mul_bbe() r isn't completely initialized with zero because the size argument passed to memset() is the size of the pointer, not the structure it points to.  Luckily there are no in-kernel users of those functions so the ABI change implied by this fix should break no existing code.  Based on a patch by the PaX Team.  Signed-off-by: Mathias Krause <minipli@googlemail.com> Cc: PaX Team <pageexec@freemail.hu> Acked-by: David S. Miller <davem@davemloft.net> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | cbc.c | s | 7.4K | 238 | David Howells | dhowells@redhat.com | 1202402546 |  | Convert ERR_PTR(PTR_ERR(p)) instances to ERR_CAST(p)  Convert instances of ERR_PTR(PTR_ERR(p)) to ERR_CAST(p) using:  perl -spi -e 's/ERR_PTR[(]PTR_ERR[(](.*)[)][)]/ERR_CAST(\1)/' `grep -rl 'ERR_PTR[(]*PTR_ERR' fs crypto net security`  Signed-off-by: David Howells <dhowells@redhat.com> Signed-off-by: Andrew Morton <akpm@linux-foundation.org> Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
f | algapi.c | s | 20K | 766 | Mark Brown | broonie@opensource.wolfsonmicro.com | 1327545349 |  | crypto: Add bulk algorithm registration interface  Hardware crypto engines frequently need to register a selection of different algorithms with the core. Simplify their code slightly, especially the error handling, by providing functions to register a number of algorithms in a single call.  Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | zlib.c | s | 9.5K | 316 | David S. Miller | davem@davemloft.net | 1309351721 |  | net+crypto: Use vmalloc for zlib inflate buffers.  They are 64K and result in order-4 allocations, even with SLUB.  Therefore, just like we always have for the deflate buffers, use vmalloc.  Reported-by: Martin Jackson <mjackson220.list@gmail.com> Acked-by: Herbert Xu <herbert@gondor.apana.org.au> Signed-off-by: David S. Miller <davem@davemloft.net>
f | eseqiv.c | s | 6.5K | 213 | Steffen Klassert | steffen.klassert@secunet.com | 1291272436 |  | crypto: Use scatterwalk_crypto_chain  Use scatterwalk_crypto_chain in favor of locally defined chaining functions.  Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | khazad.c | s | 51K | 852 | Kamalesh Babulal | kamalesh@linux.vnet.ibm.com | 1208744374 |  | [CRYPTO] all: Clean up init()/fini()  On Thu, Mar 27, 2008 at 03:40:36PM +0100, Bodo Eggert wrote: > Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> wrote: > > > This patch cleanups the crypto code, replaces the init() and fini() > > with the <algorithm name>_init/_fini > > This part ist OK. > > > or init/fini_<algorithm name> (if the > > <algorithm name>_init/_fini exist) > > Having init_foo and foo_init won't be a good thing, will it? I'd start > confusing them. > > What about foo_modinit instead?  Thanks for the suggestion, the init() is replaced with  	<algorithm name>_mod_init ()  and fini () is replaced with <algorithm name>_mod_fini.  Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | xts.c | s | 8.7K | 291 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1320810966 |  | crypto: xts: add interface for parallelized cipher implementations  Add xts_crypt() function that can be used by cipher implementations that can benefit from parallelized cipher operations.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | tcrypt.c | s | 37K | 1335 | Jussi Kivilinna | jussi.kivilinna@mbnet.fi | 1331717155 |  | crypto: tcrypt - add more camellia tests  Add tests for CTR, LRW and XTS modes.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi> Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
f | ghash-generic.c | s | 3.8K | 141 | Nick Bowler | nbowler@elliptictech.com | 1319195922 |  | crypto: ghash - Avoid null pointer dereference if no key is set  The ghash_update function passes a pointer to gf128mul_4k_lle which will be NULL if ghash_setkey is not called or if the most recent call to ghash_setkey failed to allocate memory.  This causes an oops.  Fix this up by returning an error code in the null case.  This is trivially triggered from unprivileged userspace through the AF_ALG interface by simply writing to the socket without setting a key.  The ghash_final function has a similar issue, but triggering it requires a memory allocation failure in ghash_setkey _after_ at least one successful call to ghash_update.    BUG: unable to handle kernel NULL pointer dereference at 00000670   IP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul]   *pde = 00000000   Oops: 0000 [#1] PREEMPT SMP   Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc    Pid: 1502, comm: hashatron Tainted: G        W   3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs   EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0   EIP is at gf128mul_4k_lle+0x23/0x60 [gf128mul]   EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000   ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4    DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068   Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000)   Stack:    00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000    00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc    00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000   Call Trace:    [<c101a520>] ? kmap_atomic_prot+0x37/0xa6    [<d88d310f>] ghash_update+0x85/0xbe [ghash_generic]    [<c11676ed>] crypto_shash_update+0x18/0x1b    [<c11679ad>] shash_ahash_update+0x22/0x36    [<c11679cc>] shash_async_update+0xb/0xd    [<d88ce0ba>] hash_sendpage+0xba/0xf2 [algif_hash]    [<c121b24c>] kernel_sendpage+0x39/0x4e    [<d88ce000>] ? 0xd88cdfff    [<c121b298>] sock_sendpage+0x37/0x3e    [<c121b261>] ? kernel_sendpage+0x4e/0x4e    [<c10b4dbc>] pipe_to_sendpage+0x56/0x61    [<c10b4e1f>] splice_from_pipe_feed+0x58/0xcd    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b51f5>] __splice_from_pipe+0x36/0x55    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b6383>] splice_from_pipe+0x51/0x64    [<c10b63c2>] ? default_file_splice_write+0x2c/0x2c    [<c10b63d5>] generic_splice_sendpage+0x13/0x15    [<c10b4d66>] ? splice_from_pipe_begin+0x10/0x10    [<c10b527f>] do_splice_from+0x5d/0x67    [<c10b6865>] sys_splice+0x2bf/0x363    [<c129373b>] ? sysenter_exit+0xf/0x16    [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e/0x13f    [<c129370c>] sysenter_do_call+0x12/0x32   Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f   EIP: [<d88c92d4>] gf128mul_4k_lle+0x23/0x60 [gf128mul] SS:ESP 0068:d6b8dda4   CR2: 0000000000000670   ---[ end trace 4eaa2a86a8e2da24 ]---   note: hashatron[1502] exited with preempt_count 1   BUG: scheduling while atomic: hashatron/1502/0x10000002   INFO: lockdep is turned off.   [...]  Signed-off-by: Nick Bowler <nbowler@elliptictech.com> Cc: stable@kernel.org [2.6.37+] Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
